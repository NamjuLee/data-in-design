/*! For license information please see 9788.a9625391.chunk.js.LICENSE.txt */
(self.webpackChunkData_in_Design=self.webpackChunkData_in_Design||[]).push([[9788],{3143:(e,t,n)=>{"use strict";n.d(t,{C:()=>o});var a=n(80400);function o(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&a.util.assert("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors in the CPU backend.")))}))}},85903:(e,t,n)=>{"use strict";n.d(t,{dH:()=>r,lO:()=>s});var a=n(80400),o=n(3143);function r(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const s={kernelName:a.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;(0,o.C)(t,"abs");let s=new Float32Array(a.util.sizeFromShape(t.shape));return s=r(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,t.dtype)}}},49864:(e,t,n)=>{"use strict";n.d(t,{UK:()=>l,WQ:()=>c,mx:()=>s});var a=n(80400),o=n(82312),r=n(85101);const s=(0,o.Z)(((e,t)=>e+t)),i=(0,r.B)(((e,t,n,a)=>({real:e+n,imag:t+a}))),c=(0,r.j)(a.Add,s,i),l={kernelName:a.Add,backendName:"cpu",kernelFunc:c}},92412:(e,t,n)=>{"use strict";n.d(t,{N:()=>r,X:()=>o});var a=n(80400);function o(e,t,n,o,r){const s=a.util.sizeFromShape(o),i=a.util.makeZerosTypedArray(r,n);for(let a=0;a<e.length;a++){const n=e[a];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(i[n]+=s>0?t[a]:1)}return i}function r(e,t,n){let o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e.shape[0],s=e.shape[1],i=(0,a.buffer)([r,n],t.dtype);for(let a=0;a<r;a++)for(let r=0;r<s;r++){const s=e.get(a,r);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(o?i.set(1,a,s):t.size>0?i.set(i.get(a,s)+t.get(a,r),a,s):i.set(i.get(a,s)+1,a,s))}return i}},89475:(e,t,n)=>{"use strict";n.d(t,{LY:()=>c,f6:()=>s});var a=n(80400),o=n(82312),r=n(85101);const s=(0,o.Z)(((e,t)=>e&t)),i=(0,r.j)(a.BitwiseAnd,s),c={kernelName:a.BitwiseAnd,backendName:"cpu",kernelFunc:i}},668:(e,t,n)=>{"use strict";n.d(t,{Ml:()=>d,ct:()=>l,wg:()=>u});var a=n(80400),o=n(82312),r=n(51908),s=n(73075),i=n(3701),c=n(35995);function l(e,t,n,r){if("int32"===r){return[t,"int32",Int32Array.from(e)]}if("bool"===r){const r=a.util.toTypedArray([0],n),[s,i]=(0,o.Z)(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[i,"bool",s]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(r))}function u(e){const{inputs:t,backend:n,attrs:o}=e,{x:d}=t,{dtype:h}=o;if("complex64"===h){if("complex64"===d.dtype)return(0,i.D)({inputs:{x:d},backend:n});const e=(0,r.U)(n,d.shape,d.dtype),t=u({inputs:{x:d},backend:n,attrs:{dtype:"float32"}}),a=(0,s.f)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===d.dtype){const e=(0,c.x)({inputs:{input:d},backend:n}),t=u({inputs:{x:e},backend:n,attrs:{dtype:h}});return n.disposeIntermediateTensorInfo(e),t}if(!a.util.hasEncodingLoss(d.dtype,h)){const e=(0,i.D)({inputs:{x:d},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:h}}const p=n.data.get(d.dataId).values,[f,g,m]=l(p,d.shape,d.dtype,h);return n.makeTensorInfo(f,g,m)}const d={kernelName:a.Cast,backendName:"cpu",kernelFunc:u}},74034:(e,t,n)=>{"use strict";n.d(t,{YG:()=>s,uf:()=>c});var a=n(80400),o=n(74084),r=n(34729);const s=(0,o.o)((e=>Math.ceil(e))),i=(0,r.F)(a.Ceil,s),c={kernelName:a.Ceil,backendName:"cpu",kernelFunc:i}},73075:(e,t,n)=>{"use strict";function a(e){const{inputs:t,backend:n}=e,{real:a,imag:o}=t,r=n.data.get(a.dataId).values,s=n.data.get(o.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",r),imag:n.makeTensorInfo(o.shape,"float32",s)},i}n.d(t,{f:()=>a,v:()=>o});const o={kernelName:n(80400).Complex,backendName:"cpu",kernelFunc:a}},9044:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var a=n(80400);function o(e,t,n,o){const r=a.util.getArrayFromDType(n,a.util.sizeFromShape(t));if(o&&"string"!==n){let t=0;e.forEach((e=>{const n=a.util.sizeFromShape(e.shape);r.set(e.vals,t),t+=n}))}else{let o=0;e.forEach((e=>{const s="string"===n?a.backend_util.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const a=n*t[1]+o;for(let t=0;t<e.shape[1];++t)r[a+t]=s[i++]}o+=e.shape[1]}))}return r}},3439:(e,t,n)=>{"use strict";n.d(t,{LC:()=>i,RY:()=>c,z3:()=>s});var a=n(80400),o=n(82312),r=n(85101);const s=(0,o.Z)(((e,t)=>e===t?1:0)),i=(0,r.j)(a.Equal,s,null,"bool"),c={kernelName:a.Equal,backendName:"cpu",kernelFunc:i}},84308:(e,t,n)=>{"use strict";n.d(t,{AC:()=>c,oN:()=>i,sG:()=>s});var a=n(80400),o=n(74084),r=n(34729);const s=(0,o.o)((e=>Math.exp(e))),i=(0,r.F)(a.Exp,s,"float32"),c={kernelName:a.Exp,backendName:"cpu",kernelFunc:i}},17046:(e,t,n)=>{"use strict";n.d(t,{Yp:()=>c,uM:()=>s});var a=n(80400),o=n(74084),r=n(34729);const s=(0,o.o)((e=>Math.expm1(e))),i=(0,r.F)(a.Expm1,s),c={kernelName:a.Expm1,backendName:"cpu",kernelFunc:i}},7742:(e,t,n)=>{"use strict";n.d(t,{Hc:()=>c,vS:()=>s});var a=n(80400),o=n(74084),r=n(34729);const s=(0,o.o)((e=>Math.floor(e))),i=(0,r.F)(a.Floor,s),c={kernelName:a.Floor,backendName:"cpu",kernelFunc:i}},15003:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var a=n(80400);function o(e,t,n,o,r,s,i,c,l){const u=(0,a.buffer)([o,s],n);for(let a=0;a<o;a++){const n=[];let o=0;for(let t=0;t<r;t++){const s=e[a*r+t];o+=s*i[t],n.push(s)}if(o<0||o>=l/s)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(c));for(let e=0;e<s;e++)u.values[a*s+e]=t.get(...t.indexToLoc(o*s+e))}return u}},92525:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var a=n(80400);function o(e,t,n){const o=(0,a.buffer)(n,e.dtype);for(let a=0;a<o.size;++a){const n=o.indexToLoc(a).slice(),r=n[0],s=n[2],i=t.locToIndex([r,s]);n[2]=t.values[i];const c=e.locToIndex(n);0<=c&&c<e.values.length&&(o.values[a]=e.values[c])}return o}},11217:(e,t,n)=>{"use strict";n.d(t,{rq:()=>s,xp:()=>c});var a=n(80400),o=n(82312),r=n(85101);const s=(0,o.Z)(((e,t)=>e>t?1:0)),i=(0,r.j)(a.Greater,s,null,"bool"),c={kernelName:a.Greater,backendName:"cpu",kernelFunc:i}},98829:(e,t,n)=>{"use strict";n.d(t,{VM:()=>c,lg:()=>s});var a=n(80400),o=n(82312),r=n(85101);const s=(0,o.Z)(((e,t)=>e>=t?1:0)),i=(0,r.j)(a.GreaterEqual,s,null,"bool"),c={kernelName:a.GreaterEqual,backendName:"cpu",kernelFunc:i}},3701:(e,t,n)=>{"use strict";function a(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}n.d(t,{D:()=>a,F:()=>o});const o={kernelName:n(80400).Identity,backendName:"cpu",kernelFunc:a}},47242:(e,t,n)=>{"use strict";n.d(t,{WR:()=>s,YW:()=>c});var a=n(80400),o=n(82312),r=n(85101);const s=(0,o.Z)(((e,t)=>e<t?1:0)),i=(0,r.j)(a.Less,s,null,"bool"),c={kernelName:a.Less,backendName:"cpu",kernelFunc:i}},32784:(e,t,n)=>{"use strict";n.d(t,{Q:()=>c,cu:()=>s});var a=n(80400),o=n(82312),r=n(85101);const s=(0,o.Z)(((e,t)=>e<=t?1:0)),i=(0,r.j)(a.LessEqual,s,null,"bool"),c={kernelName:a.LessEqual,backendName:"cpu",kernelFunc:i}},23633:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var a=n(80400);function o(e,t,n){const o=(t-e)/(n-1),r=a.util.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+o;return r}},70477:(e,t,n)=>{"use strict";n.d(t,{Fx:()=>c,px:()=>s});var a=n(80400),o=n(74084),r=n(34729);const s=(0,o.o)((e=>Math.log(e))),i=(0,r.F)(a.Log,s),c={kernelName:a.Log,backendName:"cpu",kernelFunc:i}},56238:(e,t,n)=>{"use strict";n.d(t,{j:()=>o});var a=n(80400);function o(e,t,n,o){const r=a.util.getTypedArrayFromDType(o,a.util.sizeFromShape(n));for(let a=0;a<r.length;++a){const n=a*t;let o=e[n];for(let a=0;a<t;++a){const t=e[n+a];(Number.isNaN(t)||t>o)&&(o=t)}r[a]=o}return r}},58617:(e,t,n)=>{"use strict";n.d(t,{He:()=>s,l9:()=>c});var a=n(80400),o=n(82312),r=n(85101);const s=(0,o.Z)(((e,t)=>Math.max(e,t))),i=(0,r.j)(a.Maximum,s),c={kernelName:a.Maximum,backendName:"cpu",kernelFunc:i}},2491:(e,t,n)=>{"use strict";n.d(t,{Nu:()=>c,hE:()=>s});var a=n(80400),o=n(82312),r=n(85101);const s=(0,o.Z)(((e,t)=>Math.min(e,t))),i=(0,r.j)(a.Minimum,s),c={kernelName:a.Minimum,backendName:"cpu",kernelFunc:i}},50063:(e,t,n)=>{"use strict";n.d(t,{BF:()=>s,lw:()=>c,tJ:()=>l});var a=n(80400),o=n(82312),r=n(85101);const s=(0,o.Z)(((e,t)=>e*t)),i=(0,r.B)(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),c=(0,r.j)(a.Multiply,s,i),l={kernelName:a.Multiply,backendName:"cpu",kernelFunc:c}},20321:(e,t,n)=>{"use strict";n.d(t,{Dk:()=>s,hd:()=>i});var a=n(80400),o=n(3143),r=n(50063);function s(e,t,n){const o=a.util.createScalarValue(-1,n);return(0,r.BF)([],t,o,e,n)}const i={kernelName:a.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;(0,o.C)(a,"neg");const r=n.data.get(a.dataId).values,[i,c]=s(r,a.shape,a.dtype);return n.makeTensorInfo(c,a.dtype,i)}}},38440:(e,t,n)=>{"use strict";n.d(t,{AL:()=>c,cl:()=>s});var a=n(80400),o=n(82312),r=n(85101);const s=(0,o.Z)(((e,t)=>e!==t?1:0)),i=(0,r.j)(a.NotEqual,s,null,"bool"),c={kernelName:a.NotEqual,backendName:"cpu",kernelFunc:i}},51206:(e,t,n)=>{"use strict";n.d(t,{S3:()=>i,_B:()=>s});var a=n(80400),o=n(3143),r=n(89868);function s(e,t,n,o){const[r,s]=a.backend_util.computeOutAndReduceShapes(e,o),i=(0,a.upcastType)(t,"int32"),c=a.util.makeZerosTypedArray(a.util.sizeFromShape(r),i),l=a.util.sizeFromShape(s);for(let a=0;a<c.length;++a){const e=a*l;let t=1;for(let a=0;a<l;++a)t*=n[e+a];c[a]=t}return{outVals:c,outShape:r,outDtype:i}}const i={kernelName:a.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:c}=t,{axis:l,keepDims:u}=i;(0,o.C)(c,"prod");const d=c.shape.length,h=a.util.parseAxisParam(l,c.shape),p=a.backend_util.getAxesPermutation(h,d);let f=h,g=c;const m=[];null!=p&&(g=(0,r.m)({inputs:{x:c},backend:n,attrs:{perm:p}}),m.push(g),f=a.backend_util.getInnerMostAxes(f.length,d));const x=n.data.get(g.dataId).values,{outVals:v,outShape:b,outDtype:y}=s(g.shape,g.dtype,x,f);let w=b;return u&&(w=a.backend_util.expandShapeToKeepDim(b,h)),m.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(w,y,v)}}},45335:(e,t,n)=>{"use strict";n.d(t,{u:()=>i});var a=n(80400);function o(e,t,n,a){const o=[];let r=0;const s=t.length-1+n.length,i=new Array(s).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],o=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>o)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let c=1;for(let l=0;l<t.length-1;++l){c*=t[l];const e=t[l+1];for(let t=1;t<c+1;++t)i[l].push(t*e)}for(let l=0;l<e.length;++l){let a=e[l],s=e[l]+1;for(let e=0;e<n.length;++e){const o=n[e],r=e+t.length-1;if(r>=0){const e=i[r],t=e[e.length-1]-o[a];for(let n=a;n<s;++n)i[r].push(o[n+1]+t)}a=o[a],s=o[s]}s!==a&&(o.push([a,s]),r+=s-a)}return{outSplits:i,valueSlices:o,numValues:r}}function r(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function s(e,t,n,o,s){const i=t.slice();i[0]=s;const c=a.util.getArrayFromDType(n,a.util.sizeFromShape(i)),l=e.length;return function(e,t,n,a,o,s){const i=r(t,2)[1],c=r(s,2)[1];let l=0;for(const r of n)for(let t=r[0];t<r[1];++t){for(let n=0;n<a;++n)o[l*c+n]=e[t*i+n];++l}}(e,t,o,0===l?0:l/t[0],c,i),[c,i]}function i(e,t,n,r,i,c,l,u){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,o)=>{if(e<0||e>=n){const r=a.util.indexToLoc(o,t.length,a.util.computeStrides(t)).join(",");throw new Error("indices[".concat(r,"] = ").concat(e," is not in [0, ").concat(n,")"))}}))}(c,l,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const d=r[0],{outSplits:h,valueSlices:p,numValues:f}=o(c,l,e,d),g=function(e){const t=[];for(let n=0;n<e.length;++n){const o=e[n].length,r=a.util.getArrayFromDType("int32",o);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(h),m=s(n,r,i,p,f);return[g,m[0],m[1]]}},14417:(e,t,n)=>{"use strict";n.d(t,{_:()=>r});var a=n(80400);const o=2147483647;function r(e,t,n,r,s,i,c){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(c.length>1)throw new Error("deltas must be a scalar or vector");const l=0===t.length,u=0===s.length,d=0===c.length,h=[];l||h.push(t[0]),u||h.push(s[0]),d||h.push(c[0]);for(let a=1;a<h.length;++a)if(h[a]!==h[a-1])throw new Error("starts, limits, and deltas must have the same shape");const p=0===h.length?1:h[0],f=a.util.getArrayFromDType("int32",p+1);f[0]=0;for(let a=0;a<p;++a){const t=l?e[0]:e[a],n=u?r[0]:r[a],s=d?i[0]:i[a];if(0===s)throw new Error("Requires delta != 0");let c;if(s>0&&n<t||s<0&&n>t)c=0;else if(c=Math.ceil(Math.abs((n-t)/s)),c>o)throw new Error("Requires ((limit - start) / delta) <= ".concat(o));f[a+1]=f[a]+c}const g=f[p],m=a.util.getArrayFromDType(n,g);let x=0;for(let a=0;a<p;++a){const t=f[a+1]-f[a];let n=l?e[0]:e[a];const o=d?i[0]:i[a];for(let e=0;e<t;++e)m[x++]=n,n+=o}return[f,m]}},78545:(e,t,n)=>{"use strict";n.d(t,{K:()=>c});var a=n(80400),o=a.backend_util.RowPartitionType;class r{constructor(e,t,n,o,r,s,i,c,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=o,this.valuesDType=r,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=c,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=a.backend_util.getRowPartitionTypesHelper(u),this.raggedRank=a.backend_util.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===o.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===o.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case o.VALUE_ROWIDS:return r.getMaxWidthValueRowID(t);case o.ROW_SPLITS:return r.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type ".concat(o[this.getRowPartitionTypeByDimension(e-1)]))}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],o=0;for(let r=1;r<t;++r){const t=e[r];t!==a&&(a=t,o=Math.max(r-n,o),n=r)}return Math.max(t-n,o)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return i(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;a.backend_util.validateDefaultValueShape(n,t);const o=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=a.backend_util.combineRaggedTensorToTensorShapes(this.raggedRank,o,t);r[0]<0&&(r[0]=e);for(let a=1;a<=this.raggedRank;++a)r[a]<0&&(r[a]=this.getMaxWidth(a));return r}calculateFirstParentOutputIndex(e,t,n){const o=Math.min(e,n),r=[];let s=0;for(let a=0;a<o;++a,s+=t)r.push(s);for(let a=o;a<e;++a)r.push(-1);return a.util.assert(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,a){const o=e.length,r=[];for(let s=0;s<o-1;++s){const o=e[s+1]-e[s];let i=Math.min(a,o),c=t[s];-1===c&&(i=0);for(let e=0;e<i;++e)r.push(c),c+=n;for(let e=0;e<o-i;++e)r.push(-1)}if(o>0&&r.length!==e[o-1])throw new Error("Invalid row split size.");return r}calculateOutputIndexValueRowID(e,t,n,a){const o=e.length,r=[];if(0===o)return[];let s=0,i=e[0];if(i>=t.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(t.length));let c=t[i];r.push(c);for(let l=1;l<o;++l){const o=e[l];if(o===i)c>=0&&(++s,s<a?c+=n:c=-1);else{if(s=0,i=o,o>=t.length)throw new Error("Got nextValueRowId=".concat(o," which is not less than ").concat(t.length));c=t[o]}r.push(c)}if(r.length!==e.length)throw new Error("Invalid row ids.");return r}calculateOutputIndex(e,t,n,a){const r=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case o.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case o.ROW_SPLITS:if(r.length-1>t.length)throw new Error("Row partition size is greater than output size: ".concat(r.length-1," > ").concat(t.length));return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error("Unsupported partition type: ".concat(o[s]))}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case o.FIRST_DIM_SIZE:return e[0];case o.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case o.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(o[t]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let a=n.length-2;a>=0;--a)n[a]=n[a+1]*t[a+1];const o=i(t,!1),r=a.util.getArrayFromDType(this.valuesDType,a.util.sizeFromShape(o));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){a=this.calculateOutputIndex(e-1,a,n[e],t[e])}this.setOutput(this.raggedRank,a,r,o)}return[o,r]}setOutput(e,t,n,o){if(0===n.length)return;const r=this.values,i=n;let c=o.slice();c=c.slice(e+1);const l=a.util.sizeFromShape(c),u=t.length;let d=this.defaultValue;if(d.length!==l&&1!==d.length){const e=this.defaultValueShape;(0,a.tidy)((()=>{const t=(0,a.reshape)(d,e),n=(0,a.broadcastTo)(t,c);d=n.dataSync()}))}let h=0,p=0,f=0;for(let a=0;a<=u;++a){let e=a<u?t[a]:-1;if(e!==f){if(p<f){const e=r.subarray(h*l);s(i.subarray(p*l),e,(f-p)*l)}if(a>=u){const t=n.length;e=Math.floor(t/l)}if(e>f)if(1===this.defaultValue.length)i.subarray(f*l,e*l).fill(this.defaultValue[0]),f=e;else for(;e>f;){s(i.slice(f*l),d,l),++f}e<0?(h=a+1,p=f):(h=a,p=f,f=p+1)}else++f}}}function s(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function i(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function c(e,t,n,a,o,s,i,c,l,u){return new r(e,t,n,a,o,s,i,c,l,u).compute()}},56635:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var a=n(80400);function o(e,t,n,o){if(e===t||e<t&&n<0||t<e&&n>1)return a.util.makeZerosTypedArray(0,o);const r=Math.abs(Math.ceil((t-e)/n)),s=a.util.makeZerosTypedArray(r,o);t<e&&1===n&&(n=-1),s[0]=e;for(let a=1;a<s.length;a++)s[a]=s[a-1]+n;return s}},35995:(e,t,n)=>{"use strict";function a(e){const{inputs:t,backend:n}=e,{input:a}=t,o=n.data.get(a.dataId).complexTensorInfos.real,r=n.data.get(o.dataId).values;return n.makeTensorInfo(o.shape,o.dtype,r)}n.d(t,{r:()=>o,x:()=>a});const o={kernelName:n(80400).Real,backendName:"cpu",kernelFunc:a}},3555:(e,t,n)=>{"use strict";n.d(t,{Lt:()=>c,Zy:()=>s});var a=n(80400),o=n(74084),r=n(34729);const s=(0,o.o)((e=>1/Math.sqrt(e))),i=(0,r.F)(a.Rsqrt,s),c={kernelName:a.Rsqrt,backendName:"cpu",kernelFunc:i}},526:(e,t,n)=>{"use strict";n.d(t,{b:()=>o});var a=n(80400);function o(e,t,n,o,r,s,i,c,l,u){const d=[o/r,r],h=e.values,p=t.values;if(0===o)return(0,a.buffer)(n,t.dtype);const f=l instanceof a.TensorBuffer?l:(0,a.buffer)(d,t.dtype);"string"===typeof l||"number"===typeof l?f.values.fill(l):"boolean"===typeof l&&f.values.fill(+l);for(let a=0;a<s;a++){const e=[];let s=0;for(let t=0;t<i;t++){const n=h[a*i+t];e.push(n),s+=n*c[t]}if(s<0||s>=o/r)throw new Error("Invalid indices: ".concat(e," does not index into ").concat(n));for(let n=0;n<r;n++)u?f.values[s*r+n]+=p[a*r+n]:f.values[s*r+n]=0===t.rank?p[0]:p[a*r+n]}return f}},42511:(e,t,n)=>{"use strict";n.d(t,{X3:()=>c,ry:()=>i,zv:()=>s});var a=n(80400),o=n(74084),r=n(34729);const s=(0,o.o)((e=>1/(1+Math.exp(-e)))),i=(0,r.v)(a.Sigmoid,(e=>1/(1+Math.exp(-e)))),c={kernelName:a.Sigmoid,backendName:"cpu",kernelFunc:i}},34357:(e,t,n)=>{"use strict";n.d(t,{HS:()=>r,di:()=>s,lv:()=>i});var a=n(80400),o=n(3143);function r(e,t,n,o,r){const s=a.slice_util.isSliceContinous(o,t,n),i=a.util.sizeFromShape(n),c=a.util.computeStrides(o);if(s){const n=a.slice_util.computeFlatOffset(t,c);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const l="string"===r?a.backend_util.fromUint8ToStringArray(e):e,u=(0,a.buffer)(o,r,l),d=(0,a.buffer)(n,r);for(let a=0;a<d.size;++a){const e=d.indexToLoc(a),n=e.map(((e,n)=>e+t[n]));d.set(u.get(...n),...e)}return"string"===r?a.backend_util.fromStringArrayToUint8(d.values):d.values}function s(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{begin:c,size:l}=s;(0,o.C)(i,"slice");const[u,d]=a.slice_util.parseSliceParams(i,c,l);a.slice_util.assertParamsValid(i,u,d);const h=r(n.data.get(i.dataId).values,u,d,i.shape,i.dtype);return n.makeTensorInfo(d,i.dtype,h)}const i={kernelName:a.Slice,backendName:"cpu",kernelFunc:s}},22785:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var a=n(80400);function o(e,t,n,o,r,s,i){const c=t[0],l=s[0],u=new Array(l),d=new Array(c),h=t[1];if(0===l){if(0!==c)throw new Error(a.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(c));return[a.util.getArrayFromDType(n,0),[0,h],a.util.getArrayFromDType(r,0),u,d]}let p=!0,f=0;const g=new Array(l).fill(0);for(let x=0;x<c;++x){const t=e[x*h];if(t<0)throw new Error(a.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(x,t));if(t>=l)throw new Error(a.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(x,t,l));++g[t],p=p&&t>=f,f=t}let m=!0;for(let a=0;a<l;++a){const e=0===g[a];u[a]=e,m=m&&!e,g[a]=Math.max(g[a],1),a>0&&(g[a]+=g[a-1])}if(m&&p){const t=e,n=o;for(let e=0;e<c;++e)d[e]=e;return[t,[c,h],n,u,d]}{const t=g[l-1],s=a.util.getArrayFromDType(n,t*h),p=a.util.getArrayFromDType(r,t),f=new Array(l).fill(0);for(let n=0;n<c;++n){const t=e[n*h],a=f[t],r=(0===t?0:g[t-1])+a;f[t]++;for(let o=0;o<h;++o)s[r*h+o]=e[n*h+o];p[r]=o[n],d[n]=r}for(let e=0;e<l;++e){if(0===f[e]){const t=0===e?0:g[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;p[t]=i}}return[s,[t,h],p,u,d]}}},50706:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var a=n(80400);function o(e,t,n,o,r){const s=a.util.sizeFromShape(o),i=t[0],c=r.length,l=[];let u=1,d=-1;for(let m=0;m<c;++m){const e=r[m];if(-1===e){if(-1!==d)throw new Error(a.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,m));d=m,l.push(1)}else{if(e<0)throw new Error(a.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(m,e));u*=e,l.push(e)}}if(-1!==d){if(u<=0)throw new Error(a.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(s/u);if(u*e!==s)throw new Error(a.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(o,l));l[d]=e}if(a.util.sizeFromShape(l)!==s)throw new Error(a.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(o,l));const h=o.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*o[e+1]}const f=[];if(c>0){f[c-1]=1;for(let e=c-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const g=a.util.getArrayFromDType(n,i*c);for(let a=0;a<i;++a){let t=0;for(let n=0;n<h;++n)t+=e[a*h+n]*p[n];for(let e=0;e<c;++e)g[a*c+e]=Math.trunc(t/f[e]),t%=f[e]}return[g,[i,c],l]}},53326:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var a=n(80400);function o(e,t,n,o,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const c=o.length,l=[t[0],e.length/t[0]],u=l[1],d=c>0?r[c-1]+1:0;if(d<0)throw new Error(a.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=d;const p=h.reduce(((e,t)=>e*t),1),f=a.util.getArrayFromDType(n,p);if(0===c)return d>0&&f.fill(i),[f,h];if(d<=0)throw new Error(a.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let g=0,m=1,x=0,v=r[g];for(;;){let t=0;if(m<c){if(t=r[m],v===t){++m;continue}if(v>=t)throw new Error(a.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(v<0||v>=d)throw new Error(a.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(v,d));v>x&&f.fill(i,x*u,v*u);for(let n=g;n<m;++n){const t=o[n];if(t<0||t>=l[0])throw new Error(a.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,o[n],l[0]));for(let n=0;n<u;n++)f[v*u+n]+=e[t*u+n]}if(s)for(let e=0;e<u;e++)f[v*u+e]/=m-g;if(g=m,++m,x=v+1,v=t,m>c)break}return x<d&&f.fill(i,x*u,d*u),[f,h]}},98041:(e,t,n)=>{"use strict";n.d(t,{Fu:()=>c,x6:()=>s});var a=n(80400),o=n(74084),r=n(34729);const s=(0,o.o)((e=>Math.sqrt(e))),i=(0,r.v)(a.Sqrt,(e=>Math.sqrt(e))),c={kernelName:a.Sqrt,backendName:"cpu",kernelFunc:i}},67844:(e,t,n)=>{"use strict";n.d(t,{C:()=>c,_:()=>s});var a=n(80400),o=n(74084),r=n(34729);const s=(0,o.o)(((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:o}=t;return e.replace(new RegExp(n,a?"g":""),o)})),i=(0,r.F)(a.StaticRegexReplace,s),c={kernelName:a.StaticRegexReplace,backendName:"cpu",kernelFunc:i}},3445:(e,t,n)=>{"use strict";n.d(t,{e:()=>o});var a=n(80400);function o(e,t,n,o){const r=(0,a.buffer)(e,t.dtype);for(let a=0;a<r.size;a++){const e=r.indexToLoc(a),s=new Array(e.length);for(let t=0;t<s.length;t++)s[t]=e[t]*n[t]+o[t];r.set(t.get(...s),...e)}return r}},58793:(e,t,n)=>{"use strict";n.d(t,{G:()=>r});var a=n(80400);class o{constructor(e,t,n,o,r,s){this.separator=a.util.encodeString(e),this.nGramWidths=t,this.leftPad=a.util.encodeString(n),this.rightPad=a.util.encodeString(o),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,o,r){for(let s=0;s<o;++s){const i=this.getPadWidth(r),c=Math.max(0,i-s),l=Math.max(0,i-(o-(s+1))),u=r-(c+l),d=t+(c>0?0:s-i);let h=0;h+=c*this.leftPad.length;for(let t=0;t<u;++t)h+=e[d+t].length;h+=l*this.rightPad.length;h+=(c+l+u-1)*this.separator.length,n[a+s]=new Uint8Array(h);const p=n[a+s];let f=0;const g=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<c;++e)g(this.leftPad),g(this.separator);for(let t=0;t<u-1;++t)g(e[d+t]),g(this.separator);if(u>0){g(e[d+u-1]);for(let e=0;e<l;++e)g(this.separator),g(this.rightPad)}else{for(let e=0;e<l-1;++e)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){const n=e.length,o=t.length;if(o>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got ".concat(e));for(let a=1;a<o;++a){let o=t[a]>=e;if(o=o&&t[a]<=n,!o)throw new Error("Invalid split value ".concat(t[a],", must be in [").concat(e,", ").concat(n,"]"));e=t[a]}if(e!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(e))}const r=o-1,s=a.util.getArrayFromDType("int32",o);if(0===n||0===o){const e=new Array(n);for(let t=0;t<=r;++t)s[t]=0;return[e,s]}s[0]=0;for(let a=1;a<=r;++a){const e=t[a]-t[a-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),s[a]=s[a-1]+n}const i=new Array(s[r]);for(let a=0;a<r;++a){const n=t[a];let o=s[a];if(this.nGramWidths.forEach((r=>{const s=t[a+1]-t[a],c=this.getNumNGrams(s,r);this.createNGrams(e,n,i,o,c,r),o+=c})),this.preserveShort&&o===s[a]){const r=t[a+1]-t[a];if(0===r)continue;const s=r+2*this.padWidth,c=1;this.createNGrams(e,n,i,o,c,s)}}return[i,s]}}function r(e,t,n,a,r,s,i,c){return new o(n,a,r,s,i,c).compute(e,t)}},37185:(e,t,n)=>{"use strict";n.d(t,{S:()=>r});var a=n(80400);function o(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const o=t[0];let r=e.indexOf(o);for(;-1!==r;){const t=e.subarray(0,r);n&&0===t.length||a.push(t),r=(e=e.subarray(r+1)).indexOf(o)}return void(n&&0===e.length||a.push(e))}let o=0;for(let r=0;r<e.length+1;r++)if(r===e.length||-1!==t.indexOf(e[r])){const t=e.subarray(o,r);n&&0===t.length||a.push(t),o=r+1}}function r(e,t,n){const r=e.length,s=[];let i=0,c=0;const l=new Array(r);for(let a=0;a<r;++a){const r=s.length;o(e[a],t,n,s);const u=s.length-r;l[a]=u,i+=u,c=Math.max(c,u)}const u=a.util.getArrayFromDType("int32",2*i),d=new Array(i),h=[r,c];let p=0;for(let a=0;a<r;++a)for(let e=0;e<l[a];++e)u[2*p]=a,u[2*p+1]=e,d[p]=s[p],++p;return[u,d,h]}},82536:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var a=n(80400);function o(e,t){const n=a.util.getArrayFromDType("int32",e.length);for(let o=0;o<e.length;++o)n[o]=a.util.fingerPrint64(e[o]).modulo(t).getLowBitsUnsigned();return n}},24413:(e,t,n)=>{"use strict";n.d(t,{Zl:()=>l,dl:()=>s,jb:()=>c});var a=n(80400),o=n(82312),r=n(85101);const s=(0,o.Z)(((e,t)=>e-t)),i=(0,r.B)(((e,t,n,a)=>({real:e-n,imag:t-a}))),c=(0,r.j)(a.Sub,s,i),l={kernelName:a.Sub,backendName:"cpu",kernelFunc:c}},18024:(e,t,n)=>{"use strict";n.d(t,{D:()=>o});var a=n(80400);function o(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const o=(0,a.buffer)(n,e.dtype);for(let a=0;a<o.values.length;++a){const t=o.indexToLoc(a),n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];const r=e.locToIndex(n);o.values[a]=e.values[r]}return o}},78036:(e,t,n)=>{"use strict";n.d(t,{x:()=>s});var a=n(80400);const o=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function r(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;s>n;){if(s-n>600){const a=s-n+1,o=t-n+1,i=Math.log(a),c=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*c*(a-c)/a)*Math.sign(o-a/2);r(e,t,Math.max(n,Math.floor(t-o*c/a+l)),Math.min(s,Math.floor(t+(a-o)*c/a+l)))}const i=e[t];let c=n,l=s;for(a.util.swap(e,n,t),o(e[s],i)>0&&a.util.swap(e,n,s);c<l;){for(a.util.swap(e,c,l),c++,l--;o(e[c],i)<0;)c+=1;for(;o(e[l],i)>0;)l-=1}0===o(e[n],i)?a.util.swap(e,n,l):(l+=1,a.util.swap(e,l,s)),l<=t&&(n=l+1),t<=l&&(s=l-1)}}function s(e,t,n,s,i){const c=t[t.length-1],[l,u]=[e.length/c,c],d=a.util.getTypedArrayFromDType(n,l*s),h=a.util.getTypedArrayFromDType("int32",l*s);for(let a=0;a<l;a++){const t=a*u,n=e.subarray(t,t+u);let c=new Array(n.length);n.forEach(((e,t)=>c[t]={value:e,index:t})),s<c.length&&(r(c,s),c=c.slice(0,s)),i&&c.sort(o);const l=a*s,p=d.subarray(l,l+s),f=h.subarray(l,l+s);for(let e=0;e<s;e++)p[e]=c[e].value,f[e]=c[e].index}const p=t.slice();return p[p.length-1]=s,[(0,a.buffer)(p,n,d),(0,a.buffer)(p,"int32",h)]}},89868:(e,t,n)=>{"use strict";n.d(t,{W:()=>i,m:()=>s});var a=n(80400),o=n(3143),r=n(82137);function s(e){const{inputs:t,attrs:n,backend:a}=e,{x:s}=t,{perm:i}=n;(0,o.C)(s,"transpose");const c=s.shape.length,l=new Array(c);for(let o=0;o<l.length;o++)l[o]=s.shape[i[o]];const u=a.data.get(s.dataId).values,d=(0,r._)(u,s.shape,s.dtype,i,l);return{dataId:a.write(d,l,s.dtype),shape:l,dtype:s.dtype}}const i={kernelName:a.Transpose,backendName:"cpu",kernelFunc:s}},82137:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var a=n(80400);function o(e,t,n,o,r){const s=t.length,i=a.util.sizeFromShape(t),c=a.util.computeStrides(t),l=a.util.computeStrides(r),u=a.util.getTypedArrayFromDType(n,a.util.sizeFromShape(r));for(let d=0;d<i;++d){const t=a.util.indexToLoc(d,s,c),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[o[e]];u[a.util.locToIndex(n,s,l)]=e[d]}return u}},23705:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var a=n(80400);function o(e,t,n,o){const r=a.util.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let a=0;a<r;a++)s[0]*=n[a];s[1]=n[r];for(let a=r+1;a<n.length;a++)s[2]*=n[a];const i=new Map,c=new Int32Array(n[r]),l=new a.TensorBuffer(s,o,e),u=[],d=1===s[0]&&1===s[2];for(let a=0;a<n[r];a++){let t;if(d)t=e[a].toString();else{const e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(l.get(t,a,n));t=e.join(",")}const n=i.get(t);if(null!=n)c[a]=n;else{const e=i.size;i.set(t,e),c[a]=e,u.push(a)}}const h=s.slice();h[1]=i.size;const p=new a.TensorBuffer(h,o);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)p.set(l.get(n,e,a),n,t,a)}));const f=n.slice();return f[r]=h[1],{outputValues:p.values,outputShape:f,indices:c}}},82312:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var a=n(80400);function o(e){return(t,n,o,r,s)=>{const i=a.backend_util.assertAndGetBroadcastShape(t,n),c=i.length,l=a.util.computeStrides(i),u=a.util.sizeFromShape(i),d=a.util.getTypedArrayFromDType(s,u),h=t.length,p=n.length,f=a.util.computeStrides(t),g=a.util.computeStrides(n),m=a.backend_util.getBroadcastDims(t,i),x=a.backend_util.getBroadcastDims(n,i);if(m.length+x.length===0)for(let a=0;a<d.length;++a)d[a]=e(o[a%o.length],r[a%r.length]);else for(let v=0;v<d.length;++v){const t=a.util.indexToLoc(v,c,l),n=t.slice(-h);m.forEach((e=>n[e]=0));const s=a.util.locToIndex(n,h,f),i=t.slice(-p);x.forEach((e=>i[e]=0));const u=a.util.locToIndex(i,p,g);d[v]=e(o[s],r[u])}return[d,i]}}},85101:(e,t,n)=>{"use strict";n.d(t,{B:()=>c,j:()=>i});var a=n(80400),o=n(3143),r=n(668),s=n(73075);function i(e,t,n,i){return null==n?n=>{let{inputs:r,backend:s}=n;const{a:c,b:l}=r,u=s;(0,o.C)([c,l],e);const d=u.data.get(c.dataId).values,h=u.data.get(l.dataId).values,p="string"===c.dtype?a.backend_util.fromUint8ToStringArray(d):d,f="string"===c.dtype?a.backend_util.fromUint8ToStringArray(h):h,g=i||c.dtype,[m,x]=t(c.shape,l.shape,p,f,g);return u.makeTensorInfo(x,g,m)}:e=>{let{inputs:a,backend:o}=e;const{a:c,b:l}=a,u=o;if("complex64"===c.dtype||"complex64"===l.dtype){const e=(0,r.wg)({inputs:{x:c},backend:u,attrs:{dtype:"complex64"}}),t=u.data.get(e.dataId),a=t.complexTensorInfos.real,o=t.complexTensorInfos.imag,i=u.data.get(a.dataId).values,d=u.data.get(o.dataId).values,h=(0,r.wg)({inputs:{x:l},backend:u,attrs:{dtype:"complex64"}}),p=u.data.get(h.dataId),f=p.complexTensorInfos.real,g=p.complexTensorInfos.imag,m=u.data.get(f.dataId).values,x=u.data.get(g.dataId).values,[v,b,y]=n(c.shape,l.shape,i,d,m,x),w=u.makeTensorInfo(y,"float32",v),k=u.makeTensorInfo(y,"float32",b),T=(0,s.f)({inputs:{real:w,imag:k},backend:u});return u.disposeIntermediateTensorInfo(e),u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(w),u.disposeIntermediateTensorInfo(k),T}{const e=u.data.get(c.dataId).values,n=u.data.get(l.dataId).values,a=i||c.dtype,[o,r]=t(c.shape,l.shape,e,n,a);return u.makeTensorInfo(r,a,o)}}}function c(e){return(t,n,o,r,s,i)=>{const c=a.backend_util.assertAndGetBroadcastShape(t,n),l=a.util.sizeFromShape(c),u=c.length,d=a.util.computeStrides(c),h=a.util.getTypedArrayFromDType("float32",l),p=a.util.getTypedArrayFromDType("float32",l),f=a.backend_util.getBroadcastDims(t,c),g=a.backend_util.getBroadcastDims(n,c),m=a.backend_util.mergeRealAndImagArrays(o,r),x=a.backend_util.mergeRealAndImagArrays(s,i),v=t.length,b=a.util.computeStrides(t),y=n.length,w=a.util.computeStrides(n);if(f.length+g.length===0)for(let a=0;a<h.length;a++){const t=a%m.length,n=a%x.length,o=e(m[2*t],m[2*t+1],x[2*n],x[2*n+1]);h[a]=o.real,p[a]=o.imag}else for(let k=0;k<h.length;k++){const t=a.util.indexToLoc(k,u,d),n=t.slice(-v);f.forEach((e=>n[e]=0));const o=a.util.locToIndex(n,v,b),r=t.slice(-y);g.forEach((e=>r[e]=0));const s=a.util.locToIndex(r,y,w),i=e(m[2*o],m[2*o+1],x[2*s],x[2*s+1]);h[k]=i.real,p[k]=i.imag}return[h,p,c]}}},74084:(e,t,n)=>{"use strict";n.d(t,{o:()=>o});var a=n(80400);function o(e){return(t,n,o)=>{const r=a.util.getArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],o);return r}}},34729:(e,t,n)=>{"use strict";n.d(t,{F:()=>i,v:()=>s});var a=n(80400),o=n(3143),r=n(74084);function s(e,t,n){return i(e,(0,r.o)(t),n)}function i(e,t,n){return r=>{let{inputs:s,attrs:i,backend:c}=r;const{x:l}=s;(0,o.C)(l,e);const u=c,d=u.data.get(l.dataId).values;let h;if("string"===l.dtype){if(!Array.isArray(d))throw new Error("String tensor's value was not an instance of Array");h=a.backend_util.fromUint8ToStringArray(d)}else h=d;const p=n||l.dtype,f=t(h,p,i);return u.makeTensorInfo(l.shape,p,f)}}},51908:(e,t,n)=>{"use strict";n.d(t,{U:()=>r});var a=n(80400),o=n(73075);function r(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){const n=r(e,t,"float32"),a=r(e,t,"float32");return(0,o.f)({inputs:{real:n,imag:a},backend:e})}const s=a.util.makeZerosTypedArray(a.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}},59788:(e,t,n)=>{"use strict";n.d(t,{$p:()=>Wn});var a={};n.r(a),n.d(a,{mx:()=>Ne.mx,XI:()=>_e.X,Nk:()=>_e.N,f6:()=>Fe.f6,ct:()=>De.ct,YG:()=>Oe.YG,hH:()=>Pe.h,z3:()=>Me.z3,sG:()=>Le.sG,uM:()=>Be.uM,vS:()=>We.vS,qB:()=>Ge.q,GG:()=>Ve.G,lg:()=>ze.lg,rq:()=>Ue.rq,cu:()=>He.cu,WR:()=>Ye.WR,GE:()=>Ke.G,px:()=>je.px,jC:()=>qe.j,He:()=>Xe.He,hE:()=>Ze.hE,BF:()=>Qe.BF,Dk:()=>Je.Dk,cl:()=>$e.cl,_B:()=>et._B,ub:()=>tt.u,_f:()=>nt._,Ku:()=>at.K,qy:()=>ot.q,Zy:()=>rt.Zy,bu:()=>st.b,zv:()=>it.zv,dH:()=>Re.dH,HS:()=>ct.HS,yH:()=>lt.y,l3:()=>ut.l,z9:()=>dt.z,x6:()=>ht.x6,_m:()=>pt._,eW:()=>ft.e,GK:()=>gt.G,SP:()=>mt.S,yr:()=>xt.f,dl:()=>vt.dl,Dw:()=>bt.D,xT:()=>yt.x,_X:()=>wt._,wz:()=>kt.w});var o=n(80400);const r={},s={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function i(e,t){if(!(e in r)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if((0,o.env)().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete r[e]}),!1),(0,o.env)().getBool("SOFTWARE_WEBGL_ENABLED")&&(s.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",s)||n.getContext("experimental-webgl",s);return n.getContext("webgl2",s)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;r[e]=n}const n=r[e];return null==n||n.isContextLost()?(delete r[e],i(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),r[e])}var c,l,u;function d(e,t){return[t,e]}function h(e){const t=o.util.sizeFromShape(e),n=Math.ceil(t/4);return o.util.sizeToSquarishShape(n)}function p(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function f(e,t){const n=e;let a,r,s,i,c,l,u,d,h,p;return 2===(0,o.env)().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,s=n.RGBA16F,i=n.RGBA32F,c=n.RED,u=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(a=e.RGBA,r=e.RGBA,s=e.RGBA,i=n.RGBA,c=e.RGBA,u=4,d=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:c,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}function g(e,t){const n=t();return(0,o.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(t)}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(c||(c={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(l||(l={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(u||(u={}));function m(e){return!!((0,o.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function x(e,t){return I(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const v=/ERROR: [0-9]+:([0-9]+):/g;function b(e,t){const n=v.exec(t);if(null==n)return console.log("Couldn't parse line number in error: ".concat(t)),void console.log(e);const a=+n[1],r=e.split("\n"),s=r.length.toString().length+2,i=r.map(((e,t)=>o.util.rightPad((t+1).toString(),s)+e));let c=0;for(let o=0;o<i.length;o++)c=Math.max(i[o].length,c);const l=i.slice(0,a-1),u=i.slice(a-1,a),d=i.slice(a);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log("%c ".concat(o.util.rightPad(u[0],c)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function y(e,t){if(g(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function w(e,t,n,a,o,r,s){const i=e.getAttribLocation(t,n);return-1!==i&&(g(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),g(e,(()=>e.vertexAttribPointer(i,o,e.FLOAT,!1,r,s))),g(e,(()=>e.enableVertexAttribArray(i))),!0)}function k(e,t,n,a){g(e,(()=>function(e,t,n){E(e,n),g(e,(()=>e.activeTexture(e.TEXTURE0+n))),g(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),g(e,(()=>e.uniform1i(n,a)))}function T(e,t,n){g(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),g(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function C(e,t){g(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),g(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function S(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(t)}}(e,t))}function I(e,t,n){const a=g(e,(()=>t()));if(null==a)throw new Error(n);return a}function E(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){const e="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(e,"."))}}function A(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return o.util.sizeFromShape(e.slice(0,e.length-t))}function R(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function N(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[A(e),...R(e)]),t}function _(e){return e%2===0}function F(e,t){if(e=e.slice(-2),t=t.slice(-2),o.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if(_(n)&&_(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&_(e[0])&&_(t[0])}let D,O;function P(e,t){return null!=e.getExtension(t)}function M(e){try{if(null!=i(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function L(e){if(0===e)return!1;const t=i(e);if(1!==e){if(P(t,"EXT_color_buffer_float"))return B(t);const e="EXT_color_buffer_half_float";if(P(t,e)){const n=t.getExtension(e);return function(e,t){const n=f(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);const o=1,r=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,o,r,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(s),i}(t,n)}return!1}if(!P(t,"OES_texture_float"))return!1;if(!P(t,"WEBGL_color_buffer_float"))return!1;return B(t)}function B(e){const t=f(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),o}function W(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&o.util.assert("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors ")+"in the WebGL backend."))}))}const G=(0,o.env)();function V(){let e,t,n,a,r,s,i,c,l,u;return 2===(0,o.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",i="out vec4 outputColor;",c=(0,o.env)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",i="",c="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:i,defineSpecialNaN:c,defineSpecialInf:l,defineRound:u}}function U(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=o.util.computeStrides(t);return a.map(((t,o)=>{const r="int ".concat(e[o]," = ").concat(n," / ").concat(t),s=o===a.length-1?"int ".concat(e[o+1]," = ").concat(n," - ").concat(e[o]," * ").concat(t):"index -= ".concat(e[o]," * ").concat(t);return"".concat(r,"; ").concat(s,";")})).join("")}function z(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=o.util.computeStrides(t);return a.map(((t,o)=>{const r="int ".concat(e[o]," = ").concat(n," / outShapeStrides[").concat(o,"]"),s=o===a.length-1?"int ".concat(e[o+1]," = ").concat(n," - ").concat(e[o]," * outShapeStrides[").concat(o,"]"):"index -= ".concat(e[o]," * outShapeStrides[").concat(o,"]");return"".concat(r,"; ").concat(s,";")})).join("")}function Y(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=function(e,t){const n=e.length,a=e.map((e=>"".concat(t,"[").concat(e,"]"))),o=new Array(n-1);o[n-2]=a[n-1];for(let r=n-3;r>=0;--r)o[r]="(".concat(o[r+1]," * ").concat(a[r+1],")");return o}(e.map(((e,t)=>t)),t);return a.map(((t,o)=>{const r="int ".concat(e[o]," = ").concat(n," / ").concat(a[o]),s=o===a.length-1?"int ".concat(e[o+1]," = ").concat(n," - ").concat(e[o]," * ").concat(a[o]):"index -= ".concat(e[o]," * ").concat(a[o]);return"".concat(r,"; ").concat(s,";")})).join("")}function H(e){const t=o.util.computeStrides(e).map((e=>e.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(t[0]," + coords.y * ").concat(t[1]," + coords.z;\n  }\n")}G.registerFlag("HAS_WEBGL",(()=>G.getNumber("WEBGL_VERSION")>0)),G.registerFlag("WEBGL_VERSION",(()=>M(2)?2:M(1)?1:0)),G.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),G.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===G.get("WEBGL_VERSION"))),G.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),G.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),G.registerFlag("WEBGL_PACK",(()=>G.getBool("HAS_WEBGL"))),G.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>G.getBool("WEBGL_PACK"))),G.registerFlag("WEBGL_PACK_CLIP",(()=>G.getBool("WEBGL_PACK"))),G.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>G.getBool("WEBGL_PACK"))),G.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>G.getBool("WEBGL_PACK"))),G.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>G.getBool("WEBGL_PACK"))),G.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>G.getBool("WEBGL_PACK"))),G.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>G.getBool("WEBGL_PACK"))),G.registerFlag("WEBGL_PACK_REDUCE",(()=>G.getBool("WEBGL_PACK"))),G.registerFlag("WEBGL_LAZILY_UNPACK",(()=>G.getBool("WEBGL_PACK"))),G.registerFlag("WEBGL_CONV_IM2COL",(()=>G.getBool("WEBGL_PACK"))),G.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>G.getBool("WEBGL_PACK"))),G.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==D){const t=i(e);D=t.getParameter(t.MAX_TEXTURE_SIZE)}return D}(G.getNumber("WEBGL_VERSION")))),G.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==O){const t=i(e);O=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,O)}(G.getNumber("WEBGL_VERSION")))),G.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=G.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=i(e);return t=P(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:P(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),G.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>G.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!o.device_util.isMobile())),G.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=i(e);if(1===e){if(!P(t,"OES_texture_float"))return!1}else if(!P(t,"EXT_color_buffer_float"))return!1;return B(t)}(G.getNumber("WEBGL_VERSION")))),G.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!G.getBool("WEBGL_FORCE_F16_TEXTURES")&&G.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),G.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>L(G.getNumber("WEBGL_VERSION")))),G.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=G.getNumber("WEBGL_VERSION"))&&null!=i(e).fenceSync;var e})),G.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>G.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),G.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(e,"."))})),G.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>o.device_util.isMobile()?1:-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(e,"."))})),G.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),G.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),G.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),G.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),G.registerFlag("WEBGL_EXP_CONV",(()=>!1)),G.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>G.getBool("IS_TEST"))),G.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),G.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),G.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),G.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const K="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:j}=o.backend_util;function q(e,t,n){const a=[];if(e.forEach((e=>{const t=o.util.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push("uniform float ".concat(e.name).concat(t>1?"[".concat(t,"]"):"",";")):(a.push("uniform sampler2D ".concat(e.name,";")),a.push("uniform int offset".concat(e.name,";"))),n.enableShapeUniforms){const{uniformShape:t}=oe(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push("uniform int ".concat(e.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(e.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(e.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(e.name,"Shape;"))}a.push("uniform ivec2 ".concat(e.name,"TexShape;"))}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push("uniform ".concat(e.type," ").concat(e.name).concat(e.arrayIndex?"[".concat(e.arrayIndex,"]"):"",";"))}));const r=a.join("\n"),s=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?Z(e,a):X(e,a);const s=e.shapeInfo.logicalShape,i=t.logicalShape;s.length<=i.length&&(r+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,c=j(e.shapeInfo.logicalShape,t.logicalShape),l=ae(i),u=i-s;let d;const h=["x","y","z","w","u","v"];d=0===s?"":i<2&&c.length>=1?"coords = 0;":c.map((e=>"coords.".concat(h[e+u]," = 0;"))).join("\n");let p="";p=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(h[t+u]))).join(", ");let f="return outputValue;";const g=1===o.util.sizeFromShape(e.shapeInfo.logicalShape),m=o.util.sizeFromShape(t.logicalShape),x=1===m;if(1!==s||g||x){if(g&&!x)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(c.length){const e=s-2,t=s-1;c.indexOf(e)>-1&&c.indexOf(t)>-1?f="return vec4(outputValue.x);":c.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(r,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(d,"\n      vec4 outputValue = get").concat(a,"(").concat(p,");\n      ").concat(f,"\n    }\n  ")}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,c=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&c===l&&null==e.shapeInfo.flatOffset&&o.util.arraysEqual(i,s))return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const u=ae(l),d=j(e.shapeInfo.logicalShape,t.logicalShape),h=l-c;let p;const f=["x","y","z","w","u","v"];p=0===c?"":l<2&&d.length>=1?"coords = 0;":d.map((e=>"coords.".concat(f[e+h]," = 0;"))).join("\n");let g="";g=l<2&&c>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(f[t+h]))).join(", ");return"\n    float ".concat(r,"() {\n      ").concat(u," coords = getOutputCoords();\n      ").concat(p,"\n      return get").concat(a,"(").concat(g,");\n    }\n  ")}(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,c=V(),l=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(e.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(c);let u,d,h=function(e){const t="".concat(e.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(e.varyingFs," vec2 resultUV;\n    ").concat(e.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(e.defineSpecialNaN,"\n    ").concat(e.defineSpecialInf,"\n    ").concat(e.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(Q,"\n    ").concat(J,"\n    ").concat($,"\n  ");return t}(c);t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(o.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(e[2]/2),r=o*Math.ceil(e[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(r,";\n      index -= b * ").concat(r,";\n\n      int r = 2 * (index / ").concat(o,");\n      int c = imod(index, ").concat(o,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(e[e.length-1]/2),r=o*Math.ceil(e[e.length-2]/2);let s=r,i="",c="b, r, c";for(let l=2;l<e.length-1;l++)s*=e[e.length-l-1],i="\n      int b".concat(l," = index / ").concat(s,";\n      index -= b").concat(l," * ").concat(s,";\n    ")+i,c="b".concat(l,", ")+c;return"\n    ivec".concat(e.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(r,";\n      index -= b * ").concat(r,";\n\n      int r = 2 * (index / ").concat(o,");\n      int c = imod(index, ").concat(o,") * 2;\n\n      return ivec").concat(e.length,"(").concat(c,");\n    }\n  ")}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),d=function(e){return"\n    void setOutput(vec4 val) {\n      ".concat(e.output," = val;\n    }\n  ")}(c)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(t[1],".0);\n      }\n    ");if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(t[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      return resTexRC.x * ").concat(t[1]," + resTexRC.y;\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){if(o.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(t[0],", ").concat(t[1],"));\n      }\n    ");if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      int r = index / ").concat(e[1],";\n      int c = index - r * ").concat(e[1],";\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n){const t=z(["r","c","d"],e);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(t,"\n    return ivec3(r, c, d);\n  }\n")}const a=U(["r","c","d"],e);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,t,n);case 4:return function(e,t,n){if(n){const t=z(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(t,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=U(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(e,t,n);case 5:return function(e,t){const n=U(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(t[0],",\n                             ").concat(t[1],"));\n\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(e,t);case 6:return function(e,t){const n=U(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(e,t);default:throw new Error("".concat(e.length,"-D output sampling is not yet supported"))}}(t.logicalShape,i,n.enableShapeUniforms),d=function(e){return"\n    void setOutput(float val) {\n      ".concat(e.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(c)),n.packedInputs&&(h+=ee);return[h,l,d,r,u,s,n.userCode].join("\n")}function X(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[o,r]=e.shapeInfo.texShape;if(1===o&&1===r)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const s=te(n);if(t)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(s,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=e.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(s,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(ne(e),"\n      }\n    ");const o=e.shapeInfo.texShape,r=o[0],s=o[1];if(1===s&&1===r)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=te(n);if(1===s)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(r,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===r)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(s,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(t)return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(r,", ").concat(s,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape;if(null!=s&&o.util.arraysEqual(n,s)){if(t)return"\n      float ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const e=s[0],n=s[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(e,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:i,keptDims:c}=o.util.squeezeShape(n),l=i;if(l.length<n.length){const n=re(e,l),a=["row","col"];return"\n      ".concat(X(n,t),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(se(a,c),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(ne(e),"\n      }\n    ");const u=s[0],d=s[1],h=te(a);if(1===d)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(u,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(1===u)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(d,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(t)return"\n      float ".concat(r,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(h,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");return"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(h,";\n    vec2 uv = uvFromFlat(").concat(u,", ").concat(d,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],i=n[2],{newShape:c,keptDims:l}=o.util.squeezeShape(n),u=c;if(u.length<n.length){const n=re(e,u),a=["row","col","depth"];return"\n        ".concat(X(n,t),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(se(a,l),");\n        }\n      ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(s,", ").concat(i,", 1)));\n        ").concat(ne(e),"\n      }\n    ");const d=e.shapeInfo.texShape,h=d[0],p=d[1],f=e.shapeInfo.flatOffset;if(p===s&&null==f)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(i,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(p,".0, ").concat(h,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(p===i&&null==f)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(p,".0, ").concat(h,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const g=te(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(g,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    ");return"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(s," + col * ").concat(i," + depth + ").concat(g,";\n        vec2 uv = uvFromFlat(").concat(h,", ").concat(p,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],i=n[2]*s,c=n[1]*i,{newShape:l,keptDims:u}=o.util.squeezeShape(n);if(l.length<n.length){const n=re(e,l),a=["row","col","depth","depth2"];return"\n      ".concat(X(n,t),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(se(a,u),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(c,", ").concat(i,", ").concat(s,", 1)));\n        ").concat(ne(e),"\n      }\n    ");const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1],g="int stride2 = ".concat(a,"Shape[3];"),m="int stride1 = ".concat(a,"Shape[2] * stride2;"),x="int stride0 = ".concat(a,"Shape[1] * stride1;");if(f===c&&null==d)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        ").concat(g,"\n        ").concat(m,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(i,", ").concat(s,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(f===s&&null==d)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const v=te(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(g,"\n      ").concat(m,"\n      ").concat(x,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(v,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(i," +\n          depth * ").concat(s," + depth2;\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index + ").concat(v,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,i=t[2]*s,c=t[1]*i,{newShape:l,keptDims:u}=o.util.squeezeShape(t);if(l.length<t.length){const t=re(e,l),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(X(t),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(se(n,u),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(c,", ").concat(i,", ").concat(s,", ").concat(r,")) +\n          depth3;\n        ").concat(ne(e),"\n      }\n    ");const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===c&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(i,", ").concat(s,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===r&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3],",\n               ").concat(t[2]*t[3],", ").concat(t[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const g=te(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(i," + depth * ").concat(s," +\n          depth2 * ").concat(r," + depth3 + ").concat(g,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=o.util.squeezeShape(t);if(r.length<t.length){const t=re(e,r),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(X(t),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(se(n,s),");\n      }\n    ")}const i=t[5],c=t[4]*i,l=t[3]*c,u=t[2]*l,d=t[1]*u;if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(d,", ").concat(u,", ").concat(l,", ").concat(c,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(i,", 1)));\n        ").concat(ne(e),"\n      }\n    ");const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],g=p[1];if(g===d&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(u,", ").concat(l,", ").concat(c,", ").concat(i,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(g,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(g===i&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3]*t[4],",\n               ").concat(t[2]*t[3]*t[4],",\n               ").concat(t[3]*t[4],",\n               ").concat(t[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(g,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=te(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(d," + col * ").concat(u," + depth * ").concat(l," +\n          depth2 * ").concat(c," + depth3 * ").concat(i," + depth4 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(f,", ").concat(g,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function Z(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=V();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(t,", halfCR);\n    }\n  ")}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e.shapeInfo.texShape,r=V();if(t)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const s=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(s[0],", ").concat(s[1],", index);\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,i=s[0],c=s[1],l=V();if(null!=s&&o.util.arraysEqual(n,s))return t?"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(l.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(c,".0, ").concat(i,".0);\n\n        return ").concat(l.texture2D,"(").concat(a,", uv);\n      }\n    ");if(t)return"\n    vec4 ".concat(r,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(l.texture2D,"(").concat(a,", uv);\n    }\n  ");const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],d=Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(d,", ").concat(u[0],", ").concat(u[1],", row, col);\n      return ").concat(l.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,o="get"+a.charAt(0).toUpperCase()+a.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===n[0]){const a=[1,2],r=re(e,n.slice(1)),s=["b","row","col"];return"\n        ".concat(Z(r,t),"\n        vec4 ").concat(o,"(int b, int row, int col) {\n          return ").concat(o,"(").concat(se(s,a),");\n        }\n      ")}const i=V();if(t)return"\n    vec4 ".concat(o,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=s[0],l=s[1],u=Math.ceil(n[2]/2),d=u*Math.ceil(n[1]/2);return"\n    vec4 ".concat(o,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(l,", ").concat(d,", ").concat(u,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=V();if(t)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(o.texture2D,"(").concat(n,", uv);\n    }\n  ");const r=e.shapeInfo.logicalShape,s=r.length,i=e.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],d=Math.ceil(r[s-1]/2);let h=d*Math.ceil(r[s-2]/2),p="int b, int row, int col",f="b * ".concat(h," + (row / 2) * ").concat(d," + (col / 2)");for(let g=2;g<s-1;g++)p="int b".concat(g,", ")+p,h*=r[s-g-1],f="b".concat(g," * ").concat(h," + ")+f;return"\n    vec4 ".concat(a,"(").concat(p,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(u,";\n      int texC = index - texR * ").concat(u,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(u,", ").concat(l,");\n      return ").concat(o.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t)}}const Q="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",J="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",$="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ee="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function te(e){return"offset".concat(e)}function ne(e){const t=e.name,n=o.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?"return ".concat(t,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(t,"[i];\n      }\n    }\n  ")}function ae(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function oe(e,t,n){const{newShape:a,keptDims:r}=o.util.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],c=i?t.slice(1):a,l=!e&&s>1&&!o.util.arraysEqual(t,n)&&a.length<s||i;return{useSqueezeShape:l,uniformShape:l?c:t,keptDims:r}}function re(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function se(e,t){return t.map((t=>e[t])).join(", ")}function ie(e,t,n,a){const r=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),s=r.map((e=>e.shapeInfo)),i={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},c=q(r,i,t),l=function(e,t){const n=I(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(g(e,(()=>e.shaderSource(n,t))),g(e,(()=>e.compileShader(n))),(0,o.env)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw b(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,c),u=e.createProgram(l);return(0,o.env)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:c,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:c,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},ce(e,t,u)))}function ce(e,t,n){const a=[],r=[];let s,i,c,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===(0,o.env)().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(const o of t.variableNames){const r={name:o,uniform:e.getUniformLocation(n,o,d),offset:e.getUniformLocation(n,"offset".concat(o),d)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,"".concat(o,"Shape"),d),r.texShape=e.getUniformLocation(n,"".concat(o,"TexShape"),d)),a.push(r)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",d),c=e.getUniformLocation(n,"outShapeStrides",d),i=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms)for(const o of t.customUniforms)r.push(e.getUniformLocation(n,o.name,d));return{variablesLocations:a,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:s,outShapeStridesLocation:c,outTexShapeLocation:i}}function le(e,t){if(e.length!==t.length)throw Error("Binary was compiled with ".concat(e.length," inputs, but ")+"was executed with ".concat(t.length," inputs"));e.forEach(((e,n)=>{const a=e.logicalShape,r=t[n],s=r.shape;if(!o.util.arraysEqual(a,s))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(s," must match"));if(e.isUniform&&r.isUniform)return;const i=e.texShape,c=r.isUniform?null:r.texData.texShape;if(!o.util.arraysEqual(i,c))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(i," and ").concat(c," must match"))}))}function ue(e){return(0,o.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class de{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=c.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=V();this.outputShape=e,this.enableShapeUniforms=ue(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?z(["r","c","d"],e):U(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class he{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=c.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=V();this.outputShape=e,this.enableShapeUniforms=ue(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?z(["r","c","d"],e):U(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class pe{constructor(e){this.variableNames=["A"],this.outTexUsage=l.DOWNLOAD;const t=V();this.outputShape=e,this.userCode="\n      ".concat(K,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}class fe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=l.DOWNLOAD;const t=V();this.outputShape=e,this.userCode="\n      ".concat(K,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}const ge={R:0,G:1,B:2,A:3};class me{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=V();this.outputShape=e,this.enableShapeUniforms=ue(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)");let r="";for(let s=0;s<n.length;s++){const e=n[s];r+="\n          if(offset == ".concat(s,") {\n            result = values[").concat(ge[e],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":H(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(r,"\n        }\n        ").concat(a.output," = vec4(").concat(o,", 0., 0., 0.);\n      }\n    ")}}class xe{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=V();this.outputShape=e,this.enableShapeUniforms=ue(this.outputShape.length);let a="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let r=0;r<=1;r++)for(let t=0;t<=1;t++){const o=2*r+t;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(t," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(e[2]),") {\n          localCoords[2] += ").concat(t,";\n          if (localCoords[1] + ").concat(r," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(e[1]),") {\n            localCoords[1] += ").concat(r,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(o,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(o,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(o,"] = values[2];\n            } else {\n              result[").concat(o,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":H(e),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(o,";\n        }\n    ")}}function ve(e){const t=V();return function(e,t){const n=I(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(g(e,(()=>e.shaderSource(n,t))),g(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,"".concat(t.version,"\n    precision highp float;\n    ").concat(t.attribute," vec3 clipSpacePos;\n    ").concat(t.attribute," vec2 uv;\n    ").concat(t.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function be(e){return function(e,t){const n=I(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return g(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),g(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function ye(e){return function(e,t){const n=I(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return g(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),g(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function we(e,t,n,a,r,s){!function(e,t){const n=(0,o.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n="[".concat(e,"x").concat(t,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const a="[".concat(e,"x").concat(t,"]"),o="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+o+".")}}(t,n);const i=function(e){return I(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),c=e.TEXTURE_2D;return g(e,(()=>e.bindTexture(c,i))),g(e,(()=>e.texParameteri(c,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),g(e,(()=>e.texParameteri(c,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),g(e,(()=>e.texParameteri(c,e.TEXTURE_MIN_FILTER,e.NEAREST))),g(e,(()=>e.texParameteri(c,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,o.env)().getNumber("WEBGL_VERSION")?g(e,(()=>e.texImage2D(c,0,a,t,n,0,r,s,null))):g(e,(()=>e.texStorage2D(c,1,a,t,n))),g(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function ke(e){return e.internalFormatFloat}function Te(e){return e.internalFormatHalfFloat}function Ce(e){return e.downloadTextureFormat}function Se(e){return e.internalFormatPackedFloat}function Ie(e){return e.internalFormatPackedHalfFloat}function Ee(e,t,n,a,o,r,s,i){const c=e,l=new Float32Array(function(e,t){const[n,a]=p(e,t);return n*a*4}(r,s));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}class Ae{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,o.env)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){r[e]=t}(t,e)):this.gl=i(t),e=this.gl,2===(0,o.env)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>g(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>g(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>g(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>g(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>g(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>g(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>g(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>g(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,o.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=x(this.gl,e),P(this.gl,t))this.textureHalfFloatExtension=x(this.gl,t);else if((0,o.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),P(this.gl,a))this.colorBufferHalfFloatExtension=x(this.gl,a);else if((0,o.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",P(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!P(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=be(this.gl),this.indexBuffer=ye(this.gl),this.framebuffer=function(e){return I(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=f(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,o.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;g(e,(()=>e.finish())),g(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),g(e,(()=>e.deleteFramebuffer(this.framebuffer))),g(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),g(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),g(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[o,r]=d(t,n);return we(e,o,r,ke(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[o,r]=d(t,n);return we(e,o,r,Te(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[o,r]=d(t,n);return we(e,o,r,Ce(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){g(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,o.env)().getNumber("WEBGL_VERSION")?g(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):g(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,o.env)().getNumber("WEBGL_VERSION")?g(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):g(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),g(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,r,s){let i,c,l;g(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*a*4),c=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*a*4),c=e.FLOAT,l=s.internalFormatPackedFloat),i.set(r),2===(0,o.env)().getNumber("WEBGL_VERSION")?g(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,c,i))):g(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,a,0,e.RGBA,c,i))),g(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[o,r]=p(t,n);return we(e,o,r,Ie(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[o,r]=p(t,n);return we(e,o,r,Se(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(C(this.gl,this.framebuffer),this.outputTexture=null),g(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[o,r]=d(t,n),s=new Uint8Array(t*n*4);return g(e,(()=>e.readPixels(0,0,o,r,a.downloadTextureFormat,e.UNSIGNED_BYTE,s))),new Float32Array(s.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,o,r){return Ee(this.gl,e,0,0,0,o,r,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,o=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,o),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),o}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n){const a=e.createBuffer();g(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const o=16*t*n;return g(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,o,e.STREAM_READ))),g(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),g(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,o.env)().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,o=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(o,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=o}else(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return g(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=ve(t));const n=function(e){return I(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);g(t,(()=>t.attachShader(n,this.vertexShader))),g(t,(()=>t.attachShader(n,e))),function(e,t){if(g(e,(()=>e.linkProgram(t))),!(0,o.env)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&y(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;g(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){g(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),w(e,t,"clipSpacePos",n,3,20,0)&&w(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(g(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&y(this.gl,this.program),g(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return I(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),g(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),k(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,o]=p(t,n);this.setOutputMatrixTextureDriver(e,a,o)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&y(this.gl,this.program),S(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}g(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),g(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=x(this.gl,2===(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await o.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,o.env)().platform&&(n=(0,o.env)().platform.setTimeoutCustom.bind((0,o.env)().platform)),o.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),T(this.gl,e,this.framebuffer),this.debug&&S(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(T(this.gl,this.outputTexture,this.framebuffer),this.debug&&S(this.gl)):C(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;T(a,e,this.framebuffer),this.debug&&S(a),this.outputTexture=e,g(a,(()=>a.viewport(0,0,t,n))),g(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),g(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}var Re=n(85903),Ne=n(49864),_e=n(92412),Fe=n(89475),De=n(668),Oe=n(74034),Pe=n(9044),Me=n(3439),Le=n(84308),Be=n(17046),We=n(7742),Ge=n(15003),Ve=n(92525),Ue=n(11217),ze=n(98829),Ye=n(47242),He=n(32784),Ke=n(23633),je=n(70477),qe=n(56238),Xe=n(58617),Ze=n(2491),Qe=n(50063),Je=n(20321),$e=n(38440),et=n(51206),tt=n(45335),nt=n(14417),at=n(78545),ot=n(56635),rt=n(3555),st=n(526),it=n(42511),ct=n(34357),lt=n(22785),ut=n(50706),dt=n(53326),ht=n(98041),pt=n(67844),ft=n(3445),gt=n(58793),mt=n(37185),xt=n(82536),vt=n(24413),bt=n(18024),yt=n(78036),wt=n(82137),kt=n(23705);const{mx:Tt,XI:Ct,Nk:St,f6:It,ct:Et,YG:At,hH:Rt,z3:Nt,sG:_t,uM:Ft,vS:Dt,qB:Ot,GG:Pt,rq:Mt,lg:Lt,WR:Bt,cu:Wt,GE:Gt,px:Vt,jC:Ut,He:zt,hE:Yt,BF:Ht,Dk:Kt,cl:jt,_B:qt,ub:Xt,_f:Zt,Ku:Qt,qy:Jt,Zy:$t,bu:en,zv:tn,dH:nn,HS:an,yH:on,l3:rn,z9:sn,x6:cn,_m:ln,eW:un,GK:dn,SP:hn,yr:pn,dl:fn,Dw:gn,xT:mn,_X:xn,wz:vn}=a;function bn(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>"".concat(e,".").concat(t)))}function yn(e,t){return 1===t?[e]:bn(e,t)}class wn{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ue(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=yn("rc",this.rank),t=ae(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),o=this.getOutput(e);this.userCode="\n        void main() {\n          ".concat(t," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(o,"));\n          }\n        }\n      ")}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let o="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let t=2;t<this.rank;t++)o="".concat(e[e.length-1-t],",")+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+="".concat(e[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(t[0],";\n      int c = ").concat(t[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(e," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(t[0],"),\n            cEdge ? 0. : getA(").concat(t[1],"),\n            rEdge ? 0. : getA(").concat(t[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(t[3],")")}}class kn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ue(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+="\n        ".concat(e,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(e,t){const n=t?Y(["r","c","d"],"inputShape"):U(["r","c","d"],e);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":H(e),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":e[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":e[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class Tn{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=Sn(t,n),o=In(e,a,n);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const r=Cn(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=r,this.log();const e=this.freeTextures[o].pop();return this.usedTextures[o].push(e),e}let s;return a===u.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===u.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===u.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===u.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===u.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(s),this.numUsedTextures++,this._numBytesAllocated+=r,this.log(),s}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const r=Sn(n,a),s=In(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);const i=Cn(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),c=(0,o.env)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==c&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[s],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(e,")"));const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*t),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Cn(e,t,n,a,o){const r=function(e,t){switch(e){case u.PACKED_2X2_FLOAT32:return Se(t);case u.PACKED_2X2_FLOAT16:return Ie(t);case u.UNPACKED_FLOAT32:return ke(t);case u.UNPACKED_FLOAT16:return Te(t);case u.PACKED_4X1_UNSIGNED_BYTE:return Ce(t);default:throw new Error("Unknown physical texture type ".concat(e))}}(t,a);let s;if(o){const[t,n]=p(e[0],e[1]);s=t*n}else{const[t,n]=d(e[0],e[1]);s=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(t))}(n,r);return s*i}function Sn(e,t){if(e===l.UPLOAD)return u.PACKED_2X2_FLOAT32;if(e===l.RENDER||null==e)return function(e){return(0,o.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?u.PACKED_2X2_FLOAT32:u.UNPACKED_FLOAT32:e?u.PACKED_2X2_FLOAT16:u.UNPACKED_FLOAT16}(t);if(e===l.DOWNLOAD||e===l.PIXELS)return u.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(e))}function In(e,t,n){return"".concat(e[0],"_").concat(e[1],"_").concat(t,"_").concat(n)}class En{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ue(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const An="if (isnan(x)) return x;",Rn="return abs(x);";const Nn=An+"\n  return (x < 0.0) ? 0.0 : x;\n",_n=An+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Fn="return x;";class Dn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ue(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class On{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ue(this.outputShape.length);const t=e.length,n=yn("rc",t),a=ae(t),o=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),r=n.slice(-2),s=t<=1?"rc":"vec2(".concat(r.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(o,");\n\n        setOutput(getChannel(packedInput, ").concat(s,"));\n      }\n    ")}}const Pn=o.kernel_impls.whereImpl,Mn={};const Ln=(0,o.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Bn extends o.KernelBackend{nextDataId(){return Bn.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,o.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof Ae)t=e;else{const n=i((0,o.env)().getNumber("WEBGL_VERSION"),e);t=new Ae(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=i((0,o.env)().getNumber("WEBGL_VERSION"));t=new Ae(e),this.binaryCache=((n=(0,o.env)().getNumber("WEBGL_VERSION"))in Mn||(Mn[n]={}),Mn[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Tn(this.gpgpu),this.numMBBeforeWarning=null==(0,o.env)().global.screen?1024:(0,o.env)().global.screen.height*(0,o.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new o.DataStorage(this,(0,o.engine)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,o,r){const s=this.makeTensorInfo(t,n),i=this.texData.get(s.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[a,o]},i.texShape=[a,o];const c=N(t),l=new me(c,!1,r),u=this.runWebGLProgram(l,[s],n,[[a,o]]);return u.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(s),u.dataId}write(e,t,n){if(((0,o.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,o.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:l.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,r){if((0,o.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:l.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:i,isPacked:c}=t;if(null!=s){let t;t=c?new Dn(i,Fn):new En(i,Fn);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:a}],a),o=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),o}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const l=null!=this.activeTimers;let u,d;if(l&&(u=o.util.now()),"complex64"===a){const e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);d=o.backend_util.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=o.util.now()-u),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:i,isPacked:c}=t;if(null!=r){let t;t=c?new Dn(a,Fn):new En(a,Fn);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),o=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),o}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,o.env)().getBool("DEBUG")&&!(0,o.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,o.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,d=null;if("complex64"!==s&&(0,o.env)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...h(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=o.backend_util.mergeRealAndImagArrays(t,n)}else if(null==d)u=this.getValuesFromTexture(e);else{const e=o.util.sizeFromShape(a);u=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=d){const e=this.gpgpu.gl;g(e,(()=>e.deleteBuffer(d)))}const p=this.convertAndCacheOnCPU(e,u),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,o.engine)().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:a,shape:r,slice:s,dtype:i,isPacked:c,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=c?new Dn(r,Fn):new En(r,Fn);const a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:i}],i),o=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),o}if(null==l)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),d=(0,o.engine)().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>o.util.decodeString(e)));return(0,o.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,o.buffer)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!m(n)){if((0,o.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=o.util.sizeFromShape(t);if((0,o.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),o=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...h(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),o}const s=(0,o.env)().getBool("WEBGL_PACK")&&!0===a,i=s?N(t):t,c=s?new fe(i):new pe(i),l=this.runWebGLProgram(c,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=o.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=o.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=o.util.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>"".concat(e.name,": ").concat(e.ms))).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:o.util.now(),endMs:null}}endTimer(e){return(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=o.util.now(),e)}async getQueryTime(e){if((0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:o,isPacked:r,slice:s}=this.texData.get(e),i=s&&s.origDataId||e,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,o,r)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Ln;return(0,o.env)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&o.util.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){o.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Pn(e.shape,t)}packedUnaryOp(e,t,n){const a=new Dn(e.shape,t),r=this.compileAndRun(a,[e],n);return(0,o.engine)().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=nn(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,o.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Rn,e.dtype);const t=new En(e.shape,Rn),n=this.compileAndRun(t,[e]);return(0,o.engine)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&o.util.isString(n[0])){const r=n.map((e=>o.util.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return(0,o.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new On(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new wn(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[A(e.shape),...R(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},o=[A(t),...R(t)],r=new kn(o,n),s=[n],i=this.runWebGLProgram(r,[a],e.dtype,s,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:r,dtype:s}=n;if(null!=t){const e=o.util.sizeFromShape(r),n=t[0]*t[1]*4;o.util.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=N(r);let c;c=a?new he(i):new de(i);const l=[null!=t?t:h(i)];return{dtype:s,shape:r,dataId:this.runWebGLProgram(c,[{shape:i,dtype:s,dataId:e}],s,l,!0,t).dataId}}runWebGLProgram(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0;const i=this.makeTensorInfo(e.outputShape,n),l=this.texData.get(i.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===c.DENSE){const t=null!=s?s:h(e.outputShape);l.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(l.usage=e.outTexUsage),0===o.util.sizeFromShape(i.shape))return l.values=o.util.getTypedArrayFromDType(i.dtype,0),i;const u=[],d=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&o.util.sizeFromShape(t.shape)<=(0,o.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!F(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),u.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const p={shape:i.shape,texData:l,isUniform:!1},f=function(e,t,n){let a="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:i,uniformShape:c,keptDims:l}=oe(e.packedInputs,t.shape,s);let u="",d="",h="";if(1===c.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u="".concat(e[0]>1,"_").concat(e[1]>1)}else if(2!==c.length||e.packedInputs){if(c.length>2&&!e.packedInputs){const e=o.util.computeStrides(c);h="".concat(e[0]===s[1],"_").concat(e[e.length-1]===s[1])}}else d="".concat(c[0]>1,"_").concat(c[1]>1);const p=t.shape.length,f=2===c.length&&o.util.arraysEqual(t.shape,s),g=1===o.util.sizeFromShape(t.shape),m=o.backend_util.getBroadcastDims(t.shape,n.shape),x=!e.packedInputs&&p===n.shape.length&&o.util.arraysEqual(s,n.texData.texShape),v=e.packedInputs||c.length>2?"":"".concat(s[0]>1,"_").concat(s[1]>1);a+="".concat(p,"_").concat(x,"_").concat(i?l:"","_").concat(c.length,"_").concat(g,"_").concat(m,"_").concat(f,"_").concat(u,"_").concat(d,"_").concat(h,"_").concat(v,"_").concat(r)}else{const e=t.isUniform?"uniform":t.texData.texShape;a+="".concat(t.shape,"_").concat(e,"_").concat(r)}}));const r=e.userCode;let s=e.constructor.name;return s+="_"+a+"_"+r+"".concat((0,o.env)().getNumber("WEBGL_VERSION")),s}(e,d,p),g=this.getAndSaveBinary(f,(()=>ie(this.gpgpu,e,d,p))),m=null!=this.activeTimers;let x;m&&(x=this.startTimer()),(0,o.env)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(le(t.inShapeInfos,n),le([t.outShapeInfo],[a]));const s=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,o.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){const a=n[l],{uniform:r,offset:s,shape:i,texShape:c}=t.variablesLocations[l];if(i){const{uniformShape:n}=oe(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(i,new Int32Array(n));break;case 2:e.gl.uniform2iv(i,new Int32Array(n));break;case 3:e.gl.uniform3iv(i,new Int32Array(n));break;case 4:e.gl.uniform4iv(i,new Int32Array(n))}}if(c&&e.gl.uniform2i(c,a.texData.texShape[0],a.texData.texShape[1]),null!=r)if(a.isUniform)if(o.util.sizeFromShape(a.shape)<2)e.gl.uniform1f(r,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=a.texData.slice&&null!=s&&e.gl.uniform1i(s,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,r,l)}const c=t.outShapeLocation;if(c)switch(a.shape.length){case 1:e.gl.uniform1iv(c,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(c,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(c,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(c,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=o.util.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let o=0;o<t.program.customUniforms.length;++o){const n=t.program.customUniforms[o],a=t.customUniformLocations[o],s=r[o];if("float"===n.type)e.gl.uniform1fv(a,s);else if("vec2"===n.type)e.gl.uniform2fv(a,s);else if("vec3"===n.type)e.gl.uniform3fv(a,s);else if("vec4"===n.type)e.gl.uniform4fv(a,s);else if("int"===n.type)e.gl.uniform1iv(a,s);else if("ivec2"===n.type)e.gl.uniform2iv(a,s);else if("ivec3"===n.type)e.gl.uniform3iv(a,s);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));e.gl.uniform4iv(a,s)}}e.executeProgram()}(this.gpgpu,g,d,p,a),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),m&&(x=this.endTimer(x),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(x)}));const v=(0,o.env)().getNumber("WEBGL_FLUSH_THRESHOLD");if(v>0){const e=o.util.now();e-this.lastGlFlushTime>v&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,o.env)().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&!1===r){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,a){let o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,a,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,o.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,o.tidy)((()=>{if(!(0,o.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,o.env)().getBool("DEBUG");(0,o.env)().set("DEBUG",!1);const t=this.abs((0,o.scalar)(1e-8)).dataSync()[0];if((0,o.env)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:i,isPacked:c}=t;if(null!=s)return;const u=null!=this.activeTimers;let d;u&&(d=o.util.now());let h=t.texShape;if(null==h&&(h=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=(0,o.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=(0,o.env)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&(0,o.env)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?o.util.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=o.util.squeezeShape(e);e=t.newShape}let r=o.util.sizeFromShape(e),s=null;e.length<=1&&r<=n?s=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);const i=null!=s&&Math.max(...s)>a&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||i)if(t){const t=A(e);let n=2,a=2;e.length&&([n,a]=R(e)),r=t*(n/2)*(a/2),s=o.util.sizeToSquarishShape(r).map((e=>2*e))}else s=o.util.sizeToSquarishShape(r);return s}(n,c),t.texShape=h),null!=r){const e=N(n);let s,i=h[1],f=h[0];const g=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!c&&g||([i,f]=p(h[0],h[1])),s=c?new xe(e,g):new me(e,g);const m=g?[f,i]:h,x=this.makeTensorInfo(m,a),v=this.texData.get(x.dataId);v.usage=g?l.PIXELS:l.UPLOAD,v.texShape=m,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),i,f,r);const b=[[f,i]],y=!0,w=this.runWebGLProgram(s,[x],a,b,y),k=this.texData.get(w.dataId);t.texShape=k.texShape,t.isPacked=k.isPacked,t.usage=k.usage,(0,o.env)().get("ENGINE_COMPILE_ONLY")?this.disposeData(w.dataId):(t.texture=k.texture,t.values=null,this.texData.delete(w.dataId)),this.disposeIntermediateTensorInfo(x),u&&(this.uploadWaitMs+=o.util.now()-d)}else{const e=this.acquireTexture(h,i,a,c);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype ".concat(t))}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(e," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*o.util.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,o.nextFrame)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw b(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:o,outShapeLocation:r,outShapeStridesLocation:s,outTexShapeLocation:i}=ce(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=o,e.outShapeLocation=r,e.outShapeStridesLocation=s,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:s,channels:i}=e,c=(0,o.engine)().backend;if(!c.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=c.writeTexture(a,t,n,r,s,i);return(0,o.engine)().makeTensorFromDataId(l,t,n,c)}}Bn.nextDataId=0;const Wn="4.22.0";o.device_util.isBrowser()&&(0,o.registerBackend)("webgl",(()=>new Bn),2);const Gn="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Vn{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=o.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=ue(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const Un="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class zn{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o.backend_util.assertAndGetBroadcastShape(t,n);const r=this.outputShape.length;this.enableShapeUniforms=ue(r);let s="";if(a)if(0===r||1===o.util.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=ae(r);if(s="\n          ".concat(e," coords = getOutputCoords();\n        "),1===r)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const e=yn("coords",r);this.enableShapeUniforms?s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= outShape[").concat(r," - 2];\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= outShape[").concat(r," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= ").concat(this.outputShape[r-2],";\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= ").concat(this.outputShape[r-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(s,"\n\n        setOutput(result);\n      }\n    ")}}function Yn(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const Hn={kernelName:o.Identity,backendName:"webgl",kernelFunc:Yn};function Kn(e){const{inputs:t,backend:n}=e,{real:a,imag:o}=t,r=n.makeTensorInfo(a.shape,"complex64"),s=n.texData.get(r.dataId),i=Yn({inputs:{x:a},backend:n}),c=Yn({inputs:{x:o},backend:n});return s.complexTensorInfos={real:i,imag:c},r}const jn={kernelName:o.Complex,backendName:"webgl",kernelFunc:Kn},qn="return (a < 0.) ? b * a : a;",Xn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Zn={kernelName:o.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,i=n.makeTensorInfo([],"float32",o.util.createScalarValue(s,"float32")),c=(0,o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zn(Xn,r.shape,i.shape):new Vn(qn,r.shape,i.shape),l=n.runWebGLProgram(c,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},Qn="return (a < 0.) ? b * a : a;",Jn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const $n={kernelName:o.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=(0,o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zn(Jn,a.shape,r.shape):new Vn(Qn,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],"float32")}},ea="if (isnan(x)) return x;";function ta(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=e;return e=>{let{inputs:s,backend:i}=e;const{x:c}=s,l=i,u=r||c.dtype;if(l.shouldExecuteOnCPU([c])&&null!=a){const e=l.texData.get(c.dataId),t=a(e.values,u);return l.makeTensorInfo(c.shape,u,t)}let d;return d=(0,o.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new Dn(c.shape,n):new En(c.shape,t),l.runWebGLProgram(d,[c],u)}}function na(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}=e;return e=>{let{inputs:c,backend:l}=e;const{a:u,b:d}=c,h=l;if(r&&"complex64"===u.dtype){const e=h.texData.get(u.dataId),n=h.texData.get(d.dataId),[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:a.dataId,dtype:a.dtype,shape:d.shape},i=new Vn(t,u.shape,d.shape);return h.runWebGLProgram(i,[r,s],(0,o.upcastType)(n.dtype,a.dtype))})),s=Kn({inputs:{real:a,imag:r},backend:h});return h.disposeIntermediateTensorInfo(a),h.disposeIntermediateTensorInfo(r),s}const p=i||(0,o.upcastType)(u.dtype,d.dtype);if(("string"===u.dtype||"string"===d.dtype||h.shouldExecuteOnCPU([u,d]))&&null!=s){const e=h.texData.get(u.dataId).values,t=h.texData.get(d.dataId).values,n="string"===u.dtype?o.backend_util.fromUint8ToStringArray(e):e,a="string"===u.dtype?o.backend_util.fromUint8ToStringArray(t):t,[r,i]=s(u.shape,d.shape,n,a,p),c=h.makeTensorInfo(i,p);return h.texData.get(c.dataId).values=r,c}let f;return f=(0,o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new zn(n,u.shape,d.shape,a):new Vn(t,u.shape,d.shape),h.runWebGLProgram(f,[u,d],p)}}function aa(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":Nn;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":_n;if("prelu"===e)return t?Jn:Qn;if("leakyrelu"===e)return t?Xn:qn;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error("Activation ".concat(e," has not been implemented for the WebGL backend."))}class oa{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]&&arguments[4],r=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ue(this.outputShape.length);const l=a?e[1]:e[2],u=Math.ceil(l/2),d=a?"i * 2, rc.y":"rc.y, i * 2",h=o?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";s&&(g=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(s,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(s,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(s,"\n        }"),m="result = activation(result);");const x=r?"result += getBiasAtOutCoords();":"";r&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let v="rc.x",b="rc.x";e[0]<t[0]?v="imod(rc.x, ".concat(e[0],")"):t[0]<e[0]&&(b="imod(rc.x, ".concat(t[0],")")),this.userCode="\n      ".concat(g,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(u,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(v,";\n        int batchB = ").concat(b,";\n        for (int i = 0; i < ").concat(u,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(d,");\n          vec4 b = getMatrixB(batchB, ").concat(h,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(x,"\n\n        ").concat(m,"\n\n        setOutput(result);\n      }\n    ")}}const ra="return areal * breal - aimag * bimag;",sa="return areal * bimag + aimag * breal;";class ia{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=o.backend_util.assertAndGetBroadcastShape(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const ca="return a * b;";function la(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=o.backend_util.upcastType(a.dtype,r.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),o=new ia(ra,a.shape,r.shape),s=new ia(sa,a.shape,r.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],c=n.runWebGLProgram(o,i,"float32"),l=n.runWebGLProgram(s,i,"float32"),u=Kn({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([a,r])){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),[o,i]=Ht(a.shape,r.shape,e.values,t.values,s),c=n.makeTensorInfo(i,s);return n.texData.get(c.dataId).values=o,c}let i;return i=(0,o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zn(ca,a.shape,r.shape):new Vn(ca,a.shape,r.shape),n.runWebGLProgram(i,[a,r],s)}const ua={kernelName:o.Multiply,backendName:"webgl",kernelFunc:la};function da(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=n,c=o.util.sizeFromShape(r.shape),l=o.util.inferFromImplicitShape(s,c),u=o.util.sizeFromShape(l);o.util.assert(c===u,(()=>"The new shape (".concat(l,") has ").concat(u," elements and the old ")+"shape (".concat(r.shape,") has ").concat(c," elements. The new shape and old ")+"shape must have the same number of elements."));const d=i.texData.get(r.dataId);return!d.isPacked||F(r.shape,l)||null!==d.texture&&F(d.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){const a=[A(e.shape),...R(e.shape)],o={dtype:e.dtype,shape:a,dataId:e.dataId},r=[A(t),...R(t)],s=new kn(r,a),i=[a],c=n.runWebGLProgram(s,[o],e.dtype,i,!0);return{dataId:c.dataId,shape:t,dtype:c.dtype}}(r,l,i)}const ha={kernelName:o.Reshape,backendName:"webgl",kernelFunc:da};class pa{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];const i=4*Math.floor(n/4),c=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l="sumValue += dot(values * ".concat(o.util.isInt(e)?e.toPrecision(2):e,", ones);")}let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(l,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class fa{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:o,outSize:r}=e;this.outputShape=[a,r];let s="0.0",i="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",i="min"):"max"===t&&(s="-1.0 / 1e-20",i="max");let c="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?c="sumValue":"prod"===t?c="prodValue":"all"===t?c="allValue":"any"===t&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let d="\n      if (".concat("sum"===t,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===t,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===t," || ").concat("max"===t,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),h="vec4";"all"===t?(s="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(s="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";o%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(o,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(s,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(s,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(d,"\n        }\n\n        int inIdx = inOffset + ").concat(l,";\n        if (").concat(1===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(2===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(3===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(d,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function ga(e,t,n,a){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=o.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let s=e;for(let o=0;o<r.length;o++){const{inSize:i,windowSize:c,outSize:l}=r[o];let u,d;u="mean"===n?0===o?new pa({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},i):new pa({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l}):new fa({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},n),d=s,s=a.runWebGLProgram(u,[s],t),d.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(d)}return s}class ma{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const a=ae(this.rank),o=function(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let o=0;o<e.length;o++)a[e[o]]=n[o];return a.join()}(t);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(o,"));\n    }\n    ")}}class xa{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=ae(this.rank),o=bn("rc",this.rank),r=new Array(this.rank);for(let l=0;l<t.length;l++)r[t[l]]=o[l];const s="vec2(".concat(r.slice(-2).join(),")"),i="++".concat(o[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(r.join(),"), ").concat(s,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(o[this.rank-1],";\n      if(++").concat(o[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function va(e,t,n){const a=(0,o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xa(e.shape,t):new ma(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function ba(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;return function(e,t,n,a){const r=t,s=e.shape.length,i=o.util.parseAxisParam(r,e.shape);let c=i;const l=o.backend_util.getAxesPermutation(c,s),u=null!=l;let d=e;u&&(d=va(e,l,a),c=o.backend_util.getInnerMostAxes(c.length,s)),o.backend_util.assertAxesAreInnerMostDims("sum",c,s);const[h,p]=o.backend_util.computeOutAndReduceShapes(d.shape,c);let f=h;n&&(f=o.backend_util.expandShapeToKeepDim(h,i));const g=o.util.sizeFromShape(p),m=da({inputs:{x:d},attrs:{shape:[o.util.sizeFromShape(e.shape)/g,g]},backend:a}),x=ga(m,(0,o.sumOutType)(e.dtype),"sum",a),v=da({inputs:{x:x},attrs:{shape:f},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(x),u&&a.disposeIntermediateTensorInfo(d),v}(r,s,i,n)}const ya={kernelName:o.Sum,backendName:"webgl",kernelFunc:ba};function wa(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{perm:r}=a,s=n,i=o.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=o.shape[r[u]];let l;if(s.shouldExecuteOnCPU([o])){const e=s.texData.get(o.dataId).values,t=xn(e,o.shape,o.dtype,r,c);l=s.makeTensorInfo(c,o.dtype);s.texData.get(l.dataId).values=t}else l=va(o,r,s);return l}const ka={kernelName:o.Transpose,backendName:"webgl",kernelFunc:wa};function Ta(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:s,bias:i=null,preluActivationWeights:c=null,leakyreluAlpha:l=0,activation:u=null}=e;const d=t.shape.length,h=n.shape.length,p=a?t.shape[d-2]:t.shape[d-1],f=r?n.shape[h-1]:n.shape[h-2],g=a?t.shape[d-1]:t.shape[d-2],m=r?n.shape[h-2]:n.shape[h-1],x=t.shape.slice(0,-2),v=n.shape.slice(0,-2),b=o.util.sizeFromShape(x),y=o.util.sizeFromShape(v),w=o.broadcast_util.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([g,m]);o.util.assert(p===f,(()=>"Error in matMul: inner shapes (".concat(p,") and (")+"".concat(f,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const k=a?[b,p,g]:[b,g,p],T=r?[y,m,f]:[y,f,m],C=da({inputs:{x:t},backend:s,attrs:{shape:k}}),S=da({inputs:{x:n},backend:s,attrs:{shape:T}}),I=[C,S],E=Math.max(b,y),A=a?C.shape[1]:C.shape[2],R=null!=i,N=null!=c,_="leakyrelu"===u,F=null!=u?aa(u,!0):null;let D;if((1===g||1===m)&&A>1e3&&!1===(R||N||_||null!=F)){let e=C,t=S;a&&(e=wa({inputs:{x:C},backend:s,attrs:{perm:[0,2,1]}}),I.push(e)),r&&(t=wa({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),I.push(t));const n=1===m;let o=e;1!==m&&(o=da({inputs:{x:e},backend:s,attrs:{shape:[E,A,1]}}),I.push(o));const i=1===m?2:1;let c=t;n&&(c=da({inputs:{x:t},backend:s,attrs:{shape:[E,1,A]}}),I.push(c));const l=la({inputs:{a:o,b:c},backend:s});D=ba({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),I.push(l)}else{const e=(0,o.upcastType)(t.dtype,n.dtype),u=new oa(k,T,[E,g,m],a,r,R,F,N,_),d=[C,S];if(null!=i&&d.push(i),N&&d.push(c),_){const e=s.makeTensorInfo([],"float32",o.util.createScalarValue(l,"float32"));d.push(e),I.push(e)}D=s.runWebGLProgram(u,d,e)}const O=da({inputs:{x:D},backend:s,attrs:{shape:w}});I.push(D);for(const o of I)s.disposeIntermediateTensorInfo(o);return O}const Ca={kernelName:o._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:o,b:r,bias:s,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=a;return Ta({a:o,b:r,transposeA:c,transposeB:l,backend:n,bias:s,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}},Sa="return abs(x);";const Ia={kernelName:o.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=nn(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let r;return r=(0,o.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Dn(a.shape,Sa):new En(a.shape,Sa),n.runWebGLProgram(r,[a],a.dtype)}},Ea=ta({opSnippet:An+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Aa={kernelName:o.Acos,backendName:"webgl",kernelFunc:Ea},Ra=ta({opSnippet:An+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Na={kernelName:o.Acosh,backendName:"webgl",kernelFunc:Ra},_a="return a + b;",Fa=na({opSnippet:_a,packedOpSnippet:_a,supportsComplex:!0,cpuKernelImpl:Tt}),Da={kernelName:o.Add,backendName:"webgl",kernelFunc:Fa};class Oa{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("float v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class Pa{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("vec4 v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const Ma={kernelName:o.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,r=n;if(1===r.length)return Yn({inputs:{x:r[0]},backend:a});if(r.length>(0,o.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),o=e({inputs:r.slice(t),backend:a});return e({inputs:[n,o],backend:a})}const s=r.map((e=>e.dtype)).reduce(((e,t)=>(0,o.upcastType)(e,t))),i=r.map((e=>e.shape)),c=(0,o.env)().getBool("WEBGL_PACK")?new Pa(r[0].shape,i):new Oa(r[0].shape,i);return a.runWebGLProgram(c,r,s)}};const La={kernelName:o.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,c=r.shape.length,l=o.util.parseAxisParam(s,r.shape);let u=l;const d=o.backend_util.getAxesPermutation(u,c);let h=r;null!=d&&(h=wa({inputs:{x:r},backend:n,attrs:{perm:d}}),u=o.backend_util.getInnerMostAxes(u.length,c)),o.backend_util.assertAxesAreInnerMostDims("all",u,c);const[p,f]=o.backend_util.computeOutAndReduceShapes(h.shape,u),g=da({inputs:{x:h},backend:n,attrs:{shape:[-1,o.util.sizeFromShape(f)]}}),m=ga(g,g.dtype,"all",n);let x;if(i){x=da({inputs:{x:m},backend:n,attrs:{shape:o.backend_util.expandShapeToKeepDim(p,l)}})}else x=da({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=d&&n.disposeIntermediateTensorInfo(h),x}};const Ba={kernelName:o.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,c=r.shape.length,l=o.util.parseAxisParam(s,r.shape);let u=l;const d=o.backend_util.getAxesPermutation(u,c);let h=r;null!=d&&(h=wa({inputs:{x:r},backend:n,attrs:{perm:d}}),u=o.backend_util.getInnerMostAxes(u.length,c)),o.backend_util.assertAxesAreInnerMostDims("any",u,c);const[p,f]=o.backend_util.computeOutAndReduceShapes(h.shape,u),g=da({inputs:{x:h},backend:n,attrs:{shape:[-1,o.util.sizeFromShape(f)]}}),m=ga(g,g.dtype,"any",n);let x;if(i){x=da({inputs:{x:m},backend:n,attrs:{shape:o.backend_util.expandShapeToKeepDim(p,l)}})}else x=da({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=d&&n.disposeIntermediateTensorInfo(h),x}};class Wa{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:o,outSize:r}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[o,r];const s="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(s," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class Ga{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,o.util.assert(e.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const i=this.outputShape,c=i.length,l=ae(c),u=yn("coords",c);let d,h;if(1===s){h=c+1;const e=ae(h);d="\n        ".concat(e," sourceLocR = ").concat(e,"(").concat(u.join(),", 0);\n        ++").concat(u[c-1],";\n        ").concat(e," sourceLocG = ").concat(e,"(").concat(u.join(),", 0);\n        ++").concat(u[c-2],";\n        ").concat(e," sourceLocA = ").concat(e,"(").concat(u.join(),", 0);\n        --").concat(u[c-1],";\n        ").concat(e," sourceLocB = ").concat(e,"(").concat(u.join(),", 0);\n        --").concat(u[c-2],";")}else h=c,d="\n        ".concat(l," sourceLocR = coords;\n        ++").concat(u[c-1],";\n        ").concat(l," sourceLocG = coords;\n        ++").concat(u[c-2],";\n        ").concat(l," sourceLocA = coords;\n        --").concat(u[c-1],";\n        ").concat(l," sourceLocB = coords;\n        --").concat(u[c-2],";");const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],g=p.map((e=>"int "+e)),m=yn("sourceLocR",h-1).concat("inIdx.r"),x=yn("sourceLocG",h-1).concat("inIdx.g"),v=yn("sourceLocB",h-1).concat("inIdx.b"),b=yn("sourceLocA",h-1).concat("inIdx.a"),y="max"===n?"greaterThan":"lessThan",w=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(m.join(),"),\n                             getBestIndicesAChannel(").concat(x.join(),"),\n                             getBestIndicesAChannel(").concat(v.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),")));"),k="vec4(\n            getAChannel(".concat(m.join(),"),\n            hasNextCol ? getAChannel(").concat(x.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(v.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(b.join(),") : 0.)"),T=a?"":"\n      float getBestIndicesAChannel(".concat(g.join(),") {\n        return getChannel(getBestIndicesA(").concat(p.join(),"),\n                                          vec2(").concat(p.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(g.join(),") {\n        return getChannel(getA(").concat(p.join(),"),\n                               vec2(").concat(p.slice(-2).join(),"));\n      }\n      ").concat(T,"\n      void main() {\n        ").concat(l," coords = getOutputCoords();\n        bool hasNextCol = ").concat(u[c-1]," < ").concat(i[c-1]-1,";\n        bool hasNextRow = ").concat(u[c-2]," < ").concat(i[c-2]-1,";\n        ").concat(d,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(f,", sourceLocG").concat(f,",\n          sourceLocB").concat(f,", sourceLocA").concat(f,") * ").concat(t,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(k,";\n\n        for (int i = 0; i < ").concat(t,"; i++) {\n          inIdx = srcIdx;\n          ").concat(w,"\n          vec4 candidate = ").concat(k,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(y,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function Va(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=t.shape[0],s=t.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);const i=o.backend_util.computeOptimalWindowSize(s),c={windowSize:i,inSize:s,batchSize:r,outSize:Math.ceil(s/i)},l=new Wa(c,n,null==a),u=[t];null!=a&&u.push(a);const d=e.runWebGLProgram(l,u,"int32");if(1===d.shape[1])return d;const h=Va(e,t,n,d);return e.disposeIntermediateTensorInfo(d),h}function Ua(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:t.shape,s=r[r.length-1],i=o.backend_util.computeOptimalWindowSize(s),c=new Ga(r,i,n,null==a),l=null==a?[t]:[t,a],u=e.runWebGLProgram(c,l,"int32");if(u.shape.length===t.shape.length){const a=Ua(e,t,n,u);return e.disposeIntermediateTensorInfo(u),a}return u}function za(e,t,n,a){const r=[n];if(o.backend_util.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!(0,o.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));const[c,l]=o.backend_util.computeOutAndReduceShapes(i.shape,r),u=o.util.sizeFromShape(l),d=da({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(d);const h=Va(e,d,a);n.push(h);const p=da({inputs:{x:h},backend:e,attrs:{shape:c}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return Ua(e,t,a)}const Ya={kernelName:o.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let i=o.util.parseAxisParam(s,r.shape);const c=o.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=wa({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=o.backend_util.getInnerMostAxes(i.length,l.shape.length)),o.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);const d=za(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const Ha={kernelName:o.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let i=o.util.parseAxisParam(s,r.shape);const c=o.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=wa({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=o.backend_util.getInnerMostAxes(i.length,l.shape.length)),o.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);const d=za(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Ka=ta({opSnippet:An+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),ja={kernelName:o.Asin,backendName:"webgl",kernelFunc:Ka},qa=ta({opSnippet:An+"return log(x + sqrt(x * x + 1.0));"}),Xa={kernelName:o.Asinh,backendName:"webgl",kernelFunc:qa},Za=ta({opSnippet:An+"\n  return atan(x);\n"}),Qa={kernelName:o.Atan,backendName:"webgl",kernelFunc:Za},Ja=na({opSnippet:Gn+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Un+"\n  return result;\n"}),$a={kernelName:o.Atan2,backendName:"webgl",kernelFunc:Ja},eo=ta({opSnippet:An+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),to={kernelName:o.Atanh,backendName:"webgl",kernelFunc:eo};class no{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const r=e.filterWidth,s=e.strideHeight,i=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,g="((batch  * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),m="(xR * ".concat(e.inWidth," + xC) * ").concat(e.inChannels," + d");let x="0.0";if(f||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(s,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(h,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(l,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(t," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?o?g:m:"wR * ".concat(d," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let v="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(v="avgValue / max(count, 1.0)");const b=4*Math.floor(r/4),y=r%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(s,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(h,", ").concat(p,");\n      const float initializationValue = ").concat(x,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(x,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(u,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(b,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              getValue(batch, xR, xC + 3 * ").concat(l,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(b,";\n          if (").concat(1===y,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===y,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===y,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(v,");\n      }\n    ")}}class ao{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const r=e.filterWidth,s=e.strideDepth,i=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const v="avg"===t;let b="0.0";if(v||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(s,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(g,", ").concat(m,", ").concat(x,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(h,";\n              wD += ").concat(l,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(u,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(d,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(t," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?o?"(((batch * ".concat(e.inDepth," + xD) * ").concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"((xD * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let y="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(y="avgValue / max(count, 1.0)");const w=4*Math.floor(r/4),k=r%4,T="\n      if (".concat(v,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(s,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(g,", ").concat(m,", ").concat(x,");\n      const float initializationValue = ").concat(b,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(b,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(h,";\n            wD += ").concat(l,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(d,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(d,", ch)\n              );\n\n              ").concat(T,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(T,"\n            } else if (").concat(2===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(T,"\n            } else if (").concat(3===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                initializationValue\n              );\n\n              ").concat(T,"\n            }\n          }\n        }\n        setOutput(").concat(y,");\n      }\n    ")}}const oo={kernelName:o.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;W(r,"avgPool");const{filterSize:s,strides:i,pad:c,dimRoundingMode:l}=a;o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'")));const u=o.backend_util.computePool2DInfo(r.shape,s,i,1,c,l);if(1===u.filterWidth&&1===u.filterHeight&&o.util.arraysEqual(u.inShape,u.outShape))return Yn({inputs:{x:r},backend:n});const d=new no(u,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}};const ro={kernelName:o.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:c,dimRoundingMode:l,dataFormat:u}=a,d=o.backend_util.computePool3DInfo(r.shape,s,i,[1,1,1],c,l,u),h=new ao(d,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class so{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,o=e.strideWidth,r=e.dilationHeight,s=e.dilationWidth,i=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.top,u=c-1-e.padInfo.left,d=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(l,", ").concat(u,");\n      const float avgMultiplier = float(").concat(d,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(r,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(s,") {\n            float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class io{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,o=e.strideDepth,r=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=u-1-e.padInfo.front,f=d-1-e.padInfo.top,g=h-1-e.padInfo.left,m=1/(t*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(g,");\n      const float avgMultiplier = float(").concat(m,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(o,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(d,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(l,") {\n              float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const co={kernelName:o.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=a,h=o.backend_util.computePool3DInfo(i.shape,c,l,[1,1,1],u,d),p=new io(h);return n.runWebGLProgram(p,[r],i.dtype)}};const lo={kernelName:o.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;W([r,s],"avgPoolGrad");const{filterSize:c,strides:l,pad:u}=a,d=o.backend_util.computePool2DInfo(i.shape,c,l,1,u),h=new so(d);return n.runWebGLProgram(h,[r],i.dtype)}};const uo={kernelName:o.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:o,b:r}=t,{transposeA:s,transposeB:i}=a;return Ta({a:o,b:r,transposeA:s,transposeB:i,backend:n})}};class ho{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],o.backend_util.assertAndGetBroadcastShape(e,t),o.backend_util.assertAndGetBroadcastShape(e,n);let i="0.0";null!=a&&(o.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="1.0";null!=r&&(o.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(i,";\n        float scale = ").concat(c,";\n        float inv = scale * inversesqrt(variance + float(").concat(s,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class po{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],o.backend_util.assertAndGetBroadcastShape(e,t),o.backend_util.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=a&&(o.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="vec4(1.0)";null!=r&&(o.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = ".concat(i,";\n        vec4 scale = ").concat(c,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(s,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const fo={kernelName:o.FusedBatchNorm,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,mean:s,variance:i,offset:c,scale:l}=t;o.util.assert(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.util.assert(null==c||s.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.util.assert(null==l||s.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=a;null==u&&(u=.001);const d=[r,s,i];let h=null;null!=c&&(h=c.shape,d.push(c));let p=null;null!=l&&(p=l.shape,d.push(l));const f=(0,o.env)().getBool("WEBGL_PACK_NORMALIZATION")?new po(r.shape,s.shape,i.shape,h,p,u):new ho(r.shape,s.shape,i.shape,h,p,u);return n.runWebGLProgram(f,d,d[0].dtype)}};class go{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=ae(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return mo.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let a;const o=e.map(((e,t)=>"sourceLoc.".concat(mo[t]," = start[").concat(t,"] + coords.").concat(mo[t],";")));a="\n        ".concat(t," sourceLoc;\n        ").concat(t," coords = getOutputCoords();\n        ").concat(o.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const mo=["x","y","z","w","u","v"];class xo{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=ae(this.rank),n=yn("coords",this.rank),a=yn("sourceLoc",this.rank),o=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),r="getChannel(getSource(".concat(a.join(),"), ").concat(o,")"),s="\n      result.x = ".concat(r,";\n      if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(r,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(e[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(r,";\n        if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(r,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(t,"(").concat(e.map(((e,t)=>"start[".concat(t,"]"))).join(),");"):e.map(((e,t)=>"".concat(a[t]," = ").concat(n[t]," + start[").concat(t,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(t," coords = getOutputCoords();\n        ").concat(t," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(s,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function vo(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a,[c,l]=o.slice_util.parseSliceParams(r,s,i);if(o.slice_util.assertParamsValid(r,c,l),0===o.util.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=an(e.values,c,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),d=o.slice_util.isSliceContinous(r.shape,c,l);if(u||!d){const e=(0,o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xo(l):new go(l),t=[c];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){const r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),i=a.texData.get(s.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let c=o.slice_util.computeFlatOffset(t,o.util.computeStrides(e.shape));r.slice&&(c+=r.slice.flatOffset),i.slice={flatOffset:c,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,l+1),s}(r,c,l,n)}const bo={kernelName:o.Slice,backendName:"webgl",kernelFunc:vo},yo={kernelName:o.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;o.util.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const c=s.reduce(((e,t)=>e*t)),l=o.backend_util.getReshaped(r.shape,s,c),u=o.backend_util.getPermuted(l.length,s.length),d=o.backend_util.getReshapedPermuted(r.shape,s,c),h=o.backend_util.getSliceBeginCoords(i,s.length),p=o.backend_util.getSliceSize(d,i,s.length),f=[],g=da({inputs:{x:r},backend:n,attrs:{shape:l}}),m=wa({inputs:{x:g},backend:n,attrs:{perm:u}}),x=da({inputs:{x:m},backend:n,attrs:{shape:d}}),v=vo({inputs:{x:x},backend:n,attrs:{begin:h,size:p}});return f.push(g),f.push(m),f.push(x),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}};const wo={kernelName:o.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,weights:r}=t,{size:s}=a,i=n.readSync(o.dataId),c=n.readSync(r.dataId),l=Ct(i,c,r.dtype,r.shape,s);return n.makeTensorInfo([s],r.dtype,l)}};const ko={kernelName:o.BitwiseAnd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=(0,o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=(0,o.env)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===i){const e=n.texData.get(a.dataId).values,t=n.texData.get(r.dataId).values,[o,s]=It(a.shape,r.shape,e,t,a.dtype),i=n.makeTensorInfo(s,a.dtype);return n.texData.get(i.dataId).values=o,i}let c;return c=s?new zn("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new Vn("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(c,[a,r],a.dtype)}};const To={kernelName:o.BroadcastArgs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.readSync(a.dataId),i=n.readSync(r.dataId),c=o.backend_util.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([c.length],"int32",Int32Array.from(c))}},Co=na({opSnippet:"return float(a != b);",cpuKernelImpl:jt,dtype:"bool"}),So={kernelName:o.NotEqual,backendName:"webgl",kernelFunc:Co};function Io(e){const{inputs:t,backend:n}=e,{input:a}=t;return Yn({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const Eo={kernelName:o.Real,backendName:"webgl",kernelFunc:Io};const Ao={kernelName:o.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return Yn({inputs:{x:s},backend:a});const t=o.zeros(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=Kn({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){const t=Io({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(t),n}if(!o.util.hasEncodingLoss(s.dtype,i)){const e=Yn({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId).values,[t,n,o]=Et(e,s.shape,s.dtype,i);return a.makeTensorInfo(t,n,o)}if("int32"===i)return function(e,t){const n=new En(e.shape,"return float(int(x));"),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===i){const e=a.makeTensorInfo([],"bool",o.util.getTypedArrayFromDType("bool",1)),t=Co({inputs:{a:s,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error("Error in Cast: failed to cast ".concat(s.dtype," to ").concat(i))}},Ro="return ceil(x);",No=ta({opSnippet:Ro,packedOpSnippet:Ro,cpuKernelImpl:At}),_o={kernelName:o.Ceil,backendName:"webgl",kernelFunc:No};class Fo{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Do{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const Oo={kernelName:o.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a;let c;c=(0,o.env)().getBool("WEBGL_PACK_CLIP")?new Do(r.shape):new Fo(r.shape);const l=[[s],[i]];return n.runWebGLProgram(c,[r],r.dtype,l)}};class Po{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Mo(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Lo={kernelName:o.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,o=n.texData.get(a.dataId),r=new Po(a.shape),s=[Mo(a,o.complexTensorInfos.real),Mo(a,o.complexTensorInfos.imag)];return n.runWebGLProgram(r,s,s[0].dtype)}};class Bo{constructor(e){this.outputShape=[],this.outputShape=o.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>"T".concat(t)));const t=new Array(e.length-1);t[0]=e[0][1];for(let o=1;o<t.length;o++)t[o]=t[o-1]+e[o][1];const n=["if (yC < ".concat(t[0],") setOutput(getT0(yR, yC));")];for(let o=1;o<t.length;o++){const e=t[o-1];n.push("else if (yC < ".concat(t[o],") ")+"setOutput(getT".concat(o,"(yR, yC-").concat(e,"));"))}const a=t.length,r=t[t.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(r,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class Wo{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=o.backend_util.computeOutShape(e,t);const n=this.outputShape,a=n.length,r=ae(a),s=yn("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>"T".concat(t)));const c=new Array(e.length-1);c[0]=e[0][t];for(let o=1;o<c.length;o++)c[o]=c[o-1]+e[o][t];const l=i[t],u=i.slice(-2),d=i.join();let h="if (".concat(l," < ").concat(c[0],") {\n        return getChannel(\n            getT0(").concat(d,"), vec2(").concat(u.join(),"));\n        }");for(let o=1;o<c.length;o++){const e=c[o-1];h+="\n        if (".concat(l," < ").concat(c[o],"  && ").concat(l," >= ").concat(c[o-1],") {\n          return getChannel(\n            getT").concat(o,"(").concat(Go(i,l,e),"),\n            vec2(").concat(Go(u,l,e),"));\n        }")}const p=c.length,f=c[c.length-1];h+="\n        return getChannel(\n          getT".concat(p,"(").concat(Go(i,l,f),"),\n          vec2(").concat(Go(u,l,f),"));"),this.userCode="\n      float getValue(".concat(i.map((e=>"int "+e)),") {\n        ").concat(h,"\n      }\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(s,"), 0., 0., 0.);\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," + 1;\n        if (").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-2]," = ").concat(s[a-2]," + 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," - 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2]," &&\n            ").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(s,");\n        }\n        setOutput(result);\n      }\n    ")}}function Go(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?"".concat(e," - ").concat(n):e)).join()}function Vo(e){const{inputs:t,backend:n}=e,{input:a}=t;return Yn({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const Uo={kernelName:o.Imag,backendName:"webgl",kernelFunc:Vo};function zo(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>Io({inputs:{input:e},backend:n}))),o=e.map((e=>Vo({inputs:{input:e},backend:n}))),r=zo(a,t,n),s=zo(o,t,n),i=Kn({inputs:{real:r,imag:s},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),o.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=o.util.sizeFromShape(e.shape.slice(t));return da({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=o.backend_util.computeOutShape(r.map((e=>e.shape)),1),c=1===r[0].shape[0],l=Rt(s,i,a,c),u=o.backend_util.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(u,a,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const s=e.filter((e=>o.util.sizeFromShape(e.shape)>0)),i=(0,o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){const t=i?new En(e[0].shape,Fn):new Dn(e[0].shape,Fn);return n.runWebGLProgram(t,e,a)}const c=(0,o.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>c){const e=[];for(let o=0;o<s.length;o+=c){const a=s.slice(o,o+c);e.push(zo(a,t,n))}const a=zo(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(i){const e=new Wo(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,a)}const{tensors2D:l,outShape:u}=function(e,t,n){const a=o.backend_util.computeOutShape(e.map((e=>e.shape)),t),r=e.map((e=>da({inputs:{x:e},attrs:{shape:[-1,o.util.sizeFromShape(e.shape.slice(t))]},backend:n})));return{tensors2D:r,outShape:a}}(s,t,n),d=new Bo(l.map((e=>e.shape))),h=n.runWebGLProgram(d,l,a);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const p=da({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),p}function Yo(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=o.util.parseAxisParam(r,t[0].shape)[0],i=t.map((e=>e.shape));o.backend_util.assertParamsConsistent(i,s);const c=o.backend_util.computeOutShape(t.map((e=>e.shape)),s);if(0===o.util.sizeFromShape(c))return n.makeTensorInfo(c,t[0].dtype,[]);const l=t.filter((e=>o.util.sizeFromShape(e.shape)>0));return 1===l.length?Yn({inputs:{x:l[0]},backend:n}):zo(l,s,n)}const Ho={kernelName:o.Concat,backendName:"webgl",kernelFunc:Yo};class Ko{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const r=e.padInfo.top,s=e.padInfo.left,i=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,x=g?2:3,v=g?3:1;let b="",y="";n&&(b=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):o?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),y="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(b,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(r,", ").concat(s,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(v,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(m,"], coords[").concat(x,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(d,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(h,"; wC++) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            if (xC < 0 || xC >= ").concat(e.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(g,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(g,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(g,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(g,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(y,"\n        setOutput(result);\n      }\n    ")}}class jo{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,o=e.strideDepth,r=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(o,", ").concat(r,", ").concat(s,");\n      const ivec3 pads = ivec3(").concat(t,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(u,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(d,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,"; wC++) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class qo{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ue(this.outputShape.length);const s=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,d=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let o=0;o<u;o++)h+="\n           vec4 xTexelC".concat(2*o,";\n           int xTexelC").concat(2*o,"Ready;\n           vec4 xTexelC").concat(2*o+1,";\n           int xTexelC").concat(2*o+1,"Ready;\n           vec4 xC").concat(o,";");h+="\n     for (int r = 0; r < ".concat(l,"; r++) {\n      for (int d1 = 0; d1 < ").concat(e.inChannels,"; d1 += 2) {\n       ");for(let o=0;o<u;o++)h+="\n           xTexelC".concat(2*o," = vec4(0.0);\n           xTexelC").concat(2*o,"Ready = 0;\n           xTexelC").concat(2*o+1," = vec4(0.0);\n           xTexelC").concat(2*o+1,"Ready = 0;\n           xC").concat(o," = vec4(0.0);");h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(d+1)/2;m++){const t=2*m;if(h+="\n           xC = xCCorner + ".concat(t*c,";\n           "),1===i){if(t<u&&(s%2===1?(h+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n               "),h+=1===c&&t>0?"\n                 xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                   } else {\n                     xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                   }\n                   ")):h+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xC").concat(t," = xTexelC").concat(t,";\n                 "),t+1<u)){const e=s%2===0?o.util.nearestLargerEven(c):c;c%2===0&&s%2===1||c%2!==0&&s%2!==1?(h+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                     xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(t+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(t+1,"Ready = 1;\n                   }\n                   "),h+=c>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                     } else {\n                      xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                     }\n                     "):"\n                     xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                     ")):h+=1===e?"\n                     xC".concat(t+1," = xTexelC").concat(t,";\n                     "):"\n                     xCOffset = xC + ".concat(e,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                       xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(t+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(t+1,"Ready = 1;\n                     }\n\n                     xC").concat(t+1," = xTexelC").concat(t+1,";\n                     ")}}else t<u&&(s%2===1?(h+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n               "),t+1<u&&(h+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                 "))):(h+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(\n                   xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n               "),t+1<u&&(h+="\n                   xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                 "))));t<u&&(h+="\n             wTexel = getW(r, ".concat(t,", d1, d2);\n             dotProd += xC").concat(t,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(e.inChannels,") {\n               dotProd += xC").concat(t,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),t+1<u&&(h+="\n               wTexel = getW(r, ".concat(t+1,", d1, d2);\n               dotProd += xC").concat(t+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(e.inChannels,") {\n                 dotProd += xC").concat(t+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",f="";n&&(p=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):r?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),f="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(p,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(h,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(g,"\n         ").concat(f,"\n         setOutput(result);\n       }\n     ")}}class Xo{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ue(this.outputShape.length);const{dataFormat:n}=t,a=V(),o="channelsLast"===n,r=o?1:2,s=o?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(e[2]," && pos < ").concat(e[1],") {");let c="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)c+="\n          blockIndex = rc.z + ".concat(e,";\n          pos = rc.y + ").concat(l,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(r,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(s,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(o,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}function Zo(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function Qo(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=e;const u=t.shape,d=r.texData.get(t.dataId),h=a.inChannels,p=u[0]*u[1]*u[2],f=a.outChannels,g="channelsLast"===a.dataFormat,m=!1;let x;const v=[];if(null!=i){const e=Zo(i.shape,g);null!=e&&(i=da({inputs:{x:i},backend:r,attrs:{shape:e}}),v.push(i))}if(null!=s){const e=Zo(s.shape,g);null!=e&&(s=da({inputs:{x:s},backend:r,attrs:{shape:e}}),v.push(s))}if(!((1===p||1===f)&&h>1e3)&&d.isPacked&&g&&null!=d.texture&&u[2]%2!==0&&o.util.arraysEqual(d.shape.slice(-3),u.slice(-3))){const e=u[0]*u[1]*(u[2]+1),h={dataId:t.dataId,shape:[1,e,a.inChannels],dtype:t.dtype},p=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,o.util.assert(F(d.shape,h.shape),(()=>"packed reshape ".concat(d.shape," to ").concat(h.shape," isn't free")));const f=da({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});v.push(f);const g=Ta({a:h,b:f,backend:r,transposeA:false,transposeB:m,bias:s,activation:l,preluActivationWeights:i,leakyreluAlpha:c}),b=r.texData.get(g.dataId);o.util.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),d.shape=p,b.shape=a.outShape,x=Yn({inputs:{x:g},backend:r}),x.shape=a.outShape,v.push(g)}else{const e=a.outHeight*a.outWidth,o=da({inputs:{x:t},backend:r,attrs:{shape:g?[a.batchSize,e,a.inChannels]:[a.batchSize,a.inChannels,e]}}),u=da({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),d=Ta({a:g?o:u,b:g?u:o,transposeA:!g,transposeB:m,backend:r,bias:s,activation:l,preluActivationWeights:i,leakyreluAlpha:c});x=da({inputs:{x:d},backend:r,attrs:{shape:a.outShape}}),v.push(o),v.push(u),v.push(d)}for(const o of v)r.disposeIntermediateTensorInfo(o);return x}function Jo(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=e;const{filterWidth:u,filterHeight:d,inChannels:h,outWidth:p,outHeight:f,dataFormat:g}=a,m="channelsLast"===g,x=u*d*h,v=f*p,b=[a.batchSize,x,v],y=[];if(null!=i){const e=Zo(i.shape,m);null!=e&&(i=da({inputs:{x:i},backend:r,attrs:{shape:e}}),y.push(i))}if(null!=s){const e=Zo(s.shape,m);null!=e&&(s=da({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}const w=da({inputs:{x:n},backend:r,attrs:{shape:[1,x,o.util.sizeFromShape(n.shape)/x]}});y.push(w);const k=new Xo(b,a),T=[t.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],C=r.runWebGLProgram(k,[t],"float32",T),S=da({inputs:{x:C},backend:r,attrs:{shape:b}});y.push(C),y.push(S);const I=null!=s,E=null!=i,A="leakyrelu"===l,R=l?aa(l,!0):null,N=new oa(m?S.shape:w.shape,m?w.shape:S.shape,m?[a.batchSize,v,a.outChannels]:[a.batchSize,a.outChannels,v],!0,!1,I,R,E,A),_=m?[S,w]:[w,S];if(s&&_.push(s),E&&_.push(i),A){const e=r.makeTensorInfo([],"float32",o.util.createScalarValue(c,"float32"));_.push(e),y.push(e)}const F=r.runWebGLProgram(N,_,"float32"),D=da({inputs:{x:F},backend:r,attrs:{shape:a.outShape}});y.push(F);for(const o of y)r.disposeIntermediateTensorInfo(o);return D}const $o={kernelName:o.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:c,dataFormat:l,dilations:u,dimRoundingMode:d}=a,h=o.backend_util.convertConv2DDataFormat(l),p=o.backend_util.computeConv2DInfo(r.shape,s.shape,i,u,c,d,!1,h);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&(0,o.env)().getBool("WEBGL_EXP_CONV")){const e=new qo(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];f=n.runWebGLProgram(e,[r,s],"float32",t)}else if((0,o.env)().getBool("WEBGL_CONV_IM2COL"))f=Jo({x:r,filter:s,convInfo:p,backend:n});else{const e=new Ko(p);f=n.runWebGLProgram(e,[r,s],"float32")}else f=Qo({x:r,filter:s,convInfo:p,backend:n});const g=da({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),g}};class er{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,o=e.padInfo.left,r="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(o,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              ").concat(r?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class tr{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,o=e.strideWidth,r="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,c=r?1:2,l=r?2:3,u=r?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(u,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(l,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n\n              if (").concat(r,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class nr{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,o=e.padInfo.front,r=e.padInfo.top,s=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(e.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(t," - ").concat(o,";\n\n            if (xF < 0 || xF >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(r,";\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(s,";\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class ar{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,o=e.strideDepth,r=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.front,c=n-1-e.padInfo.top,l=a-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(l,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(t,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(o,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(e.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(t," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const or={kernelName:o.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:c,dataFormat:l,dimRoundingMode:u,filterShape:d}=a,h=o.backend_util.convertConv2DDataFormat(l),p=o.backend_util.computeConv2DInfo(r.shape,d,i,1,c,u,!1,h),f=new er(p);return n.runWebGLProgram(f,[r,s],"float32")}};class rr{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=ue(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(e.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(e.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const sr={kernelName:o.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:c,pad:l,dataFormat:u,dimRoundingMode:d}=a,h=o.backend_util.convertConv2DDataFormat(u),p=o.backend_util.computeConv2DInfo(i,s.shape,c,1,l,d,!1,h);if((0,o.env)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[p.strideHeight,p.strideWidth]],t=new rr(p);return n.runWebGLProgram(t,[r,s],"float32",e)}{const e=new tr(p);return n.runWebGLProgram(e,[r,s],"float32")}}};const ir={kernelName:o.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:c,dilations:l}=a,u=o.backend_util.computeConv3DInfo(r.shape,s.shape,i,l,c),d=new jo(u);return n.runWebGLProgram(d,[r,s],"float32")}};const cr={kernelName:o.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:c,filterShape:l}=a,u=o.backend_util.computeConv3DInfo(r.shape,l,i,1,c),d=new nr(u);return n.runWebGLProgram(d,[r,s],"float32")}};const lr={kernelName:o.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:c,inputShape:l}=a,u=o.backend_util.computeConv3DInfo(l,s.shape,c,1,i),d=new ar(u);return n.runWebGLProgram(d,[r,s],"float32")}},ur=ta({opSnippet:ea+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Un,"\n  return result;\n")}),dr={kernelName:o.Cos,backendName:"webgl",kernelFunc:ur},hr=ta({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),pr={kernelName:o.Cosh,backendName:"webgl",kernelFunc:hr};class fr{constructor(e,t,n,a,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[r,s,i,c]=e,[l]=t,[u,d]=n;this.outputShape=[l,u,d,c];const h="bilinear"===a?1:0,[p,f]=["".concat(s-1,".0"),"".concat(i-1,".0")],[g,m,x]=u>1?["".concat((s-1)/(u-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[v,b,y]=d>1?["".concat((i-1)/(d-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(g,");\n      const float width_ratio = float(").concat(v,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(r,") {\n          return;\n        }\n\n        float height_scale = ").concat(m,";\n        float width_scale = ").concat(b,";\n\n        float in_y = ").concat(x,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(o,"));\n          return;\n        }\n        float in_x = ").concat(y,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(o,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(h," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const gr={kernelName:o.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:o,boxes:r,boxInd:s}=t,{cropSize:i,method:c,extrapolationValue:l}=a,u=new fr(o.shape,r.shape,i,c,l);return n.runWebGLProgram(u,[o,r,s],"float32")}};var mr;!function(e){e.Prod="*",e.Sum="+"}(mr||(mr={}));class xr{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,r=this.op===mr.Prod?"1.0":"0.0",s=n?r:"getX(".concat(vr(o,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",l="";n?(c=a?"end != ".concat(i-1):"end != 0",l=a?"end + 1":"end - 1"):(c=a?"end + pow2 < ".concat(i):"end >= pow2",l=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(ae(o)," coords = getOutputCoords();\n        int end = ").concat(br(o,"coords",this.op),";\n        float val = ").concat(s,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(l,";\n          ").concat(br(o,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(vr(o,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function vr(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function br(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function yr(e,t,n,a,r,s){const i=t.shape.length,c=o.backend_util.getAxesPermutation([a],i);let l=t;null!=c&&(l=wa({inputs:{x:t},backend:n,attrs:{perm:c}}));const u=o.backend_util.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(a));const d=l.shape[u];let h=Yn({inputs:{x:l},backend:n});for(let o=0;o<=Math.ceil(Math.log2(d))-1;o++){const t=new xr(e,l.shape,!1,s),a=[[o]],r=h;h=n.runWebGLProgram(t,[h],h.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){const t=new xr(e,l.shape,r,s),a=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=c){const e=wa({inputs:{x:h},backend:n,attrs:{perm:o.backend_util.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const wr={kernelName:o.Cumprod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:r,exclusive:s,reverse:i}=a;return yr(mr.Prod,o,n,r,s,i)}};const kr={kernelName:o.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:r,exclusive:s,reverse:i}=a;return yr(mr.Sum,o,n,r,s,i)}};const Tr={kernelName:o.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,weights:r}=t,{size:s,binaryOutput:i}=a;if(1===o.shape.length){const e=n.readSync(o.dataId),t=n.readSync(r.dataId),a=Ct(e,t,r.dtype,r.shape,s);return n.makeTensorInfo([s],r.dtype,a)}if(2===o.shape.length){const e=n.bufferSync(o),t=n.bufferSync(r),a=St(e,t,s,i);return n.makeTensorInfo(a.shape,r.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(o.shape.length,"."))}};class Cr{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(t,";\n      int offset_h = imod(h, ").concat(t,");\n      int in_w = w / ").concat(t,";\n      int offset_w = imod(w, ").concat(t,");\n      int offset_d = (offset_h * ").concat(t," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Sr={kernelName:o.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{blockSize:r,dataFormat:s}=a,i=o.shape[0],c=("NHWC"===s?o.shape[1]:o.shape[2])*r,l=("NHWC"===s?o.shape[2]:o.shape[3])*r,u=("NHWC"===s?o.shape[3]:o.shape[1])/(r*r),d=new Cr("NHWC"===s?[i,c,l,u]:[i,u,c,l],r,s);return n.runWebGLProgram(d,[o],o.dtype)}};class Ir{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ue(this.outputShape.length);const r=e.filterHeight,s=e.filterWidth,i=e.outChannels/e.inChannels;let c="",l="";n&&(c=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):o?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),l="result = activation(result);");const u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(r,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(u,"\n        ").concat(l,"\n        setOutput(result);\n      }\n    ")}}class Er{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ue(this.outputShape.length);const s=e.outChannels/e.inChannels,i=e.padInfo.left,c=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,h=d;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let o=0;o<d;o++)p+="\n          vec4 xTexelC".concat(2*o,";\n          int xTexelC").concat(2*o,"Ready;\n          vec4 xTexelC").concat(2*o+1,";\n          int xTexelC").concat(2*o+1,"Ready;\n          vec4 xC").concat(o,";");p+="\n    for (int r = 0; r < ".concat(u,"; r++) {\n      ");for(let o=0;o<d;o++)p+="\n          xTexelC".concat(2*o," = vec4(0.0);\n          xTexelC").concat(2*o,"Ready = 0;\n          xTexelC").concat(2*o+1," = vec4(0.0);\n          xTexelC").concat(2*o+1,"Ready = 0;\n          xC").concat(o," = vec4(0.0);");p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let x=0;x<(h+1)/2;x++){const e=2*x;if(p+="\n          xC = xCCorner + ".concat(e*l,";\n          "),1===c){if(e<d&&(i%2===1?(p+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n              "),p+=1===l&&e>0?"\n                xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                  } else {\n                    xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                  }\n                  ")):p+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xC").concat(e," = xTexelC").concat(e,";\n                "),e+1<d)){const t=i%2===0?o.util.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(p+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                    xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(e+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(e+1,"Ready = 1;\n                  }\n                  "),p+=l>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                    } else {\n                     xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                    }\n                    "):"\n                    xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                    ")):p+=1===t?"\n                    xC".concat(e+1," = xTexelC").concat(e,";\n                    "):"\n                    xCOffset = xC + ".concat(t,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                      xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(e+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(e+1,"Ready = 1;\n                    }\n\n                    xC").concat(e+1," = xTexelC").concat(e+1,";\n                    ")}}else e<d&&(i%2===1?(p+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n              "),e+1<d&&(p+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                "))):(p+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(\n                  xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n              "),e+1<d&&(p+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                "))));e<d&&(p+="\n            wTexel = getW(r, ".concat(e,", d1, q);\n            dotProd += xC").concat(e," * vec4(wTexel.xz, wTexel.xz);\n          "),e+1<d&&(p+="\n              wTexel = getW(r, ".concat(e+1,", d1, q);\n              dotProd += xC").concat(e+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",g="";n&&(f=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),g="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(f,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(s,";\n        int q = d2 - d1 * ").concat(s,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(p,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(m,"\n        ").concat(g,"\n        setOutput(result);\n      }\n    ")}}const Ar={kernelName:o.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:c,dilations:l,dimRoundingMode:u}=a;let d=l;null==d&&(d=[1,1]),o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(i,d),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(d,"'")));const h=o.backend_util.computeConv2DInfo(r.shape,s.shape,i,d,c,u,!0);let p;p=(0,o.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new Er(h):new Ir(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[r,s],"float32",f)}};class Rr{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,o=e.padInfo.left,r=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(r," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(o,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Nr{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,o=e.strideWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(r,", ").concat(s,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const _r={kernelName:o.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:c,pad:l,dimRoundingMode:u,filterShape:d}=a,h=o.backend_util.computeConv2DInfo(r.shape,d,i,c,l,u,!0),p=new Rr(h);return n.runWebGLProgram(p,[r,s],"float32")}};const Fr={kernelName:o.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:c,pad:l,dimRoundingMode:u,inputShape:d}=a,h=o.backend_util.computeConv2DInfo(d,s.shape,i,c,l,u,!0),p=new Nr(h);return n.runWebGLProgram(p,[r,s],"float32")}};class Dr{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Or={kernelName:o.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=o.util.sizeFromShape(a.shape),i=da({inputs:{x:a},backend:n,attrs:{shape:[s]}}),c=new Dr(s),l=n.runWebGLProgram(c,[i],i.dtype),u=da({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class Pr{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:o,strideWidth:r,filterHeight:s,filterWidth:i,dilationHeight:c,dilationWidth:l}=e,{top:u,left:d}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(r,");\n      const ivec2 pads = ivec2(").concat(u,", ").concat(d,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(s,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(t,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(l,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const Mr={kernelName:o.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:c,dilations:l}=a,u=o.backend_util.computeDilation2DInfo(r.shape,s.shape,i,c,"NHWC",l);let d;const h=new Pr(u);d=n.runWebGLProgram(h,[r,s],"float32");const p=da({inputs:{x:d},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(d),p}};const Lr={kernelName:o.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:i,summedDims:c,idDims:l}=o.backend_util.decodeEinsumEquation(r,s.length);o.backend_util.checkEinsumDimSizes(i.length,l,s);const{path:u,steps:d}=o.backend_util.getEinsumComputePath(c,l),h=d.length;let p=null,f=i.length;const g=[];for(let m=0;m<h;++m){for(const e of d[m]){const{permutationIndices:t,expandDims:a}=o.backend_util.getEinsumPermutation(f,l[e]);let r;o.backend_util.isIdentityPermutation(t)?r=s[e]:(r=wa({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),g.push(r));const i=r.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);o.util.arraysEqual(r.shape,i)||(r=da({inputs:{x:r},backend:n,attrs:{shape:i}}),g.push(r)),null===p?p=r:(p=la({inputs:{a:r,b:p},backend:n}),g.push(p))}m<h-1&&(u[m]>=0&&(p=ba({inputs:{x:p},backend:n,attrs:{axis:u[m]-(i.length-f),keepDims:!1}}),g.push(p)),f--)}for(const o of g)o!==p&&n.disposeIntermediateTensorInfo(o);return p}},Br=ta({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Wr={kernelName:o.Elu,backendName:"webgl",kernelFunc:Br},Gr={kernelName:o.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=(0,o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zn("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new Vn("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},Vr=na({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Nt}),Ur={kernelName:o.Equal,backendName:"webgl",kernelFunc:Vr},zr=ta({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(o.backend_util.ERF_P,";\n  float a1 = ").concat(o.backend_util.ERF_A1,";\n  float a2 = ").concat(o.backend_util.ERF_A2,";\n  float a3 = ").concat(o.backend_util.ERF_A3,";\n  float a4 = ").concat(o.backend_util.ERF_A4,";\n  float a5 = ").concat(o.backend_util.ERF_A5,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),Yr={kernelName:o.Erf,backendName:"webgl",kernelFunc:zr},Hr=ta({opSnippet:ea+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:_t,dtype:"float32"}),Kr={kernelName:o.Exp,backendName:"webgl",kernelFunc:Hr};function jr(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,i=s.shape.length,c=s.shape.slice();let l=r;return r<0&&(o.util.assert(-(i+1)<=r,(()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]"))),l=i+r+1),c.splice(l,0,1),da({inputs:{x:s},backend:a,attrs:{shape:c}})}const qr={kernelName:o.ExpandDims,backendName:"webgl",kernelFunc:jr},Xr="return exp(x) - 1.0;",Zr=ta({opSnippet:Xr,packedOpSnippet:Xr,cpuKernelImpl:Ft}),Qr={kernelName:o.Expm1,backendName:"webgl",kernelFunc:Zr};class Jr{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const o=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),r=n?"".concat(a,".0"):"1.0";let s;if("real"===e)s="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '.concat(e,"."));s="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(o,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(s,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(r,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function $r(e,t,n){const a=n.texData.get(e.dataId),r=o.util.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=da({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}}),c=i.shape,l=new Jr("real",c,t),u=new Jr("imag",c,t),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:c},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:c}],h=n.runWebGLProgram(l,d,"float32"),p=n.runWebGLProgram(u,d,"float32"),f=Kn({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const g=da({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),g}const es={kernelName:o.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return $r(a,!1,n)}};class ts{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function ns(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||o.util.inferDtype(r),"string"===s){const e=o.util.getArrayFromDType(s,o.util.sizeFromShape(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{const e=new ts(a,r),n=[[r]];return t.runWebGLProgram(e,[],s,n)}}const as={kernelName:o.Fill,backendName:"webgl",kernelFunc:ns};class os{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(t," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(t,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const rs={kernelName:o.FlipLeftRight,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,o=n,r=new os(a.shape);return o.runWebGLProgram(r,[a],a.dtype)}},ss="return floor(x);",is=ta({opSnippet:ss,packedOpSnippet:ss,cpuKernelImpl:Dt}),cs={kernelName:o.Floor,backendName:"webgl",kernelFunc:is},ls=na({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),us={kernelName:o.FloorDiv,backendName:"webgl",kernelFunc:ls};class ds{constructor(e){this.variableNames=["A"];const t=V(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(t.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class hs{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=V(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(t.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}const ps={kernelName:o.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:s}=a,i="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,c="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[u,d]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],h=[d,u],p=[d,u,s];if(c||i){const e=(0,o.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=fs&&e===gs||(gs=e,fs=document.createElement("canvas").getContext("2d",{willReadFrequently:gs})),fs.canvas.width=u,fs.canvas.height=d,fs.drawImage(r,0,0,u,d),r=fs.canvas}const f=n.makeTensorInfo(h,"int32");n.texData.get(f.dataId).usage=l.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),r);const g=(0,o.env)().getBool("WEBGL_PACK")?new hs(p):new ds(p),m=n.runWebGLProgram(g,[f],"int32");return n.disposeData(f.dataId),m}};let fs,gs=(0,o.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const ms={kernelName:o.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:c}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:g}=a,m=o.backend_util.convertConv2DDataFormat(d),x=o.backend_util.computeConv2DInfo(r.shape,s.shape,l,h,u,p,!1,m);let v;const b=[],y=null!=i,w=null!=c,k="leakyrelu"===f,T=()=>{const e=[r,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=da({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(y&&e.push(t(i,d)),w&&e.push(t(c,d)),k){const t=n.makeTensorInfo([],"float32",o.util.createScalarValue(g,"float32"));e.push(t),b.push(t)}return e};if(1!==x.filterHeight||1!==x.filterWidth||1!==x.dilationHeight||1!==x.dilationWidth||1!==x.strideHeight||1!==x.strideWidth||"SAME"!==x.padInfo.type&&"VALID"!==x.padInfo.type)if(x.strideWidth<=2&&"channelsLast"===m&&(0,o.env)().getBool("WEBGL_EXP_CONV")){const e=f?aa(f,!0):null,t=new qo(x,y,e,w,k),a=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],o=T();v=n.runWebGLProgram(t,o,"float32",a)}else if((0,o.env)().getBool("WEBGL_CONV_IM2COL"))v=Jo({x:r,filter:s,convInfo:x,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:g});else{const e=f?aa(f,!1):null,t=new Ko(x,y,e,w,k),a=T();v=n.runWebGLProgram(t,a,"float32")}else v=Qo({x:r,filter:s,convInfo:x,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:g});const C=da({inputs:{x:v},backend:n,attrs:{shape:x.outShape}});return b.push(v),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),C}};const xs={kernelName:o.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:c}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a,g=[];let m=d;null==m&&(m=[1,1]),o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(l,m),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(l," and dilations '").concat(m,"'")));const x=o.backend_util.computeConv2DInfo(r.shape,s.shape,l,m,u,h,!0),v=(0,o.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&x.strideWidth<=2&&x.outChannels/x.inChannels===1,b=p?aa(p,v):null,y=[r,s],w=null!=i,k=null!=c,T="leakyrelu"===p;if(w&&y.push(i),k&&y.push(c),T){const e=n.makeTensorInfo([],"float32",o.util.createScalarValue(f,"float32"));y.push(e),g.push(e)}let C;C=v?new Er(x,w,b,k,T):new Ir(x,w,b,k,T);const S=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],I=n.runWebGLProgram(C,y,"float32",S);return g.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};class vs{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const o=ae(n.length);let r="\n    int index;";for(let s=0;s<this.sliceDim;s++)r+="\n          index = round(getIndices(coords[0], ".concat(s,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[s],";\n          flattenIndex += index * ").concat(this.strides[s],";");this.userCode="\n         void main() {\n          ".concat(o," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(r,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const bs={kernelName:o.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,i=s[s.length-1],c=o.util.sizeFromShape(a.shape),[l,u,d,h]=o.backend_util.prepareAndValidate(a,r),p=da({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),f=da({inputs:{x:a},backend:n,attrs:{shape:[o.util.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),o=Ot(e,t,a.dtype,u,i,d,h,a.shape,c);return n.makeTensorInfo(l,a.dtype,o.values)}const g=new vs(i,h,[u,d],a.shape),m=n.runWebGLProgram(g,[f,p],f.dtype),x=da({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),x}};class ys{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=ae(this.rank),a=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)2===a?n.push("index"):n.push("".concat(t[a]));return n.join()}(e);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(e[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function ws(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:c}=a,l=o.util.parseAxisParam(i,r.shape)[0];if((0,o.env)().get("DEBUG")){const e=n.readSync(s.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){const a=e[n];o.util.assert(a<=t-1&&a>=0,(()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(t-1,"]")))}}const u=o.backend_util.segment_util.collectGatherOpShapeInfo(r,s,l,c),d=o.util.sizeFromShape(s.shape),h=[],p=da({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=da({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});h.push(p),h.push(f);const g=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),a=Pt(t,e,g);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,a.dtype,a.values)}const m=new ys(p.shape,g),x=n.runWebGLProgram(m,[p,f],p.dtype);h.push(x);const v=da({inputs:{x:x},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}const ks={kernelName:o.GatherV2,backendName:"webgl",kernelFunc:ws},Ts=na({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Mt,dtype:"bool"}),Cs={kernelName:o.Greater,backendName:"webgl",kernelFunc:Ts},Ss=na({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Lt}),Is={kernelName:o.GreaterEqual,backendName:"webgl",kernelFunc:Ss};const Es={kernelName:o.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return $r(a,!0,n)}},As=ta({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Rs={kernelName:o.IsFinite,backendName:"webgl",kernelFunc:As},Ns=ta({opSnippet:"return float(isinf(x));",dtype:"bool"}),_s={kernelName:o.IsInf,backendName:"webgl",kernelFunc:Ns},Fs=ta({opSnippet:"return float(isnan(x));",dtype:"bool"}),Ds={kernelName:o.IsNan,backendName:"webgl",kernelFunc:Fs},Os=na({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Bt,dtype:"bool"}),Ps={kernelName:o.Less,backendName:"webgl",kernelFunc:Os},Ms=na({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Wt,dtype:"bool"}),Ls={kernelName:o.LessEqual,backendName:"webgl",kernelFunc:Ms};const Bs={kernelName:o.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:o,num:r}=n,s=Gt(a,o,r);return t.makeTensorInfo([s.length],"float32",s)}},Ws=ta({opSnippet:ea+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Vt}),Gs={kernelName:o.Log,backendName:"webgl",kernelFunc:Ws},Vs=ta({opSnippet:ea+"\n  return log(1.0 + x);\n"}),Us={kernelName:o.Log1p,backendName:"webgl",kernelFunc:Vs},zs=na({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Ys={kernelName:o.LogicalAnd,backendName:"webgl",kernelFunc:zs},Hs=ta({opSnippet:"return float(!(x >= 1.0));"}),Ks={kernelName:o.LogicalNot,backendName:"webgl",kernelFunc:Hs},js=na({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),qs={kernelName:o.LogicalOr,backendName:"webgl",kernelFunc:js};class Xs{constructor(e,t,n,a,o){this.variableNames=["x"],this.outputShape=[];const r=t,s=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===o?"inversesqrt(".concat(c,")"):1===o?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(o,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(r,"; j <= ").concat(r,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(s,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class Zs{constructor(e,t,n,a,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const r=t,s=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===o?"inversesqrt(".concat(c,")"):1===o?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(o,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(r,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(r,"; j <= ").concat(r,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(s,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const Qs={kernelName:o.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:c,beta:l}=a,u=(0,o.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Zs(r.shape,s,i,c,l):new Xs(r.shape,s,i,c,l);return n.runWebGLProgram(u,[r],r.dtype)}};class Js{constructor(e,t,n,a,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=o,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(t,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(t," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(o,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(o,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const $s={kernelName:o.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:o,y:r,dy:s}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a,d=new Js(o.shape,i,c,l,u);return n.runWebGLProgram(d,[o,r,s],o.dtype)}};function ei(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,c=r.shape.length,l=o.util.parseAxisParam(s,r.shape);let u=l;const d=o.backend_util.getAxesPermutation(u,c),h=null!=d,p=n.shouldExecuteOnCPU([r]);let f=r;if(h){if(p){const e=n.texData.get(f.dataId).values,t=new Array(c);for(let n=0;n<t.length;n++)t[n]=r.shape[d[n]];const a=xn(e,r.shape,r.dtype,d,t);f=n.makeTensorInfo(t,r.dtype);n.texData.get(f.dataId).values=a}else f=va(r,d,n);u=o.backend_util.getInnerMostAxes(u.length,c)}o.backend_util.assertAxesAreInnerMostDims("max",u,c);const[g,m]=o.backend_util.computeOutAndReduceShapes(f.shape,u);let x,v=g;if(i&&(v=o.backend_util.expandShapeToKeepDim(g,l)),p){const e=n.texData.get(f.dataId).values,t=Ut(e,o.util.sizeFromShape(m),v,r.dtype);x=n.makeTensorInfo(v,r.dtype);n.texData.get(x.dataId).values=t}else x=function(e,t,n,a){const r=o.util.sizeFromShape(t),s=da({inputs:{x:e},attrs:{shape:[o.util.sizeFromShape(e.shape)/r,r]},backend:a}),i=ga(s,e.dtype,"max",a),c=da({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),c}(f,m,v,n);return h&&n.disposeIntermediateTensorInfo(f),x}const ti={kernelName:o.Max,backendName:"webgl",kernelFunc:ei},ni=na({opSnippet:Gn+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Un+"\n  return result;\n",cpuKernelImpl:zt}),ai={kernelName:o.Maximum,backendName:"webgl",kernelFunc:ni};const oi={kernelName:o.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;W(r,"maxPool");const{filterSize:s,strides:i,pad:c,dimRoundingMode:l}=a;o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'")));const u=o.backend_util.computePool2DInfo(r.shape,s,i,1,c,l);if(1===u.filterWidth&&1===u.filterHeight&&o.util.arraysEqual(u.inShape,u.outShape))return Yn({inputs:{x:r},backend:n});const d=new no(u,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}};const ri={kernelName:o.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,d=o.backend_util.computePool3DInfo(r.shape,s,i,[1,1,1],c,u,l),h=new ao(d,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class si{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,o=e.effectiveFilterHeight,r=e.effectiveFilterWidth,s=o-1-e.padInfo.top,i=r-1-e.padInfo.left,c=o*r-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(o,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(t,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(r,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(r," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class ii{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,r=e.dilationHeight,s=e.dilationWidth,i=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.front,d=c-1-e.padInfo.top,h=l-1-e.padInfo.left,p=i*c*l-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(u,", ").concat(d,", ").concat(h,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(o,") {\n          float dyD = float(dyDCorner + wD) / ").concat(t,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(r,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(s,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(l," +\n                  wR * ").concat(l," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const ci={kernelName:o.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=a,h=o.backend_util.computePool3DInfo(i.shape,c,l,[1,1,1],u,d),p=new ao(h,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),g=new ii(h),m=n.runWebGLProgram(g,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),m}};const li={kernelName:o.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,c=s;W([s,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=a,p=o.backend_util.computePool2DInfo(c.shape,l,u,1,d,h),f=new no(p,"max",!0),g=n.runWebGLProgram(f,[c],c.dtype),m=new si(p),x=n.runWebGLProgram(m,[r,g],c.dtype);return n.disposeIntermediateTensorInfo(g),x}};const ui={kernelName:o.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:i,pad:c,includeBatchInIndex:l}=n,u=a;o.util.assert(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const d=[1,1];o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(i,d),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(d,"'")));const h=o.backend_util.computePool2DInfo(r.shape,s,i,d,c),[p,f]=function(e,t,n,a){let o=new no(n,"max",!1);const r=a.runWebGLProgram(o,[e],"float32");return o=new no(n,"max",!0,!0,t),[r,a.runWebGLProgram(o,[e],"float32")]}(r,l,h,u);return[p,f]}};const di={kernelName:o.Mean,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{keepDims:s,axis:i}=n,c=a,l=r.shape.length,u=o.util.parseAxisParam(i,r.shape);let d=u;const h=o.backend_util.getAxesPermutation(d,l),p=null!=h,f=c.shouldExecuteOnCPU([r]),g=[];let m=r;if(p){if(f){const e=c.texData.get(m.dataId).values,t=new Array(l);for(let a=0;a<t.length;a++)t[a]=r.shape[h[a]];const n=xn(e,r.shape,r.dtype,h,t);m=c.makeTensorInfo(t,r.dtype);c.texData.get(m.dataId).values=n}else m=va(r,h,c);g.push(m),d=o.backend_util.getInnerMostAxes(d.length,l)}o.backend_util.assertAxesAreInnerMostDims("sum",d,l);const[x,v]=o.backend_util.computeOutAndReduceShapes(m.shape,d);let b=x;s&&(b=o.backend_util.expandShapeToKeepDim(x,u));const y=function(e,t,n,a){const r=o.util.sizeFromShape(t),s=da({inputs:{x:e},attrs:{shape:[o.util.sizeFromShape(e.shape)/r,r]},backend:a}),i=ga(s,"float32","mean",a),c=da({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),c}(m,v,b,c);for(const o of g)c.disposeIntermediateTensorInfo(o);return y}};const hi={kernelName:o.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,c=r.shape.length,l=o.util.parseAxisParam(s,r.shape);let u=l;const d=o.backend_util.getAxesPermutation(u,c);let h=r;null!=d&&(h=wa({inputs:{x:r},backend:n,attrs:{perm:d}}),u=o.backend_util.getInnerMostAxes(u.length,r.shape.length)),o.backend_util.assertAxesAreInnerMostDims("min",u,c);const[p,f]=o.backend_util.computeOutAndReduceShapes(h.shape,u),g=da({inputs:{x:h},backend:n,attrs:{shape:[-1,o.util.sizeFromShape(f)]}}),m=ga(g,g.dtype,"min",n);let x;if(i){x=da({inputs:{x:m},backend:n,attrs:{shape:o.backend_util.expandShapeToKeepDim(p,l)}})}else x=da({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=d&&n.disposeIntermediateTensorInfo(h),x}},pi=na({opSnippet:Gn+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Un+"\n  return result;\n",cpuKernelImpl:Yt}),fi={kernelName:o.Minimum,backendName:"webgl",kernelFunc:pi};class gi{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,o=ae(a),r=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(o," start = ").concat(o,"(").concat(r,");\n      ").concat(o," end = ").concat(o,"(").concat(s,");\n\n      void main() {\n        ").concat(o," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(o," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(r,";\n        int end = ").concat(s,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class mi{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,o=ae(a),r=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),i=yn("rc",a),c=yn("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d="reflect"===n?0:1;let h="";if(1===a){const e="\n        ".concat(o," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(d,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(d,";\n        }\n        source -= start;\n      ");h="\n        ".concat(o," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ")}else{const e="\n        ".concat(o," source = rc;\n        ").concat(o," lt = ").concat(o,"(lessThan(source, start));\n        ").concat(o," gte = ").concat(o,"(greaterThanEqual(source, end));\n        ").concat(o," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(d,") +\n                gte * ((end - 1) * 2 - source + ").concat(d,");\n        source -= start;\n      ");h="\n        ".concat(o," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(e,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(l,") {\n            ").concat(e,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(o," start = ").concat(o,"(").concat(r,");\n      const ").concat(o," end = ").concat(o,"(").concat(s,");\n\n      void main() {\n        ").concat(o," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(h,"\n        setOutput(result);\n      }\n    ")}}const xi={kernelName:o.MirrorPad,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r}=t,{paddings:s,mode:i}=a,c=(0,o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mi(r.shape,s,i):new gi(r.shape,s,i);return n.runWebGLProgram(c,[r],r.dtype)}},vi=na({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+Un+"\n  return result;\n"}),bi={kernelName:o.Mod,backendName:"webgl",kernelFunc:vi};class yi{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(t-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(t-1,"));\n      }\n    ")}}const wi=na({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),ki={kernelName:o.RealDiv,backendName:"webgl",kernelFunc:wi},Ti="return a - b;",Ci=na({opSnippet:Ti,packedOpSnippet:Ti,supportsComplex:!0,cpuKernelImpl:fn}),Si={kernelName:o.Sub,backendName:"webgl",kernelFunc:Ci};function Ii(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=o.util.parseAxisParam([s],r.shape),c=ei({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=o.backend_util.expandShapeToKeepDim(c.shape,i),u=da({inputs:{x:c},backend:n,attrs:{shape:l}}),d=Ci({inputs:{a:r,b:u},backend:n}),h=Hr({inputs:{x:d},backend:n}),p=ba({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),f=da({inputs:{x:p},backend:n,attrs:{shape:l}}),g=wi({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}const Ei={kernelName:o.Softmax,backendName:"webgl",kernelFunc:Ii};const Ai={kernelName:o.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:o}=t,{numSamples:r,seed:s,normalized:i}=a,c=i?o:Ii({inputs:{logits:o},backend:n,attrs:{dim:o.shape.length-1}}),l=c.shape[0],u=c.shape[1],d=new yi(l,u,r),h=[[s]],p=n.runWebGLProgram(d,[c],"int32",h);return i||n.disposeIntermediateTensorInfo(c),p}},Ri=An+"\n  return -x;\n";const Ni={kernelName:o.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,o]=Kt(e.values,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,t)}let r;return r=(0,o.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Dn(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new En(a.shape,Ri),n.runWebGLProgram(r,[a],a.dtype)}},_i=o.kernel_impls.nonMaxSuppressionV3Impl;const Fi={kernelName:o.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){o.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l}=a,u=n.readSync(r.dataId),d=n.readSync(s.dataId),{selectedIndices:h}=_i(u,d,i,c,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Di=o.kernel_impls.nonMaxSuppressionV4Impl;const Oi={kernelName:o.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){o.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l,padToMaxOutputSize:u}=a,d=n.readSync(r.dataId),h=n.readSync(s.dataId),{selectedIndices:p,validOutputs:f}=Di(d,h,i,c,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},Pi=o.kernel_impls.nonMaxSuppressionV5Impl;const Mi={kernelName:o.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){o.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l,softNmsSigma:u}=a,d=n.readSync(r.dataId),h=n.readSync(s.dataId),p=i,f=c,g=l,m=u,{selectedIndices:x,selectedScores:v}=Pi(d,h,p,f,g,m);return[n.makeTensorInfo([x.length],"int32",new Int32Array(x)),n.makeTensorInfo([v.length],"float32",new Float32Array(v))]}};class Li{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const Bi={kernelName:o.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:i,onValue:c,offValue:l}=a,u=o.util.sizeFromShape(r.shape),d=new Li(u,i,c,l),h=da({inputs:{x:r},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(d,[h],s);n.disposeIntermediateTensorInfo(h);const f=da({inputs:{x:p},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeIntermediateTensorInfo(p),f}};function Wi(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=Io({inputs:{input:a},backend:n}),t=Wi({inputs:{x:e},backend:n}),o=Vo({inputs:{input:a},backend:n}),r=Wi({inputs:{x:o},backend:n}),s=Kn({inputs:{real:t,imag:r},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(r),s}return ns({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const Gi={kernelName:o.ZerosLike,backendName:"webgl",kernelFunc:Wi};const Vi={kernelName:o.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:o}=n;if("string"===o.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===o.dtype){const t=Io({inputs:{input:o},backend:a}),n=e({inputs:{x:t},backend:a}),r=Vo({inputs:{input:o},backend:a}),s=Wi({inputs:{x:r},backend:a}),i=Kn({inputs:{real:n,imag:s},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(s),i}return ns({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:a})}};const Ui={kernelName:o.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return jr({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{o.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),o.util.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const c=[],l=Yo({inputs:t.map((e=>{const t=jr({inputs:{input:e},backend:n,attrs:{dim:r}});return c.push(t),t})),backend:n,attrs:{axis:r}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class zi{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,o=ae(a),r=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(o," start = ").concat(o,"(").concat(r,");\n      ").concat(o," end = ").concat(o,"(").concat(s,");\n\n      void main() {\n        ").concat(o," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(o," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(r,";\n        int end = ").concat(s,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class Yi{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,o=ae(a),r=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),i=yn("rc",a),c=yn("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d=["".concat(o," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(l,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(l,") {")],h=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,g=1===a?2:4;f<g;f++)p+="\n        ".concat(d[f],"\n        if (").concat(h,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(o," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ");p+=1===a?"} ":"}}",this.userCode="\n      const ".concat(o," start = ").concat(o,"(").concat(r,");\n      const ").concat(o," end = ").concat(o,"(").concat(s,");\n\n      void main() {\n        ").concat(o," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const Hi=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;if(0===o.util.sizeFromShape(r.shape)){return ns({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+r.shape[t]+e[1])),value:i,dtype:r.dtype}})}const c=(0,o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Yi(r.shape,s,i):new zi(r.shape,s,i),l=[[i]];return n.runWebGLProgram(c,[r],r.dtype,l)},Ki={kernelName:o.PadV2,backendName:"webgl",kernelFunc:Hi},ji=na({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+Un+"\n  return result;\n"}),qi={kernelName:o.Pow,backendName:"webgl",kernelFunc:ji};const Xi={kernelName:o.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,c=r.shape.length,l=[],u=o.util.parseAxisParam(s,r.shape);let d=u;const h=o.backend_util.getAxesPermutation(d,c);let p,f=r;if(null!=h&&(f=wa({inputs:{x:r},backend:n,attrs:{perm:h}}),d=o.backend_util.getInnerMostAxes(d.length,c),l.push(f)),o.backend_util.assertAxesAreInnerMostDims("prod",d,c),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:a,outDtype:o}=qt(f.shape,f.dtype,e,d);p=n.makeTensorInfo(a,o,t)}else{const[e,t]=o.backend_util.computeOutAndReduceShapes(f.shape,d),a=o.util.sizeFromShape(t),s=da({inputs:{x:f},backend:n,attrs:{shape:[-1,a]}}),i=ga(s,(0,o.sumOutType)(r.dtype),"prod",n);p=da({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(s),l.push(i)}if(i){l.push(p);const e=o.backend_util.expandShapeToKeepDim(p.shape,u);p=da({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const Zi={kernelName:o.RaggedGather,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:o,paramsDenseValues:r,indices:s}=t,{outputRaggedRank:i}=a,c=o.map((e=>n.readSync(e.dataId))),l=o.map((e=>e.shape)),u=n.readSync(r.dataId),d=n.readSync(s.dataId),[h,p,f]=Xt(c,l,u,r.shape,r.dtype,d,s.shape,i),g=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,r.dtype,p);return g.concat([m])}};const Qi={kernelName:o.RaggedRange,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:o,deltas:r}=t,s=n.readSync(a.dataId),i=n.readSync(o.dataId),c=n.readSync(r.dataId),[l,u]=Zt(s,a.shape,a.dtype,i,o.shape,c,r.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};const Ji={kernelName:o.RaggedTensorToTensor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:o,values:r,defaultValue:s,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.readSync(o.dataId),u=n.readSync(r.dataId),d=n.readSync(s.dataId),h=i.map((e=>n.readSync(e.dataId))),p=i.map((e=>e.shape)),[f,g]=Qt(l,o.shape,u,r.shape,r.dtype,d,s.shape,h,p,c);return n.makeTensorInfo(f,r.dtype,g)}},$i=e=>{const{backend:t,attrs:n}=e,{start:a,stop:o,step:r,dtype:s}=n,i=Jt(a,o,r,s);return t.makeTensorInfo([i.length],s,i)},ec={kernelName:o.Range,backendName:"webgl",kernelFunc:$i},tc=ta({opSnippet:"return 1.0 / x;"}),nc={kernelName:o.Reciprocal,backendName:"webgl",kernelFunc:tc},ac=ta({opSnippet:An+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),oc={kernelName:o.Relu,backendName:"webgl",kernelFunc:ac},rc=ta({opSnippet:An+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),sc={kernelName:o.Relu6,backendName:"webgl",kernelFunc:rc};class ic{constructor(e,t,n,a,o){this.variableNames=["A"],this.outputShape=[];const[r,s,i,c]=e;this.outputShape=[r,t,n,c];const l=[a&&t>1?s-1:s,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=o?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(s,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class cc{constructor(e,t,n,a,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,s,i,c]=e;this.outputShape=[r,t,n,c];const l=[a&&t>1?s-1:s,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=o?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(s,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const lc={kernelName:o.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:c}=a,[l,u]=c,d=(0,o.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new cc(r.shape,l,u,s,i):new ic(r.shape,l,u,s,i);return n.runWebGLProgram(d,[r],"float32")}};class uc{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,o]=t,[,r,s]=e,i=[n&&r>1?a-1:a,n&&s>1?o-1:o],c=[n&&r>1?r-1:r,n&&s>1?s-1:s],l=i[0]/c[0],u=i[1]/c[1],d=1/l,h=1/u,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(h,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(r,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(s,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(o-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const dc={kernelName:o.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:o,dy:r}=t,{alignCorners:s}=a,i=new uc(r.shape,o.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}};class hc{constructor(e,t,n,a,o){this.variableNames=["A"],this.outputShape=[];const[r,s,i,c]=e;this.outputShape=[r,t,n,c];const l=[a&&t>1?s-1:s,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let h;h=o?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(s,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class pc{constructor(e,t,n,a,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,s,i,c]=e;this.outputShape=[r,t,n,c];const l=[a&&t>1?s-1:s,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let h;h=o?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(s,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const fc={kernelName:o.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:c}=a,[l,u]=c,d=(0,o.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new pc(r.shape,l,u,s,i):new hc(r.shape,l,u,s,i);return n.runWebGLProgram(d,[r],r.dtype)}};class gc{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,o]=t,[,r,s]=e,i=[n&&r>1?a-1:a,n&&s>1?o-1:o],c=[n&&r>1?r-1:r,n&&s>1?s-1:s],l=i[0]/c[0],u=i[1]/c[1],d=1/l,h=1/u,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(h,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(r,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(s,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(o,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const mc={kernelName:o.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:o,dy:r}=t,{alignCorners:s}=a,i=new gc(r.shape,o.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}};class xc{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=e,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(e[0]," - coord - 1));\n        }\n      "));const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),o=ae(n);this.userCode="\n      void main() {\n        ".concat(o," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class vc{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=e;const a=yn("rc",n),o="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),r="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),s=ae(n);function i(n){const a=e.map(((a,o)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(o,n))),o=a.join(","),r=a.slice(-2).join(",");return"getChannel(getX(".concat(o,"), vec2(").concat(r,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(e[0]," - rc - 1),\n            ").concat(e[0]," - rc - 1);\n          if(").concat(o,"){\n              result.g = getChannel(getX(").concat(e[0]," - (rc  + 1) - 1),\n                ").concat(e[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(s," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(e){return i(e)}(a.slice()),";\n          if(").concat(o,"){\n            result.g = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(a.slice()),";\n          }\n          if(").concat(r,") {\n            result.b = ").concat(function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            if(").concat(o,") {\n              result.a = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const bc={kernelName:o.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=r.shape.length,c=o.util.parseAxisParam(s,r.shape);if(0===i)return Yn({inputs:{x:r},backend:n});const l=(0,o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vc(r.shape,c):new xc(r.shape,c);return n.runWebGLProgram(l,[r],r.dtype)}};class yc{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let o="";o="number"===typeof t?"float outputValue = ".concat(t.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(t.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(o,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const wc={kernelName:o.RotateWithOffset,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:i,center:c}=n,l=a,u=new yc(r.shape,i),[d,h]=o.backend_util.getImageCenter(c,r.shape[1],r.shape[2]),p=[[d,h,Math.sin(s),Math.cos(s)]];return l.runWebGLProgram(u,[r],r.dtype,p)}},kc=ta({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Tc={kernelName:o.Round,backendName:"webgl",kernelFunc:kc},Cc=ta({opSnippet:"return inversesqrt(x);",cpuKernelImpl:$t}),Sc={kernelName:o.Rsqrt,backendName:"webgl",kernelFunc:Cc};class Ic{constructor(e,t,n,a,o,r){let s=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=r;const i=ae(o.length),c=ae(r.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const h="getUpdates(".concat(d,")");let p="";s&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),g=t>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(o,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(e,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(t,"; j++) {\n              int index = round(").concat(u,");\n              flattenedIndex += index * ").concat(g,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(h,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(f,", sum, float(found)));\n        }\n      ")}}class Ec{constructor(e,t,n,a,o,r){let s=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r;const i=ae(o.length),c=ae(r.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const h="getUpdates(".concat(d,")");let p="";s&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),g=t>1?"strides[j]":"strides",m=t>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(o,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(e,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(t,"; j+=2) {\n              ivec4 index = round(").concat(u,");\n              flattenedIndex += index.xz * ").concat(g,";\n              if (j + 1 < ").concat(t,") {\n                flattenedIndex += index.yw * ").concat(m,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(h,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(f,", sum, found));\n        }\n      ")}}const Ac={kernelName:o.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=o.backend_util.calculateShapes(s,r,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,r.dtype);const f=da({inputs:{x:r},backend:n,attrs:{shape:[l,c]}}),g=da({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let x;x=(0,o.env)().getBool("WEBGL_PACK")?new Ec(l,c,f.shape.length,g.shape.length,d,p):new Ic(l,c,f.shape.length,g.shape.length,d,p);const v=n.runWebGLProgram(x,[g,f,m],g.dtype),b=da({inputs:{x:v},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(m),b}};class Rc{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r="for (int i = 0; i < ".concat(Math.ceil(Math.log2(t+1)),"; ++i) { if (left >= right) break;"),s=2===(0,o.env)().getNumber("WEBGL_VERSION")?"while (left < right) {":r,i="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(s,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(i," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const Nc={kernelName:o.SearchSorted,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:o,values:r}=t,{side:s}=a,i=new Rc(o.shape[0],o.shape[1],r.shape[1],s),c=[[o.shape[1]]];return n.runWebGLProgram(i,[o,r],"int32",c)}};class _c{constructor(e,t,n){let a,o;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)o="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],s=[];for(let a=0;a<t.length;a++)s.push("".concat(n[a])),a<e&&r.push("".concat(n[a]));a=r.join(),o=s.join()}const r=ae(n);this.userCode="\n      void main() {\n        ".concat(r," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(o,"));\n        } else {\n          setOutput(getB(").concat(o,"));\n        }\n      }\n    ")}}const Fc={kernelName:o.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=new _c(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[a,r,s],(0,o.upcastType)(r.dtype,s.dtype))}},Dc=ta({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(o.backend_util.SELU_SCALEALPHA,";\n  float scale = ").concat(o.backend_util.SELU_SCALE,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),Oc={kernelName:o.Selu,backendName:"webgl",kernelFunc:Dc},Pc=ta({opSnippet:ea+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:tn}),Mc={kernelName:o.Sigmoid,backendName:"webgl",kernelFunc:Pc},Lc=ta({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Bc={kernelName:o.Sign,backendName:"webgl",kernelFunc:Lc},Wc=ta({opSnippet:ea+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Un,"\n  return result;\n")}),Gc={kernelName:o.Sin,backendName:"webgl",kernelFunc:Wc},Vc=ta({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Uc={kernelName:o.Sinh,backendName:"webgl",kernelFunc:Vc},zc=ta({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Yc={kernelName:o.Softplus,backendName:"webgl",kernelFunc:zc},Hc={kernelName:o.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;o.util.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const c=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let o=1+s.length;o<r.shape.length;++o)l.push([0,0]);const u=[],d=Hi({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=o.backend_util.getReshaped(d.shape,s,c,!1),p=o.backend_util.getPermuted(h.length,s.length,!1),f=o.backend_util.getReshapedPermuted(d.shape,s,c,!1),g=da({inputs:{x:d},backend:n,attrs:{shape:h}}),m=wa({inputs:{x:g},backend:n,attrs:{perm:p}}),x=da({inputs:{x:m},backend:n,attrs:{shape:f}});return u.push(d),u.push(g),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}};const Kc={kernelName:o.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:o,denseShape:r,defaultValue:s}=t;if(1!==r.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(r.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==o.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(o.shape));if(0!==s.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(s.shape));const i=n.readSync(a.dataId),c=n.readSync(o.dataId),l=n.readSync(r.dataId),u=n.readSync(s.dataId)[0],[d,h,p,f,g]=on(i,a.shape,a.dtype,c,o.dtype,l,u);return[n.makeTensorInfo(h,a.dtype,d),n.makeTensorInfo([h[0]],o.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],a.dtype,new Int32Array(g))]}};const jc={kernelName:o.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:o,newShape:r}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==o.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(o.shape));if(1!==r.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(r.shape));const s=Array.from(n.readSync(o.dataId)),i=n.readSync(a.dataId),c=Array.from(n.readSync(r.dataId)),[l,u,d]=rn(i,a.shape,a.dtype,s,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([d.length],r.dtype,new Int32Array(d))]}};const qc={kernelName:o.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:o,segmentIds:r}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==o.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(o.shape));if(1!==r.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(r.shape));const s=n.readSync(a.dataId),i=n.readSync(o.dataId),c=n.readSync(r.dataId),[l,u]=sn(s,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const Xc={kernelName:o.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:o,segmentIds:r}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==o.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(o.shape));if(1!==r.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(r.shape));const s=n.readSync(a.dataId),i=n.readSync(o.dataId),c=n.readSync(r.dataId),[l,u]=sn(s,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const Zc={kernelName:o.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:c}=a,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=o.backend_util.calculateShapes(s,r,c),f=!1;if("string"===s.dtype){const e=n.bufferSync(r),t=n.bufferSync(s),a=o.util.decodeString(n.readSync(i.dataId)[0]),g=en(e,t,c,p,d,u,l,h,a,f);return n.makeTensorInfo(c,g.dtype,g.values)}const g=new Ic(u,l,r.shape.length,s.shape.length,h,[p,1],f),m=n.runWebGLProgram(g,[s,r,i],s.dtype),x=da({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),x}};const Qc={kernelName:o.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,c=o.util.parseAxisParam(i,r.shape)[0],l=o.backend_util.prepareSplitSize(r,s,c),u=r.shape.length,d=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[c]=e;const a=vo({inputs:{x:r},backend:n,attrs:{begin:d,size:t}});return d[c]+=e,a}))}},Jc="return sqrt(x);",$c=ta({opSnippet:Jc,packedOpSnippet:Jc,cpuKernelImpl:cn}),el={kernelName:o.Sqrt,backendName:"webgl",kernelFunc:$c},tl=ta({opSnippet:"return x * x;"}),nl={kernelName:o.Square,backendName:"webgl",kernelFunc:tl},al="return (a - b) * (a - b);",ol=na({opSnippet:al,packedOpSnippet:al}),rl={kernelName:o.SquaredDifference,backendName:"webgl",kernelFunc:ol};const sl={kernelName:o.StaticRegexReplace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const s=n.readSync(r.dataId),i=o.backend_util.fromUint8ToStringArray(s),c=ln(i,"string",a);return n.makeTensorInfo(r.shape,"string",c)}};const il={kernelName:o.Step,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:o}=t,r=An+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),s=new En(o.shape,r);return a.runWebGLProgram(s,[o],o.dtype)}};class cl{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,o=ae(n.length),r=ae(n.length);let s="";if(1===a)s="coords * strides + begin";else{let e=0;s=n.map(((t,a)=>(e++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(e-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(o," begin = ").concat(o,"(").concat(e,");\n      ").concat(o," strides = ").concat(o,"(").concat(t,");\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(s,"));\n      }\n    ")}}const ll={kernelName:o.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:c,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=a,{finalShapeSparse:f,finalShape:g,isIdentity:m,sliceDim0:x,isSimpleSlice:v,begin:b,end:y,strides:w}=o.slice_util.sliceInfo(r.shape,s,i,c,l,u,d,h,p);let k;if(m)k=da({inputs:{x:r},backend:n,attrs:{shape:g}});else if(x||v){o.util.assert(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=o.slice_util.computeOutShape(b,y,w),t=vo({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});k=da({inputs:{x:t},backend:n,attrs:{shape:g}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=(0,o.buffer)(r.shape,r.dtype,e),a=un(f,t,w,b);k=n.makeTensorInfo(g,r.dtype,a.values)}else{const e=new cl(b,w,f);k=n.runWebGLProgram(e,[r],r.dtype)}}const T=da({inputs:{x:k},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(k),T}};const ul={kernelName:o.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:o,nGramWidths:r,leftPad:s,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:d}=t,h=n.readSync(u.dataId),p=n.readSync(d.dataId),[f,g]=dn(h,p,o,r,s,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",g)]}};const dl={kernelName:o.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:o}=a,{input:r,delimiter:s}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(1!==r.shape.length)throw new Error("Input must be a vector, got shape: ".concat(r.shape));if(0!==s.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(s.shape));const i=n.readSync(r.dataId),c=n.readSync(s.dataId)[0],[l,u,d]=hn(i,c,o),h=u.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const hl={kernelName:o.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:o}=a,{input:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const s=n.readSync(r.dataId),i=pn(s,o);return n.makeTensorInfo(r.shape,"int32",i)}},pl=ta({opSnippet:"return tan(x);"}),fl={kernelName:o.Tan,backendName:"webgl",kernelFunc:pl},gl=ta({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),ml={kernelName:o.Tanh,backendName:"webgl",kernelFunc:gl};const xl={kernelName:o.TensorScatterUpdate,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:s,updates:i}=t,{}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=o.backend_util.calculateShapes(i,s,r.shape),p=[h/u,u];if(0===h)return n.makeTensorInfo(r.shape,s.dtype);const f=da({inputs:{x:s},backend:n,attrs:{shape:[l,c]}}),g=da({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=da({inputs:{x:r},backend:n,attrs:{shape:p}}),x=new Ic(l,c,f.shape.length,g.shape.length,d,p,!1,!0),v=n.runWebGLProgram(x,[g,f,m],m.dtype),b=da({inputs:{x:v},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(v),b}};class vl{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const a=ae(this.rank),o=function(e){const t=e.length;if(t>5)throw Error("Tile for rank ".concat(t," is not yet supported"));if(1===t)return"imod(resRC, ".concat(e[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let o=0;o<e.length;o++)a.push("imod(".concat(n[o],", ").concat(e[o],")"));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(o,"));\n      }\n    ")}}function bl(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>o.util.decodeString(e))):e,a=(0,o.buffer)(r.shape,r.dtype,t),i=gn(a,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new vl(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}const yl={kernelName:o.Tile,backendName:"webgl",kernelFunc:bl};class wl{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class kl{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Tl(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function Cl(e){let t=1;for(;t<e;)t*=2;return t}const Sl={kernelName:o.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a,c=(0,o.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,o.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,d=u[u.length-1];if(n.shouldExecuteOnCPU([r])||d<c||s>l){const e=n.readSync(r.dataId),[t,a]=mn(e,u,r.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===d)return[r,ns({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),p=null!==h&&h.isPacked,f=p?n.unpackTensor(r):r,g=o.util.sizeFromShape(u)/d,m=da({inputs:{x:f},attrs:{shape:[g,d]},backend:n});p&&Tl(n,f);const x=Cl(s),v=Cl(d);let b=null;const y=()=>null===b?[m,m]:[m,b],w=(e,t,a)=>{const o=y(),r=new wl(a),s=[[d],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=b;b=n.runWebGLProgram(r,o,"int32",s),Tl(n,i)};for(let o=1;o<x;o*=2){const e=2*o;for(let t=o;t>=1;t/=2)w(e,t,[g,v])}for(let o=v;o>x;o/=2){const e=y(),t=new kl([g,o/2]),a=[[d],[null===b?1:0],[x]],r=b;b=n.runWebGLProgram(t,e,"int32",a),Tl(n,r);const s=x/2,i=2*s;for(let n=s;n>=1;n/=2)w(i,n,b.shape)}let k=b;b=vo({inputs:{x:b},backend:n,attrs:{begin:0,size:[g,s]}}),Tl(n,k);let T=ws({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});Tl(n,m);const C=u.slice(0,-1);C.push(s),k=b,b=da({inputs:{x:b},attrs:{shape:C},backend:n}),Tl(n,k);const S=T;return T=da({inputs:{x:T},attrs:{shape:C},backend:n}),Tl(n,S),[T,b]}};class Il{constructor(e,t,n,a,o,r){this.variableNames=["Image","Transforms"],this.outputShape=r;const s="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(e," && 0 <= coordX && coordX < ").concat(t,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(o,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(o,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(t,"));\n                float mapY = mapCoord(inY, float(").concat(e,"));\n\n                if (").concat(s," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const El={kernelName:o.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:o,transforms:r}=t,{interpolation:s,fillMode:i,fillValue:c,outputShape:l}=a,[u,d,h,p]=o.shape,[f,g]=null!=l?l:[d,h],m=new Il(d,h,s,i,c,[u,f,g,p]);return n.runWebGLProgram(m,[o,r],"float32")}};const Al={kernelName:o.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:o}=n,{x:r}=t;W(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=a.readSync(r.dataId),{outputValues:i,outputShape:c,indices:l}=vn(s,o,r.shape,r.dtype);return[a.makeTensorInfo(c,r.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const Rl={kernelName:o.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:o}=t;let{axis:r}=a;r<0&&(r+=o.shape.length);const s=o,i=s.shape.length,c=o.shape[r],l=new Array(i-1);let u=0;for(let g=0;g<i;g++)g!==r&&(l[u++]=s.shape[g]);const d=[],h=new Array(i).fill(0),p=s.shape.slice();p[r]=1;const f=new Array(c);for(let g=0;g<f.length;g++){h[r]=g;const e=vo({inputs:{x:s},backend:n,attrs:{begin:h,size:p}}),t=da({inputs:{x:e},backend:n,attrs:{shape:l}});f[g]=t,d.push(e)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class Nl{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,o=e.inSize,r=e.numSegments,s=r*Math.ceil(o/n);this.outputShape=[a,s];const i=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";o%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(o,") {\n          return initializationValue;\n        }\n      "));let d="";o%n>0&&(d="\n        if (inIdx < 0 || inIdx >= ".concat(o,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(d,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(r,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(r,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const _l=[Ca,Ia,Aa,Na,Da,Ma,La,Ba,Ya,Ha,ja,Xa,Qa,$a,to,oo,ro,co,lo,uo,fo,yo,wo,ko,To,Ao,_o,Oo,jn,Lo,Ho,$o,or,sr,ir,cr,lr,dr,pr,gr,wr,kr,Tr,Sr,Ar,_r,Fr,Or,Mr,Lr,Wr,Gr,Ur,Yr,Kr,qr,Qr,es,as,rs,cs,us,ps,ms,xs,bs,ks,Cs,Is,Hn,Es,Uo,Rs,_s,Ds,Zn,Ps,Ls,Bs,Gs,Us,Ys,Ks,qs,Qs,$s,ti,ai,oi,ri,ci,li,ui,di,hi,fi,xi,bi,Ai,ua,Ni,Fi,Oi,Mi,So,Bi,Vi,Ui,Ki,qi,$n,Xi,Zi,Qi,Ji,ec,Eo,ki,nc,oc,sc,ha,lc,dc,fc,mc,bc,wc,Tc,Sc,Ac,Nc,Fc,Oc,Mc,Bc,Gc,Uc,bo,Ei,Yc,Hc,Kc,jc,qc,Xc,Zc,Qc,el,nl,rl,sl,il,ll,ul,dl,hl,Si,ya,fl,ml,xl,yl,Sl,El,ka,Al,Rl,{kernelName:o.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a,c=r.shape.length,l=[];let u=0;const d=o.backend_util.getAxesPermutation([u],c);let h=r;null!=d&&(h=wa({inputs:{x:r},backend:n,attrs:{perm:d}}),l.push(h),u=o.backend_util.getInnerMostAxes(1,c)[0]);const p=o.backend_util.segment_util.computeOutShape(h.shape,u,i),f=o.util.sizeFromShape([h.shape[u]]),g=da({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});l.push(g);const m=(0,o.sumOutType)(r.dtype),x=(e,t,a,r,s)=>{const i=e.shape[0],c=e.shape[1],u=o.backend_util.segment_util.segOpComputeOptimalWindowSize(c,s),d=new Nl({windowSize:u,inSize:c,batchSize:i,numSegments:s},t),h=n.compileAndRun(d,[e,a],r);if(l.push(h),h.shape[1]===s)return h;const p=$i({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=bl({inputs:{x:p},backend:n,attrs:{reps:[c/u]}});l.push(p),l.push(f);return x(h,t,f,r,s)},v=da({inputs:{x:x(g,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:p}});let b=v;if(null!=d){l.push(v);const e=o.backend_util.getUndoAxesPermutation(d);b=wa({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},Gi];for(const Fl of _l)(0,o.registerKernel)(Fl)},46790:(e,t,n)=>{"use strict";n.d(t,{GJ:()=>a,uI:()=>o});class a{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class o{refCount(e){return r("refCount")}incRef(e){return r("incRef")}timerAvailable(){return!0}time(e){return r("time")}read(e){return r("read")}readSync(e){return r("readSync")}readToGPU(e,t){return r("readToGPU")}numDataIds(){return r("numDataIds")}disposeData(e,t){return r("disposeData")}write(e,t,n){return r("write")}move(e,t,n,a,o){return r("move")}createTensorFromGPUData(e,t,n){return r("createTensorFromGPUData")}memory(){return r("memory")}floatPrecision(){return r("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return r("dispose")}}function r(e){throw new Error("'".concat(e,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}},82164:(e,t,n)=>{"use strict";n.d(t,{T2:()=>y,Ye:()=>b});var a=n(46790),o=n(55399),r=n(97926),s=n(39554),i=n(10843),c=n(64124),l=n(58977),u=n(71426);class d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let a;const r=()=>{a=n()};let s;const i=l.now();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(const e of a)e.dataSync();s=Promise.resolve({kernelMs:l.now()-i})}if((0,o._K)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<a.length;o++){const t=a[o];t.data().then((n=>{h(n,t.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:o,extraInfo:r}=e;n.forEach((e=>{Promise.all([e.data(),a,r]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],o,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let a=0;a<e.length;a++){const t=e[a];if(isNaN(t)||!isFinite(t))return console.warn("Found ".concat(t," in the result of '").concat(n,"'")),!0}return!1}class p{logKernelProfile(e,t,n,a,o,r){const s="number"===typeof a?u.av("".concat(a,"ms"),9):a.error,i=u.av(e,25),c=t.rank,l=t.size,d=u.av(t.shape.toString(),14);let h="";for(const u in o){const e=o[u];if(null!=e){const n=e.shape||t.shape,a=n.length;h+="".concat(u,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(s,"\t%c").concat(c,"D ").concat(d,"\t%c").concat(l,"\t%c").concat(h,"\t%c").concat(r),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(79494),g=n(68804);function m(e){return null!=e.kernelName}class x{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class v{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new x}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error("The highest priority backend '".concat(e,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(c.i("".concat(e," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error("Backend name '".concat(e,"' not found in registry"));if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){(0,i.Op)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,i.Op)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error("Cannot initialize backend ".concat(e,", no registration found."));try{const n=t.factory();if(!n||n instanceof a.uI||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,c.i("Initialization of backend ".concat(e," failed")),c.i(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return c.i("Initialization of backend ".concat(e," failed")),c.i(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error("".concat(e," backend not found in registry"));this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:o}=this.initializeBackend(n);if(o||a)return{name:n,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,o=this.readSync(t),r=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,o,n.shape,n.dtype,r),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(a){throw t(),a}}nextTensorId(){return v.nextTensorId++}nextVariableId(){return v.nextVariableId++}clone(e){const t=y.runKernel(s.lzr,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return y.runKernel(s.KXH,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,i._5)(e,this.backendName)))throw new Error("Kernel '".concat(e,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let o=0;n.forEach((e=>{o+="complex64"===e.dtype?3:1}));const r=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=a-t-o-r;if(s>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(s," data ids) after running '").concat(e,"'"))}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),o=this.state.numBytes,r=this.state.numTensors;let s,c;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=m(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(m(e)){const{kernelName:t,inputs:o,attrs:r}=e;null==this.backendName&&this.backend;const l=(0,i._5)(t,this.backendName);u.vA(null!=l,(()=>"Cannot find registered kernel '".concat(t,"' for backend '").concat(this.backendName,"'"))),s=()=>{const e=this.backend.numDataIds();c=l.kernelFunc({inputs:o,attrs:r,backend:this.backend});const s=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,s);const i=s.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){const e=this.getTensorsForGradient(t,o,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,o=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};s=()=>{const e=this.backend.numDataIds();c=this.tidy((()=>t(this.backend,o)));const n=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:h}=e,p=m(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,(()=>s())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=s()})),a&&this.addTapeNode(l,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-r,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const a=(0,i.vQ)(e);if(null!=a){const e=a.inputsToSave||[],o=a.outputsToSave||[];let r;a.saveAllInputs?(u.vA(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),r=Object.keys(t).map((e=>t[e]))):r=e.map((e=>t[e]));const s=n.filter(((e,t)=>o[t]));return r.concat(s)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let o=e;"string"===n&&u.Kg(e[0])&&(o=e.map((e=>l.encodeString(e))));const r=a.write(o,t,n),s=new f.qY(t,n,r,this.nextTensorId());if(this.trackTensor(s,a),"string"===n){const e=this.state.tensorInfo.get(r),t=(0,u.SL)(o);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,n,a){const o={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(o,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:o}=e,r=new f.qY(a,o,n,this.nextTensorId());return this.trackTensor(r,t),r}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const o=new f.rT(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[o.name])throw new Error("Variable with name ".concat(o.name," was already registered"));return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*u.jv(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f.rT||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*u.jv(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,o,r){const s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:o},c=(0,i.vQ)(e);null!=c&&(a=c.gradFunc),null!=a&&(s.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=u.Ty(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],o,r))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,g.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let o=0;o<this.state.activeScope.track.length;o++){const e=this.state.activeScope.track[o];e.kept||n.has(e.id)||e.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(u.vA(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const o=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));u.vA(o instanceof f.qY,(()=>"The result y returned by f() must be a tensor."));const r=function(e,t,n){const a={},o={};for(let c=0;c<t.length;c++)a[t[c].id]=!0;for(let c=0;c<e.length;c++){const n=e[c],r=n.inputs;for(const e in r){const s=r[e];let i=!1;for(let e=0;e<t.length;e++)if(a[s.id]){n.outputs.forEach((e=>a[e.id]=!0)),i=!0,o[n.id]=!0;break}if(i)break}}const r={};r[n.id]=!0;const s={};for(let c=e.length-1;c>=0;c--){const t=e[c],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(r[t.outputs[e].id]){for(const e in n)r[n[e].id]=!0,s[t.id]=!0;break}}const i=[];for(let c=0;c<e.length;c++){const t=e[c];if(o[t.id]&&s[t.id]){const e={};for(const o in t.inputs){const n=t.inputs[o];a[n.id]&&(e[o]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,o);if(!a&&0===r.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[o.id]=null==n?function(e){const t=(0,u.FZ)((0,u.Ze)(e),"float32");return y.makeTensor(t,e,"float32")}(o.shape):n,function(e,t,n,a){for(let o=t.length-1;o>=0;o--){const r=t[o],s=[];if(r.outputs.forEach((t=>{const n=e[t.id];null!=n?s.push(n):s.push(null)})),null==r.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(r.kernelName,"."));const i=r.gradient(s);for(const t in r.inputs){if(!(t in i))throw new Error("Cannot backprop through input ".concat(t,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const o=n((()=>i[t]()));if("float32"!==o.dtype)throw new Error("Error in gradient for op ".concat(r.kernelName,". The gradient of input ")+"".concat(t," must have 'float32' dtype, but has '").concat(o.dtype,"'"));const s=r.inputs[t];if(!u.r1(o.shape,s.shape))throw new Error("Error in gradient for op ".concat(r.kernelName,". The gradient of input ")+"'".concat(t,"' has shape '").concat(o.shape,"', which does not match ")+"the shape of the input '".concat(s.shape,"'"));if(null==e[s.id])e[s.id]=o;else{const t=e[s.id];e[s.id]=a(t,o),t.dispose()}}}}(e,r,(e=>this.tidy(e)),w);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:o,grads:a}}))}customGrad(e){var t=this;return u.vA(u.Tn(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),o=0;o<n;o++)a[o]=arguments[o];let r;u.vA(a.every((e=>e instanceof f.qY)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};a.forEach(((e,t)=>{s[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(r=e(...a,n),u.vA(r.value instanceof f.qY,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),u.vA(u.Tn(r.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),r.value),backwardsFunc:(e,t)=>{const n=r.gradFunc(e,t),o=Array.isArray(n)?n:[n];u.vA(o.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),u.vA(o.every((e=>e instanceof f.qY)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const s={};return o.forEach(((e,t)=>{s[t]=()=>e})),s},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new x;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function b(){const e=(0,r.L)();if(null==e._tfengine){const t=new o.OH(e);e._tfengine=new v(t)}return(0,o.tj)(e._tfengine.ENV),(0,f.qP)((()=>e._tfengine)),e._tfengine}v.nextTensorId=0,v.nextVariableId=0;const y=b();function w(e,t){const n={a:e,b:t};return y.runKernel(s.OMN,n)}},55399:(e,t,n)=>{"use strict";n.d(t,{Km:()=>c,OH:()=>r,_K:()=>i,tj:()=>l});var a=n(71426);const o="tfjsflags";class r{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=s,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,"."))),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Setting feature override from URL ".concat(e,": ").concat(t,".")),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,a.yL)(t))throw new Error("Flag ".concat(e," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag ".concat(e," as it has not been registered."));this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '".concat(e,"': no evaluation function found."));return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(o in e){e[o].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:t}(0,n)}))}}}function s(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,a=new Array(n>1?n-1:0),o=1;o<n;o++)a[o-1]=arguments[o];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,a[0],a[1]),a.join("=")})),t}function i(){return c}let c=null;function l(e){c=e}},97926:(e,t,n)=>{"use strict";let a;function o(){if(null==a){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function r(e,t){const n=function(){const e=o();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}n.d(t,{L:()=>o,m:()=>r})},58046:(e,t,n)=>{"use strict";n.d(t,{AS:()=>m,DZ:()=>g,Gc:()=>y,Hi:()=>h,Hs:()=>I,IS:()=>l,ME:()=>f,Ok:()=>E,Sm:()=>i,W4:()=>C,aC:()=>x,fL:()=>u,gJ:()=>S,gY:()=>c,go:()=>T,jh:()=>b,jz:()=>w,kB:()=>v,m1:()=>p,rE:()=>k,rm:()=>d});var a=n(82164),o=n(55399),r=n(79494),s=n(68804);function i(){(0,o._K)().set("PROD",!0)}function c(){(0,o._K)().set("DEBUG",!0)}function l(){(0,o._K)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function u(e){(0,o._K)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){a.T2.disposeVariables()}function h(){return a.T2}function p(){return a.T2.memory()}function f(e){return a.T2.profile(e)}function g(e,t){return a.T2.tidy(e,t)}function m(e){(0,s.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function x(e){return a.T2.keep(e)}function v(e){return a.T2.time(e)}function b(e){return a.T2.setBackend(e)}function y(){return a.T2.ready()}function w(){return a.T2.backendName}function k(e){a.T2.removeBackend(e)}function T(e){return a.T2.findBackend(e)}function C(e){return a.T2.findBackendFactory(e)}function S(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return a.T2.registerBackend(e,t,n)}function I(){return a.T2.backend}function E(e,t){(0,o._K)().setPlatform(e,t)}(0,r.B4)(u)},1839:(e,t,n)=>{"use strict";n.d(t,{Dv:()=>i,_X:()=>h,jY:()=>l,mu:()=>u,ok:()=>c,y7:()=>d});var a=n(82164),o=n(79494),r=n(64148),s=n(71426);function i(e){return s.vA(s.Tn(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const o=(0,r.YT)(t,"x","tf.grad","string_or_numeric"),i=null!=n?(0,r.YT)(n,"dy","tf.grad"):null;return a.T2.tidy((()=>{const{value:t,grads:n}=a.T2.gradients((()=>e(o)),[o],i);return null!=i&&s.O3(t.shape,i.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),p(n),n[0]}))}}function c(e){return s.vA(s.Tn(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{s.vA(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const o=(0,r.j1)(t,"args","tf.grads","string_or_numeric"),i=null!=n?(0,r.YT)(n,"dy","tf.grads"):null;return a.T2.tidy((()=>{const{value:t,grads:n}=a.T2.gradients((()=>e(...o)),o,i);return null!=i&&s.O3(t.shape,i.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(n),n}))}}function l(e){return s.vA(s.Tn(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{s.vA(t instanceof o.qY,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),s.vA(null==n||n instanceof o.qY,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:i}=a.T2.gradients((()=>e(t)),[t],n);return p(r),{grad:r[0],value:i}}}function u(e){return s.vA(s.Tn(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{s.vA(Array.isArray(t)&&t.every((e=>e instanceof o.qY)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),s.vA(null==n||n instanceof o.qY,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=a.T2.gradients((()=>e(...t)),t,n);return null!=n&&s.O3(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(r.grads),r}}function d(e,t){s.vA(s.Tn(e),(()=>"The f passed in variableGrads(f) must be a function")),s.vA(null==t||Array.isArray(t)&&t.every((e=>e instanceof o.rT)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in a.T2.registeredVariables)t.push(a.T2.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,i=t.length;t=t.filter((e=>e.trainable)),s.vA(t.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(i," variables is ")+"trainable."));const{value:c,grads:l}=a.T2.gradients(e,t,null,!0);s.vA(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),s.vA(0===c.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(c.rank," tensor")));const u={};return t.forEach(((e,t)=>{null!=l[t]&&(u[e.name]=l[t])})),null!=r&&r.forEach((e=>u[e.name]=null)),{value:c,grads:u}}function h(e){return a.T2.customGrad(e)}function p(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},80400:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>bt.ljI,Acos:()=>bt.Vvy,Acosh:()=>bt.PH8,AdadeltaOptimizer:()=>Fe,AdagradOptimizer:()=>Oe,AdamOptimizer:()=>Le,AdamaxOptimizer:()=>Ge,Add:()=>bt.OMN,AddN:()=>bt.EkD,All:()=>bt.u8Z,Any:()=>bt.FSt,ArgMax:()=>bt.Jp_,ArgMin:()=>bt.p_m,Asin:()=>bt.QKF,Asinh:()=>bt.epO,Atan:()=>bt.TyE,Atan2:()=>bt.lxb,Atanh:()=>bt.zP9,AvgPool:()=>bt.ho8,AvgPool3D:()=>bt.cS,AvgPool3DGrad:()=>bt.wwC,AvgPoolGrad:()=>bt.VCH,BatchMatMul:()=>bt.jAQ,BatchToSpaceND:()=>bt.Ik2,Bincount:()=>bt.N4F,BitwiseAnd:()=>bt.HNs,BroadcastArgs:()=>bt.vj7,BroadcastTo:()=>bt.LB5,Cast:()=>bt.KXH,Ceil:()=>bt.QDP,ClipByValue:()=>bt.vaV,Complex:()=>bt.pr3,ComplexAbs:()=>bt.$zE,Concat:()=>bt.$dB,Conv2D:()=>bt.p2J,Conv2DBackpropFilter:()=>bt.rFm,Conv2DBackpropInput:()=>bt.jfg,Conv3D:()=>bt.A1h,Conv3DBackpropFilterV2:()=>bt.iGz,Conv3DBackpropInputV2:()=>bt.gC7,Cos:()=>bt.Mn0,Cosh:()=>bt.MnK,CropAndResize:()=>bt.MRQ,Cumprod:()=>bt.jj_,Cumsum:()=>bt.nY8,DataStorage:()=>ic.GJ,DenseBincount:()=>bt.wNW,DepthToSpace:()=>bt.TMz,DepthwiseConv2dNative:()=>bt.tGH,DepthwiseConv2dNativeBackpropFilter:()=>bt.X$8,DepthwiseConv2dNativeBackpropInput:()=>bt.nVu,Diag:()=>bt.ORI,Dilation2D:()=>bt.jxD,Dilation2DBackpropFilter:()=>bt.pk0,Dilation2DBackpropInput:()=>bt.bP9,Draw:()=>bt.XmO,ENV:()=>y.Km,Einsum:()=>bt.Qgm,Elu:()=>bt.Pah,EluGrad:()=>bt.rsH,Environment:()=>y.OH,Equal:()=>bt.BRl,Erf:()=>bt._s9,Exp:()=>bt.ox3,ExpandDims:()=>bt.ybN,Expm1:()=>bt.ybj,FFT:()=>bt.rGP,Fill:()=>bt.SQl,FlipLeftRight:()=>bt.BxF,Floor:()=>bt.ZgB,FloorDiv:()=>bt.ElG,FromPixels:()=>bt.awo,FusedBatchNorm:()=>bt.i5R,FusedConv2D:()=>bt.aAr,FusedDepthwiseConv2D:()=>bt.T7M,GatherNd:()=>bt.O4G,GatherV2:()=>bt.mxL,Greater:()=>bt.XhZ,GreaterEqual:()=>bt.lLS,IFFT:()=>bt.OAQ,Identity:()=>bt.lzr,Imag:()=>bt.dv8,IsFinite:()=>bt.gIW,IsInf:()=>bt.E3$,IsNan:()=>bt.iPs,KernelBackend:()=>ic.uI,LRN:()=>bt.jM4,LRNGrad:()=>bt.ToN,LeakyRelu:()=>bt.X0$,Less:()=>bt.mIA,LessEqual:()=>bt.CwD,LinSpace:()=>bt.mnI,Log:()=>bt.tG8,Log1p:()=>bt.Cg$,LogSoftmax:()=>bt.zfU,LogicalAnd:()=>bt.RUm,LogicalNot:()=>bt.nZd,LogicalOr:()=>bt.LXA,LogicalXor:()=>bt.RW8,LowerBound:()=>bt.yPW,MatrixBandPart:()=>bt.WRv,Max:()=>bt.VAI,MaxPool:()=>bt.t3d,MaxPool3D:()=>bt.ySp,MaxPool3DGrad:()=>bt.cHb,MaxPoolGrad:()=>bt.RXX,MaxPoolWithArgmax:()=>bt.TL8,Maximum:()=>bt.LDN,Mean:()=>bt.g5A,Min:()=>bt.lNG,Minimum:()=>bt.LG0,MirrorPad:()=>bt.x7F,Mod:()=>bt.BLA,MomentumOptimizer:()=>Ue,Multinomial:()=>bt.WT3,Multiply:()=>bt.xu7,Neg:()=>bt.l0G,NonMaxSuppressionV3:()=>bt.SDM,NonMaxSuppressionV4:()=>bt.Zl4,NonMaxSuppressionV5:()=>bt.e0f,NotEqual:()=>bt.ylV,OP_SCOPE_SUFFIX:()=>gt.B,OneHot:()=>bt.urI,OnesLike:()=>bt.LWX,Optimizer:()=>_e,OptimizerConstructors:()=>en,Pack:()=>bt.mM$,PadV2:()=>bt.ODT,Pool:()=>bt.bCz,Pow:()=>bt.pyJ,Prelu:()=>bt.Ncv,Prod:()=>bt.kdj,RMSPropOptimizer:()=>ze,RaggedGather:()=>bt.oJ2,RaggedRange:()=>bt.CQC,RaggedTensorToTensor:()=>bt.mH5,Range:()=>bt.Q6t,Rank:()=>tn.rg,Real:()=>bt.LRy,RealDiv:()=>bt.sDr,Reciprocal:()=>bt.huO,Reduction:()=>As,Relu:()=>bt.fUj,Relu6:()=>bt.P_L,Reshape:()=>bt.R23,ResizeBilinear:()=>bt.hgw,ResizeBilinearGrad:()=>bt.FCQ,ResizeNearestNeighbor:()=>bt.jOE,ResizeNearestNeighborGrad:()=>bt.XQy,Reverse:()=>bt.D7i,RotateWithOffset:()=>bt.BK4,Round:()=>bt.hVg,Rsqrt:()=>bt.TOR,SGDOptimizer:()=>Ve,ScatterNd:()=>bt.pJc,SearchSorted:()=>bt.uWl,Select:()=>bt.l6P,Selu:()=>bt.u$b,Sigmoid:()=>bt.vI1,Sign:()=>bt.YVe,Sin:()=>bt.hql,Sinh:()=>bt.J3C,Slice:()=>bt.JiE,Softmax:()=>bt.rFG,Softplus:()=>bt.Fin,SpaceToBatchND:()=>bt.A8B,SparseFillEmptyRows:()=>bt.C8s,SparseReshape:()=>bt.BoJ,SparseSegmentMean:()=>bt.L6G,SparseSegmentSum:()=>bt.DvZ,SparseToDense:()=>bt.jgd,SplitV:()=>bt.Blb,Sqrt:()=>bt.dFH,Square:()=>bt.M6A,SquaredDifference:()=>bt.Ddj,StaticRegexReplace:()=>bt.GZp,Step:()=>bt.pnw,StridedSlice:()=>bt.UcO,StringNGrams:()=>bt.YAb,StringSplit:()=>bt.iW0,StringToHashBucketFast:()=>bt.$jE,Sub:()=>bt.PbM,Sum:()=>bt.WuN,Tan:()=>bt.oFs,Tanh:()=>bt.iuW,Tensor:()=>ue.qY,TensorBuffer:()=>ue.yl,TensorScatterUpdate:()=>bt.X4r,Tile:()=>bt.FAs,TopK:()=>bt.TBb,Transform:()=>bt.dLy,Transpose:()=>bt.wx0,Unique:()=>bt.EwU,Unpack:()=>bt.dXR,UnsortedSegmentSum:()=>bt.pPe,UpperBound:()=>bt.RMm,Variable:()=>ue.rT,ZerosLike:()=>bt.xJ3,_FusedMatMul:()=>bt.Dr,abs:()=>Be.t,acos:()=>nn.H,acosh:()=>an.F,add:()=>xe.W,addN:()=>on,all:()=>rn.Q,any:()=>sn.b,argMax:()=>cn.F,argMin:()=>ln.X,asin:()=>un.q,asinh:()=>dn.y,atan:()=>hn.r,atan2:()=>pn.F,atanh:()=>fn.r,avgPool:()=>gn.$,avgPool3d:()=>vn,backend:()=>me.Hs,backend_util:()=>p,basicLSTMCell:()=>Tn,batchNorm:()=>Sn.$,batchNorm2d:()=>In,batchNorm3d:()=>En,batchNorm4d:()=>An,batchToSpaceND:()=>Cn.G,bincount:()=>Rn,bitwiseAnd:()=>Nn,booleanMaskAsync:()=>Ar,broadcastArgs:()=>_n,broadcastTo:()=>Fn.h,broadcast_util:()=>vt,browser:()=>i,buffer:()=>de,cast:()=>he.w,ceil:()=>Dn.m,clipByValue:()=>On.z,clone:()=>pe.o,complex:()=>Pn.f,concat:()=>bn.x,concat1d:()=>Mn,concat2d:()=>Ln,concat3d:()=>Bn,concat4d:()=>Wn,conv1d:()=>Gn.k,conv2d:()=>Vn.X,conv2dTranspose:()=>Un.w,conv3d:()=>zn,conv3dTranspose:()=>Hn,copyRegisteredKernels:()=>yt.Cf,cos:()=>Kn.g,cosh:()=>jn.y,cosineWindow:()=>Mr,cumprod:()=>qn.L,cumsum:()=>Xn.r,customGrad:()=>Te._X,denseBincount:()=>Zn,deprecationWarn:()=>me.fL,depthToSpace:()=>Qn.R,depthwiseConv2d:()=>Jn.G,device_util:()=>a,diag:()=>$n,dilation2d:()=>ea.X,disableDeprecationWarnings:()=>me.IS,dispose:()=>me.AS,disposeVariables:()=>me.rm,div:()=>ve.y,divNoNan:()=>ta.e,dot:()=>na.O,dropout:()=>Or,einsum:()=>aa,elu:()=>oa.P,enableDebugMode:()=>me.gY,enableProdMode:()=>me.Sm,enclosingPowerOfTwo:()=>Pr,engine:()=>me.Hi,ensureShape:()=>ra,env:()=>y._K,equal:()=>sa.L,erf:()=>ia.Y,euclideanNorm:()=>ca.p,exp:()=>la.o,expandDims:()=>ua.U,expm1:()=>da.I,eye:()=>pa,fft:()=>Jo.h,fill:()=>De.G,findBackend:()=>me.go,findBackendFactory:()=>me.W4,floor:()=>fa.R,floorDiv:()=>ga.w,fused:()=>d,gather:()=>ma.k,gatherND:()=>Dr,gather_util:()=>c,getBackend:()=>me.jz,getGradient:()=>yt.vQ,getKernel:()=>yt._5,getKernelsForBackend:()=>yt.Op,grad:()=>Te.Dv,grads:()=>Te.ok,greater:()=>xa.r,greaterEqual:()=>va.D,ifft:()=>$o.K,imag:()=>ba.n,image:()=>qs,inTopKAsync:()=>Lr,io:()=>r,irfft:()=>er.g,isFinite:()=>ya.M,isInf:()=>wa.E,isNaN:()=>ka.y,keep:()=>me.aC,kernel_impls:()=>f,leakyRelu:()=>Ta.H,less:()=>Ca.M,lessEqual:()=>Sa.I,linalg:()=>Xs,linspace:()=>Ia,localResponseNormalization:()=>Ea.K,log:()=>Aa.R,log1p:()=>Ra.K,logSigmoid:()=>Na.n,logSoftmax:()=>_a.H,logSumExp:()=>Fa.V,logicalAnd:()=>Da.n,logicalNot:()=>Oa.N,logicalOr:()=>Pa.z,logicalXor:()=>Ma.r,losses:()=>Zs,lowerBound:()=>Wa,matMul:()=>pt.N,math:()=>s,max:()=>Ga.T,maxPool:()=>Va.j,maxPool3d:()=>Ua,maxPoolWithArgmax:()=>za,maximum:()=>We.P,mean:()=>Ya.i,memory:()=>me.m1,meshgrid:()=>Ka,min:()=>ja.j,minimum:()=>qa.B,mirrorPad:()=>Xa.F,mod:()=>Za.z,moments:()=>Ja,movingAverage:()=>Nr,mul:()=>be.l,multiRNNCell:()=>$a,multinomial:()=>eo,neg:()=>to.H,nextFrame:()=>ti,norm:()=>Rr.x,notEqual:()=>no.E,oneHot:()=>ft.M,ones:()=>Ha.S,onesLike:()=>ao.P,op:()=>gt.op,outerProduct:()=>oo,pad:()=>ro.e,pad1d:()=>so,pad2d:()=>io,pad3d:()=>co,pad4d:()=>lo,pool:()=>uo.d,pow:()=>Pe.n,prelu:()=>ho.N,print:()=>fe,prod:()=>po._,profile:()=>me.ME,raggedGather:()=>fo,raggedRange:()=>go,raggedTensorToTensor:()=>mo,rand:()=>xo,randomGamma:()=>ko,randomNormal:()=>To,randomStandardNormal:()=>Co,randomUniform:()=>So,randomUniformInt:()=>Io,range:()=>Eo,ready:()=>me.Gc,real:()=>Ao.x,reciprocal:()=>Ro.V,registerBackend:()=>me.gJ,registerGradient:()=>yt.kr,registerKernel:()=>yt.tA,relu:()=>No.V,relu6:()=>_o.j,removeBackend:()=>me.rE,reshape:()=>xn.t,reverse:()=>Fo.B,reverse1d:()=>Do,reverse2d:()=>Oo,reverse3d:()=>Po,reverse4d:()=>Mo,rfft:()=>tr.z,round:()=>Lo.L,rsqrt:()=>Bo.Z,scalar:()=>Ce.d,scatterND:()=>_r,scatter_util:()=>l,searchSorted:()=>Ba,selu:()=>Wo.W,separableConv2d:()=>Go.w,serialization:()=>o,setBackend:()=>me.jh,setPlatform:()=>me.Ok,setdiff1dAsync:()=>Vo,sigmoid:()=>yn.r,sign:()=>Uo._,signal:()=>js,sin:()=>zo.F,sinh:()=>Yo.L,slice:()=>wn.d,slice1d:()=>Ho,slice2d:()=>Ko,slice3d:()=>jo,slice4d:()=>qo,slice_util:()=>Mt,softmax:()=>Xo.V,softplus:()=>Zo.l,spaceToBatchND:()=>Qo.e,sparse:()=>Qs,sparseToDense:()=>Fr,spectral:()=>Ks,split:()=>nr.l,sqrt:()=>ye.R,square:()=>we.E,squaredDifference:()=>ar.P,squeeze:()=>or.r,stack:()=>rr.t,step:()=>sr.P,stridedSlice:()=>ir.Y,string:()=>Js,sub:()=>Me.j,sum:()=>cr.c,sumOutType:()=>tn.ch,tan:()=>lr.M,tanh:()=>kn.y,tensor:()=>ur.O,tensor1d:()=>dr,tensor2d:()=>hr,tensor3d:()=>kt,tensor4d:()=>pr,tensor5d:()=>fr,tensor6d:()=>gr,tensorScatterUpdate:()=>mr,tensor_util:()=>Lt,test_util:()=>u,tidy:()=>me.DZ,tile:()=>ha.V,time:()=>me.kB,topk:()=>xr.r,train:()=>$s,transpose:()=>mt.m,truncatedNormal:()=>vr,unique:()=>br.A,unregisterGradient:()=>yt.rY,unregisterKernel:()=>yt.iP,unsortedSegmentSum:()=>yr.z,unstack:()=>wr.K,upcastType:()=>tn.Tu,upperBound:()=>kr,util:()=>Bt,valueAndGrad:()=>Te.jY,valueAndGrads:()=>Te.mu,variable:()=>Tr,variableGrads:()=>Te.y7,version_core:()=>$t,where:()=>Cr._,whereAsync:()=>Ir,zeros:()=>Er.U,zerosLike:()=>ke.P});var a={};n.r(a),n.d(a,{isBrowser:()=>b,isMobile:()=>v,mockIsMobile:()=>x});var o={};n.r(o),n.d(o,{Serializable:()=>Ee,SerializationMap:()=>Ae,getRegisteredName:()=>Ne,registerClass:()=>Re});var r={};n.r(r),n.d(r,{CompositeArrayBuffer:()=>A.D,browserFiles:()=>qe,browserHTTPRequest:()=>ot,concatenateArrayBuffers:()=>k.AQ,copyModel:()=>ae,decodeWeights:()=>k.CY,decodeWeightsStream:()=>k.s5,encodeWeights:()=>k.aG,fromMemory:()=>ct,fromMemorySync:()=>lt,getLoadHandlers:()=>E,getModelArtifactsForJSON:()=>k.Ej,getModelArtifactsForJSONSync:()=>k.Rl,getModelArtifactsInfoForJSON:()=>k.oR,getSaveHandlers:()=>I,getWeightSpecs:()=>k.Xf,http:()=>at,isHTTPScheme:()=>tt,listModels:()=>te,loadWeights:()=>Je,moveModel:()=>oe,registerLoadRouter:()=>S,registerSaveRouter:()=>C,removeModel:()=>ne,weightsLoaderFactory:()=>$e,withSaveHandler:()=>ut,withSaveHandlerSync:()=>dt});var s={};n.r(s),n.d(s,{confusionMatrix:()=>xt});var i={};n.r(i),n.d(i,{draw:()=>Nt,fromPixels:()=>_t,fromPixelsAsync:()=>Et,toPixels:()=>Rt});var c={};n.r(c),n.d(c,{prepareAndValidate:()=>Ft});var l={};n.r(l),n.d(l,{calculateShapes:()=>Pt,validateInput:()=>Ot,validateUpdateShape:()=>Dt});var u={};n.r(u),n.d(u,{TEST_EPSILON_FLOAT16:()=>Gt,createVideoElement:()=>Qt,encodeStrings:()=>Zt,expectArrayBuffersEqual:()=>Xt,expectArraysClose:()=>Vt,expectArraysEqual:()=>Ht,expectNumbersClose:()=>Kt,expectPromiseToFail:()=>Yt,expectValuesInRange:()=>qt,play:()=>Jt,testEpsilon:()=>Ut});var d={};n.r(d),n.d(d,{conv2d:()=>Yr,depthwiseConv2d:()=>jr,matMul:()=>qr});var h={};n.r(h),n.d(h,{collectGatherOpShapeInfo:()=>oc,computeOutShape:()=>ac,segOpComputeOptimalWindowSize:()=>nc});var p={};n.r(p),n.d(p,{ERF_A1:()=>bi,ERF_A2:()=>yi,ERF_A3:()=>wi,ERF_A4:()=>ki,ERF_A5:()=>Ti,ERF_P:()=>vi,PARALLELIZE_THRESHOLD:()=>li,RowPartitionType:()=>oi,SELU_SCALE:()=>xi.X,SELU_SCALEALPHA:()=>xi.j,applyActivation:()=>Ur,assertAndGetBroadcastShape:()=>vt.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>Qa.WC,assertParamsConsistent:()=>ni,assignToTypedArray:()=>Ni,axesAreInnerMostDims:()=>Qa.WH,calculateShapes:()=>Pt,checkEinsumDimSizes:()=>Wi,checkPadOnDimRoundingMode:()=>mn.s_,combineLocations:()=>Qa.aF,combineRaggedTensorToTensorShapes:()=>ri,complexWithEvenIndex:()=>Ei,complexWithOddIndex:()=>Ai,computeConv2DInfo:()=>mn.uf,computeConv3DInfo:()=>mn.p$,computeDefaultPad:()=>mn.G8,computeDilation2DInfo:()=>mn.YQ,computeOptimalWindowSize:()=>ui,computeOutAndReduceShapes:()=>Qa.lb,computeOutShape:()=>ai,computePool2DInfo:()=>mn.E6,computePool3DInfo:()=>mn.l5,convertConv2DDataFormat:()=>mn.$Q,decodeEinsumEquation:()=>Li,eitherStridesOrDilationsAreOne:()=>mn.G0,expandShapeToKeepDim:()=>Qa.SM,exponent:()=>Fi,exponents:()=>_i,fromStringArrayToUint8:()=>sc,fromUint8ToStringArray:()=>rc,getAxesPermutation:()=>Qa.Em,getBroadcastDims:()=>vt.getBroadcastDims,getComplexWithIndex:()=>Ri,getEinsumComputePath:()=>Gi,getEinsumPermutation:()=>Bi,getFusedBiasGradient:()=>Vr,getFusedDyActivation:()=>Gr,getImageCenter:()=>di,getInnerMostAxes:()=>Qa.fK,getPermuted:()=>pi,getRaggedRank:()=>ii,getReductionAxes:()=>vt.getReductionAxes,getReshaped:()=>hi,getReshapedPermuted:()=>fi,getRowPartitionTypesHelper:()=>si,getSliceBeginCoords:()=>gi,getSliceSize:()=>mi,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Yi,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Hi,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Ki,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Xi,getSparseReshapeInputOutputMismatchErrorMessage:()=>Qi,getSparseReshapeInputOutputMultipleErrorMessage:()=>Zi,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>ji,getSparseReshapeNegativeOutputDimErrorMessage:()=>qi,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>tc,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Ji,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>$i,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>ec,getUndoAxesPermutation:()=>Qa.gx,isIdentityPermutation:()=>Vi,log:()=>Ci.R,mergeRealAndImagArrays:()=>Si,prepareAndValidate:()=>Ft,prepareSplitSize:()=>zi,segment_util:()=>h,shouldFuse:()=>zr,slice_util:()=>Mt,splitRealAndImagArrays:()=>Ii,stridesOrDilationsArePositive:()=>mn.qk,tupleValuesAreOne:()=>mn.Dh,upcastType:()=>tn.Tu,validateDefaultValueShape:()=>ci,validateInput:()=>Ot,validateUpdateShape:()=>Dt,warn:()=>Ci.i});var f={};n.r(f),n.d(f,{nonMaxSuppressionV3Impl:()=>cs,nonMaxSuppressionV4Impl:()=>ls,nonMaxSuppressionV5Impl:()=>us,whereImpl:()=>Sr});var g=n(82164);let m;function x(e){m=e}function v(e){if(void 0!==m)return m;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function b(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}var y=n(55399);const w=(0,y._K)();w.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),w.registerFlag("IS_BROWSER",(()=>b())),w.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),w.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),w.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),w.registerFlag("PROD",(()=>!1)),w.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>w.getBool("DEBUG"))),w.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),w.registerFlag("IS_TEST",(()=>!1)),w.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>w.getBool("DEBUG"))),w.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),w.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),w.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var k=n(70285);class T{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==T.instance&&(T.instance=new T),T.instance}static registerSaveRouter(e){T.getInstance().saveRouters.push(e)}static registerLoadRouter(e){T.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return T.getHandlers(e,"save")}static getLoadHandlers(e,t){return T.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?T.getInstance().loadRouters:T.getInstance().saveRouters).forEach((t=>{const o=t(e,n);null!==o&&a.push(o)})),a}}const C=e=>T.registerSaveRouter(e),S=e=>T.registerLoadRouter(e),I=e=>T.getSaveHandlers(e),E=(e,t)=>T.getLoadHandlers(e,t);var A=n(39512);const R="tensorflowjs",N="models_store",_="model_info_store";function F(){if(!(0,y._K)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function D(e){const t=e.result;t.createObjectStore(N,{keyPath:"modelPath"}),t.createObjectStore(_,{keyPath:"modelPath"})}class O{constructor(e){if(this.indexedDB=F(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(R,1);a.onupgradeneeded=()=>D(a),a.onsuccess=()=>{const o=a.result;if(null==t){const t=o.transaction(N,"readonly"),a=t.objectStore(N).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return o.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));e(a.result.modelArtifacts)},a.onerror=e=>(o.close(),n(a.error)),t.oncomplete=()=>o.close()}else{t.weightData=A.D.join(t.weightData);const a=(0,k.oR)(t),s=o.transaction(_,"readwrite");let i,c,l=s.objectStore(_);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(r){return n(r)}i.onsuccess=()=>{c=o.transaction(N,"readwrite");const i=c.objectStore(N);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(r){return n(r)}u.onsuccess=()=>e({modelArtifactsInfo:a}),u.onerror=e=>{l=s.objectStore(_);const t=l.delete(this.modelPath);t.onsuccess=()=>(o.close(),n(u.error)),t.onerror=e=>(o.close(),n(u.error))}},i.onerror=e=>(o.close(),n(i.error)),s.oncomplete=()=>{null==c?o.close():c.oncomplete=()=>o.close()}}},a.onerror=e=>n(a.error)}))}}O.URL_SCHEME="indexeddb://";const P=e=>{return(0,y._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(O.URL_SCHEME)?(t=e.slice(O.URL_SCHEME.length),new O(t)):null;var t};T.registerSaveRouter(P),T.registerLoadRouter(P);class M{constructor(){this.indexedDB=F()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(R,1);n.onupgradeneeded=()=>D(n),n.onsuccess=()=>{const a=n.result,o=a.transaction(_,"readonly"),r=o.objectStore(_).getAll();r.onsuccess=()=>{const t={};for(const e of r.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},r.onerror=e=>(a.close(),t(r.error)),o.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(O.URL_SCHEME)?t.slice(O.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(R,1);a.onupgradeneeded=()=>D(a),a.onsuccess=()=>{const o=a.result,r=o.transaction(_,"readwrite"),s=r.objectStore(_),i=s.get(e);let c;i.onsuccess=()=>{if(null==i.result)return o.close(),n(new Error("Cannot find model with path '".concat(e,"' ")+"in IndexedDB."));{const a=s.delete(e),r=()=>{c=o.transaction(N,"readwrite");const a=c.objectStore(N).delete(e);a.onsuccess=()=>t(i.result.modelArtifactsInfo),a.onerror=e=>n(i.error)};a.onsuccess=r,a.onerror=e=>(r(),o.close(),n(i.error))}},i.onerror=e=>(o.close(),n(i.error)),r.oncomplete=()=>{null==c?o.close():c.oncomplete=()=>o.close()}},a.onerror=e=>n(a.error)}))}}var L=n(71426);const B="/",W="tensorflowjs_models",G="info",V="model_topology",U="weight_specs",z="weight_data",Y="model_metadata";function H(e){return{info:[W,e,G].join(B),topology:[W,e,V].join(B),weightSpecs:[W,e,U].join(B),weightData:[W,e,z].join(B),modelMetadata:[W,e,Y].join(B)}}function K(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function j(e){const t=e.split(B);if(t.length<3)throw new Error("Invalid key format: ".concat(e));return t.slice(1,t.length-1).join(B)}class q{constructor(e){if(!(0,y._K)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=H(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),o=(0,k.oR)(e),r=A.D.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,(0,k.l3)(r));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:o}}catch(t){throw K(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(o.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(o.weightSpecsBytes,", ")+"weightDataBytes=".concat(o.weightDataBytes,"."))}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");t.weightSpecs=a;const o=this.LS.getItem(this.keys.modelMetadata);if(null!=o){const e=JSON.parse(o);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const r=this.LS.getItem(this.keys.weightData);if(null==r)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return t.weightData=(0,k.jf)(r),t}}q.URL_SCHEME="localstorage://";const X=e=>{return(0,y._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(q.URL_SCHEME)?(t=e.slice(q.URL_SCHEME.length),new q(t)):null;var t};T.registerSaveRouter(X),T.registerLoadRouter(X);class Z{constructor(){(0,L.vA)((0,y._K)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,L.vA)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=W+B,n=B+G;for(let a=0;a<this.LS.length;++a){const o=this.LS.key(a);if(o.startsWith(t)&&o.endsWith(n)){e[j(o)]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){var t;const n=H(e=(t=e).startsWith(q.URL_SCHEME)?t.slice(q.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(e,"'"));const a=JSON.parse(this.LS.getItem(n.info));return K(n),a}}const Q="://";class J{constructor(){this.managers={}}static getInstance(){return null==J.instance&&(J.instance=new J),J.instance}static registerManager(e,t){(0,L.vA)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Q)&&(e=e.slice(0,e.indexOf(Q))),(0,L.vA)(e.length>0,(()=>"scheme must not be an empty string."));const n=J.getInstance();(0,L.vA)(null==n.managers[e],(()=>"A model store manager is already registered for scheme '".concat(e,"'."))),n.managers[e]=t}static getManager(e){const t=J.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '".concat(e,"'"));return t}static getSchemes(){return Object.keys(J.getInstance().managers)}}function $(e){if(-1===e.indexOf(Q))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(J.getSchemes().join(",")));return{scheme:e.split(Q)[0],path:e.split(Q)[1]}}async function ee(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];(0,L.vA)(e!==t,(()=>"Old path and new path are the same: '".concat(e,"'")));const a=T.getLoadHandlers(e);(0,L.vA)(a.length>0,(()=>"Copying failed because no load handler is found for source URL ".concat(e,"."))),(0,L.vA)(a.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(e,".")));const o=a[0],r=T.getSaveHandlers(t);(0,L.vA)(r.length>0,(()=>"Copying failed because no save handler is found for destination "+"URL ".concat(t,"."))),(0,L.vA)(r.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(t,".")));const s=r[0],i=$(e).scheme,c=$(e).path,l=i===$(e).scheme,u=await o.load();n&&l&&await J.getManager(i).removeModel(c);const d=await s.save(u);return n&&!l&&await J.getManager(i).removeModel(c),d.modelArtifactsInfo}async function te(){const e=J.getSchemes(),t={};for(const n of e){const e=await J.getManager(n).listModels();for(const a in e){t[n+Q+a]=e[a]}}return t}async function ne(e){const t=$(e);return J.getManager(t.scheme).removeModel(t.path)}async function ae(e,t){return ee(e,t,!1)}async function oe(e,t){return ee(e,t,!0)}var re=n(55767);class se{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got ".concat(t));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&(0,y._K)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return(0,re.Y)(e)}}if((0,y._K)().get("IS_BROWSER")){(0,y._K)().setPlatform("browser",new se);try{J.registerManager(q.URL_SCHEME,new Z)}catch(cc){}try{J.registerManager(O.URL_SCHEME,new M)}catch(cc){}}const ie=()=>n(85817);let ce;class le{constructor(){this.util=n(18590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,y._K)().global.fetch?(0,y._K)().global.fetch(e,t):(null==ce&&(ce=ie()),ce(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(t));return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}(0,y._K)().get("IS_NODE")&&!(0,y._K)().get("IS_BROWSER")&&(0,y._K)().setPlatform("node",new le);var ue=n(79494);function de(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",L.SA(e),new ue.yl(e,t,n)}var he=n(47794),pe=n(49820);function fe(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}(0,g.Ye)();const ge={buffer:de,cast:he.w,clone:pe.o,print:fe};(0,ue.Q5)(ge);var me=n(58046),xe=n(87242),ve=n(24974),be=n(20803),ye=n(70191),we=n(7738),ke=n(63290),Te=n(1839),Ce=n(51997);const Se=new Map,Ie=new Map;class Ee{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ae{constructor(){this.classNameMap={}}static getMap(){return null==Ae.instance&&(Ae.instance=new Ae),Ae.instance}static register(e){Ae.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Re(e,t,n){(0,L.vA)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,L.vA)("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,L.vA)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const a=t+">"+n;return Ae.register(e),Se.set(a,e),Ie.set(e,a),e}function Ne(e){return Ie.has(e)?Ie.get(e):e.className}class _e extends Ee{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:o}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:o[e.name]})));this.applyGradients(e)}else this.applyGradients(o);return(0,me.AS)(o),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,Te.y7)(e,t)}dispose(){null!=this.iterations_&&(0,me.AS)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,Ce.d)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(_e,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Fe extends _e{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=g.T2.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=g.T2.registeredVariables[t],o=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(t,"/accum_grad"),variable:(0,me.DZ)((()=>(0,ke.P)(a).variable(o)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(t,"/accum_var"),variable:(0,me.DZ)((()=>(0,ke.P)(a).variable(o)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,me.DZ)((()=>{const e=(0,xe.W)((0,be.l)(s,this.rho),(0,be.l)((0,we.E)(r),1-this.rho)),t=(0,be.l)((0,ve.y)((0,ye.R)((0,xe.W)(i,this.epsilon)),(0,ye.R)((0,xe.W)(s,this.epsilon))),r),n=(0,xe.W)((0,be.l)(i,this.rho),(0,be.l)((0,we.E)(t),1-this.rho));s.assign(e),i.assign(n);const o=(0,xe.W)((0,be.l)(t,-this.learningRate),a);a.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,me.AS)(this.accumulatedGrads.map((e=>e.variable))),(0,me.AS)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}var De=n(24660);class Oe extends _e{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=g.T2.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:"".concat(t,"/accumulator"),variable:(0,me.DZ)((()=>(0,De.G)(a.shape,this.initialAccumulatorValue).variable(e)))}}const o=Array.isArray(e)?e[n].tensor:e[t];if(null==o)return;const r=this.accumulatedGrads[n].variable;(0,me.DZ)((()=>{const e=(0,xe.W)(r,(0,we.E)(o));r.assign(e);const t=(0,xe.W)((0,be.l)((0,ve.y)(o,(0,ye.R)((0,xe.W)(e,g.T2.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,me.AS)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}var Pe=n(77587),Me=n(37951);class Le extends _e{static get className(){return"Adam"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,me.DZ)((()=>{this.accBeta1=(0,Ce.d)(t).variable(),this.accBeta2=(0,Ce.d)(n).variable()})),null==a&&(this.epsilon=g.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,me.DZ)((()=>{const n=(0,Me.j)(1,this.accBeta1),a=(0,Me.j)(1,this.accBeta2);t.forEach(((t,o)=>{const r=g.T2.registeredVariables[t],s=!1;null==this.accumulatedFirstMoment[o]&&(this.accumulatedFirstMoment[o]={originalName:"".concat(t,"/m"),variable:(0,me.DZ)((()=>(0,ke.P)(r).variable(s)))}),null==this.accumulatedSecondMoment[o]&&(this.accumulatedSecondMoment[o]={originalName:"".concat(t,"/v"),variable:(0,me.DZ)((()=>(0,ke.P)(r).variable(s)))});const i=Array.isArray(e)?e[o].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[o].variable,l=this.accumulatedSecondMoment[o].variable,u=(0,xe.W)((0,be.l)(c,this.beta1),(0,be.l)(i,1-this.beta1)),d=(0,xe.W)((0,be.l)(l,this.beta2),(0,be.l)((0,we.E)(i),1-this.beta2)),h=(0,ve.y)(u,n),p=(0,ve.y)(d,a);c.assign(u),l.assign(d);const f=(0,xe.W)((0,be.l)((0,ve.y)(h,(0,xe.W)((0,ye.R)(p),this.epsilon)),-this.learningRate),r);r.assign(f)})),this.accBeta1.assign((0,be.l)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,be.l)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,me.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,me.AS)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,me.DZ)((()=>{this.accBeta1.assign((0,Pe.n)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,Pe.n)(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}var Be=n(33753),We=n(82131);class Ge extends _e{static get className(){return"Adamax"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,me.DZ)((()=>{this.iteration=(0,Ce.d)(0).variable(),this.accBeta1=(0,Ce.d)(t).variable()})),null==a&&(this.epsilon=g.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,me.DZ)((()=>{const n=(0,Me.j)(1,this.accBeta1),a=(0,ve.y)(-this.learningRate,(0,xe.W)((0,be.l)(this.iteration,this.decay),1));t.forEach(((t,o)=>{const r=g.T2.registeredVariables[t],s=!1;null==this.accumulatedFirstMoment[o]&&(this.accumulatedFirstMoment[o]={originalName:"".concat(t,"/m"),variable:(0,ke.P)(r).variable(s)}),null==this.accumulatedWeightedInfNorm[o]&&(this.accumulatedWeightedInfNorm[o]={originalName:"".concat(t,"/v"),variable:(0,ke.P)(r).variable(s)});const i=Array.isArray(e)?e[o].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[o].variable,l=this.accumulatedWeightedInfNorm[o].variable,u=(0,xe.W)((0,be.l)(c,this.beta1),(0,be.l)(i,1-this.beta1)),d=(0,be.l)(l,this.beta2),h=(0,Be.t)(i),p=(0,We.P)(d,h);c.assign(u),l.assign(p);const f=(0,xe.W)((0,be.l)((0,ve.y)(a,n),(0,ve.y)(u,(0,xe.W)(p,this.epsilon))),r);r.assign(f)})),this.iteration.assign((0,xe.W)(this.iteration,1)),this.accBeta1.assign((0,be.l)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,me.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,me.AS)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Ve extends _e{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const o=g.T2.registeredVariables[t];(0,me.DZ)((()=>{const e=(0,xe.W)((0,be.l)(this.c,a),o);o.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,me.aC)((0,Ce.d)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Ue extends Ve{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,Ce.d)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=g.T2.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:"".concat(t,"/momentum"),variable:(0,me.DZ)((()=>(0,ke.P)(a).variable(e)))}}const o=this.accumulations[n].variable,r=Array.isArray(e)?e[n].tensor:e[t];null!=r&&(0,me.DZ)((()=>{let e;const t=(0,xe.W)((0,be.l)(this.m,o),r);e=this.useNesterov?(0,xe.W)((0,be.l)(this.c,(0,xe.W)(r,(0,be.l)(t,this.m))),a):(0,xe.W)((0,be.l)(this.c,t),a),o.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,me.AS)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class ze extends _e{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,null==a&&(this.epsilon=g.T2.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=g.T2.registeredVariables[t],o=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(t,"/rms"),variable:(0,me.DZ)((()=>(0,ke.P)(a).variable(o)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(t,"/momentum"),variable:(0,me.DZ)((()=>(0,ke.P)(a).variable(o)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(t,"/mg"),variable:(0,me.DZ)((()=>(0,ke.P)(a).variable(o)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;(0,me.DZ)((()=>{const e=(0,xe.W)((0,be.l)(s,this.decay),(0,be.l)((0,we.E)(r),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,o=(0,xe.W)((0,be.l)(t,this.decay),(0,be.l)(r,1-this.decay)),c=(0,ve.y)((0,be.l)(r,this.learningRate),(0,ye.R)((0,Me.j)(e,(0,xe.W)((0,we.E)(o),this.epsilon)))),l=(0,xe.W)((0,be.l)(i,this.momentum),c);s.assign(e),t.assign(o),i.assign(l);const u=(0,Me.j)(a,l);a.assign(u)}else{const e=(0,xe.W)((0,be.l)(s,this.decay),(0,be.l)((0,we.E)(r),1-this.decay)),t=(0,xe.W)((0,be.l)(i,this.momentum),(0,ve.y)((0,be.l)(r,this.learningRate),(0,ye.R)((0,xe.W)(e,this.epsilon))));s.assign(e),i.assign(t);const n=(0,Me.j)(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,me.AS)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,me.AS)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,me.AS)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Ye=[Fe,Oe,Le,Ge,Ue,ze,Ve];function He(e){return new Promise((e=>setTimeout(e))).then(e)}class Ke{constructor(e){if(!(0,y._K)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ke.URL_SCHEME)&&(e=e.slice(Ke.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=A.D.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],a=(0,k.zV)(e,t),o=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=o,await He((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await He((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:(0,k.oR)(e)}}}}Ke.URL_SCHEME="downloads://";class je{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(e));this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),o=a.modelTopology;if(null==o)return void t(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==a.weightsManifest)return void t(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void e({modelTopology:o});const r=(0,k.Ej)(a,(e=>this.loadWeights(e)));e(r)},n.onerror=e=>t("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const a=this.checkManifestAndWeightFiles(e),o=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(o).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{const o=new FileReader;o.onload=e=>{const t=e.target.result;n(t)},o.onerror=t=>a("Failed to weights data from file of path '".concat(e,"'.")),o.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>(0,k.P8)(e.name))),a={};for(const o of e)o.paths.forEach((e=>{const o=(0,k.P8)(e);if(-1!==t.indexOf(o))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(o,"'"));if(t.push(o),-1===n.indexOf(o))throw new Error("Weight file with basename '".concat(o,"' is not provided."));a[e]=this.weightsFiles[n.indexOf(o)]}));if(t.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(t.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return a}}function qe(e){return new je(e)}function Xe(e,t,n,a){!function(e){(0,L.vA)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,L.vA)(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(e))),(0,L.vA)(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(t))),(0,L.vA)(t>=e,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(e," and endFraction ")+"".concat(t)))}(n=null==n?0:n,a=null==a?1:a);let o=0;return Promise.all(e.map((r=>(r.then((r=>{const s=n+ ++o/e.length*(a-n);return t(s),r})),r))))}T.registerSaveRouter((e=>(0,y._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ke.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Ke(e)}(e.slice(Ke.URL_SCHEME.length)):null));var Ze=n(71042);async function Qe(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,y._K)().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),o=(null==t.onProgress?await Promise.all(a):await Xe(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(o):await Xe(o,t.onProgress,.5,1)}async function Je(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return $e((e=>Qe(e,{requestInit:a})))(e,t,n)}function $e(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0;const o=t.map((()=>!1)),r={},s=null!=a?a.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const c="quantization"in e?e.quantization.dtype:e.dtype,l=Ze.i[c]*L.Ze(e.shape),u=()=>{o[t]=!0,null==r[t]&&(r[t]=[]),r[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=a?a.forEach(((t,n)=>{t===e.name&&(u(),s[n]=!0)})):u(),i.push(e.name),n+=l}))})),!s.every((e=>e))){const e=a.filter(((e,t)=>!s[t]));throw new Error("Could not find weights in manifest with names: "+"".concat(e.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=o.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];c.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const u=await e(l),d={};let h=0;return c.forEach((e=>{const n=t[e].paths.length,a=new A.D(u.slice(h,h+n));r[e].forEach((e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=(0,k.CY)(t,[e.manifestEntry]);for(const a in n)d[a]=n[a]})),h+=n})),d}}class et{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,L.vA)("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,y._K)().platform.fetch,(0,L.vA)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,L.vA)(2===e.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(e.length,")."))),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],a=(0,k.zV)(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(a)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=A.D.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:(0,k.oR)(e),responses:[o]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(o.status,"."))}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(e.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let t;try{t=await e.json()}catch(o){let e="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return(0,k.Ej)(e,(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=(0,k.Xf)(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?(0,y._K)().platform.fetch:t.fetchFunc;let o,r=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var s;r<e.length;){if(!o){const n=(await a(e[r],t.requestInit,{isBinary:!0})).body;o=n.getReader()}const{done:i,value:c}=await o.read();if(!i)return void n.enqueue(c);r++,o=void 0,null===(s=t.onProgress)||void 0===s||s.call(t,r/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),o=n>t?e.substring(n):"";return[a+"/",o]}(t),o=this.weightPathPrefix||n,r=[],s=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?s.push(this.weightUrlConverter(e)):r.push(o+e+a);return this.weightUrlConverter&&r.push(...await Promise.all(s)),r}async loadWeights(e){const t=await this.getWeightUrls(e);return[(0,k.Xf)(e),await Qe(t,this.loadOptions)]}}function tt(e){return null!=e.match(et.URL_SCHEME_REGEX)}et.URL_SCHEME_REGEX=/^https?:\/\//;const nt=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>tt(e))):tt(e),n)return at(e,t)}return null};function at(e,t){return new et(e,t)}function ot(e,t){return at(e,t)}T.registerSaveRouter(nt),T.registerLoadRouter(nt);class rt{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class st{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class it{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function ct(e,t,n,a){return new it(lt(...arguments))}function lt(e,t,n,a){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new rt(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rt({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rt({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a})}function ut(e){return new st(e)}function dt(e){return new st(e)}var ht=n(64148),pt=n(5162),ft=n(26865),gt=n(47892),mt=n(2154);const xt=(0,gt.op)({confusionMatrix_:function(e,t,n){const a=(0,ht.YT)(e,"labels","confusionMatrix"),o=(0,ht.YT)(t,"predictions","confusionMatrix");L.vA(null==n||n>0&&Number.isInteger(n),(()=>"If provided, numClasses must be a positive integer, "+"but got ".concat(n))),L.vA(1===a.rank,(()=>"Expected the rank of labels to be 1, but got ".concat(a.rank))),L.vA(1===o.rank,(()=>"Expected the rank of predictions to be 1, "+"but got ".concat(o.rank))),L.vA(a.shape[0]===o.shape[0],(()=>"Mismatch in the number of examples: "+"".concat(a.shape[0]," vs. ").concat(o.shape[0],". ")+"Labels and predictions should have the same number of elements.")),L.vA(n>0&&Number.isInteger(n),(()=>"numClasses is required to be a positive integer, but got "+"".concat(n)));const r=(0,ft.M)((0,he.w)(a,"int32"),n),s=(0,ft.M)((0,he.w)(o,"int32"),n),i=(0,mt.m)(r),c=(0,pt.N)(i,s);return(0,he.w)(c,"int32")}});var vt=n(48805),bt=n(39554),yt=n(10843),wt=n(79914);function kt(e,t,n){if((0,L.HO)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const a=(0,ht.MZ)(e,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,wt.Q)(e,t,a,n)}let Tt,Ct=!1;function St(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,o=!1,r=!1,s=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)o=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)r=!0;else if(null!=e.getContext)s=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(e.constructor.name));i=!0}if(null!=(0,yt._5)(bt.awo,g.T2.backendName)){const n={pixels:e},a={numChannels:t};return g.T2.runKernel(bt.awo,n,a)}const[c,l]=o?[e.videoWidth,e.videoHeight]:[e.width,e.height];let u,d;if(s)u=e.getContext("2d").getImageData(0,0,c,l).data;else if(a||n)u=e.data;else if(r||o||i){if(null==Tt)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Tt=new OffscreenCanvas(1,1).getContext("2d")}else Tt=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Tt.canvas.width=c,Tt.canvas.height=l,Tt.drawImage(e,0,0,c,l),u=Tt.getImageData(0,0,c,l).data}if(4===t)d=new Int32Array(u);else{const e=c*l;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=u[4*n+e]}return kt(d,[l,c,t],"int32")}function It(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Et(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if((0,y._K)().getBool("WRAP_TO_IMAGEBITMAP")&&It(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(a){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return St(n,t)}function At(e){if(2!==e.rank&&3!==e.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(e.rank,"."));const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(t));if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error("Unsupported type for toPixels: ".concat(e.dtype,".")+" Please use float32 or int32 tensors.")}async function Rt(e,t){let n=(0,ht.YT)(e,"img","toPixels");if(!(e instanceof ue.qY)){const e=n;n=(0,he.w)(e,"int32"),e.dispose()}At(n);const[a,o]=n.shape.slice(0,2),r=2===n.rank?1:n.shape[2],s=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(o*a*4);for(let l=0;l<a*o;++l){const e=[0,0,0,255];for(let a=0;a<r;a++){const t=s[l*r+a];if("float32"===n.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===n.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===r?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[a]=t*i}const t=4*l;c[t+0]=Math.round(e[0]),c[t+1]=Math.round(e[1]),c[t+2]=Math.round(e[2]),c[t+3]=Math.round(e[3])}if(null!=t){if(!Ct){null!=(0,yt._5)(bt.XmO,g.T2.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),Ct=!0)}t.width=o,t.height=a;const e=t.getContext("2d"),n=new ImageData(c,o,a);e.putImageData(n,0,0)}return n!==e&&n.dispose(),c}function Nt(e,t,n){let a=(0,ht.YT)(e,"img","draw");if(!(e instanceof ue.qY)){const e=a;a=(0,he.w)(e,"int32"),e.dispose()}At(a),function(e){const t=(null===e||void 0===e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error("Alpha value ".concat(t," is suppoed to be in range [0 - 1]."))}(null===n||void 0===n?void 0:n.imageOptions);const o={image:a},r={canvas:t,options:n};g.T2.runKernel(bt.XmO,o,r)}const _t=(0,gt.op)({fromPixels_:St});function Ft(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(t.shape[a-1]," vs. ").concat(n));if(0===(0,L.Ze)(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(e.shape,"."));const o=t.shape,r=o[o.length-1];let s=1;for(let d=0;d<o.length-1;++d)s*=o[d];const i=e.shape,c=o.slice();c.pop();let l=1;for(let d=r;d<n;++d)l*=i[d],c.push(i[d]);const u=[...(0,L.Ur)(e.shape).map((e=>e/l)),1].slice(0,r);return[c,s,l,u]}function Dt(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,r="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(t.shape,", shape: ").concat(e)+", sliceDim: ".concat(a,", and batchDim: ").concat(o,".");if(n.rank<o)throw new Error(r+" update.rank < ".concat(o,". "));if(e.length<a+(n.rank-o))throw new Error(r+" Output shape length < ".concat(a+(n.rank-o)));if(n.rank!==o+e.length-a)throw new Error(r+" update.rank != ".concat(o+e.length-a));for(let s=0;s<o;++s)if(n.shape[s]!==t.shape[s])throw new Error(r+" updates.shape[".concat(s,"] (").concat(n.shape[s],") != indices.shape[").concat(s,"] (").concat(t.shape[s],")."));for(let s=0;s<n.rank-o;++s)if(n.shape[s+o]!==e[s+a])throw new Error(r+" updates.shape[".concat(s+o,"] (").concat(n.shape[s+o],") != shape[").concat(s+o,"] (").concat(e[s+o],")"))}function Ot(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(t.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: ".concat(t.shape));if(0===e.size)throw new Error("Updates specified for empty output. updates shape: ".concat(e.shape))}Dt(n,t,e)}function Pt(e,t,n){const a=t.shape.length,o=a>1?t.shape[a-1]:1,r=n.length;let s=1;for(let c=o;c<r;++c)s*=n[c];const i=o<1?1:o;return{sliceRank:o,numUpdates:(0,L.Ze)(t.shape)/i,sliceSize:s,strides:[...(0,L.Ur)(n.slice(0,o)),1],outputSize:(0,L.Ze)(n)}}var Mt=n(34642),Lt=n(68804),Bt=n(58977);const Wt=.001,Gt=.1;function Vt(e,t,n){return null==n&&(n=Ut()),zt(e,t,((e,t)=>jt(e,t,n)))}function Ut(){return 32===g.T2.backend.floatPrecision()?Wt:Gt}function zt(e,t,n){let a=!0;if(((0,Bt.isTypedArray)(e)||(0,Bt.isTypedArray)(t))&&(a=!1),(0,Bt.isTypedArray)(e)&&(0,Bt.isTypedArray)(t)&&(a=!0),a){const n=e.constructor.name,a=t.constructor.name;if(n!==a)throw new Error("Arrays are of different type. Actual: ".concat(n,". ")+"Expected: ".concat(a))}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,ht.MZ)(e),a=(0,ht.MZ)(t);if(!(0,L.r1)(n,a))throw new Error("Arrays have different shapes. "+"Actual: [".concat(n,"]. Expected: [").concat(a,"]"))}const o=(0,Bt.isTypedArray)(e)?e:(0,Bt.flatten)(e),r=(0,Bt.isTypedArray)(t)?t:(0,Bt.flatten)(t);if(o.length!==r.length)throw new Error("Arrays have different lengths actual: ".concat(o.length," vs ")+"expected: ".concat(r.length,".\n")+"Actual:   ".concat(o,".\n")+"Expected: ".concat(r,"."));for(let s=0;s<r.length;++s){const e=o[s],t=r[s];if(!n(e,t))throw new Error("Arrays differ: actual[".concat(s,"] = ").concat(e,", expected[").concat(s,"] = ").concat(t,".\n")+"Actual:   ".concat(o,".\n")+"Expected: ".concat(r,"."))}"undefined"!==typeof expect&&expect().nothing()}function Yt(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!==typeof expect&&expect().nothing()}function Ht(e,t){const n="string"===typeof t||"number"===typeof t||"boolean"===typeof t?[t]:t;return(0,L.Kg)(e)||(0,L.Kg)(e[0])||(0,L.Kg)(t)||(0,L.Kg)(t[0])?zt(e,n,((e,t)=>e==t)):zt(e,t,((e,t)=>jt(e,t,0)))}function Kt(e,t,n){if(null==n&&(n=Ut()),!jt(e,t,n))throw new Error("Numbers differ: actual === ".concat(e,", expected === ").concat(t));"undefined"!==typeof expect&&expect().nothing()}function jt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function qt(e,t,n){for(let a=0;a<e.length;a++)if(e[a]<t||e[a]>n)throw new Error("Value out of range:".concat(e[a]," low: ").concat(t,", high: ").concat(n))}function Xt(e,t){const n=new Float32Array(e),a=new Float32Array(t);if(n.length!==a.length)throw new Error("Expected ArrayBuffer to be of length "+"".concat(a.length,", but it was ").concat(n.length));for(let o=0;o<a.length;o++)if(n[o]!==a[o])throw new Error("Expected ArrayBuffer value at ".concat(o," to be ")+"".concat(a[o]," but got ").concat(n[o]," instead"))}function Zt(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Zt(n):e[t]=(0,Bt.encodeString)(n)}return e}function Qt(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function Jt(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}const $t="4.22.0";class en{static sgd(e){return new Ve(e)}static momentum(e,t){return new Ue(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new ze(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Le(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Fe(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Ge(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Oe(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}}var tn=n(38075),nn=n(4759),an=n(40983);const on=(0,gt.op)({addN_:function(e){L.vA(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),L.vA(e.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(e.length)));const t=e.map(((e,t)=>(0,ht.YT)(e,"tensors".concat(t),"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!L.r1(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=t;return g.T2.runKernel(bt.EkD,a)}});var rn=n(51802),sn=n(41819),cn=n(23068),ln=n(58482),un=n(13010),dn=n(46464),hn=n(7803),pn=n(46349),fn=n(48147),gn=n(28650),mn=n(17538),xn=n(45583);const vn=(0,gt.op)({avgPool3d_:function(e,t,n,a,o){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const s=(0,ht.YT)(e,"x","avgPool3d","float32");let i=s,c=!1;4===s.rank&&(c=!0,i=(0,xn.t)(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),L.vA(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),L.vA("NDHWC"===r,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(r))),L.vA("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),(0,mn.s_)("avgPool3d",a,o);const l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:o,dataFormat:r};let d=g.T2.runKernel(bt.cS,l,u);return d=(0,he.w)(d,i.dtype),c?(0,xn.t)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var bn=n(94429),yn=n(74213),wn=n(10463),kn=n(66532);const Tn=(0,gt.op)({basicLSTMCell_:function(e,t,n,a,o,r){const s=(0,ht.YT)(e,"forgetBias","basicLSTMCell"),i=(0,ht.YT)(t,"lstmKernel","basicLSTMCell"),c=(0,ht.YT)(n,"lstmBias","basicLSTMCell"),l=(0,ht.YT)(a,"data","basicLSTMCell"),u=(0,ht.YT)(o,"c","basicLSTMCell"),d=(0,ht.YT)(r,"h","basicLSTMCell"),h=(0,bn.x)([l,d],1),p=(0,pt.N)(h,i),f=(0,xe.W)(p,c),g=f.shape[0],m=f.shape[1]/4,x=[g,m],v=(0,wn.d)(f,[0,0],x),b=(0,wn.d)(f,[0,m],x),y=(0,wn.d)(f,[0,2*m],x),w=(0,wn.d)(f,[0,3*m],x),k=(0,xe.W)((0,be.l)((0,yn.r)(v),(0,kn.y)(b)),(0,be.l)(u,(0,yn.r)((0,xe.W)(s,y))));return[k,(0,be.l)((0,kn.y)(k),(0,yn.r)(w))]}});var Cn=n(2557),Sn=n(27237);const In=(0,gt.op)({batchNorm2d_:function(e,t,n,a,o,r){const s=(0,ht.YT)(e,"x","batchNorm"),i=(0,ht.YT)(t,"mean","batchNorm"),c=(0,ht.YT)(n,"variance","batchNorm");let l,u;return null!=o&&(l=(0,ht.YT)(o,"scale","batchNorm")),null!=a&&(u=(0,ht.YT)(a,"offset","batchNorm")),L.vA(2===s.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(s.rank,"."))),L.vA(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),L.vA(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&L.vA(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&L.vA(2===u.rank||1===u.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,"."))),(0,Sn.$)(s,i,c,u,l,r)}});const En=(0,gt.op)({batchNorm3d_:function(e,t,n,a,o,r){const s=(0,ht.YT)(e,"x","batchNorm"),i=(0,ht.YT)(t,"mean","batchNorm"),c=(0,ht.YT)(n,"variance","batchNorm");let l,u;return null!=o&&(l=(0,ht.YT)(o,"scale","batchNorm")),null!=a&&(u=(0,ht.YT)(a,"offset","batchNorm")),L.vA(3===s.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(s.rank,"."))),L.vA(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),L.vA(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&L.vA(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&L.vA(3===u.rank||1===u.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,"."))),(0,Sn.$)(s,i,c,u,l,r)}});const An=(0,gt.op)({batchNorm4d_:function(e,t,n,a,o,r){const s=(0,ht.YT)(e,"x","batchNorm"),i=(0,ht.YT)(t,"mean","batchNorm"),c=(0,ht.YT)(n,"variance","batchNorm");let l,u;return null!=o&&(l=(0,ht.YT)(o,"scale","batchNorm")),null!=a&&(u=(0,ht.YT)(a,"offset","batchNorm")),L.vA(4===s.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(s.rank,"."))),L.vA(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),L.vA(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&L.vA(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&L.vA(4===u.rank||1===u.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,"."))),(0,Sn.$)(s,i,c,u,l,r)}});const Rn=(0,gt.op)({bincount_:function(e,t,n){const a=(0,ht.YT)(e,"x","bincount"),o=(0,ht.YT)(t,"weights","bincount");L.vA("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),L.vA(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),L.vA(o.size===a.size||0===o.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(o.shape,".")));const r={x:a,weights:o},s={size:n};return g.T2.runKernel(bt.N4F,r,s)}});const Nn=(0,gt.op)({bitwiseAnd_:function(e,t){const n=(0,ht.YT)(e,"x","bitwiseAnd"),a=(0,ht.YT)(t,"y","bitwiseAnd");if(!(0,L.r1)(n.shape,a.shape))throw new Error("BitwiseAnd: Tensors must have the same shape. x: ".concat(n.shape,", y: ").concat(a.shape));if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error("BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ".concat(n.dtype," and type of y: ").concat(a.dtype));const o={a:n,b:a};return g.T2.runKernel(bt.HNs,o)}});const _n=(0,gt.op)({broadcastArgs_:function(e,t){const n=(0,ht.YT)(e,"s0","broadcastArgs","int32"),a=(0,ht.YT)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). "+"Has rank ".concat(n.rank));if(1!==a.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). "+"Has rank ".concat(a.rank));const o={s0:n,s1:a};return g.T2.runKernel(bt.vj7,o)}});var Fn=n(4920),Dn=n(95396),On=n(53829),Pn=n(86149);const Mn=(0,gt.op)({concat1d_:function(e){return(0,bn.x)(e,0)}});const Ln=(0,gt.op)({concat2d_:function(e,t){return(0,bn.x)(e,t)}});const Bn=(0,gt.op)({concat3d_:function(e,t){return(0,bn.x)(e,t)}});const Wn=(0,gt.op)({concat4d_:function(e,t){return(0,bn.x)(e,t)}});var Gn=n(89870),Vn=n(14969),Un=n(1137);const zn=(0,gt.op)({conv3d_:function(e,t,n,a){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const s=(0,ht.YT)(e,"x","conv3d"),i=(0,ht.YT)(t,"filter","conv3d");let c=s,l=!1;4===s.rank&&(l=!0,c=(0,xn.t)(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),L.vA(5===c.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(c.rank,"."))),L.vA(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),L.vA(c.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(c.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),L.vA((0,mn.G0)(n,r),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(r,"'"))),L.vA("NDHWC"===o,(()=>"Error in conv3d: got dataFormat of ".concat(o," but only NDHWC is currently supported."))),L.vA((0,mn.qk)(r),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),L.vA((0,mn.qk)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const u={x:c,filter:i},d={strides:n,pad:a,dataFormat:o,dilations:r},h=g.T2.runKernel(bt.A1h,u,d);return l?(0,xn.t)(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});var Yn=n(46410);const Hn=(0,gt.op)({conv3dTranspose_:function(e,t,n,a,o){const r=(0,ht.YT)(e,"x","conv3dTranspose"),s=(0,ht.YT)(t,"filter","conv3dTranspose");return(0,Yn.c)(n,r,s,a,o)}});var Kn=n(35894),jn=n(71164),qn=n(63739),Xn=n(97167);const Zn=(0,gt.op)({denseBincount_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const o=(0,ht.YT)(e,"x","denseBincount"),r=(0,ht.YT)(t,"weights","denseBincount");L.vA("int32"===o.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(o.dtype))),L.vA(o.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(o.rank,"."))),L.vA(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),L.vA(r.size===o.size||0===r.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(o.shape,", weights shape: ")+"".concat(r.shape,".")));const s={x:o,weights:r},i={size:n,binaryOutput:a};return g.T2.runKernel(bt.wNW,s,i)}});var Qn=n(41719),Jn=n(49899);const $n=(0,gt.op)({diag_:function(e){const t={x:(0,ht.YT)(e,"x","diag")};return g.T2.runKernel(bt.ORI,t)}});var ea=n(83789),ta=n(90044),na=n(36434);const aa=(0,gt.op)({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];const o=n.map(((e,t)=>(0,ht.YT)(e,"tensors".concat(t),"einsum"))),r={equation:e};return g.T2.runKernel(bt.Qgm,o,r)}});var oa=n(83645);const ra=(0,gt.op)({ensureShape_:function(e,t){const n=(0,ht.YT)(e,"x","ensureShape","string_or_numeric");if(!(0,L.e_)(n.shape,t))throw new Error("EnsureShape: Shape of tensor ".concat(n.shape," is not compatible with expected shape ").concat(t));return e}});var sa=n(37457),ia=n(48810),ca=n(28826),la=n(25462),ua=n(74023),da=n(72520),ha=n(43017);const pa=(0,gt.op)({eye_:function(e,t,n){null==t&&(t=e);const a=de([e,t],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),o=e<=t?e:t;for(let s=0;s<o;++s)a.set(1,s,s);const r=(0,xn.t)(a.toTensor(),[e,t]);if(null==n)return r;if(1===n.length)return(0,ha.V)((0,ua.U)(r,0),[n[0],1,1]);if(2===n.length)return(0,ha.V)((0,ua.U)((0,ua.U)(r,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,ha.V)((0,ua.U)((0,ua.U)((0,ua.U)(r,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});var fa=n(48587),ga=n(63612),ma=n(56178),xa=n(22759),va=n(9996),ba=n(21047),ya=n(9027),wa=n(76005),ka=n(13467),Ta=n(18076),Ca=n(58320),Sa=n(827);function Ia(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return g.T2.runKernel(bt.mnI,{},a)}var Ea=n(66584),Aa=n(75911),Ra=n(21386),Na=n(44824),_a=n(71194),Fa=n(42175),Da=n(45692),Oa=n(15344),Pa=n(47920),Ma=n(63708);const La=2147483648;const Ba=(0,gt.op)({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const a=(0,ht.YT)(e,"sortedSequence","searchSorted"),o=(0,ht.YT)(t,"values","searchSorted"),r=a.shape[a.shape.length-1],s=o.shape[o.shape.length-1],i=(0,xn.t)(a,[-1,r]),c=(0,xn.t)(o,[-1,s]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==c.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,L.Ze)(c.shape)>=La)throw new Error("values tensor size must less than ".concat(La));if(i.shape[1]>=La)throw new Error("trailing dim_size must less than ".concat(La," for int32 output type, was ").concat(i.shape[1]));const l={sortedSequence:i,values:c},u={side:n};return g.T2.runKernel(bt.uWl,l,u)}});function Wa(e,t){return Ba(e,t,"left")}var Ga=n(60891),Va=n(6044);const Ua=(0,gt.op)({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,o=arguments.length>4?arguments[4]:void 0,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const s=(0,ht.YT)(e,"x","maxPool3d");let i=s,c=!1;4===s.rank&&(c=!0,i=(0,xn.t)(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),L.vA(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),L.vA("NDHWC"===r,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(r))),(0,mn.s_)("maxPool3d",a,o);const l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:o,dataFormat:r},d=g.T2.runKernel(bt.ySp,l,u);return c?(0,xn.t)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const za=(0,gt.op)({maxPoolWithArgmax_:function(e,t,n,a){let o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const r={x:(0,ht.YT)(e,"x","maxPoolWithArgmax")},s={filterSize:t,strides:n,pad:a,includeBatchInIndex:o},i=g.T2.runKernel(bt.TL8,r,s);return{result:i[0],indexes:i[1]}}});var Ya=n(55396),Ha=n(44616);function Ka(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError("".concat(n," is not a valid third argument to meshgrid"));if(void 0===e)return[];let a=(0,ht.YT)(e,"x","meshgrid",e instanceof ue.qY?e.dtype:"float32");if(void 0===t)return[a];let o=(0,ht.YT)(t,"y","meshgrid",t instanceof ue.qY?t.dtype:"float32");const r=(0,L.Ze)(a.shape),s=(0,L.Ze)(o.shape);return"xy"===n?(a=(0,xn.t)(a,[1,-1]),o=(0,xn.t)(o,[-1,1]),[(0,pt.N)((0,Ha.S)([s,1],a.dtype),a),(0,pt.N)(o,(0,Ha.S)([1,r],o.dtype))]):(a=(0,xn.t)(a,[-1,1]),o=(0,xn.t)(o,[1,-1]),[(0,pt.N)(a,(0,Ha.S)([1,s],a.dtype)),(0,pt.N)((0,Ha.S)([r,1],o.dtype),o)])}var ja=n(21465),qa=n(6561),Xa=n(84252),Za=n(73617),Qa=n(19235);const Ja=(0,gt.op)({moments_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];e=(0,ht.YT)(e,"x","moments");const a=(0,L.Y6)(t,e.shape),o=(0,Ya.i)(e,a,n);let r=o.shape;n||(r=(0,Qa.SM)(o.shape,a));const s=(0,we.E)((0,Me.j)((0,he.w)(e,"float32"),(0,xn.t)(o,r)));return{mean:o,variance:(0,Ya.i)(s,a,n)}}});const $a=(0,gt.op)({multiRNNCell_:function(e,t,n,a){const o=(0,ht.YT)(t,"data","multiRNNCell"),r=(0,ht.j1)(n,"c","multiRNNCell"),s=(0,ht.j1)(a,"h","multiRNNCell");let i=o;const c=[];for(let d=0;d<e.length;d++){const t=e[d](i,r[d],s[d]);c.push(t[0]),c.push(t[1]),i=t[1]}const l=[],u=[];for(let d=0;d<c.length;d+=2)l.push(c[d]),u.push(c[d+1]);return[l,u]}});const eo=(0,gt.op)({multinomial_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const o=(0,ht.YT)(e,"logits","multinomial"),r=o.size,s=o.rank;if(r<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(r,"."));if(s>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(s));n=n||Math.random();const i={logits:1===s?(0,xn.t)(o,[1,-1]):o},c={numSamples:t,seed:n,normalized:a},l=g.T2.runKernel(bt.WT3,i,c);return 1===s?(0,xn.t)(l,[l.size]):l}});var to=n(1011),no=n(50135),ao=n(64100);const oo=(0,gt.op)({outerProduct_:function(e,t){const n=(0,ht.YT)(e,"v1","outerProduct"),a=(0,ht.YT)(t,"v2","outerProduct");L.vA(1===n.rank&&1===a.rank,(()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const o=(0,xn.t)(n,[-1,1]),r=(0,xn.t)(a,[1,-1]);return(0,pt.N)(o,r)}});var ro=n(85048);const so=(0,gt.op)({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,L.vA)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,ro.e)(e,[t],n)}});const io=(0,gt.op)({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,L.vA)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,ro.e)(e,t,n)}});const co=(0,gt.op)({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,L.vA)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,ro.e)(e,t,n)}});const lo=(0,gt.op)({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,L.vA)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,ro.e)(e,t,n)}});var uo=n(47751),ho=n(99855),po=n(29556);const fo=(0,gt.op)({raggedGather_:function(e,t,n,a){const o={paramsNestedSplits:e.map(((e,t)=>(0,ht.YT)(e,"tensors".concat(t),"raggedGather","int32"))),paramsDenseValues:(0,ht.YT)(t,"paramsDenseValues","raggedGather"),indices:(0,ht.YT)(n,"indices","raggedGather","int32")},r={outputRaggedRank:a},s=g.T2.runKernel(bt.oJ2,o,r);return{outputNestedSplits:s.slice(0,s.length-1),outputDenseValues:s[s.length-1]}}});const go=(0,gt.op)({raggedRange_:function(e,t,n){const a=(0,ht.YT)(e,"starts","raggedRange"),o={starts:a,limits:(0,ht.YT)(t,"limits","raggedRange",a.dtype),deltas:(0,ht.YT)(n,"deltas","raggedRange",a.dtype)},r=g.T2.runKernel(bt.CQC,o);return{rtNestedSplits:r[0],rtDenseValues:r[1]}}});const mo=(0,gt.op)({raggedTensorToTensor_:function(e,t,n,a,o){const r=(0,ht.YT)(e,"shape","raggedTensorToTensor","int32"),s=(0,ht.YT)(t,"values","raggedTensorToTensor"),i={shape:r,values:s,defaultValue:(0,ht.YT)(n,"defaultValue","raggedTensorToTensor",s.dtype),rowPartitionTensors:a.map(((e,t)=>(0,ht.YT)(e,"tensors".concat(t),"raggedTensorToTensor","int32")))},c={rowPartitionTypes:o};return g.T2.runKernel(bt.mH5,i,c)}});const xo=(0,gt.op)({rand_:function(e,t,n){(0,L.SA)(e);const a=(0,L.Ze)(e);let o=null;if(null==n||"float32"===n)o=new Float32Array(a);else if("int32"===n)o=new Int32Array(a);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));o=new Uint8Array(a)}for(let r=0;r<a;r++)o[r]=t();return g.T2.makeTensor(o,e,n)}});var vo=n(34334);class bo{constructor(e,t,n,a,o){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const r=o||Math.random();this.random=vo.alea(r.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,o,r;do{a=2*this.random()-1,o=2*this.random()-1,r=a*a+o*o}while(r>=1||0===r);const s=Math.sqrt(-2*Math.log(r)/r);e=this.mean+this.stdDev*a*s,t=this.mean+this.stdDev*o*s,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class yo{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;const o=a||Math.random();this.randu=vo.alea(o.toString()),this.randn=new bo(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,o,r;for(;;){do{a=this.randn.nextValue(),r=1+this.c*a}while(r<=0);if(r*=r*r,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-r+Math.log(r)),o=this.randu(),o<t||Math.log(o)<n)break}return r=1/this.beta*this.d*r,this.alpha<1&&(r*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(r)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class wo{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(e," - ").concat(t," <= 1 and dtype is not float"));this.random=vo.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const ko=(0,gt.op)({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",o=arguments.length>4?arguments[4]:void 0;if((0,L.SA)(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error("Unsupported data type ".concat(a));const r=new yo(t,n,a,o),s=de(e,a);for(let i=0;i<s.values.length;i++)s.values[i]=r.nextValue();return s.toTensor()}});const To=(0,gt.op)({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,o=arguments.length>4?arguments[4]:void 0;if((0,L.SA)(e),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const r=new bo(t,n,a,!1,o),s=de(e,a);for(let i=0;i<s.values.length;i++)s.values[i]=r.nextValue();return s.toTensor()}});const Co=(0,gt.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error("Unsupported data type ".concat(t));return To(e,0,1,t,n)}});const So=(0,gt.op)({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",o=arguments.length>4?arguments[4]:void 0;(0,L.SA)(e);const r=de(e,a),s=new wo(t,n,null,o);for(let i=0;i<r.values.length;i++)r.values[i]=s.nextValue();return r.toTensor()}});const Io=(0,gt.op)({randomUniformInt_:function(e,t,n,a){return So(e,t,n,"int32",a)}});function Eo(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const o={start:e,stop:t,step:n,dtype:a};return g.T2.runKernel(bt.Q6t,{},o)}var Ao=n(89477),Ro=n(46309),No=n(85251),_o=n(99721),Fo=n(47419);const Do=(0,gt.op)({reverse1d_:function(e){const t=(0,ht.YT)(e,"x","reverse");return L.vA(1===t.rank,(()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(t.rank,"."))),(0,Fo.B)(t,0)}});const Oo=(0,gt.op)({reverse2d_:function(e,t){const n=(0,ht.YT)(e,"x","reverse");return L.vA(2===n.rank,(()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,"."))),(0,Fo.B)(n,t)}});const Po=(0,gt.op)({reverse3d_:function(e,t){const n=(0,ht.YT)(e,"x","reverse");return L.vA(3===n.rank,(()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,"."))),(0,Fo.B)(n,t)}});const Mo=(0,gt.op)({reverse4d_:function(e,t){const n=(0,ht.YT)(e,"x","reverse");return L.vA(4===n.rank,(()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,"."))),(0,Fo.B)(n,t)}});var Lo=n(96509),Bo=n(26777),Wo=n(42022),Go=n(63117);const Vo=async function(e,t){const n=(0,ht.YT)(e,"x","setdiff1d"),a=(0,ht.YT)(t,"y","setdiff1d");L.vA(n.dtype===a.dtype,(()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(a.dtype,")."))),L.vA(1===n.rank,(()=>"x should be 1D tensor, but got x (".concat(n.shape,")."))),L.vA(1===a.rank,(()=>"y should be 1D tensor, but got y (".concat(a.shape,").")));const o=await n.data(),r=await a.data(),s=new Set(r);let i=0;for(let u=0;u<o.length;u++)s.has(o[u])||i++;const c=new ue.yl([i],n.dtype),l=new ue.yl([i],"int32");for(let u=0,d=0;u<o.length;u++)s.has(o[u])||(c.values[d]=o[u],l.values[d]=u,d++);return[c.toTensor(),l.toTensor()]};var Uo=n(25740),zo=n(49519),Yo=n(8143);const Ho=(0,gt.op)({slice1d_:function(e,t,n){const a=(0,ht.YT)(e,"x","slice1d");return L.vA(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),(0,wn.d)(a,[t],[n])}});const Ko=(0,gt.op)({slice2d_:function(e,t,n){const a=(0,ht.YT)(e,"x","slice2d");return L.vA(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),(0,wn.d)(a,t,n)}});const jo=(0,gt.op)({slice3d_:function(e,t,n){const a=(0,ht.YT)(e,"x","slice3d");return L.vA(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),(0,wn.d)(a,t,n)}});const qo=(0,gt.op)({slice4d_:function(e,t,n){const a=(0,ht.YT)(e,"x","slice4d");return L.vA(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),(0,wn.d)(a,t,n)}});var Xo=n(86719),Zo=n(9973),Qo=n(63585),Jo=n(63062),$o=n(1405),er=n(57307),tr=n(49486),nr=n(35181),ar=n(30208),or=n(60613),rr=n(901),sr=n(60319),ir=n(91231),cr=n(47382),lr=n(44894),ur=n(68032);function dr(e,t){(0,L.HO)(e);const n=(0,ht.MZ)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,wt.Q)(e,null,n,t)}function hr(e,t,n){if((0,L.HO)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=(0,ht.MZ)(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,wt.Q)(e,t,a,n)}function pr(e,t,n){if((0,L.HO)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=(0,ht.MZ)(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,wt.Q)(e,t,a,n)}function fr(e,t,n){if((0,L.HO)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=(0,ht.MZ)(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,wt.Q)(e,t,a,n)}function gr(e,t,n){if((0,L.HO)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=(0,ht.MZ)(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||a,(0,wt.Q)(e,t,a,n)}const mr=(0,gt.op)({tensorScatterUpdate_:function(e,t,n){const a=(0,ht.YT)(e,"tensor","tensorScatterupdate"),o=(0,ht.YT)(t,"indices","tensorScatterupdate","int32"),r=(0,ht.YT)(n,"updates","tensorScatterupdate");if(Ot(r,o,a.shape),a.dtype!==r.dtype)throw new Error("tensor and updates must have the same dtype, instead they are ".concat(a.dtype," and ").concat(r.dtype,"."));const s={tensor:a,indices:o,updates:r};return g.T2.runKernel(bt.X4r,s,{})}});var xr=n(92765);const vr=(0,gt.op)({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,o=arguments.length>4?arguments[4]:void 0;if((0,L.SA)(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const r=new bo(t,n,a,!0,o),s=de(e,a);for(let i=0;i<s.values.length;i++)s.values[i]=r.nextValue();return s.toTensor()}});var br=n(59694),yr=n(65149),wr=n(3984);function kr(e,t){return Ba(e,t,"right")}function Tr(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return g.T2.makeVariable(e,t,n,a)}var Cr=n(93986);function Sr(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const a=de(e,"int32"),o=de([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=a.indexToLoc(n[r]),s=r*e.length;o.values.set(t,s)}return o.toTensor()}const Ir=async function(e){const t=(0,ht.YT)(e,"condition","whereAsync","bool"),n=await t.data(),a=Sr(t.shape,n);return e!==t&&t.dispose(),a};var Er=n(74218);const Ar=async function(e,t,n){const a=(0,ht.YT)(e,"tensor","boolMask"),o=(0,ht.YT)(t,"mask","boolMask","bool"),r=null==n?0:n,s=o.rank,i=a.shape;L.vA(s>0,(()=>"mask cannot be scalar")),L.O3(i.slice(r,r+s),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let g=r;g<r+s;g++)c*=i[g];const l=i.slice(0,r).concat([c],i.slice(r+s)),u=(0,xn.t)(a,l),d=(0,xn.t)(o,[-1]),h=await Ir(d),p=(0,or.r)(h,[1]),f=(0,ma.k)(u,p,r);return e!==a&&a.dispose(),t!==o&&o.dispose(),p.dispose(),u.dispose(),d.dispose(),h.dispose(),f};var Rr=n(92155);const Nr=(0,gt.op)({movingAverage_:function(e,t,n,a){let o=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const r=(0,ht.YT)(e,"v","movingAverage"),s=(0,ht.YT)(t,"x","movingAverage"),i=(0,ht.YT)(n,"decay","movingAverage");(0,Lt.assertTypesMatch)(r,s),L.vA(L.r1(r.shape,s.shape),(()=>"Shape mismatch in v and x"));const c=(0,Ce.d)(1),l=(0,Me.j)(c,i);let u=(0,be.l)((0,Me.j)(s,r),l);if(o){L.vA(null!=a,(()=>"When using zeroDebias: true, step is required."));const e=(0,ht.YT)(a,"step","movingAverage");u=(0,ve.y)(u,(0,Me.j)(c,(0,Pe.n)(i,e)))}return(0,xe.W)(r,u)}});const _r=(0,gt.op)({scatterND_:function(e,t,n){(0,L.SA)(n);const a=(0,ht.YT)(e,"indices","scatterND","int32"),o=(0,ht.YT)(t,"updates","scatterND");Ot(o,a,n);const r={indices:a,updates:o},s={shape:n};return g.T2.runKernel(bt.pJc,r,s)}});const Fr=(0,gt.op)({sparseToDense_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;(0,L.SA)(n);const o=(0,ht.YT)(e,"sparseIndices","sparseToDense","int32"),r=(0,ht.YT)(t,"sparseValues","sparseToDense","string_or_numeric"),s=(0,ht.YT)(a,"defaultValue","sparseToDense",r.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(e.shape,"."));const o=e.rank>0?e.shape[0]:1,r=e.rank>1?e.shape[1]:1;if(n.length!==r)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(r,"."));const s=t.size;if(0!==t.rank&&(1!==t.rank||s!==o))throw new Error("sparseValues has incorrect shape "+"".concat(t.shape,", should be [] or [").concat(o,"]"));if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,r,n,s);const i={sparseIndices:o,sparseValues:r,defaultValue:s},c={outputShape:n};return g.T2.runKernel(bt.jgd,i,c)}});const Dr=(0,gt.op)({gatherND_:function(e,t){const n=(0,ht.YT)(t,"indices","gatherND","int32"),a={params:(0,ht.YT)(e,"x","gatherND","string_or_numeric"),indices:n};return g.T2.runKernel(bt.O4G,a)}});const Or=(0,gt.op)({dropout_:function(e,t,n,a){const o=(0,ht.YT)(e,"x","dropout");if(L.vA("float32"===o.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(o.dtype," tensor instead."))),L.vA(t>=0&&t<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(t,"."))),0===t)return e instanceof ue.qY?o.clone():o;const r=function(e,t){if(null==t)return e.shape.slice();if(L.r1(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(o,n),s=1-t,i=(0,ve.y)((0,fa.R)((0,xe.W)(So(r,0,1,"float32",a),s)),s);return(0,be.l)(o,i)}});function Pr(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Mr(e,t,n){const a=1-e%2,o=new Float32Array(e);for(let r=0;r<e;++r){const s=2*Math.PI*r/(e+a-1);o[r]=t-n*Math.cos(s)}return dr(o,"float32")}const Lr=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const a=(0,ht.YT)(e,"predictions","inTopK"),o=(0,ht.YT)(t,"targets","inTopK");(0,L.vA)(a.rank>1,(()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(a.rank))),(0,L.vA)(a.rank-1===o.rank,(()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(a.rank," and targets rank ").concat(o.rank))),(0,L.O3)(a.shape.slice(0,a.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const r=a.shape[a.shape.length-1];(0,L.vA)(n>0&&n<=r,(()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(r,"), but got ").concat(n)));const s=await a.data(),i=await o.data(),[c,l]=[s.length/r,r],u=(0,L.ce)("bool",c);for(let d=0;d<c;d++){const e=d*l,t=s.subarray(e,e+l),a=[];for(let n=0;n<t.length;n++)a.push({value:t[n],index:n});a.sort(((e,t)=>t.value-e.value)),u[d]=0;for(let o=0;o<n;o++)if(a[o].index===i[d]){u[d]=1;break}}return e!==a&&a.dispose(),t!==o&&o.dispose(),(0,ur.O)(u,o.shape,"bool")};var Br=n(56927),Wr=n(91565);function Gr(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,be.l)(e,(0,sr.P)(t));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function Vr(e,t){let n=t;const a=vt.getReductionAxes(e.shape,t.shape);return a.length>0&&(n=(0,cr.c)(n,a)),(0,xn.t)(n,e.shape)}function Ur(e,t,n,a){if("linear"===t)return e;if("relu"===t)return(0,No.V)(e);if("elu"===t)return(0,oa.P)(e);if("relu6"===t)return(0,_o.j)(e);if("prelu"===t)return(0,ho.N)(e,n);if("leakyrelu"===t)return(0,Ta.H)(e,a);if("sigmoid"===t)return(0,yn.r)(e);throw new Error("Unknown fused activation ".concat(t,"."))}const zr=(e,t)=>!(e>0)||"linear"===t;const Yr=(0,gt.op)({fusedConv2d_:function(e){let{x:t,filter:n,strides:a,pad:o,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}=e;if(l=l||"linear",!1===zr(g.T2.state.gradientDepth,l)){L.vA("NHWC"===r,(()=>"Error in fused conv2d: got dataFormat of ".concat(r," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let e=(0,Vn.X)(t,n,a,o,r,s,i);return null!=c&&(e=(0,xe.W)(e,c)),Ur(e,l,u,d)}const h=(0,ht.YT)(t,"x","conv2d","float32"),p=(0,ht.YT)(n,"filter","conv2d","float32");let f=h,m=!1;3===h.rank&&(m=!0,f=(0,xn.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),L.vA(4===f.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(f.rank,"."))),L.vA(4===p.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(p.rank,"."))),mn.s_("fused conv2d",o,i);const x="NHWC"===r?f.shape[3]:f.shape[1];L.vA(p.shape[2]===x,(()=>"Error in conv2d: depth of input (".concat(x,") must match ")+"input depth for filter ".concat(p.shape[2],"."))),L.vA(mn.G0(a,s),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(s,"'")));const v=mn.uf(f.shape,p.shape,a,s,o,i);let b,y;if(null!=c&&(b=(0,ht.YT)(c,"bias","fused conv2d"),[b]=(0,Lt.makeTypesMatch)(b,h),"NHWC"===r?vt.assertAndGetBroadcastShape(v.outShape,b.shape):(L.vA(b.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(b.shape.length,"."))),L.vA(0===b.shape.length||b.shape[0]===v.outChannels||1===b.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(b.shape,") is not ")+"compatible with the number of output channels "+"(".concat(v.outChannels,")"))))),null!=u){const e=u.shape;if(L.vA(e.length<=1||3===e.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(e.length,"."))),1===e.length)L.vA(1===e[0]||e[0]===v.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(e,") is not compatible with the number of output ")+"channels (".concat(v.outChannels,").")));else if(3===e.length)try{vt.assertAndGetBroadcastShape(e,v.outShape)}catch(C){const t="Error in fused conv2d: PReLU activation weights (".concat(e,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(v.outShape,").");throw Error(t)}y=(0,ht.YT)(u,"prelu weights","fused conv2d")}const w=(e,t)=>{L.vA("NHWC"===r,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(r," but only NHWC is currently supported.")));const[n,i,c,u]=t,d=Gr(e,c,l);L.vA(mn.Dh(s),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'")));const h=[(0,Wr.v)(i.shape,d,n,a,o),(0,Br.H)(i,d,n.shape,a,o)];if(null!=u){const e=Vr(u,d);h.push(e)}return h},k={x:f,filter:p,bias:b,preluActivationWeights:y},T={strides:a,pad:o,dataFormat:r,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:d};if(null==c){const e=(0,Te._X)(((e,t,n)=>{let a=g.T2.runKernel(bt.aAr,k,T);return n([t,e,a]),m&&(a=(0,xn.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:w}}));return e(f,p)}{const e=(0,Te._X)(((e,t,n,a)=>{let o=g.T2.runKernel(bt.aAr,k,T);return a([t,e,o,n]),m&&(o=(0,xn.t)(o,[o.shape[1],o.shape[2],o.shape[3]])),{value:o,gradFunc:w}}));return e(f,p,b)}}});var Hr=n(17399),Kr=n(10261);const jr=(0,gt.op)({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:a,pad:o,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}=e;if(!1===zr(g.T2.state.gradientDepth,l)){let e=(0,Jn.G)(t,n,a,o,r,s,i);return null!=c&&(e=(0,xe.W)(e,c)),Ur(e,l,u,d)}const h=(0,ht.YT)(t,"x","depthwiseConv2d","float32"),p=(0,ht.YT)(n,"filter","depthwiseConv2d","float32");let f=h,m=!1;3===h.rank&&(m=!0,f=(0,xn.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),L.vA(4===f.rank,(()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(f.rank,"."))),L.vA(4===p.rank,(()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(p.rank,"."))),L.vA(f.shape[3]===p.shape[2],(()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(f.shape[3],") must match the inChannels dimension in ")+"filter ".concat(p.shape[2],"."))),null==s&&(s=[1,1]),L.vA(mn.G0(a,s),(()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(s,"'"))),mn.s_("fused depthwiseConv2d",o,i);const x=mn.uf(f.shape,p.shape,a,s,o,i,!0);let v,b;null!=c&&(v=(0,ht.YT)(c,"bias","fused conv2d"),[v]=(0,Lt.makeTypesMatch)(v,h),vt.assertAndGetBroadcastShape(x.outShape,v.shape)),null!=u&&(b=(0,ht.YT)(u,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{L.vA(mn.Dh(s),(()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(s,"'")));const[n,r,c,u]=t,d=Gr(e,c,l),h=(0,Kr.l)(r.shape,d,n,a,o,s,i),p=(0,Hr.x)(r,d,n.shape,a,o,s,i);if(null!=u){return[h,p,Vr(v,d)]}return[h,p]},w={x:f,filter:p,bias:v,preluActivationWeights:b},k={strides:a,pad:o,dataFormat:r,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:d};if(null==c){const e=(0,Te._X)(((e,t,n)=>{let a=g.T2.runKernel(bt.T7M,w,k);return n([t,e,a]),m&&(a=(0,xn.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}}));return e(f,p)}{const e=(0,Te._X)(((e,t,n,a)=>{let o=g.T2.runKernel(bt.T7M,w,k);return a([t,e,o,n]),m&&(o=(0,xn.t)(o,[o.shape[1],o.shape[2],o.shape[3]])),{value:o,gradFunc:y}}));return e(f,p,v)}}});const qr=(0,gt.op)({fusedMatMul_:function(e){let{a:t,b:n,transposeA:a=!1,transposeB:o=!1,bias:r,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:c=.2}=e;if(!1===zr(g.T2.state.gradientDepth,s)){let e=(0,pt.N)(t,n,a,o);return null!=r&&(e=(0,xe.W)(e,r)),Ur(e,s,i,c)}let l=(0,ht.YT)(t,"a","fused matMul"),u=(0,ht.YT)(n,"b","fused matMul");[l,u]=(0,Lt.makeTypesMatch)(l,u);const d=a?l.shape[l.rank-2]:l.shape[l.rank-1],h=o?u.shape[u.rank-1]:u.shape[u.rank-2],p=a?l.shape[l.rank-1]:l.shape[l.rank-2],f=o?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),x=u.shape.slice(0,-2),v=L.Ze(m),b=L.Ze(x);L.vA(d===h,(()=>"Error in fused matMul: inner shapes (".concat(d,") and (")+"".concat(h,") of Tensors with shapes ").concat(l.shape," and ")+"".concat(u.shape," and transposeA=").concat(a)+" and transposeB=".concat(o," must match.")));const y=vt.assertAndGetBroadcastShape(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,f]),w=a?(0,xn.t)(l,[v,d,p]):(0,xn.t)(l,[v,p,d]),k=o?(0,xn.t)(u,[b,f,h]):(0,xn.t)(u,[b,h,f]);let T,C;null!=r&&(T=(0,ht.YT)(r,"bias","fused matMul"),[T]=(0,Lt.makeTypesMatch)(T,l),vt.assertAndGetBroadcastShape(y,T.shape)),null!=i&&(C=(0,ht.YT)(i,"prelu weights","fused matMul"));const S=(e,t)=>{const[n,i,c,l]=t,u=Gr((0,xn.t)(e,c.shape),c,s);let d,h;if(a||o?!a&&o?(d=(0,pt.N)(u,i,!1,!1),h=(0,pt.N)(u,n,!0,!1)):a&&!o?(d=(0,pt.N)(i,u,!1,!0),h=(0,pt.N)(n,u,!1,!1)):(d=(0,pt.N)(i,u,!0,!0),h=(0,pt.N)(u,n,!0,!0)):(d=(0,pt.N)(u,i,!1,!0),h=(0,pt.N)(n,u,!0,!1)),null!=r){return[d,h,Vr(l,u)]}return[d,h]},I={a:w,b:k,bias:T,preluActivationWeights:C},E={transposeA:a,transposeB:o,activation:s,leakyreluAlpha:c};if(null==r){const e=(0,Te._X)(((e,t,n)=>{const a=g.T2.runKernel(bt.Dr,I,E);return n([e,t,a]),{value:(0,xn.t)(a,y),gradFunc:S}}));return e(w,k)}{const e=(0,Te._X)(((e,t,n,a)=>{const o=g.T2.runKernel(bt.Dr,I,E);return a([e,t,o,n]),{value:(0,xn.t)(o,y),gradFunc:S}}));return e(w,k,T)}}});const Xr=(0,gt.op)({hammingWindow_:function(e){return Mr(e,.54,.46)}});const Zr=(0,gt.op)({hannWindow_:function(e){return Mr(e,.5,.5)}});const Qr=(0,gt.op)({frame_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,r=0;const s=[];for(;r+t<=e.size;)s.push((0,wn.d)(e,r,t)),r+=n;if(a)for(;r<e.size;){const a=r+t-e.size,i=(0,bn.x)([(0,wn.d)(e,r,t-a),(0,De.G)([a],o)]);s.push(i),r+=n}return 0===s.length?hr([],[0,t]):(0,xn.t)((0,bn.x)(s),[s.length,t])}});const Jr=(0,gt.op)({stft_:function(e,t,n,a){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Zr;null==a&&(a=Pr(t));const r=Qr(e,t,n),s=(0,be.l)(r,o(t));return(0,tr.z)(s,a)}});const $r=(0,gt.op)({cropAndResize_:function(e,t,n,a){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=(0,ht.YT)(e,"image","cropAndResize"),i=(0,ht.YT)(t,"boxes","cropAndResize","float32"),c=(0,ht.YT)(n,"boxInd","cropAndResize","int32"),l=i.shape[0];L.vA(4===s.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(s.rank,"."))),L.vA(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(l,",4] ")+"but had shape ".concat(i.shape,"."))),L.vA(1===c.rank&&c.shape[0]===l,(()=>"Error in cropAndResize: boxInd must be have size [".concat(l,"] ")+"but had shape ".concat(i.shape,"."))),L.vA(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),L.vA(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),L.vA("bilinear"===o||"nearest"===o,(()=>"method must be bilinear or nearest, but was ".concat(o)));const u={image:s,boxes:i,boxInd:c},d={method:o,extrapolationValue:r,cropSize:a};return g.T2.runKernel(bt.MRQ,u,d)}});const es=(0,gt.op)({flipLeftRight_:function(e){const t=(0,ht.YT)(e,"image","flipLeftRight","float32");L.vA(4===t.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(t.rank,".")));const n={image:t};return g.T2.runKernel(bt.BxF,n,{})}});const ts=(0,gt.op)({grayscaleToRGB_:function(e){const t=(0,ht.YT)(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];L.vA(t.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),L.vA(1===a,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,".")));const o=new Array(t.rank);return o.fill(1,0,n),o[n]=3,(0,ha.V)(t,o)}});const ns=(0,gt.op)({rgbToGrayscale_:function(e){const t=(0,ht.YT)(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];L.vA(t.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),L.vA(3===a,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,".")));const o=t.dtype,r=(0,he.w)(t,"float32"),s=dr([.2989,.587,.114]);let i;switch(t.rank){case 2:i=aa("ij,j->i",r,s);break;case 3:i=aa("ijk,k->ij",r,s);break;case 4:i=aa("ijkl,l->ijk",r,s);break;case 5:i=aa("ijklm,m->ijkl",r,s);break;case 6:i=aa("ijklmn,n->ijklm",r,s);break;default:throw new Error("Not a valid tensor rank.")}return i=(0,ua.U)(i,-1),(0,he.w)(i,o)}});const as=(0,gt.op)({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const o=(0,ht.YT)(e,"image","rotateWithOffset","float32");L.vA(4===o.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(o.rank,".")));const r={image:o},s={radians:t,fillValue:n,center:a};return g.T2.runKernel(bt.BK4,r,s)}});function os(e,t,n,a,o,r){null==a&&(a=.5),null==o&&(o=Number.NEGATIVE_INFINITY),null==r&&(r=0);const s=e.shape[0];return n=Math.min(n,s),L.vA(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),L.vA(2===e.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(e.rank,"'"))),L.vA(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(e.shape[1]))),L.vA(1===t.rank,(()=>"scores must be a 1D tensor")),L.vA(t.shape[0]===s,(()=>"scores has incompatible shape with boxes. Expected ".concat(s,", ")+"but was ".concat(t.shape[0]))),L.vA(0<=r&&r<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(r,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:o,softNmsSigma:r}}const rs=(0,gt.op)({nonMaxSuppression_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const r=(0,ht.YT)(e,"boxes","nonMaxSuppression","float32"),s=(0,ht.YT)(t,"scores","nonMaxSuppression","float32"),i=os(r,s,n,a,o);n=i.maxOutputSize,a=i.iouThreshold,o=i.scoreThreshold;const c={maxOutputSize:n,iouThreshold:a,scoreThreshold:o};return g.T2.runKernel(bt.SDM,{boxes:r,scores:s},c)}});function ss(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,o=e.length,r=0,s=!1;for(;a<o;){r=a+(o-a>>>1);const i=n(t,e[r]);i>0?a=r+1:(o=r,s=!i)}return s?a:-a-1}(e,t,n||is)}(e,t,n),o=a<0?-(a+1):a;e.splice(o,0,t)}function is(e,t){return e>t?1:e<t?-1:0}function cs(e,t,n,a,o){return ds(e,t,n,a,o,0)}function ls(e,t,n,a,o,r){return ds(e,t,n,a,o,0,!1,r,!0)}function us(e,t,n,a,o,r){return ds(e,t,n,a,o,r,!0)}function ds(e,t,n,a,o,r){let s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const l=[];for(let m=0;m<t.length;m++)t[m]>o&&l.push({score:t[m],boxIndex:m,suppressBeginIndex:0});l.sort(fs);const u=r>0?-.5/r:0,d=[],h=[];for(;d.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:r,suppressBeginIndex:s}=t;if(n<o)break;let i=!1;for(let c=d.length-1;c>=s;--c){const n=hs(e,r,d[c]);if(n>=a){i=!0;break}if(t.score=t.score*ps(a,u,n),t.score<=o)break}t.suppressBeginIndex=d.length,i||(t.score===n?(d.push(r),h.push(t.score)):t.score>o&&ss(l,t,fs))}const p=d.length,f=n-p;i&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const g={selectedIndices:d};return s&&(g.selectedScores=h),c&&(g.validOutputs=p),g}function hs(e,t,n){const a=e.subarray(4*t,4*t+4),o=e.subarray(4*n,4*n+4),r=Math.min(a[0],a[2]),s=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),l=Math.min(o[0],o[2]),u=Math.min(o[1],o[3]),d=Math.max(o[0],o[2]),h=Math.max(o[1],o[3]),p=(i-r)*(c-s),f=(d-l)*(h-u);if(p<=0||f<=0)return 0;const g=Math.max(r,l),m=Math.max(s,u),x=Math.min(i,d),v=Math.min(c,h),b=Math.max(x-g,0)*Math.max(v-m,0);return b/(p+f-b)}function ps(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function fs(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const gs=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const r=(0,ht.YT)(e,"boxes","nonMaxSuppressionAsync"),s=(0,ht.YT)(t,"scores","nonMaxSuppressionAsync"),i=os(r,s,n,a,o);n=i.maxOutputSize,a=i.iouThreshold,o=i.scoreThreshold;const c=await Promise.all([r.data(),s.data()]),l=c[0],u=c[1],{selectedIndices:d}=cs(l,u,n,a,o);return r!==e&&r.dispose(),s!==t&&s.dispose(),dr(d,"int32")};const ms=(0,gt.op)({nonMaxSuppressionWithScore_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=(0,ht.YT)(e,"boxes","nonMaxSuppression"),i=(0,ht.YT)(t,"scores","nonMaxSuppression"),c=os(s,i,n,a,o,r);n=c.maxOutputSize,a=c.iouThreshold,o=c.scoreThreshold,r=c.softNmsSigma;const l={boxes:s,scores:i},u={maxOutputSize:n,iouThreshold:a,scoreThreshold:o,softNmsSigma:r},d=g.T2.runKernel(bt.e0f,l,u);return{selectedIndices:d[0],selectedScores:d[1]}}});const xs=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=(0,ht.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,ht.YT)(t,"scores","nonMaxSuppressionAsync"),c=os(s,i,n,a,o,r);n=c.maxOutputSize,a=c.iouThreshold,o=c.scoreThreshold,r=c.softNmsSigma;const l=await Promise.all([s.data(),i.data()]),u=l[0],d=l[1],{selectedIndices:h,selectedScores:p}=us(u,d,n,a,o,r);return s!==e&&s.dispose(),i!==t&&i.dispose(),{selectedIndices:dr(h,"int32"),selectedScores:dr(p)}};const vs=(0,gt.op)({nonMaxSuppressionPadded_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,r=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const s=(0,ht.YT)(e,"boxes","nonMaxSuppression"),i=(0,ht.YT)(t,"scores","nonMaxSuppression"),c=os(s,i,n,a,o,null),l={boxes:s,scores:i},u={maxOutputSize:c.maxOutputSize,iouThreshold:c.iouThreshold,scoreThreshold:c.scoreThreshold,padToMaxOutputSize:r},d=g.T2.runKernel(bt.Zl4,l,u);return{selectedIndices:d[0],validOutputs:d[1]}}});const bs=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,r=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const s=(0,ht.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,ht.YT)(t,"scores","nonMaxSuppressionAsync"),c=os(s,i,n,a,o,null),l=c.maxOutputSize,u=c.iouThreshold,d=c.scoreThreshold,[h,p]=await Promise.all([s.data(),i.data()]),{selectedIndices:f,validOutputs:g}=ls(h,p,l,u,d,r);return s!==e&&s.dispose(),i!==t&&i.dispose(),{selectedIndices:dr(f,"int32"),validOutputs:(0,Ce.d)(g,"int32")}};var ys=n(22214),ws=n(92823);const ks=(0,gt.op)({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const o=(0,ht.YT)(e,"image","threshold"),r=o.shape[0]*o.shape[1];let s,i,c,l,u=(0,be.l)(dr([a]),255);if(L.vA(3===o.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(o.rank,"."))),L.vA(3===o.shape[2]||1===o.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(o.shape[2],"."))),L.vA("int32"===o.dtype||"float32"===o.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(o.dtype,"."))),L.vA("otsu"===t||"binary"===t,(()=>"Method must be binary or otsu, but was ".concat(t))),3===o.shape[2]){[s,i,c]=(0,nr.l)(o,[1,1,1],-1);const e=(0,be.l)(s,.2989),t=(0,be.l)(i,.587),n=(0,be.l)(c,.114);l=(0,xe.W)((0,xe.W)(e,t),n)}else l=e;if("otsu"===t){u=function(e,t){let n,a,o,r,s,i,c=dr([-1]),l=dr([0]),u=dr([0]);for(let d=0;d<e.size-1;d++){n=(0,wn.d)(e,0,d+1),a=(0,wn.d)(e,d+1),s=(0,ve.y)((0,cr.c)(n),t),i=(0,ve.y)((0,cr.c)(a),t);const h=(0,cr.c)((0,be.l)(n,Eo(0,n.size)));o=(0,ve.y)(h,(0,cr.c)(n));const p=(0,De.G)(a.shape,n.size),f=(0,xe.W)(Eo(0,a.size),p),g=(0,be.l)(a,f);r=(0,ve.y)((0,cr.c)(g),(0,cr.c)(a));const m=(0,Me.j)(o,r),x=(0,Me.j)(o,r),v=(0,be.l)(s,i);u=(0,be.l)((0,be.l)(v,m),x);const b=(0,xa.r)(u,l);l=(0,Cr._)(b,u,l),c=(0,Cr._)(b,dr([d]),c)}return c}(Rn((0,he.w)((0,Lo.L)(l),"int32"),(0,ur.O)([]),256),r)}const d=n?(0,Sa.I)(l,u):(0,xa.r)(l,u);return(0,he.w)((0,be.l)(d,255),"int32")}});const Ts=(0,gt.op)({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,r=arguments.length>5?arguments[5]:void 0;const s=(0,ht.YT)(e,"image","transform","float32"),i=(0,ht.YT)(t,"transforms","transform","float32");L.vA(4===s.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(s.rank,"."))),L.vA(2===i.rank&&(i.shape[0]===s.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),L.vA(null==r||2===r.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(r,".")));const c={image:s,transforms:i},l={interpolation:n,fillMode:a,fillValue:o,outputShape:r};return g.T2.runKernel(bt.dLy,c,l)}});const Cs=(0,gt.op)({bandPart_:function(e,t,n){const a=(0,ht.YT)(e,"a","bandPart");(0,L.vA)(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const o=a.shape,[r,s]=a.shape.slice(-2);let i,c;"number"===typeof t?((0,L.vA)(t%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(t,"."))),(0,L.vA)(t<=r,(()=>"bandPart(): numLower (".concat(t,")")+" must not be greater than the number of rows (".concat(r,")."))),i=(0,ht.YT)(t<0?r:t,"numLower","bandPart")):((0,L.vA)("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=(0,Cr._)((0,Ca.M)(t,0),r,(0,qa.B)(t,r))),"number"===typeof n?((0,L.vA)(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),(0,L.vA)(n<=s,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(s,")."))),c=(0,ht.YT)(n<0?s:n,"numUpper","bandPart")):((0,L.vA)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),c=(0,Cr._)((0,Ca.M)(n,0),s,(0,qa.B)(n,s)));const l=(0,xn.t)(Eo(0,r,1,"int32"),[-1,1]),u=Eo(0,s,1,"int32"),d=(0,Me.j)(l,u),h=(0,Da.n)((0,Sa.I)(d,i),(0,va.D)(d,(0,to.H)(c))),p=(0,Er.U)([r,s],a.dtype);return(0,xn.t)((0,rr.t)((0,wr.K)((0,xn.t)(a,[-1,r,s])).map((e=>(0,Cr._)(h,e,p)))),o)}});const Ss=(0,gt.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,L.vA)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,L.vA)(e[t].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(e[t].shape[0]," vs. ").concat(n,")")))}else t=!0,e=(0,nr.l)(e,e.shape[0],0).map((e=>(0,or.r)(e,[0])));(0,L.vA)(e.length<=e[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(e.length,") exceeds ")+"number of dimensions (".concat(e[0].shape[0],").")));const n=[],a=e;for(let o=0;o<e.length;++o)n.push(g.T2.tidy((()=>{let e=a[o];if(o>0)for(let t=0;t<o;++t){const a=(0,be.l)((0,cr.c)((0,be.l)(n[t],e)),n[t]);e=(0,Me.j)(e,a)}return(0,ve.y)(e,(0,Rr.x)(e,"euclidean"))})));return t?(0,rr.t)(n,0):n}});function Is(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return g.T2.tidy((()=>{(0,L.vA)(2===e.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(e.shape.length,"D Tensor.")));const n=e.shape[0],a=e.shape[1];let o=pa(n),r=(0,pe.o)(e);const s=hr([[1]],[1,1]);let i=(0,pe.o)(s);const c=n>=a?a:n;for(let e=0;e<c;++e){const t=r,c=i,l=o;[i,r,o]=g.T2.tidy((()=>{const t=(0,wn.d)(r,[e,e],[n-e,1]),c=(0,Rr.x)(t),l=(0,wn.d)(r,[e,e],[1,1]),u=(0,Cr._)((0,xa.r)(l,0),hr([[-1]]),hr([[1]])),d=(0,Me.j)(l,(0,be.l)(u,c)),h=(0,ve.y)(t,d);i=1===h.shape[0]?(0,pe.o)(s):(0,bn.x)([s,(0,wn.d)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=(0,to.H)((0,ve.y)((0,pt.N)(u,d),c)),f=(0,wn.d)(r,[e,0],[n-e,a]),g=(0,be.l)(p,i),m=(0,mt.m)(i);if(0===e)r=(0,Me.j)(f,(0,pt.N)(g,(0,pt.N)(m,f)));else{const t=(0,Me.j)(f,(0,pt.N)(g,(0,pt.N)(m,f)));r=(0,bn.x)([(0,wn.d)(r,[0,0],[e,a]),t],0)}const x=(0,mt.m)(g),v=(0,wn.d)(o,[0,e],[n,o.shape[1]-e]);if(0===e)o=(0,Me.j)(v,(0,pt.N)((0,pt.N)(v,i),x));else{const t=(0,Me.j)(v,(0,pt.N)((0,pt.N)(v,i),x));o=(0,bn.x)([(0,wn.d)(o,[0,0],[n,e]),t],1)}return[i,r,o]})),(0,me.AS)([t,c,l])}return!t&&n>a&&(o=(0,wn.d)(o,[0,0],[n,a]),r=(0,wn.d)(r,[0,0],[a,a])),[o,r]}))}const Es=(0,gt.op)({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if((0,L.vA)(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(e.rank))),2===e.rank)return Is(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=(0,wr.K)((0,xn.t)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),o=[],r=[];a.forEach((e=>{const[n,a]=Is(e,t);o.push(n),r.push(a)}));return[(0,xn.t)((0,rr.t)(o,0),e.shape),(0,xn.t)((0,rr.t)(r,0),e.shape)]}}});var As;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(As||(As={}));const Rs=(0,gt.op)({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:As.SUM_BY_NONZERO_WEIGHTS;const a=(0,ht.YT)(e,"losses","computeWeightedLoss");let o=null;null!=t&&(o=(0,ht.YT)(t,"weights","computeWeightedLoss"));const r=null==o?a:(0,be.l)(a,o);if(n===As.NONE)return r;if(n===As.SUM)return(0,cr.c)(r);if(n===As.MEAN){if(null==o)return(0,Ya.i)(r);{const e=a.size/o.size,t=(0,ve.y)((0,cr.c)(r),(0,cr.c)(o));return e>1?(0,ve.y)(t,(0,Ce.d)(e)):t}}if(n===As.SUM_BY_NONZERO_WEIGHTS){if(null==o)return(0,ve.y)((0,cr.c)(r),(0,Ce.d)(a.size));{const e=(0,be.l)(o,(0,Ha.S)(a.shape)),t=(0,he.w)((0,cr.c)((0,no.E)(e,(0,Ce.d)(0))),"float32");return(0,ve.y)((0,cr.c)(r),t)}}throw Error("Unknown reduction: ".concat(n))}});const Ns=(0,gt.op)({absoluteDifference_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:As.SUM_BY_NONZERO_WEIGHTS;const o=(0,ht.YT)(e,"labels","absoluteDifference"),r=(0,ht.YT)(t,"predictions","absoluteDifference");let s=null;null!=n&&(s=(0,ht.YT)(n,"weights","absoluteDifference")),(0,L.O3)(o.shape,r.shape,"Error in absoluteDifference: ");const i=(0,Be.t)((0,Me.j)(o,r));return Rs(i,s,a)}});const _s=(0,gt.op)({cosineDistance_:function(e,t,n,a){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:As.SUM_BY_NONZERO_WEIGHTS;const r=(0,ht.YT)(e,"labels","cosineDistance"),s=(0,ht.YT)(t,"predictions","cosineDistance");let i=null;null!=a&&(i=(0,ht.YT)(a,"weights","cosineDistance")),(0,L.O3)(r.shape,s.shape,"Error in cosineDistance: ");const c=(0,Ce.d)(1),l=(0,Me.j)(c,(0,cr.c)((0,be.l)(r,s),n,!0));return Rs(l,i,o)}});const Fs=(0,gt.op)({hingeLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:As.SUM_BY_NONZERO_WEIGHTS,o=(0,ht.YT)(e,"labels","hingeLoss");const r=(0,ht.YT)(t,"predictions","hingeLoss");let s=null;null!=n&&(s=(0,ht.YT)(n,"weights","hingeLoss")),(0,L.O3)(o.shape,r.shape,"Error in hingeLoss: ");const i=(0,Ce.d)(1);o=(0,Me.j)((0,be.l)((0,Ce.d)(2),o),i);const c=(0,No.V)((0,Me.j)(i,(0,be.l)(o,r)));return Rs(c,s,a)}});const Ds=(0,gt.op)({huberLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:As.SUM_BY_NONZERO_WEIGHTS;const r=(0,ht.YT)(e,"labels","huberLoss"),s=(0,ht.YT)(t,"predictions","huberLoss");let i=null;null!=n&&(i=(0,ht.YT)(n,"weights","huberLoss")),(0,L.O3)(r.shape,s.shape,"Error in huberLoss: ");const c=(0,Ce.d)(a),l=(0,Be.t)((0,Me.j)(s,r)),u=(0,qa.B)(l,c),d=(0,Me.j)(l,u),h=(0,xe.W)((0,be.l)((0,Ce.d)(.5),(0,we.E)(u)),(0,be.l)(c,d));return Rs(h,i,o)}});const Os=(0,gt.op)({logLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:As.SUM_BY_NONZERO_WEIGHTS;const r=(0,ht.YT)(e,"labels","logLoss"),s=(0,ht.YT)(t,"predictions","logLoss");let i=null;null!=n&&(i=(0,ht.YT)(n,"weights","logLoss")),(0,L.O3)(r.shape,s.shape,"Error in logLoss: ");const c=(0,Ce.d)(1),l=(0,Ce.d)(a),u=(0,to.H)((0,be.l)(r,(0,Aa.R)((0,xe.W)(s,l)))),d=(0,be.l)((0,Me.j)(c,r),(0,Aa.R)((0,xe.W)((0,Me.j)(c,s),l))),h=(0,Me.j)(u,d);return Rs(h,i,o)}});const Ps=(0,gt.op)({meanSquaredError_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:As.SUM_BY_NONZERO_WEIGHTS;const o=(0,ht.YT)(e,"labels","meanSquaredError"),r=(0,ht.YT)(t,"predictions","meanSquaredError");let s=null;null!=n&&(s=(0,ht.YT)(n,"weights","meanSquaredError")),(0,L.O3)(o.shape,r.shape,"Error in meanSquaredError: ");const i=(0,ar.P)(o,r);return Rs(i,s,a)}});const Ms=(0,gt.op)({sigmoidCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:As.SUM_BY_NONZERO_WEIGHTS,r=(0,ht.YT)(e,"multiClassLabels","sigmoidCrossEntropy");const s=(0,ht.YT)(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=(0,ht.YT)(n,"weights","sigmoidCrossEntropy")),(0,L.O3)(r.shape,s.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=(0,Ce.d)(a),t=(0,Ce.d)(1),n=(0,Ce.d)(.5);r=(0,xe.W)((0,be.l)(r,(0,Me.j)(t,e)),(0,be.l)(n,e))}const c=function(e,t){const n=(0,ht.YT)(e,"labels","sigmoidCrossEntropyWithLogits"),a=(0,ht.YT)(t,"logits","sigmoidCrossEntropyWithLogits");(0,L.O3)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=(0,No.V)(a),r=(0,be.l)(a,n),s=(0,Ra.K)((0,la.o)((0,to.H)((0,Be.t)(a))));return(0,xe.W)((0,Me.j)(o,r),s)}(r,s);return Rs(c,i,o)}});const Ls=(0,gt.op)({softmaxCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:As.SUM_BY_NONZERO_WEIGHTS,r=(0,ht.YT)(e,"onehotLabels","softmaxCrossEntropy");const s=(0,ht.YT)(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=(0,ht.YT)(n,"weights","softmaxCrossEntropy")),(0,L.O3)(r.shape,s.shape,"Error in softmaxCrossEntropy: "),a>0){const e=(0,Ce.d)(a),t=(0,Ce.d)(1),n=(0,Ce.d)(r.shape[1]);r=(0,xe.W)((0,be.l)(r,(0,Me.j)(t,e)),(0,ve.y)(e,n))}const c=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(t.rank," ")+"and dim was ".concat(n));const a=(0,Te._X)(((e,t,a)=>{const o=(0,Fa.V)(t,[n],!0),r=(0,Me.j)((0,he.w)(t,"float32"),o);a([e,r]);const s=(0,to.H)((0,be.l)(r,e));return{value:(0,cr.c)(s,[n]),gradFunc:(e,t)=>{const[a,o]=t,r=(0,Qa.SM)(e.shape,[n]);return[(0,be.l)((0,xn.t)(e,r),(0,Me.j)((0,he.w)(a,"float32"),(0,la.o)(o))),(0,be.l)((0,xn.t)(e,r),(0,Me.j)((0,la.o)(o),(0,he.w)(a,"float32")))]}}}));return a(e,t)}(r,s);return Rs(c,i,o)}});const Bs=(0,gt.op)({sparseFillEmptyRows_:function(e,t,n,a){const o=(0,ht.YT)(e,"indices","sparseFillEmptyRows","int32"),r=(0,ht.YT)(t,"values","sparseFillEmptyRows"),s=(0,ht.YT)(n,"denseShape","sparseFillEmptyRows","int32"),i=(0,ht.YT)(a,"defaultValue","sparseFillEmptyRows",r.dtype);if(2!==o.rank)throw new Error("Indices should be Tensor2D but received shape\n        ".concat(o.shape));if(1!==r.rank)throw new Error("Values should be Tensor1D but received shape ".concat(r.shape));if(1!==s.rank)throw new Error("Dense shape should be Tensor1D but received shape ".concat(s.shape));if(0!==i.rank)throw new Error("Default value should be a scalar but received shape ".concat(i.shape));const c={indices:o,values:r,denseShape:s,defaultValue:i},l=g.T2.runKernel(bt.C8s,c);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}});const Ws=(0,gt.op)({sparseReshape_:function(e,t,n){const a=(0,ht.YT)(e,"inputIndices","sparseReshape","int32"),o=(0,ht.YT)(t,"inputShape","sparseReshape","int32"),r=(0,ht.YT)(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==o.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(o.shape));if(1!==r.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(r.shape));const s={inputIndices:a,inputShape:o,newShape:r},i=g.T2.runKernel(bt.BoJ,s);return{outputIndices:i[0],outputShape:i[1]}}});const Gs=(0,gt.op)({sparseSegmentMean_:function(e,t,n){const a=(0,ht.YT)(e,"data","sparseSegmentMean"),o=(0,ht.YT)(t,"indices","sparseSegmentMean","int32"),r=(0,ht.YT)(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==o.rank)throw new Error("Indices should be Tensor1D but received shape\n          ".concat(o.shape));if(1!==r.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          ".concat(r.shape));const s={data:a,indices:o,segmentIds:r};return g.T2.runKernel(bt.L6G,s)}});const Vs=(0,gt.op)({sparseSegmentSum_:function(e,t,n){const a=(0,ht.YT)(e,"data","sparseSegmentSum"),o=(0,ht.YT)(t,"indices","sparseSegmentSum","int32"),r=(0,ht.YT)(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==o.rank)throw new Error("Indices should be Tensor1D but received shape\n         ".concat(o.shape));if(1!==r.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         ".concat(r.shape));const s={data:a,indices:o,segmentIds:r};return g.T2.runKernel(bt.DvZ,s)}});const Us=(0,gt.op)({stringNGrams_:function(e,t,n,a,o,r,s,i){const c=(0,ht.YT)(e,"data","stringNGrams","string");if("string"!==c.dtype)throw new Error("Data must be of datatype string");if(1!==c.shape.length)throw new Error("Data must be a vector, saw: ".concat(c.shape));const l=(0,ht.YT)(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const u={separator:n,nGramWidths:a,leftPad:o,rightPad:r,padWidth:s,preserveShortSequences:i},d={data:c,dataSplits:l},h=g.T2.runKernel(bt.YAb,d,u);return{nGrams:h[0],nGramsSplits:h[1]}}});const zs=(0,gt.op)({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=(0,ht.YT)(e,"input","stringSplit","string"),o=(0,ht.YT)(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error("Input should be Tensor1D but received shape ".concat(a.shape));if(0!==o.rank)throw new Error("Delimiter should be a scalar but received shape ".concat(o.shape));const r={skipEmpty:n},s={input:a,delimiter:o},i=g.T2.runKernel(bt.iW0,s,r);return{indices:i[0],values:i[1],shape:i[2]}}});const Ys=(0,gt.op)({stringToHashBucketFast_:function(e,t){const n=(0,ht.YT)(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const o={input:n};return g.T2.runKernel(bt.$jE,o,a)}});const Hs=(0,gt.op)({staticRegexReplace_:function(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const o=(0,ht.YT)(e,"input","staticRegexReplace","string"),r={pattern:t,rewrite:n,replaceGlobal:a};return g.T2.runKernel(bt.GZp,{x:o},r)}}),Ks={fft:Jo.h,ifft:$o.K,rfft:tr.z,irfft:er.g},js={hammingWindow:Xr,hannWindow:Zr,frame:Qr,stft:Jr},qs={flipLeftRight:es,grayscaleToRGB:ts,resizeNearestNeighbor:ws.b,resizeBilinear:ys.v,rgbToGrayscale:ns,rotateWithOffset:as,cropAndResize:$r,nonMaxSuppression:rs,nonMaxSuppressionAsync:gs,nonMaxSuppressionWithScore:ms,nonMaxSuppressionWithScoreAsync:xs,nonMaxSuppressionPadded:vs,nonMaxSuppressionPaddedAsync:bs,threshold:ks,transform:Ts},Xs={bandPart:Cs,gramSchmidt:Ss,qr:Es},Zs={absoluteDifference:Ns,computeWeightedLoss:Rs,cosineDistance:_s,hingeLoss:Fs,huberLoss:Ds,logLoss:Os,meanSquaredError:Ps,sigmoidCrossEntropy:Ms,softmaxCrossEntropy:Ls},Qs={sparseFillEmptyRows:Bs,sparseReshape:Ws,sparseSegmentMean:Gs,sparseSegmentSum:Vs},Js={stringNGrams:Us,stringSplit:zs,stringToHashBucketFast:Ys,staticRegexReplace:Hs},$s=en,ei="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function ti(){return new Promise((e=>ei((()=>e()))))}function ni(e,t){const n=e[0].length;e.forEach(((e,t)=>{L.vA(e.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(t,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),L.vA(t>=0&&t<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=e[0];e.forEach(((e,o)=>{for(let r=0;r<n;r++)L.vA(r===t||e[r]===a[r],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(o,"] (").concat(e,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(o,".")))}))}function ai(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var oi;function ri(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.rank = ").concat(e+n.length,", but shape.rank = ").concat(a.length));for(let o=1;o<n.length;++o){const r=n[o],s=a[a.length-n.length+o],i=a[s];if(r>=0)if(i>=0){if(i!==r)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.shape[").concat(o+e,"] = ").concat(r," but shape[").concat(o+e,"] = ").concat(i))}else a[s]=r}return a}function si(e){const t={FIRST_DIM_SIZE:oi.FIRST_DIM_SIZE,VALUE_ROWIDS:oi.VALUE_ROWIDS,ROW_LENGTHS:oi.ROW_LENGTHS,ROW_SPLITS:oi.ROW_SPLITS,ROW_LIMITS:oi.ROW_LIMITS,ROW_STARTS:oi.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function ii(e){return 0===e.length?0:e[0]===oi.FIRST_DIM_SIZE?e.length-1:e.length}function ci(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error("defaultValue.shape=".concat(e," and ragged tensor flatValues.shape=").concat(t,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let o=0;o<Math.min(n,a-1);++o){const n=e[o],a=t[o+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(e,", and ragged tensor input flatValues.shape=").concat(t," are incompatible: defaultValue.shape[").concat(o-e.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(o-e.length,"] = ").concat(a))}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(oi||(oi={}));const li=30;function ui(e){return e<=li?e:(0,L.lK)(e,Math.floor(Math.sqrt(e)))}function di(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function hi(e,t,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let o=0;o<n;++o)a=a.concat([e[o+1]/t[o],t[o]]);a=a.concat(e.slice(n+1))}return a}function pi(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{const a=[],o=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?o.push(n):a.push(n);n.push(...a),n.push(0),n.push(...o)}return n}function fi(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const o=[];a?o.push(e[0]/n):o.push(e[0]*n);for(let r=1;r<e.length;++r)r<=t.length?a?o.push(t[r-1]*e[r]):o.push(e[r]/t[r-1]):o.push(e[r]);return o}function gi(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function mi(e,t,n){const a=e.slice(0,1);for(let o=0;o<n;++o)a.push(e[o+1]-t[o][0]-t[o][1]);return a}var xi=n(3765);const vi=.3275911,bi=.254829592,yi=-.284496736,wi=1.421413741,ki=-1.453152027,Ti=1.061405429;var Ci=n(64124);function Si(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(e.length,", imag: ").concat(t.length,"."));const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function Ii(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function Ei(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let o=0;o<e.length;o+=4)n[Math.floor(o/4)]=e[o],a[Math.floor(o/4)]=e[o+1];return{real:n,imag:a}}function Ai(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let o=2;o<e.length;o+=4)n[Math.floor(o/4)]=e[o],a[Math.floor(o/4)]=e[o+1];return{real:n,imag:a}}function Ri(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Ni(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function _i(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let o=0;o<Math.ceil(e/2);o++){const r=(t?2:-2)*Math.PI*(o/e);n[o]=Math.cos(r),a[o]=Math.sin(r)}return{real:n,imag:a}}function Fi(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const Di="->",Oi=/->/g,Pi=",",Mi="...";function Li(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Oi,"").length)/Di.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(Di,'").'));const[a,o]=e.split(Di);(0,L.vA)(-1===a.indexOf(Mi),(()=>'The ellipsis notation ("'.concat(Mi,'") is not supported yet.')));const r=a.split(Pi),s=r.length;if(t!==s)throw new Error("Expected ".concat(s," input tensors, received ").concat(t));if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<o.length;++d){const e=o[d];if(!r.some((t=>-1!==t.indexOf(e))))throw new Error("Output subscripts contain the label ".concat(e," ")+"not present in the input subscripts.");-1===i.indexOf(e)&&i.push(e)}for(let d=0;d<a.length;++d){const e=a[d];-1===i.indexOf(e)&&e!==Pi&&i.push(e)}const c=new Array(r.length);for(let d=0;d<s;++d){if(new Set(r[d].split("")).size!==r[d].length)throw new Error("Found duplicate axes in input component ".concat(r[d],". ")+"Support for duplicate axes in input is not implemented yet.");c[d]=[];for(let e=0;e<r[d].length;++e)c[d].push(i.indexOf(r[d][e]))}const l=i.length,u=[];for(let d=o.length;d<l;++d)u.push(d);return{allDims:i,summedDims:u,idDims:c}}function Bi(e,t){let n=new Array(e);n.fill(-1);for(let o=0;o<t.length;++o)n[t[o]]=o;const a=[];for(let o=0;o<e;++o)-1===n[o]&&a.push(o);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function Wi(e,t,n){const a=new Array(e);for(let o=0;o<n.length;++o){const e=n[o].shape;for(let n=0;n<t[o].length;++n)void 0===a[t[o][n]]?a[t[o][n]]=e[n]:(0,L.vA)(a[t[o][n]]===e[n],(()=>"Expected dimension ".concat(a[t[o][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(e),", ")+"but got dimension ".concat(e[n])))}}function Gi(e,t){const n=e,a=[];let o=0;0===e.length&&n.push(-1),o=e.length+1;for(let s=0;s<o;++s)a.push([]);const r=[];for(let s=0;s<n.length;++s){const e=Ui(t,n[s]);for(const t of e)-1===r.indexOf(t)&&(a[s].push(t),r.push(t))}return{path:n,steps:a}}function Vi(e){return e.every(((e,t)=>e===t))}function Ui(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function zi(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof t)(0,L.vA)(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const o=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,L.vA)(o<=1,(()=>"There should be only one negative value in split array."));const r=t.indexOf(-1);if(-1!==r){const a=t.reduce(((e,t)=>t>0?e+t:e));t[r]=e.shape[n]-a}(0,L.vA)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function Yi(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(e)}function Hi(e,t){return"indices(".concat(e,", 0) is invalid: ").concat(t," < 0")}function Ki(e,t,n){return"indices(".concat(e,", 0) is invalid: ").concat(t," >= ").concat(n)}function ji(e,t){return"only one output dimension may be -1, not both ".concat(e," and ").concat(t)}function qi(e,t){return"size ".concat(e," must be non-negative, not ").concat(t)}function Xi(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Zi(e,t){const n=(0,L.Ze)(e),a=(0,L.Ze)(t);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(e," outputShape= ").concat(t)}function Qi(e,t){const n=(0,L.Ze)(e),a=(0,L.Ze)(t);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(e," outputShape=").concat(t)}function Ji(){return"segment ids must be >= 0"}function $i(){return"segment ids are not increasing"}function ec(e,t){return"Segment id ".concat(e," out of range [0, ").concat(t,"), possibly because segmentIds input is not sorted.")}function tc(e,t,n){return"Bad: indices[".concat(e,"] == ").concat(t," out of range [0, ").concat(n,")")}function nc(e,t){let n,a=!1;for(e<=li?(n=e,a=!0):n=(0,L.lK)(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=(0,L.lK)(e,n+1);return n}function ac(e,t,n){const a=[],o=e.length;for(let r=0;r<o;r++)r!==t?a.push(e[r]):a.push(n);return a}function oc(e,t,n,a){const o=t.shape.length,r=e.shape.length;if(0!==a&&(a<-o||a>o))throw new Error("Expect batchDims in the range of [-".concat(o,", ").concat(o,"], but got ").concat(a));if(a<0&&(a+=o),a>r)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(r,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let d=0;d<a;++d)if(e.shape[d]!==t.shape[d])throw new Error("x.shape[".concat(d,"]: ").concat(e.shape[d]," should be equal to indices.shape[").concat(d,"]: ").concat(t.shape[d],"."));const s=e.shape[n],i=[];let c=1,l=1,u=1;for(let d=0;d<a;++d)i.push(e.shape[d]),c*=e.shape[d];for(let d=a;d<n;d++)i.push(e.shape[d]),l*=e.shape[d];for(let d=a;d<o;d++)i.push(t.shape[d]);for(let d=n+1;d<r;d++)i.push(e.shape[d]),u*=e.shape[d];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:s,outputShape:i}}function rc(e){try{return e.map((e=>(0,Bt.decodeString)(e)))}catch(cc){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(cc))}}function sc(e){return e.map((e=>(0,Bt.encodeString)(e)))}var ic=n(46790);!function(){for(const e of Ye)Re(e)}()},39512:(e,t,n)=>{"use strict";n.d(t,{D:()=>o});var a=n(58977);class o{static join(e){return new o(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>a.isTypedArray(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=t+a.byteLength;this.shards.push({buffer:a,start:t,end:o}),t=o}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error("Could not find start shard for byte ".concat(e));const a=new ArrayBuffer(t-e),o=new Uint8Array(a);let r=0;for(let s=n;s<this.shards.length;s++){const n=this.shards[s],a=e+r-n.start,i=r,c=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,a,c-a);if(o.set(l,i),r+=l.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const o=Math.floor((a-n)/2)+n,r=t(e[o]);if(0===r)return o;r<0?a=o:n=o+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}},70285:(e,t,n)=>{"use strict";n.d(t,{AQ:()=>T,CY:()=>h,Ej:()=>E,P8:()=>C,Rl:()=>I,Xf:()=>R,aG:()=>d,jf:()=>k,l3:()=>w,oR:()=>A,s5:()=>x,zV:()=>S});var a=n(86149),o=n(68032),r=n(71426),s=n(71042),i=n(39512),c=n(58046),l=n(55399);const u=4;async function d(e,t){const n=[],a=[],o=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let r=0;r<o.length;++r){const s=o[r],i=Array.isArray(e)?e[r].tensor:e[s];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(s,"': ").concat(i.dtype));const c={name:s,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+u*t.length,a=new Uint8Array(n);let o=0;for(let r=0;r<t.length;r++){const e=t[r],n=new Uint8Array(new Uint32Array([e.length]).buffer);a.set(n,o),o+=u,a.set(e,o),o+=e.length}e(a)}));a.push(e)}else a.push(i.data());null!=t&&(c.group=t),n.push(c)}return{data:v(await Promise.all(a)),specs:n}}function h(e,t){const n=new i.D(e),a={};let o=0;for(const r of t){const e=p(r,((e,t)=>n.slice(o+e,o+t)));a[r.name]=g(r,n.slice(o,o+e)),o+=e}return a}function p(e,t){const n=(0,r.Ze)(e.shape);let a;if("quantization"in e){const t=e.quantization;a=s.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=u+new Uint32Array(t(e,e+u))[0];return e}a=s.i[e.dtype]}return n*a}async function f(e,t){const n=(0,r.Ze)(e.shape);let a;if("quantization"in e){const t=e.quantization;a=s.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=u+new Uint32Array(await t(e,e+u))[0];return e}a=s.i[e.dtype]}return n*a}function g(e,t){const n=e.name,i=e.dtype,c=e.shape,l=(0,r.Ze)(c);let d,h=0;if("quantization"in e){const a=e.quantization;if("uint8"===a.dtype||"uint16"===a.dtype){if(!("min"in a)||!("scale"in a))throw new Error("Weight ".concat(e.name," with quantization ").concat(a.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==a.dtype)throw new Error("Weight ".concat(e.name," has unknown ")+"quantization dtype ".concat(a.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==i)throw new Error("Weight ".concat(e.name," is quantized with ").concat(a.dtype," ")+"which only supports weights of type float32 not ".concat(i,"."))}const o=s.i[a.dtype],r="uint8"===a.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===i)if("uint8"===a.dtype||"uint16"===a.dtype){d=new Float32Array(r.length);for(let e=0;e<r.length;e++){const t=r[e];d[e]=t*a.scale+a.min}}else{if("float16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type float32.");{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const o=new ArrayBuffer(4*a.length),r=new Uint32Array(o);for(let s=0;s<a.length;s++){const o=a[s],i=e[n[o>>10]+(1023&o)]+t[o>>10];r[s]=i}return new Float32Array(o)}}();d=e(r)}}else{if("int32"!==i)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i));if("uint8"!==a.dtype&&"uint16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type int32.");d=new Int32Array(r.length);for(let e=0;e<r.length;e++){const t=r[e];d[e]=Math.round(t*a.scale+a.min)}}h+=l*o}else if("string"===i){const n=(0,r.Ze)(e.shape);d=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(h,h+u))[0];h+=u;const n=new Uint8Array(t.slice(h,h+e));d.push(n),h+=e}}else{const e=s.i[i];if("float32"===i)d=new Float32Array(t);else if("int32"===i)d=new Int32Array(t);else{if("bool"!==i){if("complex64"===i){d=new Float32Array(t);const e=new Float32Array(d.length/2),n=new Float32Array(d.length/2);for(let t=0;t<e.length;t++)e[t]=d[2*t],n[t]=d[2*t+1];const r=(0,o.O)(e,c,"float32"),s=(0,o.O)(n,c,"float32"),i=(0,a.f)(r,s);return r.dispose(),s.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i))}d=new Uint8Array(t)}h+=l*e}return(0,o.O)(d,c,i)}async function m(e,t,n){let a=new Uint8Array(t);for(;a.byteLength<n;){const{done:t,value:o}=await e.read();if(t&&null==o){const e=n-a.byteLength;throw new Error("Reader is done but ".concat(e," bytes are still expected"))}const r=new Uint8Array(a.length+o.byteLength);r.set(a,0),r.set(new Uint8Array(o),a.length),a=r}return a.buffer}async function x(e,t){const n={},a=e.getReader();let o=new ArrayBuffer(0);for(const s of t){const e=await f(s,(async(e,t)=>(o=await m(a,o,t),o.slice(e,t))));o=await m(a,o,e);const t=o.slice(0,e);o=o.slice(e);const i=g(s,t);if(n[s.name]=i,"webgpu"===(0,c.jz)()){const e=(0,c.Hs)();"uploadToGPU"in e&&(0,r.Ze)(i.shape)>=(0,l._K)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function v(e){if(null===e)throw new Error("Invalid input value: ".concat(JSON.stringify(e)));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(e.constructor.name))}));const a=new Uint8Array(t);let o=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),o),o+=e.byteLength})),a.buffer}const b="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function y(e){return b?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function w(e){if(b)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let a=0,o=t.length;a<o;a++)n+=String.fromCharCode(t[a]);return btoa(n)}function k(e){if(b){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}function T(e){return i.D.join(e)}function C(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function S(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function I(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function E(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),I(e,n,a)}function A(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:y(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:y(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new i.D(e.weightData).byteLength}}function R(e){const t=[];for(const n of e)t.push(...n.weights);return t}},71042:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});const a={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},39554:(e,t,n)=>{"use strict";n.d(t,{$dB:()=>F,$jE:()=>nn,$zE:()=>_,A1h:()=>M,A8B:()=>Ut,BK4:()=>vn,BLA:()=>Qe,BRl:()=>re,Blb:()=>zt,BoJ:()=>Kt,BxF:()=>de,C8s:()=>Ht,CQC:()=>ft,Cg$:()=>Ne,CwD:()=>Ee,D7i:()=>It,Ddj:()=>Zt,Dr:()=>bn,DvZ:()=>qt,E3$:()=>Te,EkD:()=>i,ElG:()=>pe,EwU:()=>dn,FAs:()=>sn,FCQ:()=>Ct,FSt:()=>l,Fin:()=>Wt,GZp:()=>Jt,HNs:()=>C,Ik2:()=>k,J3C:()=>Mt,JiE:()=>Ot,Jp_:()=>u,KXH:()=>E,L6G:()=>jt,LB5:()=>S,LDN:()=>Ve,LG0:()=>Xe,LRy:()=>xt,LWX:()=>rt,LXA:()=>De,M6A:()=>Qt,MRQ:()=>z,Mn0:()=>W,MnK:()=>G,N4F:()=>T,Ncv:()=>dt,O4G:()=>me,OAQ:()=>ye,ODT:()=>ct,OMN:()=>s,ORI:()=>X,PH8:()=>r,P_L:()=>St,Pah:()=>ne,PbM:()=>an,Q6t:()=>mt,QDP:()=>A,QKF:()=>h,Qgm:()=>te,R23:()=>yt,RMm:()=>fn,RUm:()=>_e,RW8:()=>Oe,RXX:()=>ze,SDM:()=>nt,SQl:()=>ue,T7M:()=>wn,TBb:()=>cn,TL8:()=>Ke,TMz:()=>H,TOR:()=>At,ToN:()=>Be,TyE:()=>f,UcO:()=>$t,VAI:()=>Ge,VCH:()=>v,Vvy:()=>o,WRv:()=>We,WT3:()=>Je,WuN:()=>Vt,X$8:()=>j,X0$:()=>Se,X4r:()=>Nt,XQy:()=>kt,XhZ:()=>xe,XmO:()=>$,YAb:()=>en,YVe:()=>Lt,ZgB:()=>he,Zl4:()=>at,_s9:()=>oe,aAr:()=>yn,awo:()=>xn,bCz:()=>lt,bP9:()=>Q,cHb:()=>He,cS:()=>b,dFH:()=>Gt,dLy:()=>ln,dXR:()=>hn,dv8:()=>we,e0f:()=>ot,epO:()=>p,fUj:()=>bt,g5A:()=>je,gC7:()=>B,gIW:()=>ke,hVg:()=>Et,hgw:()=>Tt,ho8:()=>x,hql:()=>Pt,huO:()=>vt,i5R:()=>fe,iGz:()=>L,iPs:()=>Ce,iW0:()=>tn,iuW:()=>rn,jAQ:()=>w,jM4:()=>Le,jOE:()=>wt,jfg:()=>P,jgd:()=>Xt,jj_:()=>V,jxD:()=>Z,kdj:()=>ht,l0G:()=>et,l6P:()=>Ft,lLS:()=>ve,lNG:()=>qe,ljI:()=>a,lxb:()=>m,lzr:()=>be,mH5:()=>gt,mIA:()=>Ie,mM$:()=>it,mnI:()=>Ae,mxL:()=>ge,nVu:()=>q,nY8:()=>U,nZd:()=>Fe,oFs:()=>on,oJ2:()=>pt,ox3:()=>se,p2J:()=>D,pJc:()=>Rt,pPe:()=>pn,p_m:()=>d,pk0:()=>J,pnw:()=>mn,pr3:()=>N,pyJ:()=>ut,rFG:()=>Yt,rFm:()=>O,rGP:()=>le,rsH:()=>ae,sDr:()=>ee,t3d:()=>Ue,tG8:()=>Re,tGH:()=>K,u$b:()=>Dt,u8Z:()=>c,uWl:()=>_t,urI:()=>st,vI1:()=>Bt,vaV:()=>R,vj7:()=>I,wNW:()=>Y,wwC:()=>y,wx0:()=>un,x7F:()=>Ze,xJ3:()=>gn,xu7:()=>$e,yPW:()=>Me,ySp:()=>Ye,ybN:()=>ie,ybj:()=>ce,ylV:()=>tt,zP9:()=>g,zfU:()=>Pe});const a="Abs",o="Acos",r="Acosh",s="Add",i="AddN",c="All",l="Any",u="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",g="Atanh",m="Atan2",x="AvgPool",v="AvgPoolGrad",b="AvgPool3D",y="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",T="Bincount",C="BitwiseAnd",S="BroadcastTo",I="BroadcastArgs",E="Cast",A="Ceil",R="ClipByValue",N="Complex",_="ComplexAbs",F="Concat",D="Conv2D",O="Conv2DBackpropFilter",P="Conv2DBackpropInput",M="Conv3D",L="Conv3DBackpropFilterV2",B="Conv3DBackpropInputV2",W="Cos",G="Cosh",V="Cumprod",U="Cumsum",z="CropAndResize",Y="DenseBincount",H="DepthToSpace",K="DepthwiseConv2dNative",j="DepthwiseConv2dNativeBackpropFilter",q="DepthwiseConv2dNativeBackpropInput",X="Diag",Z="Dilation2D",Q="Dilation2DBackpropInput",J="Dilation2DBackpropFilter",$="Draw",ee="RealDiv",te="Einsum",ne="Elu",ae="EluGrad",oe="Erf",re="Equal",se="Exp",ie="ExpandDims",ce="Expm1",le="FFT",ue="Fill",de="FlipLeftRight",he="Floor",pe="FloorDiv",fe="FusedBatchNorm",ge="GatherV2",me="GatherNd",xe="Greater",ve="GreaterEqual",be="Identity",ye="IFFT",we="Imag",ke="IsFinite",Te="IsInf",Ce="IsNan",Se="LeakyRelu",Ie="Less",Ee="LessEqual",Ae="LinSpace",Re="Log",Ne="Log1p",_e="LogicalAnd",Fe="LogicalNot",De="LogicalOr",Oe="LogicalXor",Pe="LogSoftmax",Me="LowerBound",Le="LRN",Be="LRNGrad",We="MatrixBandPart",Ge="Max",Ve="Maximum",Ue="MaxPool",ze="MaxPoolGrad",Ye="MaxPool3D",He="MaxPool3DGrad",Ke="MaxPoolWithArgmax",je="Mean",qe="Min",Xe="Minimum",Ze="MirrorPad",Qe="Mod",Je="Multinomial",$e="Multiply",et="Neg",tt="NotEqual",nt="NonMaxSuppressionV3",at="NonMaxSuppressionV4",ot="NonMaxSuppressionV5",rt="OnesLike",st="OneHot",it="Pack",ct="PadV2",lt="Pool",ut="Pow",dt="Prelu",ht="Prod",pt="RaggedGather",ft="RaggedRange",gt="RaggedTensorToTensor",mt="Range",xt="Real",vt="Reciprocal",bt="Relu",yt="Reshape",wt="ResizeNearestNeighbor",kt="ResizeNearestNeighborGrad",Tt="ResizeBilinear",Ct="ResizeBilinearGrad",St="Relu6",It="Reverse",Et="Round",At="Rsqrt",Rt="ScatterNd",Nt="TensorScatterUpdate",_t="SearchSorted",Ft="Select",Dt="Selu",Ot="Slice",Pt="Sin",Mt="Sinh",Lt="Sign",Bt="Sigmoid",Wt="Softplus",Gt="Sqrt",Vt="Sum",Ut="SpaceToBatchND",zt="SplitV",Yt="Softmax",Ht="SparseFillEmptyRows",Kt="SparseReshape",jt="SparseSegmentMean",qt="SparseSegmentSum",Xt="SparseToDense",Zt="SquaredDifference",Qt="Square",Jt="StaticRegexReplace",$t="StridedSlice",en="StringNGrams",tn="StringSplit",nn="StringToHashBucketFast",an="Sub",on="Tan",rn="Tanh",sn="Tile",cn="TopK",ln="Transform",un="Transpose",dn="Unique",hn="Unpack",pn="UnsortedSegmentSum",fn="UpperBound",gn="ZerosLike",mn="Step",xn="FromPixels",vn="RotateWithOffset",bn="_FusedMatMul",yn="FusedConv2D",wn="FusedDepthwiseConv2D"},10843:(e,t,n)=>{"use strict";n.d(t,{Cf:()=>g,Op:()=>u,_5:()=>c,iP:()=>p,kr:()=>h,rY:()=>f,tA:()=>d,vQ:()=>l});var a=n(55399),o=n(97926),r=n(64124);const s=(0,o.m)("kernelRegistry",(()=>new Map)),i=(0,o.m)("gradRegistry",(()=>new Map));function c(e,t){const n=m(e,t);return s.get(n)}function l(e){return i.get(e)}function u(e){const t=s.entries(),n=[];for(;;){const{done:a,value:o}=t.next();if(a)break;const[r,s]=o,[i]=r.split("_");i===e&&n.push(s)}return n}function d(e){const{kernelName:t,backendName:n}=e,a=m(t,n);s.has(a)&&r.i("The kernel '".concat(t,"' for backend ")+"'".concat(n,"' is already registered")),s.set(a,e)}function h(e){const{kernelName:t}=e;i.has(t)&&(0,a._K)().getBool("DEBUG")&&r.i("Overriding the gradient for '".concat(t,"'")),i.set(t,e)}function p(e,t){const n=m(e,t);if(!s.has(n))throw new Error("The kernel '".concat(e,"' for backend ")+"'".concat(t,"' is not registered"));s.delete(n)}function f(e){if(!i.has(e))throw new Error("The gradient '".concat(e,"' for backend is not registered"));i.delete(e)}function g(e,t){u(e).forEach((e=>{d(Object.assign({},e,{backendName:t}))}))}function m(e,t){return"".concat(t,"_").concat(e)}},64124:(e,t,n)=>{"use strict";n.d(t,{R:()=>r,i:()=>o});var a=n(55399);function o(){(0,a._K)().getBool("IS_TEST")||(0,a._K)().getBool("PROD")||console.warn(...arguments)}function r(){(0,a._K)().getBool("IS_TEST")||(0,a._K)().getBool("PROD")||console.log(...arguments)}},33753:(e,t,n)=>{"use strict";n.d(t,{t:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({abs_:function(e){const t=(0,r.YT)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return a.T2.runKernel(o.$zE,e)}{const e={x:t};return a.T2.runKernel(o.ljI,e)}}})},4759:(e,t,n)=>{"use strict";n.d(t,{H:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({acos_:function(e){const t={x:(0,r.YT)(e,"x","acos")};return a.T2.runKernel(o.Vvy,t)}})},40983:(e,t,n)=>{"use strict";n.d(t,{F:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({acosh_:function(e){const t={x:(0,r.YT)(e,"x","acosh")};return a.T2.runKernel(o.PH8,t)}})},87242:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var a=n(82164),o=n(39554),r=n(68804),s=n(64148);const i=(0,n(47892).op)({add_:function(e,t){let n=(0,s.YT)(e,"a","add"),i=(0,s.YT)(t,"b","add");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(o.OMN,c)}})},51802:(e,t,n)=>{"use strict";n.d(t,{Q:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:(0,r.YT)(e,"x","all","bool")},i={axis:t,keepDims:n};return a.T2.runKernel(o.u8Z,s,i)}})},41819:(e,t,n)=>{"use strict";n.d(t,{b:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:(0,r.YT)(e,"x","any","bool")},i={axis:t,keepDims:n};return a.T2.runKernel(o.FSt,s,i)}})},23068:(e,t,n)=>{"use strict";n.d(t,{F:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,r.YT)(e,"x","argMax")},s={axis:t};return a.T2.runKernel(o.Jp_,n,s)}})},58482:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,r.YT)(e,"x","argMin")},s={axis:t};return a.T2.runKernel(o.p_m,n,s)}})},13010:(e,t,n)=>{"use strict";n.d(t,{q:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({asin_:function(e){const t={x:(0,r.YT)(e,"x","asin")};return a.T2.runKernel(o.QKF,t)}})},46464:(e,t,n)=>{"use strict";n.d(t,{y:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({asinh_:function(e){const t={x:(0,r.YT)(e,"x","asinh")};return a.T2.runKernel(o.epO,t)}})},7803:(e,t,n)=>{"use strict";n.d(t,{r:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({atan_:function(e){const t={x:(0,r.YT)(e,"x","atan")};return a.T2.runKernel(o.TyE,t)}})},46349:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var a=n(82164),o=n(39554),r=n(68804),s=n(64148);const i=(0,n(47892).op)({atan2_:function(e,t){let n=(0,s.YT)(e,"a","atan2"),i=(0,s.YT)(t,"b","atan2");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(o.lxb,c)}})},48147:(e,t,n)=>{"use strict";n.d(t,{r:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({atanh_:function(e){const t={x:(0,r.YT)(e,"x","atanh")};return a.T2.runKernel(o.zP9,t)}})},28650:(e,t,n)=>{"use strict";n.d(t,{$:()=>d});var a=n(82164),o=n(39554),r=n(64148),s=n(71426),i=n(47794),c=n(17538),l=n(47892),u=n(45583);const d=(0,l.op)({avgPool_:function(e,t,n,l,d){const h=(0,r.YT)(e,"x","avgPool","float32");s.vA(c.G0(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let p=h,f=!1;3===h.rank&&(f=!0,p=(0,u.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),s.vA(4===p.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(p.rank,"."))),c.s_("avgPool",l,d);const g={x:p},m={filterSize:t,strides:n,pad:l,dimRoundingMode:d};let x=a.T2.runKernel(o.ho8,g,m);return x=(0,i.w)(x,h.dtype),f?(0,u.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},19235:(e,t,n)=>{"use strict";n.d(t,{Em:()=>l,SM:()=>i,WC:()=>c,WH:()=>o,aF:()=>r,fK:()=>d,gx:()=>u,lb:()=>s});var a=n(71426);function o(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function r(e,t,n){const a=e.length+t.length,o=[];let r=0,s=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?o.push(e[r++]):o.push(t[s++]);return o}function s(e,t){const n=[],a=e.length;for(let o=0;o<a;o++)-1===t.indexOf(o)&&n.push(e[o]);return[n,t.map((t=>e[t]))]}function i(e,t){return r(e,t.map((e=>1)),t)}function c(e,t,n){a.vA(o(t,n),(()=>"".concat(e," supports only inner-most axes for now. ")+"Got axes ".concat(t," and rank-").concat(n," input.")))}function l(e,t){if(o(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function u(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function d(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}},2557:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var a=n(82164),o=n(39554),r=n(64148),s=n(71426);const i=(0,n(47892).op)({batchToSpaceND_:function(e,t,n){const i=(0,r.YT)(e,"x","batchToSpaceND"),c=t.reduce(((e,t)=>e*t));s.vA(i.rank>=1+t.length,(()=>"input rank is ".concat(i.rank," but should be > than blockShape.length ").concat(t.length))),s.vA(n.length===t.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(t.length))),s.vA(i.shape[0]%c===0,(()=>"input tensor batch is ".concat(i.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(t.join(" * ")," === ").concat(c)));const l={x:i},u={blockShape:t,crops:n};return a.T2.runKernel(o.Ik2,l,u)}})},27237:(e,t,n)=>{"use strict";n.d(t,{$:()=>c});var a=n(82164),o=n(39554),r=n(64148),s=n(71426),i=n(45583);const c=(0,n(47892).op)({batchNorm_:function(e,t,n,c,l,u){null==u&&(u=.001);const d=(0,r.YT)(e,"x","batchNorm"),h=(0,r.YT)(t,"mean","batchNorm"),p=(0,r.YT)(n,"variance","batchNorm");let f,g;null!=l&&(f=(0,r.YT)(l,"scale","batchNorm")),null!=c&&(g=(0,r.YT)(c,"offset","batchNorm")),s.vA(h.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.vA(null==g||h.rank===g.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.vA(null==f||h.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const m={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,i.t)(e,[1,1,1,e.size]):2===e.rank?(0,i.t)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,i.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),scale:f,offset:g,mean:h,variance:p},x={varianceEpsilon:u},v=a.T2.runKernel(o.i5R,m,x);return(0,i.t)(v,d.shape)}})},4920:(e,t,n)=>{"use strict";n.d(t,{h:()=>u});var a=n(82164),o=n(39554),r=n(64148),s=n(71426),i=n(49820),c=n(47892),l=n(45583);const u=(0,c.op)({broadcastTo_:function(e,t){let n=(0,r.YT)(e,"broadcastTo","x");const c=n.shape;if((0,s.SA)(t),t.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(t.length," < input.rank=").concat(n.rank,"."));if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,l.t)(n,e)}const u=n.shape,d=Array.from(t);for(let a=t.length-1;a>=0;a--)if(u[a]===t[a])d[a]=1;else if(1!==n.shape[a])throw new Error("broadcastTo(): [".concat(c,"] cannot be broadcast to [").concat(t,"]."));if(0===d.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,i.o)(n);const h={x:n},p={reps:d};return a.T2.runKernel(o.FAs,h,p)}})},48805:(e,t,n)=>{"use strict";function a(e,t){const n=e.length,a=[];for(let o=0;o<n;o++){const r=n-1-o,s=e[r]||1;(t[t.length-1-o]||1)>1&&1===s&&a.unshift(r)}return a}function o(e,t){const n=[];for(let a=0;a<t.length;a++){const o=e[e.length-a-1],r=t.length-a-1,s=t[r];(null==o||1===o&&s>1)&&n.unshift(r)}return n}function r(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let o=0;o<n;o++){let r=e[e.length-o-1];null==r&&(r=1);let s=t[t.length-o-1];if(null==s&&(s=1),1===r)a[n-o-1]=s;else if(1===s)a[n-o-1]=r;else{if(r!==s){const n="Operands could not be broadcast together with shapes "+"".concat(e," and ").concat(t,".");throw Error(n)}a[n-o-1]=r}}return a}n.r(t),n.d(t,{assertAndGetBroadcastShape:()=>r,getBroadcastDims:()=>a,getReductionAxes:()=>o})},47794:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var a=n(82164),o=n(39554),r=n(64148),s=n(71426);const i=(0,n(47892).op)({cast_:function(e,t){const n=(0,r.YT)(e,"x","cast");if(!s.xn(t))throw new Error("Failed to cast to unknown dtype ".concat(t));if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},c={dtype:t};return a.T2.runKernel(o.KXH,i,c)}})},95396:(e,t,n)=>{"use strict";n.d(t,{m:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({ceil_:function(e){const t={x:(0,r.YT)(e,"x","ceil","float32")};return a.T2.runKernel(o.QDP,t)}})},53829:(e,t,n)=>{"use strict";n.d(t,{z:()=>c});var a=n(82164),o=n(39554),r=n(64148),s=n(71426),i=n(24660);const c=(0,n(47892).op)({clipByValue_:function(e,t,n){const c=(0,r.YT)(e,"x","clipByValue");if(s.vA(t<=n,(()=>"Error in clip: min (".concat(t,") must be ")+"less than or equal to max (".concat(n,")."))),t===n)return(0,i.G)(c.shape,t,c.dtype);const l={x:c},u={clipValueMin:t,clipValueMax:n};return a.T2.runKernel(o.vaV,l,u)}})},49820:(e,t,n)=>{"use strict";n.d(t,{o:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({clone_:function(e){const t={x:(0,r.YT)(e,"x","clone","string_or_numeric")};return a.T2.runKernel(o.lzr,t)}})},86149:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var a=n(82164),o=n(39554),r=n(64148),s=n(71426);const i=(0,n(47892).op)({complex_:function(e,t){const n=(0,r.YT)(e,"real","complex"),i=(0,r.YT)(t,"imag","complex");s.O3(n.shape,i.shape,"real and imag shapes, ".concat(n.shape," and ").concat(i.shape,", ")+"must match in call to tf.complex().");const c={real:n,imag:i};return a.T2.runKernel(o.pr3,c)}})},94429:(e,t,n)=>{"use strict";n.d(t,{x:()=>c});var a=n(82164),o=n(39554),r=n(64148),s=n(71426),i=n(49820);const c=(0,n(47892).op)({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,s.vA)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,r.j1)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(e.dtype,". "))})),1===n.length)return(0,i.o)(n[0]);const c=n,l={axis:t};return a.T2.runKernel(o.$dB,c,l)}})},89870:(e,t,n)=>{"use strict";n.d(t,{k:()=>l});var a=n(64148),o=n(71426),r=n(14969),s=n(17538),i=n(47892),c=n(45583);const l=(0,i.op)({conv1d_:function(e,t,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,d=arguments.length>6?arguments[6]:void 0;const h=(0,a.YT)(e,"x","conv1d"),p=(0,a.YT)(t,"filter","conv1d");let f=h,g=!1;2===h.rank&&(g=!0,f=(0,c.t)(h,[1,h.shape[0],h.shape[1]])),o.vA(3===f.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(f.rank,"."))),o.vA(3===p.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(p.rank,"."))),s.s_("conv1d",i,d),o.vA(f.shape[2]===p.shape[1],(()=>"Error in conv1d: depth of input (".concat(f.shape[2],") must match ")+"input depth for filter ".concat(p.shape[1],"."))),o.vA(s.G0(n,u),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(u,"'"))),o.vA(s.qk(u),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),o.vA(s.qk(n),(()=>"Error in conv1D: Stride should be larger than 0.")),o.vA("NWC"===l,(()=>"Error in conv1d: got dataFormat of ".concat(l," but only NWC is currently supported.")));const m=(0,c.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),x=(0,c.t)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),v=[1,n],b=[1,u],y=(0,r.X)(x,m,v,i,"NHWC",b,d);return g?(0,c.t)(y,[y.shape[2],y.shape[3]]):(0,c.t)(y,[y.shape[0],y.shape[2],y.shape[3]])}})},14969:(e,t,n)=>{"use strict";n.d(t,{X:()=>u});var a=n(82164),o=n(39554),r=n(64148),s=n(71426),i=n(17538),c=n(47892),l=n(45583);const u=(0,c.op)({conv2d_:function(e,t,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=(0,r.YT)(e,"x","conv2d","float32"),f=(0,r.YT)(t,"filter","conv2d","float32");let g=p,m=!1;3===p.rank&&(m=!0,g=(0,l.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),s.vA(4===g.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(g.rank,"."))),s.vA(4===f.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(f.rank,"."))),i.s_("conv2d",c,h);const x="NHWC"===u?g.shape[3]:g.shape[1];s.vA(x===f.shape[2],(()=>"Error in conv2d: depth of input (".concat(x,") must match ")+"input depth for filter ".concat(f.shape[2],"."))),s.vA(i.G0(n,d),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(d,"'"))),s.vA(i.qk(d),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),s.vA(i.qk(n),(()=>"Error in conv2D: Strides should be larger than 0."));const v={x:g,filter:f},b={strides:n,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h},y=a.T2.runKernel(o.p2J,v,b);return m?(0,l.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},56927:(e,t,n)=>{"use strict";n.d(t,{H:()=>l});var a=n(82164),o=n(39554),r=n(71426),s=n(17538),i=n(47892),c=n(45583);const l=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0,h=e;3===e.rank&&(h=(0,c.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,c.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),r.vA(4===h.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(h.shape,"."))),r.vA(4===p.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(p.shape,"."))),r.vA(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const f="NHWC"===u?h.shape[3]:h.shape[1],g="NHWC"===u?p.shape[3]:p.shape[1];r.vA(f===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(f,") must ")+"match input depth in filter (".concat(n[2],"."))),r.vA(g===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(g,") must ")+"match output depth for filter (".concat(n[3],")."))),s.s_("conv2dDerFilter",l,d);const m={x:h,dy:p},x={strides:i,pad:l,dataFormat:u,dimRoundingMode:d,filterShape:n};return a.T2.runKernel(o.rFm,m,x)}})},91565:(e,t,n)=>{"use strict";n.d(t,{v:()=>l});var a=n(82164),o=n(39554),r=n(71426),s=n(17538),i=n(47892),c=n(45583);const l=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0;r.vA(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let h=e,p=t,f=!1;3===t.rank&&(f=!0,p=(0,c.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),h=[1,e[0],e[1],e[2]]),r.vA(4===h.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(h.length,"."))),r.vA(4===p.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(p.rank))),r.vA(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const g="NHWC"===u?h[3]:h[1],m="NHWC"===u?p.shape[3]:p.shape[1];r.vA(g===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(g,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),r.vA(m===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(m,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),s.s_("conv2dDerInput",l,d);const x={dy:p,filter:n},v={strides:i,pad:l,dataFormat:u,dimRoundingMode:d,inputShape:h},b=a.T2.runKernel(o.jfg,x,v);return f?(0,c.t)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},1137:(e,t,n)=>{"use strict";n.d(t,{w:()=>r});var a=n(64148),o=n(91565);const r=(0,n(47892).op)({conv2dTranspose_:function(e,t,n,r,s,i){const c=(0,a.YT)(e,"x","conv2dTranspose"),l=(0,a.YT)(t,"filter","conv2dTranspose");return(0,o.v)(n,c,l,r,s,"NHWC",i)}})},46410:(e,t,n)=>{"use strict";n.d(t,{c:()=>c});var a=n(82164),o=n(39554),r=n(71426),s=n(47892),i=n(45583);const c=(0,s.op)({conv3DBackpropInput_:function(e,t,n,s,c){r.vA(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let l=e,u=t,d=!1;4===t.rank&&(d=!0,u=(0,i.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=[1,e[0],e[1],e[2],e[3]]);const h=l[4],p=u.shape[4];r.vA(5===l.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(l.length,"."))),r.vA(5===u.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(u.rank))),r.vA(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),r.vA(h===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(h,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),r.vA(p===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(p,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const f={dy:u,filter:n},g={pad:c,strides:s,inputShape:l},m=a.T2.runKernel(o.gC7,f,g);return d?(0,i.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}})},17538:(e,t,n)=>{"use strict";n.d(t,{$Q:()=>x,Dh:()=>f,E6:()=>r,G0:()=>g,G8:()=>l,YQ:()=>o,l5:()=>s,p$:()=>c,qk:()=>m,s_:()=>v,uf:()=>i});var a=n(71426);function o(e,t,n,a){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",r=arguments.length>5?arguments[5]:void 0;return i(e,[...t,e[3]],n,r,a,null,null,x(o))}function r(e,t,n,a,o,r){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[c,l]=u(t);let d;if("channelsLast"===s)d=[c,l,e[3],e[3]];else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat ".concat(s));d=[c,l,e[1],e[1]]}return i(e,d,n,a,o,r,!1,s)}function s(e,t,n,a,o,r){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,l,u]=d(t);let h,p;if("NDHWC"===s)p="channelsLast",h=[i,l,u,e[4],e[4]];else{if("NCDHW"!==s)throw new Error("Unknown dataFormat ".concat(s));p="channelsFirst",h=[i,l,u,e[1],e[1]]}return c(e,h,n,a,o,!1,p,r)}function i(e,t,n,a,o,r){let s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,d,f,g]=[-1,-1,-1,-1];if("channelsLast"===i)[c,d,f,g]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,g,d,f]=e}const[m,x,,v]=t,[b,y]=u(n),[w,k]=u(a),T=h(m,w),C=h(x,k),{padInfo:S,outHeight:I,outWidth:E}=function(e,t,n,a,o,r,s,i,c){let u,d,h;if("number"===typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const o=function(e,t,n,a,o){null==a&&(a=l(e,t,n));const r=e[0],s=e[1],i=p((r-t+2*a)/n+1,o),c=p((s-t+2*a)/n+1,o);return[i,c]}([t,n],r,a,e,i);d=o[0],h=o[1]}else if("same"===e){d=Math.ceil(t/a),h=Math.ceil(n/o);const e=Math.max(0,(d-1)*a+r-t),i=Math.max(0,(h-1)*o+s-n),c=Math.floor(e/2),l=e-c,p=Math.floor(i/2);u={top:c,bottom:l,left:p,right:i-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-r+1)/a),h=Math.ceil((n-s+1)/o);else{if("object"!==typeof e)throw Error("Unknown padding parameter: ".concat(e));{const l="channelsLast"===c?e[1][0]:e[2][0],f="channelsLast"===c?e[1][1]:e[2][1],g="channelsLast"===c?e[2][0]:e[3][0],m="channelsLast"===c?e[2][1]:e[3][1];u={top:l,bottom:f,left:g,right:m,type:0===l&&0===f&&0===g&&0===m?"VALID":"EXPLICIT"},d=p((t-r+l+f)/a+1,i),h=p((n-s+g+m)/o+1,i)}}return{padInfo:u,outHeight:d,outWidth:h}}(o,d,f,b,y,T,C,r,i),A=s?v*g:v;let R;return"channelsFirst"===i?R=[c,A,I,E]:"channelsLast"===i&&(R=[c,I,E,A]),{batchSize:c,dataFormat:i,inHeight:d,inWidth:f,inChannels:g,outHeight:I,outWidth:E,outChannels:A,padInfo:S,strideHeight:b,strideWidth:y,filterHeight:m,filterWidth:x,effectiveFilterHeight:T,effectiveFilterWidth:C,dilationHeight:w,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function c(e,t,n,a,o){let r=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,u,f,g,m]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[c,u,f,g,m]=e;else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat ".concat(s));[c,m,u,f,g]=e}const[x,v,b,,y]=t,[w,k,T]=d(n),[C,S,I]=d(a),E=h(x,C),A=h(v,S),R=h(b,I),{padInfo:N,outDepth:_,outHeight:F,outWidth:D}=function(e,t,n,a,o,r,s,i,c,u,d){let h,f,g,m;"valid"===e&&(e=0);if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const x=function(e,t,n,a,o,r){null==o&&(o=l(e,t[0],a[0]));const s=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*o>=t[i]&&(s[i]=p((e[i]-t[i]+2*o)/a[i]+1,r));return s}([t,n,a,1],[i,c,u],1,[o,r,s],e,d);f=x[0],g=x[1],m=x[2]}else{if("same"!==e)throw Error("Unknown padding parameter: ".concat(e));{f=Math.ceil(t/o),g=Math.ceil(n/r),m=Math.ceil(a/s);const e=(f-1)*o+i-t,l=(g-1)*r+c-n,d=(m-1)*s+u-a,p=Math.floor(e/2),x=e-p,v=Math.floor(l/2),b=l-v,y=Math.floor(d/2);h={top:v,bottom:b,left:y,right:d-y,front:p,back:x,type:"SAME"}}}return{padInfo:h,outDepth:f,outHeight:g,outWidth:m}}(o,u,f,g,w,k,T,E,A,R,i),O=r?y*m:y;let P;return"channelsFirst"===s?P=[c,O,_,F,D]:"channelsLast"===s&&(P=[c,_,F,D,O]),{batchSize:c,dataFormat:s,inDepth:u,inHeight:f,inWidth:g,inChannels:m,outDepth:_,outHeight:F,outWidth:D,outChannels:O,padInfo:N,strideDepth:w,strideHeight:k,strideWidth:T,filterDepth:x,filterHeight:v,filterWidth:b,effectiveFilterDepth:E,effectiveFilterHeight:A,effectiveFilterWidth:R,dilationDepth:C,dilationHeight:S,dilationWidth:I,inShape:e,outShape:P,filterShape:t}}function l(e,t,n){const a=h(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+a)/2)}function u(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function d(e){return"number"===typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode ".concat(t))}}function f(e){const[t,n,a]=u(e);return 1===t&&1===n&&1===a}function g(e,t){return f(e)||f(t)}function m(e){return u(e).every((e=>e>0))}function x(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(e))}function v(e,t,n){if(null!=n){if("string"===typeof t)throw Error("Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));if("number"===typeof t)a.vA(a.E6(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")));else{if("object"!==typeof t)throw Error("Error in ".concat(e,": Unknown padding parameter: ").concat(t));t.forEach((t=>{t.forEach((t=>{a.vA(a.E6(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")))}))}))}}}},35894:(e,t,n)=>{"use strict";n.d(t,{g:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({cos_:function(e){const t={x:(0,r.YT)(e,"x","cos","float32")};return a.T2.runKernel(o.Mn0,t)}})},71164:(e,t,n)=>{"use strict";n.d(t,{y:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({cosh_:function(e){const t={x:(0,r.YT)(e,"x","cosh","float32")};return a.T2.runKernel(o.MnK,t)}})},63739:(e,t,n)=>{"use strict";n.d(t,{L:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i={x:(0,r.YT)(e,"x","cumprod")},c={axis:t,exclusive:n,reverse:s};return a.T2.runKernel(o.jj_,i,c)}})},97167:(e,t,n)=>{"use strict";n.d(t,{r:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i={x:(0,r.YT)(e,"x","cumsum")},c={axis:t,exclusive:n,reverse:s};return a.T2.runKernel(o.nY8,i,c)}})},41719:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var a=n(82164),o=n(39554),r=n(64148),s=n(71426);const i=(0,n(47892).op)({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const i=(0,r.YT)(e,"x","depthToSpace","float32"),c="NHWC"===n?i.shape[1]:i.shape[2],l="NHWC"===n?i.shape[2]:i.shape[3],u="NHWC"===n?i.shape[3]:i.shape[1];s.vA(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(t))),s.vA(c*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(c," and ").concat(t,"  for depthToSpace with input shape\n    ").concat(i.shape))),s.vA(l*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(l," and ").concat(t," for depthToSpace with input shape\n        ").concat(i.shape))),s.vA(u%(t*t)===0,(()=>"Dimension size must be evenly divisible by ".concat(t*t," but is ").concat(u," for depthToSpace with input shape ").concat(i.shape)));const d={x:i},h={blockSize:t,dataFormat:n};return a.T2.runKernel(o.TMz,d,h)}})},49899:(e,t,n)=>{"use strict";n.d(t,{G:()=>u});var a=n(82164),o=n(39554),r=n(64148),s=n(71426),i=n(17538),c=n(47892),l=n(45583);const u=(0,c.op)({depthwiseConv2d_:function(e,t,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=(0,r.YT)(e,"x","depthwiseConv2d","float32"),f=(0,r.YT)(t,"filter","depthwiseConv2d","float32");let g=p,m=!1;3===p.rank&&(m=!0,g=(0,l.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),s.vA(4===g.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(g.rank,"."))),s.vA(4===f.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(f.rank,".")));const x="NHWC"===u?g.shape[3]:g.shape[1];s.vA(x===f.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(x,") must match the inChannels dimension in ")+"filter ".concat(f.shape[2],"."))),i.s_("depthwiseConv2d",c,h);const v={x:g,filter:f},b={strides:n,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h},y=a.T2.runKernel(o.tGH,v,b);return m?(0,l.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},17399:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var a=n(82164),o=n(39554),r=n(47892),s=n(45583);const i=(0,r.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=e;3===e.rank&&(u=(0,s.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,s.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:u,dy:d},p={strides:r,pad:i,dimRoundingMode:l,dilations:c,filterShape:n};return a.T2.runKernel(o.X$8,h,p)}})},10261:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var a=n(82164),o=n(39554),r=n(47892),s=n(45583);const i=(0,r.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=t,d=!1;3===t.rank&&(d=!0,u=(0,s.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:u,filter:n},p={strides:r,pad:i,dimRoundingMode:l,dilations:c,inputShape:e},f=a.T2.runKernel(o.nVu,h,p);return d?(0,s.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},83789:(e,t,n)=>{"use strict";n.d(t,{X:()=>l});var a=n(82164),o=n(39554),r=n(64148),s=n(71426),i=n(47892),c=n(45583);const l=(0,i.op)({dilation2d_:function(e,t,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const d=(0,r.YT)(e,"x","dilation2d"),h=(0,r.YT)(t,"filter","dilation2d");s.vA(3===d.rank||4===d.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(d.rank,"."))),s.vA(3===h.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(h.rank,"."))),s.vA("NHWC"===u,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(u)));let p=d,f=!1;3===d.rank&&(p=(0,c.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0),s.vA(p.shape[3]===h.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(p.shape[3]," vs ").concat(h.shape[2])));const g={x:p,filter:h},m={strides:n,pad:i,dilations:l},x=a.T2.runKernel(o.jxD,g,m);return f?(0,c.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},24974:(e,t,n)=>{"use strict";n.d(t,{y:()=>c});var a=n(82164),o=n(39554),r=n(68804),s=n(64148),i=n(63612);const c=(0,n(47892).op)({div_:function(e,t){let n=(0,s.YT)(e,"a","div"),c=(0,s.YT)(t,"b","div");if([n,c]=(0,r.makeTypesMatch)(n,c),"int32"===n.dtype&&"int32"===c.dtype)return(0,i.w)(n,c);const l={a:n,b:c};return a.T2.runKernel(o.sDr,l,{})}})},90044:(e,t,n)=>{"use strict";n.d(t,{e:()=>u});var a=n(68804),o=n(64148),r=n(24974),s=n(37457),i=n(47892),c=n(93986),l=n(63290);const u=(0,i.op)({divNoNan_:function(e,t){let n=(0,o.YT)(e,"a","div"),i=(0,o.YT)(t,"b","div");[n,i]=(0,a.makeTypesMatch)(n,i);const u=(0,r.y)(n,i),d=(0,l.P)(u),h=(0,s.L)(i,d);return(0,c._)(h,d,u)}})},36434:(e,t,n)=>{"use strict";n.d(t,{O:()=>c});var a=n(64148),o=n(71426),r=n(5162),s=n(47892),i=n(45583);const c=(0,s.op)({dot_:function(e,t){const n=(0,a.YT)(e,"t1","dot"),s=(0,a.YT)(t,"t2","dot");o.vA((1===n.rank||2===n.rank)&&(1===s.rank||2===s.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(s.rank,".")));const c=1===n.rank?n.size:n.shape[1],l=1===s.rank?s.size:s.shape[0];if(o.vA(c===l,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(c," and ").concat(l,"."))),1===n.rank&&1===s.rank){const e=(0,i.t)(n,[1,-1]),t=(0,i.t)(s,[-1,1]),a=(0,r.N)(e,t);return(0,i.t)(a,[])}if(1===n.rank&&2===s.rank){const e=(0,i.t)(n,[1,-1]),t=(0,i.t)(s,[s.shape[0],s.shape[1]]),a=(0,r.N)(e,t);return(0,i.t)(a,[a.size])}if(2===n.rank&&1===s.rank){const e=(0,i.t)(s,[-1,1]),t=(0,r.N)(n,e);return(0,i.t)(t,[t.size])}{const e=(0,i.t)(s,[s.shape[0],s.shape[1]]);return(0,r.N)(n,e)}}})},83645:(e,t,n)=>{"use strict";n.d(t,{P:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({elu_:function(e){const t={x:(0,r.YT)(e,"x","elu","float32")};return a.T2.runKernel(o.Pah,t)}})},37457:(e,t,n)=>{"use strict";n.d(t,{L:()=>c});var a=n(82164),o=n(39554),r=n(68804),s=n(64148),i=n(48805);const c=(0,n(47892).op)({equal_:function(e,t){let n=(0,s.YT)(e,"a","equal","string_or_numeric"),c=(0,s.YT)(t,"b","equal","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(o.BRl,l)}})},48810:(e,t,n)=>{"use strict";n.d(t,{Y:()=>c});var a=n(82164),o=n(39554),r=n(64148),s=n(71426),i=n(47794);const c=(0,n(47892).op)({erf_:function(e){let t=(0,r.YT)(e,"x","erf");s.vA("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,i.w)(t,"float32"));const n={x:t};return a.T2.runKernel(o._s9,n)}})},28826:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var a=n(92155);const o=(0,n(47892).op)({euclideanNorm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,a.x)(e,"euclidean",t,n)}})},25462:(e,t,n)=>{"use strict";n.d(t,{o:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({exp_:function(e){const t={x:(0,r.YT)(e,"x","exp")};return a.T2.runKernel(o.ox3,t)}})},74023:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var a=n(82164),o=n(39554),r=n(64148),s=n(71426);const i=(0,n(47892).op)({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,r.YT)(e,"x","expandDims","string_or_numeric");s.vA(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const i={input:n},c={dim:t};return a.T2.runKernel(o.ybN,i,c)}})},72520:(e,t,n)=>{"use strict";n.d(t,{I:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({expm1_:function(e){const t={x:(0,r.YT)(e,"x","expm1")};return a.T2.runKernel(o.ybj,t)}})},24660:(e,t,n)=>{"use strict";n.d(t,{G:()=>s});var a=n(82164),o=n(39554),r=n(71426);function s(e,t,n){(0,r.SA)(e);const s={shape:e,value:t,dtype:n=n||(0,r.X$)(t)};return a.T2.runKernel(o.SQl,{},s)}},48587:(e,t,n)=>{"use strict";n.d(t,{R:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({floor_:function(e){const t={x:(0,r.YT)(e,"x","floor","float32")};return a.T2.runKernel(o.ZgB,t)}})},63612:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var a=n(82164),o=n(39554),r=n(68804),s=n(64148);const i=(0,n(47892).op)({floorDiv_:function(e,t){let n=(0,s.YT)(e,"a","floorDiv"),i=(0,s.YT)(t,"b","floorDiv");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(o.ElG,c)}})},56178:(e,t,n)=>{"use strict";n.d(t,{k:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const i={x:(0,r.YT)(e,"x","gather"),indices:(0,r.YT)(t,"indices","gather","int32")},c={axis:n,batchDims:s};return a.T2.runKernel(o.mxL,i,c)}})},22759:(e,t,n)=>{"use strict";n.d(t,{r:()=>c});var a=n(82164),o=n(39554),r=n(68804),s=n(64148),i=n(48805);const c=(0,n(47892).op)({greater_:function(e,t){let n=(0,s.YT)(e,"a","greater","string_or_numeric"),c=(0,s.YT)(t,"b","greater","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(o.XhZ,l)}})},9996:(e,t,n)=>{"use strict";n.d(t,{D:()=>c});var a=n(82164),o=n(39554),r=n(68804),s=n(64148),i=n(48805);const c=(0,n(47892).op)({greaterEqual_:function(e,t){let n=(0,s.YT)(e,"a","greaterEqual","string_or_numeric"),c=(0,s.YT)(t,"b","greaterEqual","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(o.lLS,l)}})},21047:(e,t,n)=>{"use strict";n.d(t,{n:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({imag_:function(e){const t={input:(0,r.YT)(e,"input","imag")};return a.T2.runKernel(o.dv8,t)}})},22214:(e,t,n)=>{"use strict";n.d(t,{v:()=>l});var a=n(82164),o=n(39554),r=n(64148),s=n(71426),i=n(47892),c=n(45583);const l=(0,i.op)({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,r.YT)(e,"images","resizeBilinear");s.vA(3===l.rank||4===l.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,"."))),s.vA(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(t,"."))),s.vA(!1===i||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let u=l,d=!1;3===l.rank&&(d=!0,u=(0,c.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:u},p={alignCorners:n,halfPixelCenters:i,size:t},f=a.T2.runKernel(o.hgw,h,p);return d?(0,c.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},92823:(e,t,n)=>{"use strict";n.d(t,{b:()=>l});var a=n(82164),o=n(39554),r=n(64148),s=n(71426),i=n(47892),c=n(45583);const l=(0,i.op)({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,r.YT)(e,"images","resizeNearestNeighbor");s.vA(3===l.rank||4===l.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,"."))),s.vA(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(t,"."))),s.vA("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),s.vA(!1===i||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let u=l,d=!1;3===l.rank&&(d=!0,u=(0,c.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:u},p={alignCorners:n,halfPixelCenters:i,size:t},f=a.T2.runKernel(o.jOE,h,p);return d?(0,c.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},9027:(e,t,n)=>{"use strict";n.d(t,{M:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({isFinite_:function(e){const t={x:(0,r.YT)(e,"x","isFinite")};return a.T2.runKernel(o.gIW,t)}})},76005:(e,t,n)=>{"use strict";n.d(t,{E:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({isInf_:function(e){const t={x:(0,r.YT)(e,"x","isInf")};return a.T2.runKernel(o.E3$,t)}})},13467:(e,t,n)=>{"use strict";n.d(t,{y:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({isNaN_:function(e){const t={x:(0,r.YT)(e,"x","isNaN")};return a.T2.runKernel(o.iPs,t)}})},18076:(e,t,n)=>{"use strict";n.d(t,{H:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:(0,r.YT)(e,"x","leakyRelu")},s={alpha:t};return a.T2.runKernel(o.X0$,n,s)}})},58320:(e,t,n)=>{"use strict";n.d(t,{M:()=>c});var a=n(82164),o=n(39554),r=n(68804),s=n(64148),i=n(48805);const c=(0,n(47892).op)({less_:function(e,t){let n=(0,s.YT)(e,"a","less","string_or_numeric"),c=(0,s.YT)(t,"b","less","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(o.mIA,l)}})},827:(e,t,n)=>{"use strict";n.d(t,{I:()=>c});var a=n(82164),o=n(39554),r=n(68804),s=n(64148),i=n(48805);const c=(0,n(47892).op)({lessEqual_:function(e,t){let n=(0,s.YT)(e,"a","lessEqual","string_or_numeric"),c=(0,s.YT)(t,"b","lessEqual","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(o.CwD,l)}})},66584:(e,t,n)=>{"use strict";n.d(t,{K:()=>l});var a=n(82164),o=n(39554),r=n(64148),s=n(71426),i=n(47892),c=n(45583);const l=(0,i.op)({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const u=(0,r.YT)(e,"x","localResponseNormalization");s.vA(4===u.rank||3===u.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(u.rank,"."))),s.vA(s.E6(t),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(t,".")));let d=u,h=!1;3===u.rank&&(h=!0,d=(0,c.t)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const p={x:d},f={depthRadius:t,bias:n,alpha:i,beta:l},g=a.T2.runKernel(o.jM4,p,f);return h?(0,c.t)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},75911:(e,t,n)=>{"use strict";n.d(t,{R:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({log_:function(e){const t={x:(0,r.YT)(e,"x","log","float32")};return a.T2.runKernel(o.tG8,t)}})},21386:(e,t,n)=>{"use strict";n.d(t,{K:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({log1p_:function(e){const t={x:(0,r.YT)(e,"x","log1p")};return a.T2.runKernel(o.Cg$,t)}})},44824:(e,t,n)=>{"use strict";n.d(t,{n:()=>u});var a=n(1839),o=n(64148),r=n(20803),s=n(1011),i=n(47892),c=n(74213),l=n(9973);const u=(0,i.op)({logSigmoid_:function(e){const t=(0,o.YT)(e,"x","logSigmoid");return(0,a._X)((e=>({value:(0,s.H)((0,l.l)((0,s.H)(e))),gradFunc:t=>(0,r.l)(t,(0,c.r)((0,s.H)(e)))})))(t)}})},71194:(e,t,n)=>{"use strict";n.d(t,{H:()=>p});var a=n(1839),o=n(64148),r=n(47794),s=n(25462),i=n(75911),c=n(60891),l=n(20803),u=n(47892),d=n(37951),h=n(47382);const p=(0,u.op)({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,o.YT)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(t));return(0,a._X)(((e,n)=>{const a=(0,c.T)(e,t,!0),o=(0,d.j)(e,a),u=(0,d.j)((0,r.w)(o,"float32"),(0,i.R)((0,h.c)((0,s.o)(o),t,!0)));n([u]);return{value:u,gradFunc:(e,n)=>{const[a]=n,o=(0,s.o)(a);return(0,d.j)(e,(0,l.l)((0,h.c)(e,t,!0),o))}}}))(n)}})},42175:(e,t,n)=>{"use strict";n.d(t,{V:()=>f});var a=n(64148),o=n(71426),r=n(87242),s=n(19235),i=n(25462),c=n(75911),l=n(60891),u=n(47892),d=n(45583),h=n(37951),p=n(47382);const f=(0,u.op)({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const u=(0,a.YT)(e,"x","logSumExp"),f=(0,o.Y6)(t,u.shape),g=(0,l.T)(u,f,!0),m=(0,h.j)(u,g),x=(0,i.o)(m),v=(0,p.c)(x,f),b=(0,c.R)(v),y=(0,r.W)((0,d.t)(g,b.shape),b);if(n){const e=(0,s.SM)(y.shape,f);return(0,d.t)(y,e)}return y}})},45692:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var a=n(82164),o=n(39554),r=n(64148),s=n(48805);const i=(0,n(47892).op)({logicalAnd_:function(e,t){const n=(0,r.YT)(e,"a","logicalAnd","bool"),i=(0,r.YT)(t,"b","logicalAnd","bool");(0,s.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return a.T2.runKernel(o.RUm,c)}})},15344:(e,t,n)=>{"use strict";n.d(t,{N:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({logicalNot_:function(e){const t={x:(0,r.YT)(e,"x","logicalNot","bool")};return a.T2.runKernel(o.nZd,t)}})},47920:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var a=n(82164),o=n(39554),r=n(64148),s=n(48805);const i=(0,n(47892).op)({logicalOr_:function(e,t){const n=(0,r.YT)(e,"a","logicalOr","bool"),i=(0,r.YT)(t,"b","logicalOr","bool");(0,s.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return a.T2.runKernel(o.LXA,c)}})},63708:(e,t,n)=>{"use strict";n.d(t,{r:()=>c});var a=n(64148),o=n(48805),r=n(45692),s=n(15344),i=n(47920);const c=(0,n(47892).op)({logicalXor_:function(e,t){const n=(0,a.YT)(e,"a","logicalXor","bool"),c=(0,a.YT)(t,"b","logicalXor","bool");return(0,o.assertAndGetBroadcastShape)(n.shape,c.shape),(0,r.n)((0,i.z)(e,t),(0,s.N)((0,r.n)(e,t)))}})},5162:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var a=n(82164),o=n(39554),r=n(68804),s=n(64148);const i=(0,n(47892).op)({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=(0,s.YT)(e,"a","matMul"),l=(0,s.YT)(t,"b","matMul");[c,l]=(0,r.makeTypesMatch)(c,l);const u={a:c,b:l},d={transposeA:n,transposeB:i};return a.T2.runKernel(o.jAQ,u,d)}})},60891:(e,t,n)=>{"use strict";n.d(t,{T:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:(0,r.YT)(e,"x","max")},i={reductionIndices:t,keepDims:n};return a.T2.runKernel(o.VAI,s,i)}})},6044:(e,t,n)=>{"use strict";n.d(t,{j:()=>u});var a=n(82164),o=n(39554),r=n(64148),s=n(71426),i=n(17538),c=n(47892),l=n(45583);const u=(0,c.op)({maxPool_:function(e,t,n,c,u){const d=(0,r.YT)(e,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=(0,l.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),s.vA(4===h.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(h.rank,"."))),s.vA(i.G0(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),i.s_("maxPool",c,u);const f={x:h},g={filterSize:t,strides:n,pad:c,dimRoundingMode:u},m=a.T2.runKernel(o.t3d,f,g);return p?(0,l.t)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},82131:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var a=n(82164),o=n(39554),r=n(68804),s=n(64148),i=n(48805),c=n(47794);const l=(0,n(47892).op)({maximum_:function(e,t){let n=(0,s.YT)(e,"a","maximum"),l=(0,s.YT)(t,"b","maximum");[n,l]=(0,r.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.w)(n,"int32"),l=(0,c.w)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.T2.runKernel(o.LDN,u)}})},55396:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:(0,r.YT)(e,"x","mean")},i={axis:t,keepDims:n};return a.T2.runKernel(o.g5A,s,i)}})},21465:(e,t,n)=>{"use strict";n.d(t,{j:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:(0,r.YT)(e,"x","min")},i={axis:t,keepDims:n};return a.T2.runKernel(o.lNG,s,i)}})},6561:(e,t,n)=>{"use strict";n.d(t,{B:()=>l});var a=n(82164),o=n(39554),r=n(68804),s=n(64148),i=n(48805),c=n(47794);const l=(0,n(47892).op)({minimum_:function(e,t){let n=(0,s.YT)(e,"a","minimum"),l=(0,s.YT)(t,"b","minimum");[n,l]=(0,r.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.w)(n,"int32"),l=(0,c.w)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.T2.runKernel(o.LG0,u)}})},84252:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var a=n(82164),o=n(39554),r=n(64148),s=n(71426);const i=(0,n(47892).op)({mirrorPad_:function(e,t,n){s.vA("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const i=(0,r.YT)(e,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");s.vA(t.length===i.rank,(()=>"Padding doesn't match input. Must be ".concat(i.rank,". ")+"Got ".concat(t.length,".")));const c="reflect"===n?1:0;for(let a=0;a<i.rank;a++)s.vA(2===t[a].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),s.vA(t[a][0]>=0&&t[a][0]<=i.shape[a]-c&&t[a][1]>=0&&t[a][1]<=i.shape[a]-c,(()=>"Padding in dimension ".concat(a," cannot be greater than or equal ")+"to ".concat(i.shape[a]-c," or less than 0 for input of ")+"shape ".concat(i.shape)));const l={paddings:t,mode:n},u={x:i};return a.T2.runKernel(o.x7F,u,l)}})},73617:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var a=n(82164),o=n(39554),r=n(68804),s=n(64148);const i=(0,n(47892).op)({mod_:function(e,t){let n=(0,s.YT)(e,"a","mod"),i=(0,s.YT)(t,"b","mod");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(o.BLA,c)}})},20803:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var a=n(82164),o=n(39554),r=n(68804),s=n(64148);const i=(0,n(47892).op)({mul_:function(e,t){let n=(0,s.YT)(e,"a","mul"),i=(0,s.YT)(t,"b","mul");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(o.xu7,c)}})},1011:(e,t,n)=>{"use strict";n.d(t,{H:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({neg_:function(e){const t={x:(0,r.YT)(e,"x","neg")};return a.T2.runKernel(o.l0G,t)}})},92155:(e,t,n)=>{"use strict";n.d(t,{x:()=>x});var a=n(64148),o=n(71426),r=n(33753),s=n(19235),i=n(60891),c=n(21465),l=n(47892),u=n(77587),d=n(45583),h=n(51997),p=n(70191),f=n(7738),g=n(47382);function m(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return(0,r.t)(e);if(1!==e.rank&&null===n)return m((0,d.t)(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,g.c)((0,r.t)(e),n);if(t===1/0)return(0,i.T)((0,r.t)(e),n);if(t===-1/0)return(0,c.j)((0,r.t)(e),n);if("euclidean"===t||2===t)return(0,p.R)((0,g.c)((0,u.n)((0,r.t)(e),(0,h.d)(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,i.T)((0,g.c)((0,r.t)(e),n[0]),n[1]-1);if(t===1/0)return(0,i.T)((0,g.c)((0,r.t)(e),n[1]),n[0]);if(t===-1/0)return(0,c.j)((0,g.c)((0,r.t)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,p.R)((0,g.c)((0,f.E)(e),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}throw new Error("Error in norm: invalid axis: ".concat(n))}const x=(0,l.op)({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=m(e=(0,a.YT)(e,"x","norm"),t,n);let c=i.shape;if(r){const t=(0,o.Y6)(n,e.shape);c=s.SM(i.shape,t)}return(0,d.t)(i,c)}})},50135:(e,t,n)=>{"use strict";n.d(t,{E:()=>c});var a=n(82164),o=n(39554),r=n(68804),s=n(64148),i=n(48805);const c=(0,n(47892).op)({notEqual_:function(e,t){let n=(0,s.YT)(e,"a","notEqual","string_or_numeric"),c=(0,s.YT)(t,"b","notEqual","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(o.ylV,l)}})},26865:(e,t,n)=>{"use strict";n.d(t,{M:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(t));const c={indices:(0,r.YT)(e,"indices","oneHot","int32")},l={dtype:i,depth:t,onValue:n,offValue:s};return a.T2.runKernel(o.urI,c,l)}})},44616:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var a=n(82164),o=n(71426),r=n(86149),s=n(74218);function i(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,o.SA)(e),"complex64"===t){const t=i(e,"float32"),n=(0,s.U)(e,"float32");return(0,r.f)(t,n)}const n=(0,o.FZ)((0,o.Ze)(e),t);return a.T2.makeTensor(n,e,t)}},64100:(e,t,n)=>{"use strict";n.d(t,{P:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({onesLike_:function(e){const t={x:(0,r.YT)(e,"x","onesLike")};return a.T2.runKernel(o.LWX,t)}})},47892:(e,t,n)=>{"use strict";n.d(t,{B:()=>r,op:()=>s});var a=n(82164),o=n(71426);const r="__op";function s(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(t.length," keys."));let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=r;const i=function(){a.T2.startScope(n);try{const e=s(...arguments);return(0,o.yL)(e)&&console.error("Cannot return a Promise inside of tidy."),a.T2.endScope(e),e}catch(e){throw a.T2.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},85048:(e,t,n)=>{"use strict";n.d(t,{e:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const s=(0,r.YT)(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},c={x:s};return a.T2.runKernel(o.ODT,c,i)}})},47751:(e,t,n)=>{"use strict";n.d(t,{d:()=>h});var a=n(64148),o=n(71426),r=n(28650),s=n(2557),i=n(17538),c=n(6044),l=n(47892),u=n(45583),d=n(63585);const h=(0,l.op)({pool_:function(e,t,n,l,h,p,f){null==h&&(h=[1,1]),null==p&&(p=1),0===l&&(l="valid");const g=(0,a.YT)(e,"x","maxPool");let m=g,x=!1;3===g.rank&&(x=!0,m=(0,u.t)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),o.vA(i.G0(p,h),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(p," and dilations '").concat(h,"'")));const v=i.E6(m.shape,t,p,h,l),b=[v.dilationHeight,v.dilationWidth];let y;y="same"===l?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),a=n.map((e=>e-1)),o=a.map((e=>Math.floor(e/2))),r=a.map(((e,t)=>e-o[t]));return a.map(((e,t)=>[o[t],r[t]]))}([v.filterHeight,v.filterWidth],b):[[0,0],[0,0]];const w=1===b[0]&&1===b[1],[k,T]=function(e,t,n){const a=n.map((e=>e[0])),o=n.map((e=>e[1])),r=e.concat(a,o),s=t.map(((e,t)=>(e-r[t]%e)%e)),i=o.map(((e,t)=>e+s[t])),c=t.map(((e,t)=>[a[t],i[t]])),l=t.map(((e,t)=>[0,s[t]]));return[c,l]}([v.inHeight,v.inWidth],b,y),C=w?l:"valid",S=w?m:(0,d.e)(m,b,k),I=("avg"===n?()=>(0,r.$)(S,t,p,C,f):()=>(0,c.j)(S,t,p,C,f))(),E=w?I:(0,s.G)(I,b,T);return x?(0,u.t)(E,[E.shape[1],E.shape[2],E.shape[3]]):E}})},77587:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var a=n(82164),o=n(39554),r=n(68804),s=n(64148);const i=(0,n(47892).op)({pow_:function(e,t){let n=(0,s.YT)(e,"base","pow"),i=(0,s.YT)(t,"exp","pow");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(o.pyJ,c)}})},99855:(e,t,n)=>{"use strict";n.d(t,{N:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({prelu_:function(e,t){const n={x:(0,r.YT)(e,"x","prelu"),alpha:(0,r.YT)(t,"alpha","prelu")};return a.T2.runKernel(o.Ncv,n)}})},29556:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var a=n(82164),o=n(39554),r=n(64148),s=n(47794);const i=(0,n(47892).op)({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,r.YT)(e,"x","prod");"bool"===i.dtype&&(i=(0,s.w)(i,"int32"));const c={x:i},l={axis:t,keepDims:n};return a.T2.runKernel(o.kdj,c,l)}})},89477:(e,t,n)=>{"use strict";n.d(t,{x:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({real_:function(e){const t={input:(0,r.YT)(e,"input","real")};return a.T2.runKernel(o.LRy,t)}})},46309:(e,t,n)=>{"use strict";n.d(t,{V:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({reciprocal_:function(e){const t={x:(0,r.YT)(e,"x","reciprocal")};return a.T2.runKernel(o.huO,t)}})},85251:(e,t,n)=>{"use strict";n.d(t,{V:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({relu_:function(e){const t={x:(0,r.YT)(e,"x","relu")};return a.T2.runKernel(o.fUj,t)}})},99721:(e,t,n)=>{"use strict";n.d(t,{j:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({relu6_:function(e){const t={x:(0,r.YT)(e,"x","relu6")};return a.T2.runKernel(o.P_L,t)}})},45583:(e,t,n)=>{"use strict";n.d(t,{t:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({reshape_:function(e,t){const n={x:(0,r.YT)(e,"x","reshape","string_or_numeric")},s={shape:t};return a.T2.runKernel(o.R23,n,s)}})},47419:(e,t,n)=>{"use strict";n.d(t,{B:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({reverse_:function(e,t){const n={x:(0,r.YT)(e,"x","reverse")},s={dims:t};return a.T2.runKernel(o.D7i,n,s)}})},96509:(e,t,n)=>{"use strict";n.d(t,{L:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({round_:function(e){const t={x:(0,r.YT)(e,"x","round")};return a.T2.runKernel(o.hVg,t)}})},26777:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({rsqrt_:function(e){const t={x:(0,r.YT)(e,"x","rsqrt","float32")};return a.T2.runKernel(o.TOR,t)}})},51997:(e,t,n)=>{"use strict";n.d(t,{d:()=>r});var a=n(58977),o=n(79914);function r(e,t){if(((0,a.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,a.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,o.Q)(e,[],[],t)}},42022:(e,t,n)=>{"use strict";n.d(t,{W:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({selu_:function(e){const t={x:(0,r.YT)(e,"x","selu")};return a.T2.runKernel(o.u$b,t)}})},3765:(e,t,n)=>{"use strict";n.d(t,{X:()=>o,j:()=>a});const a=1.7580993408473768,o=1.0507009873554805},63117:(e,t,n)=>{"use strict";n.d(t,{w:()=>l});var a=n(64148),o=n(71426),r=n(14969),s=n(49899),i=n(47892),c=n(45583);const l=(0,i.op)({separableConv2d_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const h=(0,a.YT)(e,"x","separableConv2d"),p=(0,a.YT)(t,"depthwiseFilter","separableConv2d"),f=(0,a.YT)(n,"pointwiseFilter","separableConv2d");let g=h,m=!1;if(3===h.rank&&(m=!0,g=(0,c.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");o.vA(4===g.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(g.rank,"."))),o.vA(4===p.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(p.rank,"."))),o.vA(4===f.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(p.rank,"."))),o.vA(1===f.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(f.shape[0],"."))),o.vA(1===f.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(f.shape[1],".")));const x=p.shape[2],v=p.shape[3];o.vA(f.shape[2]===x*v,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(x*v,", ")+"but got ".concat(f.shape[2],".")));const b=(0,s.G)(g,p,i,l,d,u),y=(0,r.X)(b,f,1,"valid",d);return m?(0,c.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},74213:(e,t,n)=>{"use strict";n.d(t,{r:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({sigmoid_:function(e){const t={x:(0,r.YT)(e,"x","sigmoid","float32")};return a.T2.runKernel(o.vI1,t)}})},25740:(e,t,n)=>{"use strict";n.d(t,{_:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({sign_:function(e){const t={x:(0,r.YT)(e,"x","sign")};return a.T2.runKernel(o.YVe,t)}})},49519:(e,t,n)=>{"use strict";n.d(t,{F:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({sin_:function(e){const t={x:(0,r.YT)(e,"x","sin","float32")};return a.T2.runKernel(o.hql,t)}})},8143:(e,t,n)=>{"use strict";n.d(t,{L:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({sinh_:function(e){const t={x:(0,r.YT)(e,"x","sinh")};return a.T2.runKernel(o.J3C,t)}})},10463:(e,t,n)=>{"use strict";n.d(t,{d:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({slice_:function(e,t,n){const s=(0,r.YT)(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const i={x:s},c={begin:t,size:n};return a.T2.runKernel(o.JiE,i,c)}})},34642:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>s,computeFlatOffset:()=>b,computeOutShape:()=>c,getNormalizedAxes:()=>h,isSliceContinous:()=>v,maskToAxes:()=>i,parseSliceParams:()=>y,sliceInfo:()=>w,startForAxis:()=>m,startIndicesWithElidedDims:()=>p,stopForAxis:()=>x,stopIndicesWithElidedDims:()=>f,stridesForAxis:()=>g,stridesWithElidedDims:()=>l});var a=n(71426);const o=-2,r=-1;function s(e,t,n){const o=e.shape.length;a.vA(o===t.length,(()=>"Error in slice".concat(o,"D: Length of begin ").concat(t," must ")+"match the rank of the array (".concat(o,")."))),a.vA(o===n.length,(()=>"Error in slice".concat(o,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(o,").")));for(let r=0;r<o;++r)a.vA(t[r]+n[r]<=e.shape[r],(()=>"Error in slice".concat(o,"D: begin[").concat(r,"] + size[").concat(r,"] ")+"(".concat(t[r]+n[r],") would overflow input.shape[").concat(r,"] (").concat(e.shape[r],")")))}function i(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function c(e,t,n){const a=[];for(let o=0;o<e.length;o++)a[o]=Math.ceil((t[o]-e[o])/n[o]);return a}function l(e,t,n,a){const o=[...e];for(let r=o.length;r<a.length;r++)o.push(1);for(let r=0;r<n;r++)0===r?o[t]=1:(o.splice(t,0,1),o.pop());return o}function u(e,t,n){return n<=e?n:n-(t-1)}function d(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function h(e,t,n,a,o,r,s,i,c){const u=e.length;let d=new Array(u),h=new Array(u),v=new Array(u);if(t.length&&n>0){const c=t[0],u=n+1;d=p(s,c,u,a,e),h=f(i,c,u,o,e),v=l(r,c,u,e)}else for(let l=0;l<u;l++)d[l]=m(s,a,r,e,l,c),h[l]=x(i,o,r,e,l,c),v[l]=g(r,l,c);return{begin:d,end:h,strides:v}}function p(e,t,n,a,o){const r=[...o],s=d(n,t);for(let i=0;i<r.length;i++)if(s.indexOf(i)>-1)r[i]=0;else{const o=u(t,n,i);let s=a[o];e&1<<o&&(s=0),r[i]=s}return r}function f(e,t,n,o,r){const s=[...r],i=d(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const r=u(t,n,a);let i=o[r];e&1<<r&&(i=Number.MAX_SAFE_INTEGER),s[a]=i}for(let c=0;c<s.length;c++){const e=r[c];s[c]<0&&(s[c]+=e),s[c]=a.qE(0,s[c],r[c])}return s}function g(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function m(e,t,n,o,r,s){let i=t[r];const c=n[r]||1;(e&1<<r||s&1<<r||null==i)&&(i=c>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=o[r];return i<0&&(i+=l),i=a.qE(0,i,l-1),i}function x(e,t,n,o,r,s){let i=t[r];const c=n[r]||1;(e&1<<r||s&1<<r||null==i)&&(i=c>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=o[r];return i<0&&(i+=l),i=c>0?a.qE(0,i,l):a.qE(-1,i,l-1),i}function v(e,t,n){let a=n.length;for(let o=0;o<n.length;o++)if(n[o]>1){a=o;break}for(let o=a+1;o<n.length;o++)if(t[o]>0||n[o]!==e[o])return!1;return!0}function b(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function y(e,t,n){let o;const r=e.shape.length;let s;return o="number"===typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),o.forEach((e=>{a.vA(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(a.vA(-1===t,(()=>"Negative size values should be exactly -1 but got "+"".concat(t," for the slice() size at index ").concat(n,"."))),e.shape[n]-o[n]))),[o,s]}function w(e,t,n,a,s,i,c,l,u){let d;if(null==a?(d=new Array(t.length),d.fill(1)):d=a,null!=c&&0!==(c&c-1))throw new Error("Multiple ellipses in slice is not allowed.");let h=!1;const p={dims:d.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:d.slice(),beginMask:s,endMask:i,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:u};for(let o=0;o<p.dims;o++)h&&0!==(1<<o&l)&&p.numAddAxisAfterEllipsis++,1<<o&c&&(h=!0);h||(p.ellipsisMask|=1<<p.dims,p.dims++);const f={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const o=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<o;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(o),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(t.dims," dims, ").concat(t.begin.length,"."));null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(r),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(p,f);let g=!0,m=!0,x=!0;const v=[],b=[];for(let o=0;o<e.length;++o){if(0===f.strides[o])throw Error("strides[".concat(o,"] must be non-zero"));const t=!!(f.shrinkAxisMask&1<<o),n=e[o];if(-1===n){v.push(t?1:-1);continue}const a=[f.beginMask&1<<o,f.endMask&1<<o],r=[f.strides[o]>0?0:-1,f.strides[o]>0?n:n-1];if(t&&f.strides[o]<=0)throw Error("only stride 1 allowed on non-range indexing.");x=x&&1===f.strides[o];const s=!!(f.beginMask&1<<o&&f.endMask&1<<o);if(f.beginValid&&f.endValid){if(t){const e=f.begin[o]<0?n+f.begin[o]:f.begin[o];if(f.begin[o]=e,f.end[o]=f.begin[o]+1,e<0||e>=n)throw Error("slice index ".concat(f.begin[o]," of dimension ").concat(o," out of bounds."))}else f.begin[o]=k(f.begin[o],0,f.strides[o],n,a,r),f.end[o]=k(f.end[o],1,f.strides[o],n,a,r);const e=1===f.strides[o]&&0===f.begin[o]&&f.end[o]===n;g=g&&e,m=m&&(0===o&&1===f.strides[o]||e)}else g=g&&1===f.strides[o]&&s,m=m&&(0===o&&1===f.strides[o]||s);let i,c=!1;if(f.beginValid&&f.endValid?(i=f.end[o]-f.begin[o],c=!0):t?(i=1,c=!0):s&&n>=0&&(i=f.strides[o]<0?-n:n,c=!0),c){let e;e=0===i||i<0!==f.strides[o]<0?0:Math.trunc(i/f.strides[o])+(i%f.strides[o]!==0?1:0),v.push(e)}else v.push(-1)}for(let r=0;r<f.finalShapeGatherIndices.length;++r){const e=f.finalShapeGatherIndices[r];e>=0?b.push(v[e]):e===o&&b.push(1)}return{finalShapeSparse:b.filter(((e,t)=>f.finalShapeGatherIndices[t]!==o)),finalShape:b,isIdentity:g,sliceDim0:m,isSimpleSlice:x,begin:f.begin,end:f.end,strides:f.strides}}function k(e,t,n,a,o,r){if(o[t])return n>0?r[t]:r[t+1&1];{const t=e<0?a+e:e;return t<r[0]?r[0]:t>r[1]?r[1]:t}}},86719:(e,t,n)=>{"use strict";n.d(t,{V:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,r.YT)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(t));const s={logits:n},i={dim:t};return a.T2.runKernel(o.rFG,s,i)}})},9973:(e,t,n)=>{"use strict";n.d(t,{l:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({softplus_:function(e){const t={x:(0,r.YT)(e,"x","softplus")};return a.T2.runKernel(o.Fin,t)}})},63585:(e,t,n)=>{"use strict";n.d(t,{e:()=>i});var a=n(82164),o=n(39554),r=n(64148),s=n(71426);const i=(0,n(47892).op)({spaceToBatchND_:function(e,t,n){const i=(0,r.YT)(e,"x","spaceToBatchND");s.vA(i.rank>=1+t.length,(()=>"input rank ".concat(i.rank," should be > than [blockShape] ").concat(t.length))),s.vA(n.length===t.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(t.length))),s.vA(i.shape.reduce(((e,a,o)=>o>0&&o<=t.length?e&&(a+n[o-1][0]+n[o-1][1])%t[o-1]===0:e),!0),(()=>"input spatial dimensions ".concat(i.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(t.toString())));const c={x:i},l={blockShape:t,paddings:n};return a.T2.runKernel(o.A8B,c,l)}})},63062:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var a=n(82164),o=n(39554),r=n(71426);const s=(0,n(47892).op)({fft_:function(e){(0,r.vA)("complex64"===e.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return a.T2.runKernel(o.rGP,t)}})},1405:(e,t,n)=>{"use strict";n.d(t,{K:()=>s});var a=n(82164),o=n(39554),r=n(71426);const s=(0,n(47892).op)({ifft_:function(e){(0,r.vA)("complex64"===e.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return a.T2.runKernel(o.OAQ,t)}})},57307:(e,t,n)=>{"use strict";n.d(t,{g:()=>f});var a=n(86149),o=n(94429),r=n(21047),s=n(20803),i=n(47892),c=n(89477),l=n(45583),u=n(47419),d=n(51997),h=n(10463),p=n(1405);const f=(0,i.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let i;if(t<=2){const a=(0,l.t)(e,[n,t]);i=(0,p.K)(a)}else{const f=[n,2*(t-1)],g=(0,l.t)((0,c.x)(e),[n,t]),m=(0,l.t)((0,r.n)(e),[n,t]),x=(0,u.B)((0,h.d)(g,[0,1],[n,t-2]),1),v=(0,s.l)((0,u.B)((0,h.d)(m,[0,1],[n,t-2]),1),(0,d.d)(-1)),b=(0,o.x)([g,x],1),y=(0,o.x)([m,v],1),w=(0,l.t)((0,a.f)(b,y),[f[0],f[1]]);i=(0,p.K)(w)}if(i=(0,c.x)(i),3===e.rank&&0!==e.shape[0]){const t=i,n=e.shape[0];i=(0,l.t)(i,[n,i.shape[0]/n,i.shape[1]]),t.dispose()}return i}})},49486:(e,t,n)=>{"use strict";n.d(t,{z:()=>g});var a=n(71426),o=n(86149),r=n(94429),s=n(21047),i=n(47892),c=n(89477),l=n(45583),u=n(10463),d=n(35181),h=n(74218),p=n(63290),f=n(63062);const g=(0,i.op)({rfft_:function(e,t){(0,a.vA)("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(e.dtype)));let n=e.shape[e.shape.length-1];const i=e.size/n;let g;if(null!=t&&t<n){const a=e.shape.map((e=>0)),o=e.shape.map((e=>e));o[e.shape.length-1]=t,g=(0,u.d)(e,a,o),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,g=(0,r.x)([e,(0,h.U)(a)],e.shape.length-1),n=t}else g=e;const m=(0,p.P)(g),x=(0,l.t)((0,o.f)(g,m),[i,n]),v=(0,f.h)(x),b=Math.floor(n/2)+1,y=(0,c.x)(v),w=(0,s.n)(v),k=(0,d.l)(y,[b,n-b],y.shape.length-1),T=(0,d.l)(w,[b,n-b],w.shape.length-1),C=g.shape.slice();return C[g.shape.length-1]=b,(0,l.t)((0,o.f)(k[0],T[0]),C)}})},35181:(e,t,n)=>{"use strict";n.d(t,{l:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const s={x:(0,r.YT)(e,"x","split")},i={numOrSizeSplits:t,axis:n};return a.T2.runKernel(o.Blb,s,i)}})},70191:(e,t,n)=>{"use strict";n.d(t,{R:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({sqrt_:function(e){const t={x:(0,r.YT)(e,"x","sqrt","float32")};return a.T2.runKernel(o.dFH,t)}})},7738:(e,t,n)=>{"use strict";n.d(t,{E:()=>r});var a=n(82164),o=n(64148);const r=(0,n(47892).op)({square_:function(e){const t=(0,o.YT)(e,"x","square");return a.T2.runKernel("Square",{x:t},{})}})},30208:(e,t,n)=>{"use strict";n.d(t,{P:()=>c});var a=n(82164),o=n(39554),r=n(68804),s=n(64148),i=n(48805);const c=(0,n(47892).op)({squaredDifference_:function(e,t){let n=(0,s.YT)(e,"a","squaredDifference"),c=(0,s.YT)(t,"b","squaredDifference");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(o.Ddj,l,{})}})},60613:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var a=n(64148),o=n(71426),r=n(47892),s=n(45583);const i=(0,r.op)({squeeze_:function(e,t){const n=(0,a.YT)(e,"x","squeeze","string_or_numeric");return(0,s.t)(n,(0,o.gx)(n.shape,t).newShape)}})},901:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var a=n(82164),o=n(39554),r=n(64148),s=n(71426);const i=(0,n(47892).op)({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,r.j1)(e,"tensors","stack","string_or_numeric");s.vA(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&s.vA(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const i=n,c={axis:t};return a.T2.runKernel(o.mM$,i,c)}})},60319:(e,t,n)=>{"use strict";n.d(t,{P:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,r.YT)(e,"x","step")},s={alpha:t};return a.T2.runKernel(o.pnw,n,s)}})},91231:(e,t,n)=>{"use strict";n.d(t,{Y:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({stridedSlice_:function(e,t,n,s){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,u=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,d=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const h={x:(0,r.YT)(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:s,beginMask:i,endMask:c,ellipsisMask:l,newAxisMask:u,shrinkAxisMask:d};return a.T2.runKernel(o.UcO,h,p)}})},37951:(e,t,n)=>{"use strict";n.d(t,{j:()=>i});var a=n(82164),o=n(39554),r=n(68804),s=n(64148);const i=(0,n(47892).op)({sub_:function(e,t){let n=(0,s.YT)(e,"a","sub"),i=(0,s.YT)(t,"b","sub");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(o.PbM,c)}})},47382:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var a=n(82164),o=n(39554),r=n(64148),s=n(47794);const i=(0,n(47892).op)({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,r.YT)(e,"x","sum");"bool"===i.dtype&&(i=(0,s.w)(i,"int32"));const c={x:i},l={axis:t,keepDims:n};return a.T2.runKernel(o.WuN,c,l)}})},44894:(e,t,n)=>{"use strict";n.d(t,{M:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({tan_:function(e){const t={x:(0,r.YT)(e,"x","tan","float32")};return a.T2.runKernel(o.oFs,t)}})},66532:(e,t,n)=>{"use strict";n.d(t,{y:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({tanh_:function(e){const t={x:(0,r.YT)(e,"x","tanh","float32")};return a.T2.runKernel(o.iuW,t)}})},68032:(e,t,n)=>{"use strict";n.d(t,{O:()=>r});var a=n(64148),o=n(79914);function r(e,t,n){const r=(0,a.MZ)(e,n);return(0,o.Q)(e,t,r,n)}},79914:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var a=n(82164),o=n(38075),r=n(71426),s=n(58977);function i(e,t,n,i){if(null==i)i=(0,r.X$)(e);else if("complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,o.Nw)(e)||(0,o.Oj)(e)){if("float32"!==i&&"int32"!==i)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(i,"."));return a.T2.backend.createTensorFromGPUData(e,t||n,i)}if(!(0,s.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,r.SA)(t);const e=(0,r.Ze)(t),a=(0,r.Ze)(n);(0,r.vA)(e===a,(()=>"Based on the provided shape, [".concat(t,"], the tensor should have ")+"".concat(e," values but has ").concat(a)));for(let o=0;o<n.length;++o){const e=n[o],a=o!==n.length-1||e!==(0,r.Ze)(t.slice(o));(0,r.vA)(n[o]===t[o]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(t,"). ")))}}return(0,s.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,s.toTypedArray)(e,i):(0,s.flatten)(e,[],!0),a.T2.makeTensor(e,t,i)}},43017:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var a=n(82164),o=n(39554),r=n(64148),s=n(71426);const i=(0,n(47892).op)({tile_:function(e,t){const n=(0,r.YT)(e,"x","tile","string_or_numeric");s.vA(n.rank===t.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(t,".")));const i={x:n},c={reps:t};return a.T2.runKernel(o.FAs,i,c)}})},92765:(e,t,n)=>{"use strict";n.d(t,{r:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const s=(0,r.YT)(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=s.shape[s.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(t));if(t>i)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(i,") ")+"but got ".concat(t));const c={x:s},l={k:t,sorted:n},[u,d]=a.T2.runKernel(o.TBb,c,l);return{values:u,indices:d}}})},2154:(e,t,n)=>{"use strict";n.d(t,{m:()=>p});var a=n(82164),o=n(58046),r=n(39554),s=n(64148),i=n(71426),c=n(86149),l=n(21047),u=n(1011),d=n(47892),h=n(89477);const p=(0,d.op)({transpose_:function(e,t,n){const d=(0,s.YT)(e,"x","transpose");if(null==t&&(t=d.shape.map(((e,t)=>t)).reverse()),i.vA(d.rank===t.length,(()=>"Error in transpose: rank of input ".concat(d.rank," ")+"must match length of perm ".concat(t,"."))),t.forEach((e=>{i.vA(e>=0&&e<d.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(d.rank-1)+" but got ".concat(t)))})),d.rank<=1)return d.clone();const p={x:d},f={perm:t};return"complex64"===d.dtype?(0,o.DZ)((()=>{let e=(0,h.x)(d),t=(0,l.n)(d);return e=a.T2.runKernel(r.wx0,{x:e},f),t=a.T2.runKernel(r.wx0,{x:t},f),n&&(t=(0,u.H)(t)),(0,c.f)(e,t)})):a.T2.runKernel(r.wx0,p,f)}})},59694:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var a=n(82164),o=n(39554),r=n(64148),s=n(71426);const i=(0,n(47892).op)({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,r.YT)(e,"x","unique","string_or_numeric");(0,s.vA)(n.rank>0,(()=>"The input tensor must be at least 1D"));const i={x:n},c={axis:t},[l,u]=a.T2.runKernel(o.EwU,i,c);return{values:l,indices:u}}})},65149:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var a=n(82164),o=n(39554),r=n(64148),s=n(71426);const i=(0,n(47892).op)({unsortedSegmentSum_:function(e,t,n){const i=(0,r.YT)(e,"x","unsortedSegmentSum"),c=(0,r.YT)(t,"segmentIds","unsortedSegmentSum","int32");(0,s.vA)((0,s.E6)(n),(()=>"numSegments must be of dtype int"));const l={x:i,segmentIds:c},u={numSegments:n};return a.T2.runKernel(o.pPe,l,u)}})},3984:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var a=n(82164),o=n(39554),r=n(64148),s=n(71426);const i=(0,n(47892).op)({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,r.YT)(e,"x","unstack","string_or_numeric");s.vA(t>=-n.shape.length&&t<n.shape.length,(()=>"Axis = ".concat(t," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const i={value:n},c={axis:t};return a.T2.runKernel(o.dXR,i,c)}})},93986:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var a=n(82164),o=n(39554),r=n(64148),s=n(4920),i=n(48805);const c=(0,n(47892).op)({where_:function(e,t,n){const c=(0,r.YT)(t,"a","where"),l=(0,r.YT)(n,"b","where"),u=(0,r.YT)(e,"condition","where","bool"),d=(0,i.assertAndGetBroadcastShape)((0,i.assertAndGetBroadcastShape)(u.shape,c.shape),l.shape),h={condition:(0,s.h)(u,d),t:(0,s.h)(c,d),e:(0,s.h)(l,d)};return a.T2.runKernel(o.l6P,h)}})},74218:(e,t,n)=>{"use strict";n.d(t,{U:()=>s});var a=n(82164),o=n(71426),r=n(86149);function s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,o.SA)(e),"complex64"===t){const t=s(e,"float32"),n=s(e,"float32");return(0,r.f)(t,n)}const n=(0,o.Ty)((0,o.Ze)(e),t);return a.T2.makeTensor(n,e,t)}},63290:(e,t,n)=>{"use strict";n.d(t,{P:()=>s});var a=n(82164),o=n(39554),r=n(64148);const s=(0,n(47892).op)({zerosLike_:function(e){const t={x:(0,r.YT)(e,"x","zerosLike")};return a.T2.runKernel(o.xJ3,t)}})},55767:(e,t,n)=>{"use strict";function a(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,{Y:()=>a})},79494:(e,t,n)=>{"use strict";n.d(t,{qY:()=>v,yl:()=>d,rT:()=>y,tp:()=>b,B4:()=>x,Q5:()=>m,qP:()=>g});var a=n(97926),o=n(71426);function r(e,t,n,a){const r=(0,o.Ur)(t),i=function(e,t,n,a){const r=(0,o.Ze)(t),i=a[a.length-1],c=new Array(i).fill(0),u=t.length,d="complex64"===n?l(e):e;if(u>1)for(let o=0;o<r/i;o++){const e=o*i;for(let t=0;t<i;t++)c[t]=Math.max(c[t],s(d[e+t],0,n).length)}return c}(e,t,n,r),u=t.length,d=c(e,t,n,r,i),h=["Tensor"];return a&&(h.push("  dtype: ".concat(n)),h.push("  rank: ".concat(u)),h.push("  shape: [".concat(t,"]")),h.push("  values:")),h.push(d.map((e=>"    "+e)).join("\n")),h.join("\n")}function s(e,t,n){let a;return a=Array.isArray(e)?"".concat(parseFloat(e[0].toFixed(7))," + ")+"".concat(parseFloat(e[1].toFixed(7)),"j"):(0,o.Kg)(e)?"'".concat(e,"'"):"bool"===n?i(e):parseFloat(e.toFixed(7)).toString(),(0,o.av)(a,t)}function i(e){return 0===e?"false":"true"}function c(e,t,n,a,o){let r=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const u="complex64"===n?2:1,d=t[0],h=t.length;if(0===h){if("complex64"===n){return[s(l(e)[0],0,n)]}return"bool"===n?[i(e[0])]:[e[0].toString()]}if(1===h){if(d>20){const t=3*u;let a=Array.from(e.slice(0,t)),r=Array.from(e.slice((d-3)*u,d*u));return"complex64"===n&&(a=l(a),r=l(r)),["["+a.map(((e,t)=>s(e,o[t],n))).join(", ")+", ..., "+r.map(((e,t)=>s(e,o[d-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?l(e):Array.from(e)).map(((e,t)=>s(e,o[t],n))).join(", ")+"]"]}const p=t.slice(1),f=a.slice(1),g=a[0]*u,m=[];if(d>20){for(let t=0;t<3;t++){const a=t*g,r=a+g;m.push(...c(e.slice(a,r),p,n,f,o,!1))}m.push("...");for(let t=d-3;t<d;t++){const a=t*g,r=a+g;m.push(...c(e.slice(a,r),p,n,f,o,t===d-1))}}else for(let s=0;s<d;s++){const t=s*g,a=t+g;m.push(...c(e.slice(t,a),p,n,f,o,s===d-1))}const x=2===h?",":"";m[0]="["+(d>0?m[0]+x:"");for(let s=1;s<m.length-1;s++)m[s]=" "+m[s]+x;let v=",\n";for(let s=2;s<h;s++)v+="\n";return m[m.length-1]=" "+m[m.length-1]+"]"+(r?"":v),m}function l(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var u=n(58977);class d{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=o.Ze(e),null!=n){const e=n.length;o.vA(e===this.size,(()=>"Length of values '".concat(e,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||o.Ab(t,this.size),this.strides=(0,o.Ur)(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),o.vA(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const r=this.locToIndex(n);this.values[r]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let a=0;for(const r of t){if(r<0||r>=this.shape[a]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}a++}let o=t[t.length-1];for(let r=0;r<t.length-1;++r)o+=this.strides[r]*t[r];return this.values[o]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return h().makeTensor(this.values,this.shape,this.dtype)}}let h=null,p=null,f=null;function g(e){h=e}function m(e){p=e}function x(e){f=e}class v{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=o.Ze(e),this.strides=(0,o.Ur)(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return p.buffer(this.shape,this.dtype,e)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,o.yw)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,o.yw)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=h().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>u.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),h().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=h().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>u.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await h().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),h().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return p.print(this,e)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return r(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),p.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),h().makeVariable(this,e,t,n)}}function b(){return(0,a.m)("Tensor",(()=>v))}Object.defineProperty(v,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),b();class y extends v{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(e.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!o.r1(e.shape,this.shape))throw new Error("shape of the new value (".concat(e.shape,") and ")+"previous value (".concat(this.shape,") must match"));h().disposeTensor(this),this.dataId=e.dataId,h().incRef(this,null)}dispose(){h().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(y,Symbol.hasInstance,{value:e=>e instanceof v&&null!=e.assign&&e.assign instanceof Function})},68804:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertTypesMatch:()=>i,getTensorsInContainer:()=>l,isTensorInList:()=>c,makeTypesMatch:()=>s});var a=n(79494),o=n(38075),r=n(71426);function s(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,o.Tu)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){(0,r.vA)(e.dtype===t.dtype,(()=>"The dtypes of the first(".concat(e.dtype,") and")+" second(".concat(t.dtype,") input must match")))}function c(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return u(e,t,new Set),t}function u(e,t,n){if(null==e)return;if(e instanceof a.qY)return void t.push(e);if(o=e,!Array.isArray(o)&&"object"!==typeof o)return;var o;const r=e;for(const a in r){const e=r[a];n.has(e)||(n.add(e),u(e,t,n))}}},64148:(e,t,n)=>{"use strict";n.d(t,{MZ:()=>l,YT:()=>h,j1:()=>p});var a=n(82164),o=n(55399),r=n(79494),s=n(38075),i=n(58977),c=n(71426);function l(e,t){let n=e;if((0,i.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,s.Oj)(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,s.Nw)(e))return[e.buffer.size/(null==t?4:(0,c.jv)(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||(0,i.isTypedArray)(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&(0,o._K)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&u(e,a,[]),a}function u(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.isTypedArray)(e))return void(0,c.vA)(0===t.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(t[0]," elements")));(0,c.vA)(t.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements"))),(0,c.vA)(e.length===t[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(t[0]," ")+"elements, but has ".concat(e.length," elements")));const a=t.slice(1);for(let o=0;o<e.length;++o)u(e[o],a,n.concat(o))}function d(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(e," tensor, but got ").concat(t," tensor"))}}function h(e,t,n){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof(0,r.tp)())return d(o,e.dtype,t,n),e;let s=(0,c.X$)(e);if("string"!==s&&["bool","int32","float32"].indexOf(o)>=0&&(s=o),d(o,s,t,n),null==e||!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const a=null==e?"null":e.constructor.name;throw new Error("Argument '".concat(t,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const u=l(e,s);(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const h="string"!==s?(0,i.toTypedArray)(e,s):(0,i.flatten)(e,[],!0);return a.T2.makeTensor(h,u,s)}function p(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error("Argument ".concat(t," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return e.map(((e,o)=>h(e,"".concat(t,"[").concat(o,"]"),n,a)))}},38075:(e,t,n)=>{"use strict";var a,o,r,s,i;n.d(t,{Nw:()=>h,Oj:()=>d,Tu:()=>l,ch:()=>u,rg:()=>a}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(r||(r={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(s||(s={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const c={float32:s,int32:o,bool:r,complex64:i};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast ".concat(e," with ").concat(t))}return c[e][t]}function u(e){return l(e,"int32")}function d(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function h(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},58977:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>r.r1,arraysEqualWithNull:()=>r.e_,assert:()=>r.vA,assertNonNegativeIntegerDimensions:()=>r.SA,assertNonNull:()=>r.HO,assertShapesMatch:()=>r.O3,bytesFromStringArray:()=>r.SL,bytesPerElement:()=>r.jv,checkConversionForErrors:()=>r.nd,clamp:()=>r.qE,computeStrides:()=>r.Ur,convertBackendValuesAndArrayBuffer:()=>r.o2,createScalarValue:()=>y,createShuffledIndices:()=>r.P8,decodeString:()=>S,distSquared:()=>r.oO,encodeString:()=>C,fetch:()=>T,fingerPrint64:()=>b,flatten:()=>E,getArrayFromDType:()=>r.Ab,getTypedArrayFromDType:()=>r.ce,hasEncodingLoss:()=>r.BE,hexToLong:()=>c,indexToLoc:()=>r._k,inferDtype:()=>r.X$,inferFromImplicitShape:()=>r.XT,isBoolean:()=>r.Lm,isFunction:()=>r.Tn,isInt:()=>r.E6,isNumber:()=>r.Et,isPromise:()=>r.yL,isScalarShape:()=>r.Sf,isString:()=>r.Kg,isTypedArray:()=>I,isValidDtype:()=>r.xn,locToIndex:()=>r.sX,makeOnesTypedArray:()=>r.FZ,makeZerosNestedTypedArray:()=>r.c7,makeZerosTypedArray:()=>r.Ty,nearestDivisor:()=>r.lK,nearestLargerEven:()=>r.eV,now:()=>k,parseAxisParam:()=>r.Y6,randUniform:()=>r.so,repeatedTry:()=>r._q,rightPad:()=>r.av,shuffle:()=>r.k4,shuffleCombo:()=>r.a0,sizeFromShape:()=>r.Ze,sizeToSquarishShape:()=>r.gS,squeezeShape:()=>r.gx,sum:()=>r.cz,swap:()=>r.wg,tanh:()=>r.ym,toNestedArray:()=>r.yw,toTypedArray:()=>w});var a=n(55399),o=n(55767),r=n(71426),s=n(77353);const i=n.n(s)()||s;function c(e){return i.fromString(e,!0,16)}const l=c("c3a5c85c97cb3127"),u=c("b492b66fbe98f273"),d=c("9ae16a3b2f90404f");function h(e){return e.xor(e.shru(47))}function p(e,t,n){const a=e.slice(t,t+n);return i.fromBytes(Array.from(a),!0,!0)}function f(e,t){return p(e,t,8)}function g(e,t){return p(e,t,4)}function m(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function x(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:c("9ddfea08eb382d69"),a=e.xor(t).mul(n);a=a.xor(a.shru(47));let o=t.xor(a).mul(n);return o=o.xor(o.shru(47)),o=o.mul(n),o}function v(e,t,n,a){return function(e,t,n,a,o,r){o=o.add(e),r=m(r.add(o).add(a),21);const s=o;return o=(o=o.add(t)).add(n),r=r.add(m(o,44)),[o.add(a),r.add(s)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,a)}function b(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=d.add(2*t),a=f(e,0).add(d),o=f(e,t-8);return x(m(o,37).mul(n).add(a),m(a,25).add(o).mul(n),n)}if(t>=4){const n=d.add(2*t);return x(g(e,0).shl(3).add(t),g(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return h(d.mul(n).xor(l.mul(a))).mul(d)}return d}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),a=f(e,0).mul(u),o=f(e,8),r=f(e,t-8).mul(n),s=f(e,t-16).mul(d);return x(m(a.add(o),43).add(m(r,30)).add(s),a.add(m(o.add(d),18)).add(r),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),a=f(e,0).mul(d),o=f(e,8),r=f(e,t-8).mul(n),s=f(e,t-16).mul(d),i=m(a.add(o),43).add(m(r,30)).add(s),c=x(i,a.add(m(o.add(d),18)).add(r),n),l=f(e,16).mul(n),u=f(e,24),h=i.add(f(e,t-32)).mul(n),p=c.add(f(e,t-24)).mul(n);return x(m(l.add(u),43).add(m(h,30)).add(p),l.add(m(u.add(a),18)).add(h),n)}(e,t);let a=n,o=n.mul(u).add(113),r=h(o.mul(d).add(113)).mul(d),s=[i.UZERO,i.UZERO],c=[i.UZERO,i.UZERO];a=a.mul(d).add(f(e,0));let p=0;const b=64*(t-1>>6),y=b+(t-1&63)-63;do{a=m(a.add(o).add(s[0]).add(f(e,p+8)),37).mul(u),o=m(o.add(s[1]).add(f(e,p+48)),42).mul(u),a=a.xor(c[1]),o=o.add(s[0]).add(f(e,p+40)),r=m(r.add(c[0]),33).mul(u),s=v(e,p,s[1].mul(u),a.add(c[0])),c=v(e,p+32,r.add(c[1]),o.add(f(e,p+16))),[r,a]=[a,r],p+=64}while(p!==b);const w=u.add(r.and(255).shl(1));return p=y,c[0]=c[0].add(t-1&63),s[0]=s[0].add(c[0]),c[0]=c[0].add(s[0]),a=m(a.add(o).add(s[0]).add(f(e,p+8)),37).mul(w),o=m(o.add(s[1]).add(f(e,p+48)),42).mul(w),a=a.xor(c[1].mul(9)),o=o.add(s[0].mul(9).add(f(e,p+40))),r=m(r.add(c[0]),33).mul(w),s=v(e,p,s[1].mul(w),a.add(c[0])),c=v(e,p+32,r.add(c[1]),o.add(f(e,p+16))),[r,a]=[a,r],x(x(s[0],c[0],w).add(h(o).mul(l)).add(r),x(s[1],c[1],w).add(a),w)}function y(e,t){return"string"===t?C(e):w([e],t)}function w(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=E(e)),(0,a._K)().getBool("DEBUG")&&r.nd(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type ".concat(t))}function k(){return(0,a._K)().platform.now()}function T(e,t){return(0,a._K)().platform.fetch(e,t)}function C(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,a._K)().platform.encode(e,t)}function S(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,a._K)().platform.decode(e,t)}function I(e){return null!=(0,a._K)().platform.isTypedArray?(0,a._K)().platform.isTypedArray(e):(0,o.Y)(e)}function E(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||r.yL(e)||null==e||I(e)&&n)t.push(e);else if(Array.isArray(e)||I(e))for(let a=0;a<e.length;++a)E(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let o=0;o<=a;o++)E(e[o],t,n)}return t}},71426:(e,t,n)=>{"use strict";function a(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function o(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together "+"First array length was ".concat(e.length)+"Second array length was ".concat(t.length));let n=e.length,a=0;for(;n>0;)a=Math.random()*n|0,n--,i(e,n,a),i(t,n,a)}function r(e,t,n){return Math.max(e,Math.min(t,n))}function s(e){return e%2===0?e:e+1}function i(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function c(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function u(e,t){let n=0;for(let a=0;a<e.length;a++){const o=Number(e[a])-Number(t[a]);n+=o*o}return n}function d(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function h(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";d(x(e,t),(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}function p(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function g(e){return 0===e.length}function m(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function x(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function v(e){return e%1===0}function b(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function y(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return a(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function T(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise(((o,r)=>{let s=0;const i=()=>{if(e())return void o();s++;const c=t(s);null!=n&&s>=n?r():null!=a?a(i,c):setTimeout(i,c)};i()}))}function C(e,t){let n=1,a=-1;for(let r=0;r<e.length;++r)if(e[r]>=0)n*=e[r];else if(-1===e[r]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(r));a=r}else if(e[r]<0)throw Error("Shapes can not be < 0. Found ".concat(e[r]," at dim ").concat(r));if(-1===a){if(t>0&&t!==n)throw Error("Size(".concat(t,") must match the product of shape ").concat(e));return e}if(0===n)throw Error("Cannot infer the missing size in [".concat(e,"] when ")+"there are 0 elements");if(t%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(t," / ").concat(n));const o=e.slice();return o[a]=t/n,o}function S(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(e))),d(e.every((e=>v(e))),(()=>"All values in axis param must be integers but "+"got axis ".concat(e))),e.map((e=>e<0?n+e:e))}function I(e,t){const n=[],a=[],o=null!=t&&Array.isArray(t)&&0===t.length,r=null==t||o?null:S(t,e).sort();let s=0;for(let i=0;i<e.length;++i){if(null!=r){if(r[s]===i&&1!==e[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(e[i],"' is not 1"));(null==r[s]||r[s]>i)&&1===e[i]&&(n.push(e[i]),a.push(i)),r[s]<=i&&s++}1!==e[i]&&(n.push(e[i]),a.push(i))}return{newShape:n,keptDims:a}}function E(e,t){return A(e,t)}function A(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type ".concat(e));n=new Array(t)}return n}function R(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(t," being uploaded contains ").concat(a,"."))}}function N(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function _(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function F(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype ".concat(e))}function D(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function O(e){return"string"===typeof e||e instanceof String}function P(e){return"boolean"===typeof e}function M(e){return"number"===typeof e}function L(e){return Array.isArray(e)?L(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":M(e)?"float32":O(e)?"string":P(e)?"bool":"float32"}function B(e){return!!(e&&e.constructor&&e.call&&e.apply)}function W(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function G(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function V(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const o=new Array;if(1===t.length){const r=t[0]*(a?2:1);for(let t=0;t<r;t++)o[t]=n[e+t]}else{const r=t[0],s=t.slice(1),i=s.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<r;t++)o[t]=V(e+t*i,s,n,a)}return o}function U(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error("[".concat(e,"] does not match the input size ").concat(t.length).concat(n?" for a complex tensor":"","."));return V(0,e,t,n)}function z(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype ".concat(t))}function Y(e,t){const n=H(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function H(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type ".concat(t))}function K(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return U(e,new Float32Array(n));if("int32"===t)return U(e,new Int32Array(n));if("bool"===t)return U(e,new Uint8Array(n));throw new Error("Unknown data type ".concat(t))}function j(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(e,"].")))}))}function q(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let o=0;o<e.length-1;++o)a+=n[o]*e[o];return a}function X(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let o=0;o<a.length-1;++o)a[o]=Math.floor(e/n[o]),e-=a[o]*n[o];return a[a.length-1]=e,a}function Z(e){return e&&e.then&&"function"===typeof e.then}n.d(t,{Ab:()=>A,BE:()=>_,E6:()=>v,Et:()=>M,FZ:()=>Y,HO:()=>p,Kg:()=>O,Lm:()=>P,O3:()=>h,P8:()=>w,SA:()=>j,SL:()=>D,Sf:()=>g,Tn:()=>B,Ty:()=>H,Ur:()=>G,X$:()=>L,XT:()=>C,Y6:()=>S,Ze:()=>f,_k:()=>X,_q:()=>T,a0:()=>o,av:()=>k,c7:()=>K,ce:()=>E,cz:()=>c,eV:()=>s,e_:()=>m,gS:()=>y,gx:()=>I,jv:()=>F,k4:()=>a,lK:()=>W,nd:()=>R,o2:()=>z,oO:()=>u,qE:()=>r,r1:()=>x,sX:()=>q,so:()=>l,vA:()=>d,wg:()=>i,xn:()=>N,yL:()=>Z,ym:()=>b,yw:()=>U})},77353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(S){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var o={},r={};function s(e,t){var n,a,s;return t?(s=0<=(e>>>=0)&&e<256)&&(a=r[e])?a:(n=c(e,(0|e)<0?-1:0,!0),s&&(r[e]=n),n):(s=-128<=(e|=0)&&e<128)&&(a=o[e])?a:(n=c(e,e<0?-1:0,!1),s&&(o[e]=n),n)}function i(e,t){if(isNaN(e))return t?x:m;if(t){if(e<0)return x;if(e>=p)return k}else{if(e<=-f)return T;if(e+1>=f)return w}return e<0?i(-e,t).neg():c(e%h|0,e/h|0,t)}function c(e,t,a){return new n(e,t,a)}n.fromInt=s,n.fromNumber=i,n.fromBits=c;var l=Math.pow;function u(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return m;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return u(e.substring(1),t,n).neg();for(var o=i(l(n,8)),r=m,s=0;s<e.length;s+=8){var c=Math.min(8,e.length-s),d=parseInt(e.substring(s,s+c),n);if(c<8){var h=i(l(n,c));r=r.mul(h).add(i(d))}else r=(r=r.mul(o)).add(i(d))}return r.unsigned=t,r}function d(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?u(e,t):c(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=u,n.fromValue=d;var h=4294967296,p=h*h,f=p/2,g=s(1<<24),m=s(0);n.ZERO=m;var x=s(0,!0);n.UZERO=x;var v=s(1);n.ONE=v;var b=s(1,!0);n.UONE=b;var y=s(-1);n.NEG_ONE=y;var w=c(-1,2147483647,!1);n.MAX_VALUE=w;var k=c(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var T=c(0,-2147483648,!1);n.MIN_VALUE=T;var C=n.prototype;C.toInt=function(){return this.unsigned?this.low>>>0:this.low},C.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},C.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(T)){var t=i(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var o=i(l(e,6),this.unsigned),r=this,s="";;){var c=r.div(o),u=(r.sub(c.mul(o)).toInt()>>>0).toString(e);if((r=c).isZero())return u+s;for(;u.length<6;)u="0"+u;s=""+u+s}},C.getHighBits=function(){return this.high},C.getHighBitsUnsigned=function(){return this.high>>>0},C.getLowBits=function(){return this.low},C.getLowBitsUnsigned=function(){return this.low>>>0},C.getNumBitsAbs=function(){if(this.isNegative())return this.eq(T)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},C.isZero=function(){return 0===this.high&&0===this.low},C.eqz=C.isZero,C.isNegative=function(){return!this.unsigned&&this.high<0},C.isPositive=function(){return this.unsigned||this.high>=0},C.isOdd=function(){return 1===(1&this.low)},C.isEven=function(){return 0===(1&this.low)},C.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},C.eq=C.equals,C.notEquals=function(e){return!this.eq(e)},C.neq=C.notEquals,C.ne=C.notEquals,C.lessThan=function(e){return this.comp(e)<0},C.lt=C.lessThan,C.lessThanOrEqual=function(e){return this.comp(e)<=0},C.lte=C.lessThanOrEqual,C.le=C.lessThanOrEqual,C.greaterThan=function(e){return this.comp(e)>0},C.gt=C.greaterThan,C.greaterThanOrEqual=function(e){return this.comp(e)>=0},C.gte=C.greaterThanOrEqual,C.ge=C.greaterThanOrEqual,C.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},C.comp=C.compare,C.negate=function(){return!this.unsigned&&this.eq(T)?T:this.not().add(v)},C.neg=C.negate,C.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,o=this.low>>>16,r=65535&this.low,s=e.high>>>16,i=65535&e.high,l=e.low>>>16,u=0,h=0,p=0,f=0;return p+=(f+=r+(65535&e.low))>>>16,h+=(p+=o+l)>>>16,u+=(h+=n+i)>>>16,u+=t+s,c((p&=65535)<<16|(f&=65535),(u&=65535)<<16|(h&=65535),this.unsigned)},C.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},C.sub=C.subtract,C.multiply=function(e){if(this.isZero())return m;if(a(e)||(e=d(e)),t)return c(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return m;if(this.eq(T))return e.isOdd()?T:m;if(e.eq(T))return this.isOdd()?T:m;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,o=65535&this.high,r=this.low>>>16,s=65535&this.low,l=e.high>>>16,u=65535&e.high,h=e.low>>>16,p=65535&e.low,f=0,x=0,v=0,b=0;return v+=(b+=s*p)>>>16,x+=(v+=r*p)>>>16,v&=65535,x+=(v+=s*h)>>>16,f+=(x+=o*p)>>>16,x&=65535,f+=(x+=r*h)>>>16,x&=65535,f+=(x+=s*u)>>>16,f+=n*p+o*h+r*u+s*l,c((v&=65535)<<16|(b&=65535),(f&=65535)<<16|(x&=65535),this.unsigned)},C.mul=C.multiply,C.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,o,r;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?x:m;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return x;if(e.gt(this.shru(1)))return b;r=x}else{if(this.eq(T))return e.eq(v)||e.eq(y)?T:e.eq(T)?v:(n=this.shr(1).div(e).shl(1)).eq(m)?e.isNegative()?v:y:(o=this.sub(e.mul(n)),r=n.add(o.div(e)));if(e.eq(T))return this.unsigned?x:m;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=m}for(o=this;o.gte(e);){n=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var s=Math.ceil(Math.log(n)/Math.LN2),u=s<=48?1:l(2,s-48),h=i(n),p=h.mul(e);p.isNegative()||p.gt(o);)p=(h=i(n-=u,this.unsigned)).mul(e);h.isZero()&&(h=v),r=r.add(h),o=o.sub(p)}return r},C.div=C.divide,C.modulo=function(e){return a(e)||(e=d(e)),t?c((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},C.mod=C.modulo,C.rem=C.modulo,C.not=function(){return c(~this.low,~this.high,this.unsigned)},C.and=function(e){return a(e)||(e=d(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},C.or=function(e){return a(e)||(e=d(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},C.xor=function(e){return a(e)||(e=d(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},C.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},C.shl=C.shiftLeft,C.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},C.shr=C.shiftRight,C.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},C.shru=C.shiftRightUnsigned,C.shr_u=C.shiftRightUnsigned,C.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},C.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},C.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},C.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},C.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},34334:(e,t,n)=>{var a=n(17359),o=n(77066),r=n(29016),s=n(69538),i=n(6288),c=n(45262),l=n(22430);l.alea=a,l.xor128=o,l.xorwow=r,l.xorshift7=s,l.xor4096=i,l.tychei=c,e.exports=l},17359:function(e,t,n){var a;!function(e,o){function r(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function s(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var n=new r(e),a=t&&t.state,o=n.next;return o.int32=function(){return 4294967296*n.next()|0},o.double=function(){return o()+11102230246251565e-32*(2097152*o()|0)},o.quick=o,a&&("object"==typeof a&&s(a,n),o.state=function(){return s(n,{})}),o}o&&o.exports?o.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,o))||(o.exports=a):this.alea=i}(0,e=n.nmd(e),n.amdD)},45262:function(e,t,n){var a;!function(e,o){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,o=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^o,o=o-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^o,t.a=o-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function s(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var n=new r(e),a=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,a&&("object"==typeof a&&s(a,n),o.state=function(){return s(n,{})}),o}o&&o.exports?o.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,o))||(o.exports=a):this.tychei=i}(0,e=n.nmd(e),n.amdD)},77066:function(e,t,n){var a;!function(e,o){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var n=new r(e),a=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,a&&("object"==typeof a&&s(a,n),o.state=function(){return s(n,{})}),o}o&&o.exports?o.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,o))||(o.exports=a):this.xor128=i}(0,e=n.nmd(e),n.amdD)},6288:function(e,t,n){var a;!function(e,o){function r(e){var t=this;t.next=function(){var e,n,a=t.w,o=t.X,r=t.i;return t.w=a=a+1640531527|0,n=o[r+34&127],e=o[r=r+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=o[r]=n^e,t.i=r,n+(a^a>>>16)|0},function(e,t){var n,a,o,r,s,i=[],c=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,c=Math.max(c,t.length)),o=0,r=-32;r<c;++r)t&&(a^=t.charCodeAt((r+32)%t.length)),0===r&&(s=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,r>=0&&(s=s+1640531527|0,o=0==(n=i[127&r]^=a+s)?o+1:0);for(o>=128&&(i[127&(t&&t.length||0)]=-1),o=127,r=512;r>0;--r)a=i[o+34&127],n=i[o=o+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[o]=a^n;e.w=s,e.X=i,e.i=o}(t,e)}function s(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var n=new r(e),a=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,a&&(a.X&&s(a,n),o.state=function(){return s(n,{})}),o}o&&o.exports?o.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,o))||(o.exports=a):this.xor4096=i}(0,e=n.nmd(e),n.amdD)},69538:function(e,t,n){var a;!function(e,o){function r(e){var t=this;t.next=function(){var e,n,a=t.x,o=t.i;return e=a[o],n=(e^=e>>>7)^e<<24,n^=(e=a[o+1&7])^e>>>10,n^=(e=a[o+3&7])^e>>>3,n^=(e=a[o+4&7])^e<<7,e=a[o+7&7],n^=(e^=e<<13)^e<<9,a[o]=n,t.i=o+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function s(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var n=new r(e),a=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,a&&(a.x&&s(a,n),o.state=function(){return s(n,{})}),o}o&&o.exports?o.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,o))||(o.exports=a):this.xorshift7=i}(0,e=n.nmd(e),n.amdD)},29016:function(e,t,n){var a;!function(e,o){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var n=new r(e),a=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,a&&("object"==typeof a&&s(a,n),o.state=function(){return s(n,{})}),o}o&&o.exports?o.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,o))||(o.exports=a):this.xorwow=i}(0,e=n.nmd(e),n.amdD)},22430:function(e,t,n){var a;!function(o,r,s){var i,c=256,l=s.pow(c,6),u=s.pow(2,52),d=2*u,h=255;function p(e,t,n){var a=[],h=x(m((t=1==t?{entropy:!0}:t||{}).entropy?[e,v(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(c):(e=new Uint8Array(c),(o.crypto||o.msCrypto).getRandomValues(e)),v(e)}catch(a){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,v(r)]}}():e,3),a),p=new f(a),b=function(){for(var e=p.g(6),t=l,n=0;e<u;)e=(e+n)*c,t*=c,n=p.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|p.g(4)},b.quick=function(){return p.g(4)/4294967296},b.double=b,x(v(p.S),r),(t.pass||n||function(e,t,n,a){return a&&(a.S&&g(a,p),e.state=function(){return g(p,{})}),n?(s.random=e,t):e})(b,h,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,a=this,o=0,r=a.i=a.j=0,s=a.S=[];for(n||(e=[n++]);o<c;)s[o]=o++;for(o=0;o<c;o++)s[o]=s[r=h&r+e[o%n]+(t=s[o])],s[r]=t;(a.g=function(e){for(var t,n=0,o=a.i,r=a.j,s=a.S;e--;)t=s[o=h&o+1],n=n*c+s[h&(s[o]=s[r=h&r+t])+(s[r]=t)];return a.i=o,a.j=r,n})(c)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,a=[],o=typeof e;if(t&&"object"==o)for(n in e)try{a.push(m(e[n],t-1))}catch(r){}return a.length?a:"string"==o?e:e+"\0"}function x(e,t){for(var n,a=e+"",o=0;o<a.length;)t[h&o]=h&(n^=19*t[h&o])+a.charCodeAt(o++);return v(t)}function v(e){return String.fromCharCode.apply(0,e)}if(x(s.random(),r),e.exports){e.exports=p;try{i=n(41234)}catch(b){}}else void 0===(a=function(){return p}.call(t,n,t,e))||(e.exports=a)}("undefined"!==typeof self?self:this,[],Math)}}]);
//# sourceMappingURL=9788.a9625391.chunk.js.map