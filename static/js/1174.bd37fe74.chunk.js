"use strict";(self.webpackChunkdata_in_design=self.webpackChunkdata_in_design||[]).push([[1174],{71174:(e,t,i)=>{i.r(t),i.d(t,{default:()=>U});var r=i(8),a=i(35143),l=i(3825),s=i(50076),n=i(25463),o=i(30726),c=i(77717),h=i(50346),p=i(90534),u=i(46053),d=(i(18690),i(21403)),v=i(28379),f=i(85842),m=i(17707),y=i(13312),_=i(25515),g=i(12406),w=i(76328),A=i(36648),b=i(19502),S=i(65624),T=i(31362),M=i(11270),O=i(94729),L=i(21617),D=i(5682),C=i(73907),Z=i(13096),P=i(55053),z=i(39568);const k=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let R=class extends((0,S.d)((0,C.I)((0,D.j)((0,M.q)((0,O.A)((0,w.f)((0,A.V)((0,b.b)((0,c.P)((0,n.$)((0,L.J)((0,g.p)((0,T.d)(_.A)))))))))))))){constructor(){super(...arguments),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?(0,r.A)({url:e},t):e}load(e){const t=(0,o.Ru)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(h.QP).then((()=>this._fetchService(t)))),Promise.resolve(this)}get attributionDataUrl(){var e;const t=null===(e=this.parsedUrl)||void 0===e?void 0:e.path.toLowerCase();return t?this._getDefaultAttribution(this._getMapName(t)):null}readSpatialReference(e,t){return(e=e||t.tileInfo&&t.tileInfo.spatialReference)&&y.A.fromJSON(e)}writeSublayers(e,t,i,a){if(!this.loaded||!e)return;const l=e.slice().reverse().flatten((e=>{let{sublayers:t}=e;return t&&t.toArray().reverse()})).toArray(),s=[],n=(0,r.A)({writeSublayerStructure:!1},a);l.forEach((e=>{const t=e.write({},n);s.push(t)})),s.some((e=>Object.keys(e).length>1))&&(t.layers=s)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl.path)}castTileServers(e){return Array.isArray(e)?e.map((e=>(0,p.An)(e).path)):null}fetchTile(e,t,i){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{signal:s}=a,n=this.getTileUrl(e,t,i),o={responseType:"image",signal:s,query:(0,r.A)({},this.refreshParameters)};return(0,l.default)(n,o).then((e=>e.data))}async fetchImageBitmapTile(e,t,i){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{signal:s}=a,n=this.getTileUrl(e,t,i),o={responseType:"blob",signal:s,query:(0,r.A)({},this.refreshParameters)},c=await(0,l.default)(n,o);return createImageBitmap(c.data)}getTileUrl(e,t,i){const a=!this.tilemapCache&&this.supportsBlankTile,l=(0,p.x0)((0,r.A)((0,r.A)((0,r.A)({},this.parsedUrl.query),{},{blankTile:!a&&null},this.customParameters),{},{token:this.apiKey})),s=this.tileServers;return"".concat(s&&s.length?s[t%s.length]:this.parsedUrl.path,"/tile/").concat(e,"/").concat(t,"/").concat(i).concat(l?"?"+l:"")}_fetchService(e){return new Promise(((t,i)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new s.A("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void t({data:this.sourceJSON})}if(!this.parsedUrl)throw new s.A("tile-layer:undefined-url","layer's url is not defined");const a=(0,Z.qg)(this.parsedUrl.path);if((0,o.Ru)(a)&&"ImageServer"===a.serverType)throw new s.A("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");(0,l.default)(this.parsedUrl.path,{query:(0,r.A)((0,r.A)((0,r.A)({f:"json"},this.parsedUrl.query),this.customParameters),{},{token:this.apiKey}),responseType:"json",signal:e}).then(t,i)})).then((t=>{if(t.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!(0,Z.Wo)(this.url))return this._fetchServerVersion(this.url,e).then((e=>{this.read({currentVersion:e})})).catch((()=>{}))}))}_fetchServerVersion(e,t){if(!(0,Z.Fi)(e))return Promise.reject();const i=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return(0,l.default)(i,{query:(0,r.A)((0,r.A)({f:"json"},this.customParameters),{},{token:this.apiKey}),responseType:"json",signal:t}).then((e=>{if(e.data&&e.data.currentVersion)return e.data.currentVersion;throw new s.A("tile-layer:version-not-available")}))}_getMapName(e){const t=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return t&&t[2]}_getDefaultAttribution(e){if(!e)return;let t;e=e.toLowerCase();for(let i=0,r=k.length;i<r;i++)if(t=k[i],t.toLowerCase().includes(e))return(0,p.s2)("//static.arcgis.com/attribution/"+t)}_getDefaultTileServers(e){const t=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),i=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return t||i?[e,e.replace(t?/server\.arcgisonline/i:/services\.arcgisonline/i,t?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};(0,a._)([(0,u.MZ)({readOnly:!0})],R.prototype,"attributionDataUrl",null),(0,a._)([(0,u.MZ)({type:["show","hide","hide-children"]})],R.prototype,"listMode",void 0),(0,a._)([(0,u.MZ)({json:{read:!0,write:!0}})],R.prototype,"blendMode",void 0),(0,a._)([(0,u.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],R.prototype,"isReference",void 0),(0,a._)([(0,u.MZ)({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],R.prototype,"operationalLayerType",void 0),(0,a._)([(0,u.MZ)({type:Boolean})],R.prototype,"resampling",void 0),(0,a._)([(0,u.MZ)()],R.prototype,"sourceJSON",void 0),(0,a._)([(0,u.MZ)({type:y.A})],R.prototype,"spatialReference",void 0),(0,a._)([(0,v.w)("spatialReference",["spatialReference","tileInfo"])],R.prototype,"readSpatialReference",null),(0,a._)([(0,u.MZ)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],R.prototype,"path",void 0),(0,a._)([(0,u.MZ)({readOnly:!0})],R.prototype,"sublayers",void 0),(0,a._)([(0,m.K)("sublayers",{layers:{type:[z.A]}})],R.prototype,"writeSublayers",null),(0,a._)([(0,u.MZ)({json:{read:!1,write:!1}})],R.prototype,"popupEnabled",void 0),(0,a._)([(0,u.MZ)()],R.prototype,"tileServers",null),(0,a._)([(0,d.w)("tileServers")],R.prototype,"castTileServers",null),(0,a._)([(0,u.MZ)({readOnly:!0,json:{read:!1}})],R.prototype,"type",void 0),(0,a._)([(0,u.MZ)(P.OZ)],R.prototype,"url",void 0),R=(0,a._)([(0,f.$)("esri.layers.TileLayer")],R),R.prototype.fetchTile.__isDefault__=!0;const U=R},76328:(e,t,i)=>{i.d(t,{f:()=>h});var r=i(35143),a=(i(35238),i(46053)),l=(i(18690),i(40565),i(28379)),s=i(85842),n=i(50977),o=i(79941),c=i(13312);const h=e=>{let t=class extends e{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,t){return t.capabilities&&t.capabilities.includes("Tilemap")?new o.d({layer:this}):null}};return(0,r._)([(0,a.MZ)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,r._)([(0,a.MZ)()],t.prototype,"minScale",void 0),(0,r._)([(0,l.w)("service","minScale")],t.prototype,"readMinScale",null),(0,r._)([(0,a.MZ)()],t.prototype,"maxScale",void 0),(0,r._)([(0,l.w)("service","maxScale")],t.prototype,"readMaxScale",null),(0,r._)([(0,a.MZ)({type:c.A})],t.prototype,"spatialReference",void 0),(0,r._)([(0,a.MZ)({readOnly:!0})],t.prototype,"supportsBlankTile",null),(0,r._)([(0,a.MZ)(n.d)],t.prototype,"tileInfo",void 0),(0,r._)([(0,a.MZ)()],t.prototype,"tilemapCache",void 0),(0,r._)([(0,l.w)("service","tilemapCache",["capabilities"])],t.prototype,"readTilemapCache",null),(0,r._)([(0,a.MZ)()],t.prototype,"version",void 0),t=(0,r._)([(0,s.$)("esri.layers.mixins.ArcGISCachedService")],t),t}},79941:(e,t,i)=>{i.d(t,{d:()=>O});var r,a=i(8),l=i(35143),s=i(3825),n=i(13398),o=i(21499),c=i(50076),h=i(25463),p=i(76460),u=i(53521),d=i(30015),v=i(50346),f=i(68134),m=i(52394),y=i(90534),_=i(46053),g=i(18690),w=i(21403),A=i(85842),b=i(11164),S=i(53084);class T{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),r=i%8,a=i>>3,l=this._tileAvailabilityBitSet;return a<0||a>l.length?"unknown":l[a]&1<<r?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let r=!0,a=!0;const l=Math.ceil(t*i/8),s=new Uint8Array(l);let n=0;for(let o=0;o<e.length;o++){const t=o%8;e[o]?(a=!1,s[n]|=1<<t):r=!1,7===t&&++n}a?this._allAvailability="unavailable":r?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=s,this.byteSize+=s.length)}static fromDefinition(e,t){const i=e.service.request||s.default,{row:r,col:l,width:n,height:o}=e,h={query:{f:"json"}};return t=t?(0,a.A)((0,a.A)({},h),t):h,i(function(e){let t;if("vector-tile"===e.service.type)t="".concat(e.service.url,"/tilemap/").concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height);else{const i=e.service.tileServers;t="".concat(i&&i.length?i[e.row%i.length]:e.service.url,"/tilemap/").concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height)}const i=e.service.query;return i&&(t="".concat(t,"?").concat(i)),t}(e),t).then((e=>e.data)).catch((e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:r,left:l,width:n,height:o},valid:!0,data:(0,g.dY)(n*o,0)};throw e})).then((e=>{if(e.location&&(e.location.top!==r||e.location.left!==l||e.location.width!==n||e.location.height!==o))throw new c.A("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:r,left:l,width:n,height:o}});return T.fromJSON(e)}))}static fromJSON(e){T._validateJSON(e);const t=new T;return t.location=Object.freeze((0,S.o8)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static _validateJSON(e){if(!e||!e.location)throw new c.A("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new c.A("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new c.A("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new c.A("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new c.A("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function M(e){return"".concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height)}let O=r=class extends((0,h.$)(n.A)){constructor(e){super(e),this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2*o.uA.MEGABYTES,this.request=s.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new u.A(this.cacheByteSize),this.addHandles([(0,f.wB)((()=>{const{layer:e}=this;return[null===e||void 0===e?void 0:e.parsedUrl,null===e||void 0===e?void 0:e.tileServers,null===e||void 0===e?void 0:e.apiKey,null===e||void 0===e?void 0:e.customParameters]}),(()=>this._initializeTilemapDefinition())),(0,f.wB)((()=>{var e;return null===(e=this.layer)||void 0===e||null===(e=e.tileInfo)||void 0===e?void 0:e.lods}),(e=>this._initializeAvailableLevels(e)),f.pc)]),this._initializeTilemapDefinition()}castLevels(e){return e<=2?(p.A.getLogger(this.declaredClass).error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,r){if(!this._availableLevels[e])return Promise.reject(new c.A("tilemap-cache:level-unavailable","Level ".concat(e," is unavailable in the service")));const l=this._tmpTilemapDefinition,s=this._tilemapFromCache(e,t,i,l);if(s)return Promise.resolve(s);const n=r&&r.signal;return r=(0,a.A)((0,a.A)({},r),{},{signal:null}),new Promise(((e,t)=>{(0,v.u7)(n,(()=>t((0,v.NK)())));const i=M(l);let a=this._pendingTilemapRequests[i];if(!a){a=T.fromDefinition(l,r).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=a,a.then(e,e)}a.then(e,t)}))}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const r=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return r?r.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,r){return this._availableLevels[e]?this.fetchTilemap(e,t,i,r).catch((e=>e)).then((r=>{if(r instanceof T){const a=r.getAvailability(t,i);if("unavailable"===a)throw new c.A("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i});return a}if((0,v.zf)(r))throw r;return"unknown"})):Promise.reject(new c.A("tilemap-cache:level-unavailable","Level ".concat(e," is unavailable in the service")))}fetchAvailabilityUpsample(e,t,i,r,a){r.level=e,r.row=t,r.col=i;const l=this.layer.tileInfo;l.updateTileInfo(r);const s=this.fetchAvailability(e,t,i,a).catch((e=>{if((0,v.zf)(e))throw e;if(l.upsampleTile(r))return this.fetchAvailabilityUpsample(r.level,r.row,r.col,r);throw e}));return this._fetchAvailabilityUpsamplePrefetch(r.id,e,t,i,a,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,i,l,s,n){if(!this._prefetchingEnabled)return;const o="prefetch-".concat(e);if(this.handles.has(o))return;const c=new AbortController;n.then((()=>c.abort()),(()=>c.abort()));let h=!1;const p={remove(){h||(h=!0,c.abort())}};if(this.handles.add(p,o),await(0,m.md)(10,c.signal).catch((()=>{})),h||(h=!0,this.handles.remove(o)),(0,v.G4)(c))return;const u=new b.U(e,t,i,l),d=(0,a.A)((0,a.A)({},s),{},{signal:c.signal}),f=this.layer.tileInfo;for(let a=0;r._prefetches.length<r._maxPrefetch&&f.upsampleTile(u);++a){const e=this.fetchAvailability(u.level,u.row,u.col,d);r._prefetches.push(e);const t=()=>{r._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){var e;if(!this.layer.parsedUrl)return;const{parsedUrl:t,apiKey:i,customParameters:r}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:t.path,query:(0,y.x0)((0,a.A)((0,a.A)((0,a.A)({},t.query),r),{},{token:null!==i&&void 0!==i?i:null===(e=t.query)||void 0===e?void 0:e.token})),tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,r){r.level=e,r.row=t-t%this.size,r.col=i-i%this.size;const a=M(r);return this._tilemapCache.get(a)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach((e=>this._availableLevels[e.level]=!0))}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,r)=>!!e._tilemapFromCache(t,i,r,e._tmpTilemapDefinition)}}};O._maxPrefetch=4,O._prefetches=new d.A({initialSize:r._maxPrefetch}),(0,l._)([(0,_.MZ)({constructOnly:!0,type:Number})],O.prototype,"levels",void 0),(0,l._)([(0,w.w)("levels")],O.prototype,"castLevels",null),(0,l._)([(0,_.MZ)({readOnly:!0,type:Number})],O.prototype,"size",null),(0,l._)([(0,_.MZ)({constructOnly:!0,type:Number})],O.prototype,"cacheByteSize",void 0),(0,l._)([(0,_.MZ)({constructOnly:!0})],O.prototype,"layer",void 0),(0,l._)([(0,_.MZ)({constructOnly:!0})],O.prototype,"request",void 0),O=r=(0,l._)([(0,A.$)("esri.layers.support.TilemapCache")],O)},50977:(e,t,i)=>{i.d(t,{d:()=>l,i:()=>s});var r=i(8),a=i(88235);const l={type:a.A,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:s}}}}};function s(e,t,i,l){if(!e)return null;const{minScale:s,maxScale:n,minLOD:o,maxLOD:c}=t;if(null!=o&&null!=c)return l&&l.ignoreMinMaxLOD?a.A.fromJSON(e):a.A.fromJSON((0,r.A)((0,r.A)({},e),{},{lods:e.lods.filter((e=>{let{level:t}=e;return null!=t&&t>=o&&t<=c}))}));if(0!==s&&0!==n){const t=e=>Math.round(1e4*e)/1e4,i=s?t(s):1/0,l=n?t(n):-1/0;return a.A.fromJSON((0,r.A)((0,r.A)({},e),{},{lods:e.lods.filter((e=>{const r=t(e.scale);return r<=i&&r>=l}))}))}return a.A.fromJSON(e)}}}]);
//# sourceMappingURL=1174.bd37fe74.chunk.js.map