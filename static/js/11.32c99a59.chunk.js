/*! For license information please see 11.32c99a59.chunk.js.LICENSE.txt */
(self.webpackChunkdata_in_design=self.webpackChunkdata_in_design||[]).push([[11],{3143:(t,e,n)=>{"use strict";n.d(e,{C:()=>s});var a=n(73882);function s(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&a.ZSL.assert("complex64"!==t.dtype,(()=>"".concat(e," does not support complex64 tensors in the CPU backend.")))}))}},85903:(t,e,n)=>{"use strict";n.d(e,{dH:()=>r,lO:()=>o});var a=n(73882),s=n(3143);function r(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const o={kernelName:a.ljI,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;(0,s.C)(e,"abs");let o=new Float32Array(a.ZSL.sizeFromShape(e.shape));return o=r(n.data.get(e.dataId).values),n.makeOutput(o,e.shape,e.dtype)}}},49864:(t,e,n)=>{"use strict";n.d(e,{UK:()=>l,WQ:()=>c,mx:()=>o});var a=n(73882),s=n(82312),r=n(85101);const o=(0,s.Z)(((t,e)=>t+e)),i=(0,r.B)(((t,e,n,a)=>({real:t+n,imag:e+a}))),c=(0,r.j)(a.OMN,o,i),l={kernelName:a.OMN,backendName:"cpu",kernelFunc:c}},92412:(t,e,n)=>{"use strict";n.d(e,{N:()=>r,X:()=>s});var a=n(73882);function s(t,e,n,s,r){const o=a.ZSL.sizeFromShape(s),i=a.ZSL.makeZerosTypedArray(r,n);for(let a=0;a<t.length;a++){const n=t[a];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(i[n]+=o>0?e[a]:1)}return i}function r(t,e,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=t.shape[0],o=t.shape[1],i=(0,a.ra8)([r,n],e.dtype);for(let a=0;a<r;a++)for(let r=0;r<o;r++){const o=t.get(a,r);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(s?i.set(1,a,o):e.size>0?i.set(i.get(a,o)+e.get(a,r),a,o):i.set(i.get(a,o)+1,a,o))}return i}},89475:(t,e,n)=>{"use strict";n.d(e,{LY:()=>c,f6:()=>o});var a=n(73882),s=n(82312),r=n(85101);const o=(0,s.Z)(((t,e)=>t&e)),i=(0,r.j)(a.HNs,o),c={kernelName:a.HNs,backendName:"cpu",kernelFunc:i}},668:(t,e,n)=>{"use strict";n.d(e,{Ml:()=>h,ct:()=>l,wg:()=>u});var a=n(73882),s=n(82312),r=n(51908),o=n(73075),i=n(3701),c=n(35995);function l(t,e,n,r){if("int32"===r){return[e,"int32",Int32Array.from(t)]}if("bool"===r){const r=a.ZSL.toTypedArray([0],n),[o,i]=(0,s.Z)(((t,e)=>t!==e?1:0))(e,[],t,r,"bool");return[i,"bool",o]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(r))}function u(t){const{inputs:e,backend:n,attrs:s}=t,{x:h}=e,{dtype:d}=s;if("complex64"===d){if("complex64"===h.dtype)return(0,i.D)({inputs:{x:h},backend:n});const t=(0,r.U)(n,h.shape,h.dtype),e=u({inputs:{x:h},backend:n,attrs:{dtype:"float32"}}),a=(0,o.f)({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),a}if("complex64"===h.dtype){const t=(0,c.x)({inputs:{input:h},backend:n}),e=u({inputs:{x:t},backend:n,attrs:{dtype:d}});return n.disposeIntermediateTensorInfo(t),e}if(!a.ZSL.hasEncodingLoss(h.dtype,d)){const t=(0,i.D)({inputs:{x:h},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:d}}const p=n.data.get(h.dataId).values,[f,g,m]=l(p,h.shape,h.dtype,d);return n.makeTensorInfo(f,g,m)}const h={kernelName:a.KXH,backendName:"cpu",kernelFunc:u}},74034:(t,e,n)=>{"use strict";n.d(e,{YG:()=>o,uf:()=>c});var a=n(73882),s=n(74084),r=n(34729);const o=(0,s.o)((t=>Math.ceil(t))),i=(0,r.F)(a.QDP,o),c={kernelName:a.QDP,backendName:"cpu",kernelFunc:i}},73075:(t,e,n)=>{"use strict";function a(t){const{inputs:e,backend:n}=t,{real:a,imag:s}=e,r=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",r),imag:n.makeTensorInfo(s.shape,"float32",o)},i}n.d(e,{f:()=>a,v:()=>s});const s={kernelName:n(73882).pr3,backendName:"cpu",kernelFunc:a}},9044:(t,e,n)=>{"use strict";n.d(e,{h:()=>s});var a=n(73882);function s(t,e,n,s){const r=a.ZSL.getArrayFromDType(n,a.ZSL.sizeFromShape(e));if(s&&"string"!==n){let e=0;t.forEach((t=>{const n=a.ZSL.sizeFromShape(t.shape);r.set(t.vals,e),e+=n}))}else{let s=0;t.forEach((t=>{const o="string"===n?a.C0T.fromUint8ToStringArray(t.vals):t.vals;let i=0;for(let n=0;n<t.shape[0];++n){const a=n*e[1]+s;for(let e=0;e<t.shape[1];++e)r[a+e]=o[i++]}s+=t.shape[1]}))}return r}},3439:(t,e,n)=>{"use strict";n.d(e,{LC:()=>i,RY:()=>c,z3:()=>o});var a=n(73882),s=n(82312),r=n(85101);const o=(0,s.Z)(((t,e)=>t===e?1:0)),i=(0,r.j)(a.BRl,o,null,"bool"),c={kernelName:a.BRl,backendName:"cpu",kernelFunc:i}},84308:(t,e,n)=>{"use strict";n.d(e,{AC:()=>c,oN:()=>i,sG:()=>o});var a=n(73882),s=n(74084),r=n(34729);const o=(0,s.o)((t=>Math.exp(t))),i=(0,r.F)(a.ox3,o,"float32"),c={kernelName:a.ox3,backendName:"cpu",kernelFunc:i}},17046:(t,e,n)=>{"use strict";n.d(e,{Yp:()=>c,uM:()=>o});var a=n(73882),s=n(74084),r=n(34729);const o=(0,s.o)((t=>Math.expm1(t))),i=(0,r.F)(a.ybj,o),c={kernelName:a.ybj,backendName:"cpu",kernelFunc:i}},7742:(t,e,n)=>{"use strict";n.d(e,{Hc:()=>c,vS:()=>o});var a=n(73882),s=n(74084),r=n(34729);const o=(0,s.o)((t=>Math.floor(t))),i=(0,r.F)(a.ZgB,o),c={kernelName:a.ZgB,backendName:"cpu",kernelFunc:i}},15003:(t,e,n)=>{"use strict";n.d(e,{q:()=>s});var a=n(73882);function s(t,e,n,s,r,o,i,c,l){const u=(0,a.ra8)([s,o],n);for(let a=0;a<s;a++){const n=[];let s=0;for(let e=0;e<r;e++){const o=t[a*r+e];s+=o*i[e],n.push(o)}if(s<0||s>=l/o)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(c));for(let t=0;t<o;t++)u.values[a*o+t]=e.get(...e.indexToLoc(s*o+t))}return u}},92525:(t,e,n)=>{"use strict";n.d(e,{G:()=>s});var a=n(73882);function s(t,e,n){const s=(0,a.ra8)(n,t.dtype);for(let a=0;a<s.size;++a){const n=s.indexToLoc(a).slice(),r=n[0],o=n[2],i=e.locToIndex([r,o]);n[2]=e.values[i];const c=t.locToIndex(n);0<=c&&c<t.values.length&&(s.values[a]=t.values[c])}return s}},11217:(t,e,n)=>{"use strict";n.d(e,{rq:()=>o,xp:()=>c});var a=n(73882),s=n(82312),r=n(85101);const o=(0,s.Z)(((t,e)=>t>e?1:0)),i=(0,r.j)(a.XhZ,o,null,"bool"),c={kernelName:a.XhZ,backendName:"cpu",kernelFunc:i}},98829:(t,e,n)=>{"use strict";n.d(e,{VM:()=>c,lg:()=>o});var a=n(73882),s=n(82312),r=n(85101);const o=(0,s.Z)(((t,e)=>t>=e?1:0)),i=(0,r.j)(a.lLS,o,null,"bool"),c={kernelName:a.lLS,backendName:"cpu",kernelFunc:i}},3701:(t,e,n)=>{"use strict";function a(t){const{inputs:e,backend:n}=t,{x:a}=e;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}n.d(e,{D:()=>a,F:()=>s});const s={kernelName:n(73882).lzr,backendName:"cpu",kernelFunc:a}},47242:(t,e,n)=>{"use strict";n.d(e,{WR:()=>o,YW:()=>c});var a=n(73882),s=n(82312),r=n(85101);const o=(0,s.Z)(((t,e)=>t<e?1:0)),i=(0,r.j)(a.mIA,o,null,"bool"),c={kernelName:a.mIA,backendName:"cpu",kernelFunc:i}},32784:(t,e,n)=>{"use strict";n.d(e,{Q:()=>c,cu:()=>o});var a=n(73882),s=n(82312),r=n(85101);const o=(0,s.Z)(((t,e)=>t<=e?1:0)),i=(0,r.j)(a.CwD,o,null,"bool"),c={kernelName:a.CwD,backendName:"cpu",kernelFunc:i}},23633:(t,e,n)=>{"use strict";n.d(e,{G:()=>s});var a=n(73882);function s(t,e,n){const s=(e-t)/(n-1),r=a.ZSL.makeZerosTypedArray(n,"float32");r[0]=t;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}},70477:(t,e,n)=>{"use strict";n.d(e,{Fx:()=>c,px:()=>o});var a=n(73882),s=n(74084),r=n(34729);const o=(0,s.o)((t=>Math.log(t))),i=(0,r.F)(a.tG8,o),c={kernelName:a.tG8,backendName:"cpu",kernelFunc:i}},56238:(t,e,n)=>{"use strict";n.d(e,{j:()=>s});var a=n(73882);function s(t,e,n,s){const r=a.ZSL.getTypedArrayFromDType(s,a.ZSL.sizeFromShape(n));for(let a=0;a<r.length;++a){const n=a*e;let s=t[n];for(let a=0;a<e;++a){const e=t[n+a];(Number.isNaN(e)||e>s)&&(s=e)}r[a]=s}return r}},58617:(t,e,n)=>{"use strict";n.d(e,{He:()=>o,l9:()=>c});var a=n(73882),s=n(82312),r=n(85101);const o=(0,s.Z)(((t,e)=>Math.max(t,e))),i=(0,r.j)(a.LDN,o),c={kernelName:a.LDN,backendName:"cpu",kernelFunc:i}},2491:(t,e,n)=>{"use strict";n.d(e,{Nu:()=>c,hE:()=>o});var a=n(73882),s=n(82312),r=n(85101);const o=(0,s.Z)(((t,e)=>Math.min(t,e))),i=(0,r.j)(a.LG0,o),c={kernelName:a.LG0,backendName:"cpu",kernelFunc:i}},50063:(t,e,n)=>{"use strict";n.d(e,{BF:()=>o,lw:()=>c,tJ:()=>l});var a=n(73882),s=n(82312),r=n(85101);const o=(0,s.Z)(((t,e)=>t*e)),i=(0,r.B)(((t,e,n,a)=>({real:t*n-e*a,imag:t*a+e*n}))),c=(0,r.j)(a.xu7,o,i),l={kernelName:a.xu7,backendName:"cpu",kernelFunc:c}},20321:(t,e,n)=>{"use strict";n.d(e,{Dk:()=>o,hd:()=>i});var a=n(73882),s=n(3143),r=n(50063);function o(t,e,n){const s=a.ZSL.createScalarValue(-1,n);return(0,r.BF)([],e,s,t,n)}const i={kernelName:a.l0G,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;(0,s.C)(a,"neg");const r=n.data.get(a.dataId).values,[i,c]=o(r,a.shape,a.dtype);return n.makeTensorInfo(c,a.dtype,i)}}},38440:(t,e,n)=>{"use strict";n.d(e,{AL:()=>c,cl:()=>o});var a=n(73882),s=n(82312),r=n(85101);const o=(0,s.Z)(((t,e)=>t!==e?1:0)),i=(0,r.j)(a.ylV,o,null,"bool"),c={kernelName:a.ylV,backendName:"cpu",kernelFunc:i}},51206:(t,e,n)=>{"use strict";n.d(e,{S3:()=>i,_B:()=>o});var a=n(73882),s=n(3143),r=n(89868);function o(t,e,n,s){const[r,o]=a.C0T.computeOutAndReduceShapes(t,s),i=(0,a.TuY)(e,"int32"),c=a.ZSL.makeZerosTypedArray(a.ZSL.sizeFromShape(r),i),l=a.ZSL.sizeFromShape(o);for(let a=0;a<c.length;++a){const t=a*l;let e=1;for(let a=0;a<l;++a)e*=n[t+a];c[a]=e}return{outVals:c,outShape:r,outDtype:i}}const i={kernelName:a.kdj,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:i}=t,{x:c}=e,{axis:l,keepDims:u}=i;(0,s.C)(c,"prod");const h=c.shape.length,d=a.ZSL.parseAxisParam(l,c.shape),p=a.C0T.getAxesPermutation(d,h);let f=d,g=c;const m=[];null!=p&&(g=(0,r.m)({inputs:{x:c},backend:n,attrs:{perm:p}}),m.push(g),f=a.C0T.getInnerMostAxes(f.length,h));const b=n.data.get(g.dataId).values,{outVals:x,outShape:y,outDtype:v}=o(g.shape,g.dtype,b,f);let w=y;return u&&(w=a.C0T.expandShapeToKeepDim(y,d)),m.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(w,v,x)}}},45335:(t,e,n)=>{"use strict";n.d(e,{u:()=>i});var a=n(73882);function s(t,e,n,a){const s=[];let r=0;const o=e.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(t,e){for(let n=0;n<t.length;++n){const a=t[n],s=n===t.length-1?e:t[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>s)throw new Error("Ragged splits must not point past values");for(let t=1;t<a.length;++t)if(a[t-1]>a[t])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let c=1;for(let l=0;l<e.length-1;++l){c*=e[l];const t=e[l+1];for(let e=1;e<c+1;++e)i[l].push(e*t)}for(let l=0;l<t.length;++l){let a=t[l],o=t[l]+1;for(let t=0;t<n.length;++t){const s=n[t],r=t+e.length-1;if(r>=0){const t=i[r],e=t[t.length-1]-s[a];for(let n=a;n<o;++n)i[r].push(s[n+1]+e)}a=s[a],o=s[o]}o!==a&&(s.push([a,o]),r+=o-a)}return{outSplits:i,valueSlices:s,numValues:r}}function r(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let a=e;a<t.length;a++)n[e-1]*=t[a];return n}function o(t,e,n,s,o){const i=e.slice();i[0]=o;const c=a.ZSL.getArrayFromDType(n,a.ZSL.sizeFromShape(i)),l=t.length;return function(t,e,n,a,s,o){const i=r(e,2)[1],c=r(o,2)[1];let l=0;for(const r of n)for(let e=r[0];e<r[1];++e){for(let n=0;n<a;++n)s[l*c+n]=t[e*i+n];++l}}(t,e,s,0===l?0:l/e[0],c,i),[c,i]}function i(t,e,n,r,i,c,l,u){if(0===t.length)throw new Error("paramsNestedSplits must be non empty");if(0===e[0].length)throw new Error("Split tensors must not be scalars");if(function(t,e,n){t.forEach(((t,s)=>{if(t<0||t>=n){const r=a.ZSL.indexToLoc(s,e.length,a.ZSL.computeStrides(e)).join(",");throw new Error("indices[".concat(r,"] = ").concat(t," is not in [0, ").concat(n,")"))}}))}(c,l,e[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const h=r[0],{outSplits:d,valueSlices:p,numValues:f}=s(c,l,t,h),g=function(t){const e=[];for(let n=0;n<t.length;++n){const s=t[n].length,r=a.ZSL.getArrayFromDType("int32",s);e.push(r),t[n].forEach(((t,e)=>r[e]=t))}return e}(d),m=o(n,r,i,p,f);return[g,m[0],m[1]]}},14417:(t,e,n)=>{"use strict";n.d(e,{_:()=>r});var a=n(73882);const s=2147483647;function r(t,e,n,r,o,i,c){if(e.length>1)throw new Error("starts must be a scalar or vector");if(o.length>1)throw new Error("limits must be a scalar or vector");if(c.length>1)throw new Error("deltas must be a scalar or vector");const l=0===e.length,u=0===o.length,h=0===c.length,d=[];l||d.push(e[0]),u||d.push(o[0]),h||d.push(c[0]);for(let a=1;a<d.length;++a)if(d[a]!==d[a-1])throw new Error("starts, limits, and deltas must have the same shape");const p=0===d.length?1:d[0],f=a.ZSL.getArrayFromDType("int32",p+1);f[0]=0;for(let a=0;a<p;++a){const e=l?t[0]:t[a],n=u?r[0]:r[a],o=h?i[0]:i[a];if(0===o)throw new Error("Requires delta != 0");let c;if(o>0&&n<e||o<0&&n>e)c=0;else if(c=Math.ceil(Math.abs((n-e)/o)),c>s)throw new Error("Requires ((limit - start) / delta) <= ".concat(s));f[a+1]=f[a]+c}const g=f[p],m=a.ZSL.getArrayFromDType(n,g);let b=0;for(let a=0;a<p;++a){const e=f[a+1]-f[a];let n=l?t[0]:t[a];const s=h?i[0]:i[a];for(let t=0;t<e;++t)m[b++]=n,n+=s}return[f,m]}},78545:(t,e,n)=>{"use strict";n.d(e,{K:()=>c});var a=n(73882),s=a.C0T.RowPartitionType;class r{constructor(t,e,n,s,r,o,i,c,l,u){this.shape=t,this.shapeShape=e,this.values=n,this.valuesShape=s,this.valuesDType=r,this.defaultValue=o,this.defaultValueShape=i,this.rowPartitionValues=c,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=a.C0T.getRowPartitionTypesHelper(u),this.raggedRank=a.C0T.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===s.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===s.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case s.VALUE_ROWIDS:return r.getMaxWidthValueRowID(e);case s.ROW_SPLITS:return r.getMaxWidthRowSplit(e);default:throw new Error("Cannot handle partition type ".concat(s[this.getRowPartitionTypeByDimension(t-1)]))}}static getMaxWidthRowSplit(t){const e=t.length;if(0===e||1===e)return 0;let n=0;for(let a=0;a<e-1;++a){const e=t[a+1]-t[a];e>n&&(n=e)}return n}static getMaxWidthValueRowID(t){const e=t.length;if(0===e)return 0;let n=0,a=t[0],s=0;for(let r=1;r<e;++r){const e=t[r];e!==a&&(a=e,s=Math.max(r-n,s),n=r)}return Math.max(e-n,s)}tensorShapeFromTensor(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===e.length){if(-1===t[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return i(t,n)}calculateOutputSize(t){const e=this.valuesShape,n=this.defaultValueShape;a.C0T.validateDefaultValueShape(n,e);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=a.C0T.combineRaggedTensorToTensorShapes(this.raggedRank,s,e);r[0]<0&&(r[0]=t);for(let a=1;a<=this.raggedRank;++a)r[a]<0&&(r[a]=this.getMaxWidth(a));return r}calculateFirstParentOutputIndex(t,e,n){const s=Math.min(t,n),r=[];let o=0;for(let a=0;a<s;++a,o+=e)r.push(o);for(let a=s;a<t;++a)r.push(-1);return a.ZSL.assert(r.length===t,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(t,e,n,a){const s=t.length,r=[];for(let o=0;o<s-1;++o){const s=t[o+1]-t[o];let i=Math.min(a,s),c=e[o];-1===c&&(i=0);for(let t=0;t<i;++t)r.push(c),c+=n;for(let t=0;t<s-i;++t)r.push(-1)}if(s>0&&r.length!==t[s-1])throw new Error("Invalid row split size.");return r}calculateOutputIndexValueRowID(t,e,n,a){const s=t.length,r=[];if(0===s)return[];let o=0,i=t[0];if(i>=e.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(e.length));let c=e[i];r.push(c);for(let l=1;l<s;++l){const s=t[l];if(s===i)c>=0&&(++o,o<a?c+=n:c=-1);else{if(o=0,i=s,s>=e.length)throw new Error("Got nextValueRowId=".concat(s," which is not less than ").concat(e.length));c=e[s]}r.push(c)}if(r.length!==t.length)throw new Error("Invalid row ids.");return r}calculateOutputIndex(t,e,n,a){const r=this.getRowPartitionTensor(t),o=this.getRowPartitionTypeByDimension(t);switch(o){case s.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,e,n,a);case s.ROW_SPLITS:if(r.length-1>e.length)throw new Error("Row partition size is greater than output size: ".concat(r.length-1," > ").concat(e.length));return this.calculateOutputIndexRowSplit(r,e,n,a);default:throw new Error("Unsupported partition type: ".concat(s[o]))}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case s.FIRST_DIM_SIZE:return t[0];case s.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case s.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(s[e]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),e=this.calculateOutputSize(t),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let a=n.length-2;a>=0;--a)n[a]=n[a+1]*e[a+1];const s=i(e,!1),r=a.ZSL.getArrayFromDType(this.valuesDType,a.ZSL.sizeFromShape(s));if(n[0]*e[0]>0){let a=this.calculateFirstParentOutputIndex(t,n[0],e[0]);for(let t=1;t<=this.raggedRank;++t){a=this.calculateOutputIndex(t-1,a,n[t],e[t])}this.setOutput(this.raggedRank,a,r,s)}return[s,r]}setOutput(t,e,n,s){if(0===n.length)return;const r=this.values,i=n;let c=s.slice();c=c.slice(t+1);const l=a.ZSL.sizeFromShape(c),u=e.length;let h=this.defaultValue;if(h.length!==l&&1!==h.length){const t=this.defaultValueShape;(0,a.DZQ)((()=>{const e=(0,a.tQQ)(h,t),n=(0,a.hOW)(e,c);h=n.dataSync()}))}let d=0,p=0,f=0;for(let a=0;a<=u;++a){let t=a<u?e[a]:-1;if(t!==f){if(p<f){const t=r.subarray(d*l);o(i.subarray(p*l),t,(f-p)*l)}if(a>=u){const e=n.length;t=Math.floor(e/l)}if(t>f)if(1===this.defaultValue.length)i.subarray(f*l,t*l).fill(this.defaultValue[0]),f=t;else for(;t>f;){o(i.slice(f*l),h,l),++f}t<0?(d=a+1,p=f):(d=a,p=f,f=p+1)}else++f}}}function o(t,e,n){for(let a=0;a<n;a++)t[a]=e[a]}function i(t,e){const n=[];for(let a of t){if(a<0){if(!e)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function c(t,e,n,a,s,o,i,c,l,u){return new r(t,e,n,a,s,o,i,c,l,u).compute()}},56635:(t,e,n)=>{"use strict";n.d(e,{q:()=>s});var a=n(73882);function s(t,e,n,s){if(t===e||t<e&&n<0||e<t&&n>1)return a.ZSL.makeZerosTypedArray(0,s);const r=Math.abs(Math.ceil((e-t)/n)),o=a.ZSL.makeZerosTypedArray(r,s);e<t&&1===n&&(n=-1),o[0]=t;for(let a=1;a<o.length;a++)o[a]=o[a-1]+n;return o}},35995:(t,e,n)=>{"use strict";function a(t){const{inputs:e,backend:n}=t,{input:a}=e,s=n.data.get(a.dataId).complexTensorInfos.real,r=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,r)}n.d(e,{r:()=>s,x:()=>a});const s={kernelName:n(73882).LRy,backendName:"cpu",kernelFunc:a}},3555:(t,e,n)=>{"use strict";n.d(e,{Lt:()=>c,Zy:()=>o});var a=n(73882),s=n(74084),r=n(34729);const o=(0,s.o)((t=>1/Math.sqrt(t))),i=(0,r.F)(a.TOR,o),c={kernelName:a.TOR,backendName:"cpu",kernelFunc:i}},526:(t,e,n)=>{"use strict";n.d(e,{b:()=>s});var a=n(73882);function s(t,e,n,s,r,o,i,c,l,u){const h=[s/r,r],d=t.values,p=e.values;if(0===s)return(0,a.ra8)(n,e.dtype);const f=l instanceof a.ylz?l:(0,a.ra8)(h,e.dtype);"string"===typeof l||"number"===typeof l?f.values.fill(l):"boolean"===typeof l&&f.values.fill(+l);for(let a=0;a<o;a++){const t=[];let o=0;for(let e=0;e<i;e++){const n=d[a*i+e];t.push(n),o+=n*c[e]}if(o<0||o>=s/r)throw new Error("Invalid indices: ".concat(t," does not index into ").concat(n));for(let n=0;n<r;n++)u?f.values[o*r+n]+=p[a*r+n]:f.values[o*r+n]=0===e.rank?p[0]:p[a*r+n]}return f}},42511:(t,e,n)=>{"use strict";n.d(e,{X3:()=>c,ry:()=>i,zv:()=>o});var a=n(73882),s=n(74084),r=n(34729);const o=(0,s.o)((t=>1/(1+Math.exp(-t)))),i=(0,r.v)(a.vI1,(t=>1/(1+Math.exp(-t)))),c={kernelName:a.vI1,backendName:"cpu",kernelFunc:i}},34357:(t,e,n)=>{"use strict";n.d(e,{HS:()=>r,di:()=>o,lv:()=>i});var a=n(73882),s=n(3143);function r(t,e,n,s,r){const o=a.Kro.isSliceContinous(s,e,n),i=a.ZSL.sizeFromShape(n),c=a.ZSL.computeStrides(s);if(o){const n=a.Kro.computeFlatOffset(e,c);return"string"===r?t.slice(n,n+i):t.subarray(n,n+i)}const l="string"===r?a.C0T.fromUint8ToStringArray(t):t,u=(0,a.ra8)(s,r,l),h=(0,a.ra8)(n,r);for(let a=0;a<h.size;++a){const t=h.indexToLoc(a),n=t.map(((t,n)=>t+e[n]));h.set(u.get(...n),...t)}return"string"===r?a.C0T.fromStringArrayToUint8(h.values):h.values}function o(t){const{inputs:e,backend:n,attrs:o}=t,{x:i}=e,{begin:c,size:l}=o;(0,s.C)(i,"slice");const[u,h]=a.Kro.parseSliceParams(i,c,l);a.Kro.assertParamsValid(i,u,h);const d=r(n.data.get(i.dataId).values,u,h,i.shape,i.dtype);return n.makeTensorInfo(h,i.dtype,d)}const i={kernelName:a.JiE,backendName:"cpu",kernelFunc:o}},22785:(t,e,n)=>{"use strict";n.d(e,{y:()=>s});var a=n(73882);function s(t,e,n,s,r,o,i){const c=e[0],l=o[0],u=new Array(l),h=new Array(c),d=e[1];if(0===l){if(0!==c)throw new Error(a.C0T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(c));return[a.ZSL.getArrayFromDType(n,0),[0,d],a.ZSL.getArrayFromDType(r,0),u,h]}let p=!0,f=0;const g=new Array(l).fill(0);for(let b=0;b<c;++b){const e=t[b*d];if(e<0)throw new Error(a.C0T.getSparseFillEmptyRowsNegativeIndexErrorMessage(b,e));if(e>=l)throw new Error(a.C0T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(b,e,l));++g[e],p=p&&e>=f,f=e}let m=!0;for(let a=0;a<l;++a){const t=0===g[a];u[a]=t,m=m&&!t,g[a]=Math.max(g[a],1),a>0&&(g[a]+=g[a-1])}if(m&&p){const e=t,n=s;for(let t=0;t<c;++t)h[t]=t;return[e,[c,d],n,u,h]}{const e=g[l-1],o=a.ZSL.getArrayFromDType(n,e*d),p=a.ZSL.getArrayFromDType(r,e),f=new Array(l).fill(0);for(let n=0;n<c;++n){const e=t[n*d],a=f[e],r=(0===e?0:g[e-1])+a;f[e]++;for(let s=0;s<d;++s)o[r*d+s]=t[n*d+s];p[r]=s[n],h[n]=r}for(let t=0;t<l;++t){if(0===f[t]){const e=0===t?0:g[t-1];o[e*d+0]=t;for(let t=1;t<d;++t)o[e*d+t]=0;p[e]=i}}return[o,[e,d],p,u,h]}}},50706:(t,e,n)=>{"use strict";n.d(e,{l:()=>s});var a=n(73882);function s(t,e,n,s,r){const o=a.ZSL.sizeFromShape(s),i=e[0],c=r.length,l=[];let u=1,h=-1;for(let m=0;m<c;++m){const t=r[m];if(-1===t){if(-1!==h)throw new Error(a.C0T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(h,m));h=m,l.push(1)}else{if(t<0)throw new Error(a.C0T.getSparseReshapeNegativeOutputDimErrorMessage(m,t));u*=t,l.push(t)}}if(-1!==h){if(u<=0)throw new Error(a.C0T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const t=Math.trunc(o/u);if(u*t!==o)throw new Error(a.C0T.getSparseReshapeInputOutputMultipleErrorMessage(s,l));l[h]=t}if(a.ZSL.sizeFromShape(l)!==o)throw new Error(a.C0T.getSparseReshapeInputOutputMismatchErrorMessage(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let t=d-2;t>=0;--t)p[t]=p[t+1]*s[t+1]}const f=[];if(c>0){f[c-1]=1;for(let t=c-2;t>=0;--t)f[t]=f[t+1]*l[t+1]}const g=a.ZSL.getArrayFromDType(n,i*c);for(let a=0;a<i;++a){let e=0;for(let n=0;n<d;++n)e+=t[a*d+n]*p[n];for(let t=0;t<c;++t)g[a*c+t]=Math.trunc(e/f[t]),e%=f[t]}return[g,[i,c],l]}},53326:(t,e,n)=>{"use strict";n.d(e,{z:()=>s});var a=n(73882);function s(t,e,n,s,r){let o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const c=s.length,l=[e[0],t.length/e[0]],u=l[1],h=c>0?r[c-1]+1:0;if(h<0)throw new Error(a.C0T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const d=e.slice();d[0]=h;const p=d.reduce(((t,e)=>t*e),1),f=a.ZSL.getArrayFromDType(n,p);if(0===c)return h>0&&f.fill(i),[f,d];if(h<=0)throw new Error(a.C0T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let g=0,m=1,b=0,x=r[g];for(;;){let e=0;if(m<c){if(e=r[m],x===e){++m;continue}if(x>=e)throw new Error(a.C0T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=h)throw new Error(a.C0T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,h));x>b&&f.fill(i,b*u,x*u);for(let n=g;n<m;++n){const e=s[n];if(e<0||e>=l[0])throw new Error(a.C0T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,s[n],l[0]));for(let n=0;n<u;n++)f[x*u+n]+=t[e*u+n]}if(o)for(let t=0;t<u;t++)f[x*u+t]/=m-g;if(g=m,++m,b=x+1,x=e,m>c)break}return b<h&&f.fill(i,b*u,h*u),[f,d]}},98041:(t,e,n)=>{"use strict";n.d(e,{Fu:()=>c,x6:()=>o});var a=n(73882),s=n(74084),r=n(34729);const o=(0,s.o)((t=>Math.sqrt(t))),i=(0,r.v)(a.dFH,(t=>Math.sqrt(t))),c={kernelName:a.dFH,backendName:"cpu",kernelFunc:i}},67844:(t,e,n)=>{"use strict";n.d(e,{C:()=>c,_:()=>o});var a=n(73882),s=n(74084),r=n(34729);const o=(0,s.o)(((t,e)=>{const{pattern:n,replaceGlobal:a,rewrite:s}=e;return t.replace(new RegExp(n,a?"g":""),s)})),i=(0,r.F)(a.GZp,o),c={kernelName:a.GZp,backendName:"cpu",kernelFunc:i}},3445:(t,e,n)=>{"use strict";n.d(e,{e:()=>s});var a=n(73882);function s(t,e,n,s){const r=(0,a.ra8)(t,e.dtype);for(let a=0;a<r.size;a++){const t=r.indexToLoc(a),o=new Array(t.length);for(let e=0;e<o.length;e++)o[e]=t[e]*n[e]+s[e];r.set(e.get(...o),...t)}return r}},58793:(t,e,n)=>{"use strict";n.d(e,{G:()=>r});var a=n(73882);class s{constructor(t,e,n,s,r,o){this.separator=a.ZSL.encodeString(t),this.nGramWidths=e,this.leftPad=a.ZSL.encodeString(n),this.rightPad=a.ZSL.encodeString(s),this.padWidth=r,this.preserveShort=o}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,a,s,r){for(let o=0;o<s;++o){const i=this.getPadWidth(r),c=Math.max(0,i-o),l=Math.max(0,i-(s-(o+1))),u=r-(c+l),h=e+(c>0?0:o-i);let d=0;d+=c*this.leftPad.length;for(let e=0;e<u;++e)d+=t[h+e].length;d+=l*this.rightPad.length;d+=(c+l+u-1)*this.separator.length,n[a+o]=new Uint8Array(d);const p=n[a+o];let f=0;const g=t=>t.forEach((t=>p[f++]=t));for(let t=0;t<c;++t)g(this.leftPad),g(this.separator);for(let e=0;e<u-1;++e)g(t[h+e]),g(this.separator);if(u>0){g(t[h+u-1]);for(let t=0;t<l;++t)g(this.separator),g(this.rightPad)}else{for(let t=0;t<l-1;++t)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(t,e){const n=t.length,s=e.length;if(s>0){let t=e[0];if(0!==t)throw new Error("First split value must be 0, got ".concat(t));for(let a=1;a<s;++a){let s=e[a]>=t;if(s=s&&e[a]<=n,!s)throw new Error("Invalid split value ".concat(e[a],", must be in [").concat(t,", ").concat(n,"]"));t=e[a]}if(t!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(t))}const r=s-1,o=a.ZSL.getArrayFromDType("int32",s);if(0===n||0===s){const t=new Array(n);for(let e=0;e<=r;++e)o[e]=0;return[t,o]}o[0]=0;for(let a=1;a<=r;++a){const t=e[a]-e[a-1];let n=0;this.nGramWidths.forEach((e=>{n+=this.getNumNGrams(t,e)})),this.preserveShort&&t>0&&0===n&&(n=1),o[a]=o[a-1]+n}const i=new Array(o[r]);for(let a=0;a<r;++a){const n=e[a];let s=o[a];if(this.nGramWidths.forEach((r=>{const o=e[a+1]-e[a],c=this.getNumNGrams(o,r);this.createNGrams(t,n,i,s,c,r),s+=c})),this.preserveShort&&s===o[a]){const r=e[a+1]-e[a];if(0===r)continue;const o=r+2*this.padWidth,c=1;this.createNGrams(t,n,i,s,c,o)}}return[i,o]}}function r(t,e,n,a,r,o,i,c){return new s(n,a,r,o,i,c).compute(t,e)}},37185:(t,e,n)=>{"use strict";n.d(e,{S:()=>r});var a=n(73882);function s(t,e,n,a){if(!t.length)return;if(0===e.length){for(let e=0;e<t.length;++e)a.push(t.subarray(e,e+1));return}if(1===e.length){const s=e[0];let r=t.indexOf(s);for(;-1!==r;){const e=t.subarray(0,r);n&&0===e.length||a.push(e),r=(t=t.subarray(r+1)).indexOf(s)}return void(n&&0===t.length||a.push(t))}let s=0;for(let r=0;r<t.length+1;r++)if(r===t.length||-1!==e.indexOf(t[r])){const e=t.subarray(s,r);n&&0===e.length||a.push(e),s=r+1}}function r(t,e,n){const r=t.length,o=[];let i=0,c=0;const l=new Array(r);for(let a=0;a<r;++a){const r=o.length;s(t[a],e,n,o);const u=o.length-r;l[a]=u,i+=u,c=Math.max(c,u)}const u=a.ZSL.getArrayFromDType("int32",2*i),h=new Array(i),d=[r,c];let p=0;for(let a=0;a<r;++a)for(let t=0;t<l[a];++t)u[2*p]=a,u[2*p+1]=t,h[p]=o[p],++p;return[u,h,d]}},82536:(t,e,n)=>{"use strict";n.d(e,{f:()=>s});var a=n(73882);function s(t,e){const n=a.ZSL.getArrayFromDType("int32",t.length);for(let s=0;s<t.length;++s)n[s]=a.ZSL.fingerPrint64(t[s]).modulo(e).getLowBitsUnsigned();return n}},24413:(t,e,n)=>{"use strict";n.d(e,{Zl:()=>l,dl:()=>o,jb:()=>c});var a=n(73882),s=n(82312),r=n(85101);const o=(0,s.Z)(((t,e)=>t-e)),i=(0,r.B)(((t,e,n,a)=>({real:t-n,imag:e-a}))),c=(0,r.j)(a.PbM,o,i),l={kernelName:a.PbM,backendName:"cpu",kernelFunc:c}},18024:(t,e,n)=>{"use strict";n.d(e,{D:()=>s});var a=n(73882);function s(t,e){const n=new Array(t.rank);for(let a=0;a<n.length;a++)n[a]=t.shape[a]*e[a];const s=(0,a.ra8)(n,t.dtype);for(let a=0;a<s.values.length;++a){const e=s.indexToLoc(a),n=new Array(t.rank);for(let a=0;a<n.length;a++)n[a]=e[a]%t.shape[a];const r=t.locToIndex(n);s.values[a]=t.values[r]}return s}},78036:(t,e,n)=>{"use strict";n.d(e,{x:()=>o});var a=n(73882);const s=(t,e)=>{const n=e.value-t.value;return 0===n?t.index-e.index:n};function r(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:t.length-1;for(;o>n;){if(o-n>600){const a=o-n+1,s=e-n+1,i=Math.log(a),c=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*c*(a-c)/a)*Math.sign(s-a/2);r(t,e,Math.max(n,Math.floor(e-s*c/a+l)),Math.min(o,Math.floor(e+(a-s)*c/a+l)))}const i=t[e];let c=n,l=o;for(a.ZSL.swap(t,n,e),s(t[o],i)>0&&a.ZSL.swap(t,n,o);c<l;){for(a.ZSL.swap(t,c,l),c++,l--;s(t[c],i)<0;)c+=1;for(;s(t[l],i)>0;)l-=1}0===s(t[n],i)?a.ZSL.swap(t,n,l):(l+=1,a.ZSL.swap(t,l,o)),l<=e&&(n=l+1),e<=l&&(o=l-1)}}function o(t,e,n,o,i){const c=e[e.length-1],[l,u]=[t.length/c,c],h=a.ZSL.getTypedArrayFromDType(n,l*o),d=a.ZSL.getTypedArrayFromDType("int32",l*o);for(let a=0;a<l;a++){const e=a*u,n=t.subarray(e,e+u);let c=new Array(n.length);n.forEach(((t,e)=>c[e]={value:t,index:e})),o<c.length&&(r(c,o),c=c.slice(0,o)),i&&c.sort(s);const l=a*o,p=h.subarray(l,l+o),f=d.subarray(l,l+o);for(let t=0;t<o;t++)p[t]=c[t].value,f[t]=c[t].index}const p=e.slice();return p[p.length-1]=o,[(0,a.ra8)(p,n,h),(0,a.ra8)(p,"int32",d)]}},89868:(t,e,n)=>{"use strict";n.d(e,{W:()=>i,m:()=>o});var a=n(73882),s=n(3143),r=n(82137);function o(t){const{inputs:e,attrs:n,backend:a}=t,{x:o}=e,{perm:i}=n;(0,s.C)(o,"transpose");const c=o.shape.length,l=new Array(c);for(let s=0;s<l.length;s++)l[s]=o.shape[i[s]];const u=a.data.get(o.dataId).values,h=(0,r._)(u,o.shape,o.dtype,i,l);return{dataId:a.write(h,l,o.dtype),shape:l,dtype:o.dtype}}const i={kernelName:a.wx0,backendName:"cpu",kernelFunc:o}},82137:(t,e,n)=>{"use strict";n.d(e,{_:()=>s});var a=n(73882);function s(t,e,n,s,r){const o=e.length,i=a.ZSL.sizeFromShape(e),c=a.ZSL.computeStrides(e),l=a.ZSL.computeStrides(r),u=a.ZSL.getTypedArrayFromDType(n,a.ZSL.sizeFromShape(r));for(let h=0;h<i;++h){const e=a.ZSL.indexToLoc(h,o,c),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[s[t]];u[a.ZSL.locToIndex(n,o,l)]=t[h]}return u}},23705:(t,e,n)=>{"use strict";n.d(e,{w:()=>s});var a=n(73882);function s(t,e,n,s){const r=a.ZSL.parseAxisParam(e,n)[0],o=[1,n[0],1];for(let a=0;a<r;a++)o[0]*=n[a];o[1]=n[r];for(let a=r+1;a<n.length;a++)o[2]*=n[a];const i=new Map,c=new Int32Array(n[r]),l=new a.ylz(o,s,t),u=[],h=1===o[0]&&1===o[2];for(let a=0;a<n[r];a++){let e;if(h)e=t[a].toString();else{const t=[];for(let e=0;e<o[0];e++)for(let n=0;n<o[2];n++)t.push(l.get(e,a,n));e=t.join(",")}const n=i.get(e);if(null!=n)c[a]=n;else{const t=i.size;i.set(e,t),c[a]=t,u.push(a)}}const d=o.slice();d[1]=i.size;const p=new a.ylz(d,s);u.forEach(((t,e)=>{for(let n=0;n<o[0];n++)for(let a=0;a<o[2];a++)p.set(l.get(n,t,a),n,e,a)}));const f=n.slice();return f[r]=d[1],{outputValues:p.values,outputShape:f,indices:c}}},82312:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var a=n(73882);function s(t){return(e,n,s,r,o)=>{const i=a.C0T.assertAndGetBroadcastShape(e,n),c=i.length,l=a.ZSL.computeStrides(i),u=a.ZSL.sizeFromShape(i),h=a.ZSL.getTypedArrayFromDType(o,u),d=e.length,p=n.length,f=a.ZSL.computeStrides(e),g=a.ZSL.computeStrides(n),m=a.C0T.getBroadcastDims(e,i),b=a.C0T.getBroadcastDims(n,i);if(m.length+b.length===0)for(let a=0;a<h.length;++a)h[a]=t(s[a%s.length],r[a%r.length]);else for(let x=0;x<h.length;++x){const e=a.ZSL.indexToLoc(x,c,l),n=e.slice(-d);m.forEach((t=>n[t]=0));const o=a.ZSL.locToIndex(n,d,f),i=e.slice(-p);b.forEach((t=>i[t]=0));const u=a.ZSL.locToIndex(i,p,g);h[x]=t(s[o],r[u])}return[h,i]}}},85101:(t,e,n)=>{"use strict";n.d(e,{B:()=>c,j:()=>i});var a=n(73882),s=n(3143),r=n(668),o=n(73075);function i(t,e,n,i){return null==n?n=>{let{inputs:r,backend:o}=n;const{a:c,b:l}=r,u=o;(0,s.C)([c,l],t);const h=u.data.get(c.dataId).values,d=u.data.get(l.dataId).values,p="string"===c.dtype?a.C0T.fromUint8ToStringArray(h):h,f="string"===c.dtype?a.C0T.fromUint8ToStringArray(d):d,g=i||c.dtype,[m,b]=e(c.shape,l.shape,p,f,g);return u.makeTensorInfo(b,g,m)}:t=>{let{inputs:a,backend:s}=t;const{a:c,b:l}=a,u=s;if("complex64"===c.dtype||"complex64"===l.dtype){const t=(0,r.wg)({inputs:{x:c},backend:u,attrs:{dtype:"complex64"}}),e=u.data.get(t.dataId),a=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,i=u.data.get(a.dataId).values,h=u.data.get(s.dataId).values,d=(0,r.wg)({inputs:{x:l},backend:u,attrs:{dtype:"complex64"}}),p=u.data.get(d.dataId),f=p.complexTensorInfos.real,g=p.complexTensorInfos.imag,m=u.data.get(f.dataId).values,b=u.data.get(g.dataId).values,[x,y,v]=n(c.shape,l.shape,i,h,m,b),w=u.makeTensorInfo(v,"float32",x),k=u.makeTensorInfo(v,"float32",y),S=(0,o.f)({inputs:{real:w,imag:k},backend:u});return u.disposeIntermediateTensorInfo(t),u.disposeIntermediateTensorInfo(d),u.disposeIntermediateTensorInfo(w),u.disposeIntermediateTensorInfo(k),S}{const t=u.data.get(c.dataId).values,n=u.data.get(l.dataId).values,a=i||c.dtype,[s,r]=e(c.shape,l.shape,t,n,a);return u.makeTensorInfo(r,a,s)}}}function c(t){return(e,n,s,r,o,i)=>{const c=a.C0T.assertAndGetBroadcastShape(e,n),l=a.ZSL.sizeFromShape(c),u=c.length,h=a.ZSL.computeStrides(c),d=a.ZSL.getTypedArrayFromDType("float32",l),p=a.ZSL.getTypedArrayFromDType("float32",l),f=a.C0T.getBroadcastDims(e,c),g=a.C0T.getBroadcastDims(n,c),m=a.C0T.mergeRealAndImagArrays(s,r),b=a.C0T.mergeRealAndImagArrays(o,i),x=e.length,y=a.ZSL.computeStrides(e),v=n.length,w=a.ZSL.computeStrides(n);if(f.length+g.length===0)for(let a=0;a<d.length;a++){const e=a%m.length,n=a%b.length,s=t(m[2*e],m[2*e+1],b[2*n],b[2*n+1]);d[a]=s.real,p[a]=s.imag}else for(let k=0;k<d.length;k++){const e=a.ZSL.indexToLoc(k,u,h),n=e.slice(-x);f.forEach((t=>n[t]=0));const s=a.ZSL.locToIndex(n,x,y),r=e.slice(-v);g.forEach((t=>r[t]=0));const o=a.ZSL.locToIndex(r,v,w),i=t(m[2*s],m[2*s+1],b[2*o],b[2*o+1]);d[k]=i.real,p[k]=i.imag}return[d,p,c]}}},74084:(t,e,n)=>{"use strict";n.d(e,{o:()=>s});var a=n(73882);function s(t){return(e,n,s)=>{const r=a.ZSL.getArrayFromDType(n,e.length);for(let a=0;a<e.length;++a)r[a]=t(e[a],s);return r}}},34729:(t,e,n)=>{"use strict";n.d(e,{F:()=>i,v:()=>o});var a=n(73882),s=n(3143),r=n(74084);function o(t,e,n){return i(t,(0,r.o)(e),n)}function i(t,e,n){return r=>{let{inputs:o,attrs:i,backend:c}=r;const{x:l}=o;(0,s.C)(l,t);const u=c,h=u.data.get(l.dataId).values;let d;if("string"===l.dtype){if(!Array.isArray(h))throw new Error("String tensor's value was not an instance of Array");d=a.C0T.fromUint8ToStringArray(h)}else d=h;const p=n||l.dtype,f=e(d,p,i);return u.makeTensorInfo(l.shape,p,f)}}},51908:(t,e,n)=>{"use strict";n.d(e,{U:()=>r});var a=n(73882),s=n(73075);function r(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){const n=r(t,e,"float32"),a=r(t,e,"float32");return(0,s.f)({inputs:{real:n,imag:a},backend:t})}const o=a.ZSL.makeZerosTypedArray(a.ZSL.sizeFromShape(e),n);return t.makeTensorInfo(e,n,o)}},59788:(t,e,n)=>{"use strict";n.d(e,{$p:()=>Bn});var a={};n.r(a),n.d(a,{mx:()=>Rt.mx,XI:()=>Ft.X,Nk:()=>Ft.N,f6:()=>Dt.f6,ct:()=>_t.ct,YG:()=>Lt.YG,hH:()=>Ot.h,z3:()=>Mt.z3,sG:()=>zt.sG,uM:()=>Pt.uM,vS:()=>Bt.vS,qB:()=>Wt.q,GG:()=>Ut.G,lg:()=>Gt.lg,rq:()=>Vt.rq,cu:()=>Kt.cu,WR:()=>Zt.WR,GE:()=>Ht.G,px:()=>jt.px,jC:()=>qt.j,He:()=>Yt.He,hE:()=>Qt.hE,BF:()=>Xt.BF,Dk:()=>Jt.Dk,cl:()=>$t.cl,_B:()=>te._B,ub:()=>ee.u,_f:()=>ne._,Ku:()=>ae.K,qy:()=>se.q,Zy:()=>re.Zy,bu:()=>oe.b,zv:()=>ie.zv,dH:()=>Et.dH,HS:()=>ce.HS,yH:()=>le.y,l3:()=>ue.l,z9:()=>he.z,x6:()=>de.x6,_m:()=>pe._,eW:()=>fe.e,GK:()=>ge.G,SP:()=>me.S,yr:()=>be.f,dl:()=>xe.dl,Dw:()=>ye.D,xT:()=>ve.x,_X:()=>we._,wz:()=>ke.w});var s=n(73882);const r={},o={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function i(t,e){if(!(t in r)||null!=e){const n=function(t,e){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==e?function(t){if((0,s._K2)().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==t){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(t):e;n.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete r[t]}),!1),(0,s._K2)().getBool("SOFTWARE_WEBGL_ENABLED")&&(o.failIfMajorPerformanceCaveat=!1);if(1===t)return n.getContext("webgl",o)||n.getContext("experimental-webgl",o);return n.getContext("webgl2",o)}(t,e);if(null===n)return console.log("Could not get context for WebGL version",t),null;r[t]=n}const n=r[t];return null==n||n.isContextLost()?(delete r[t],i(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),r[t])}var c,l,u;function h(t,e){return[e,t]}function d(t){const e=s.ZSL.sizeFromShape(t),n=Math.ceil(e/4);return s.ZSL.sizeToSquarishShape(n)}function p(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function f(t,e){const n=t;let a,r,o,i,c,l,u,h,d,p;return 2===(0,s._K2)().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,o=n.RGBA16F,i=n.RGBA32F,c=n.RED,u=4,h=1,d=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(a=t.RGBA,r=t.RGBA,o=t.RGBA,i=n.RGBA,c=t.RGBA,u=4,h=4,d=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT,l=t.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:c,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:p}}function g(t,e){const n=e();return(0,s._K2)().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(e)}}(t,e))}(t),n}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(c||(c={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(l||(l={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(u||(u={}));function m(t){return!!((0,s._K2)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function b(t,e){return C(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}const x=/ERROR: [0-9]+:([0-9]+):/g;function y(t,e){const n=x.exec(e);if(null==n)return console.log("Couldn't parse line number in error: ".concat(e)),void console.log(t);const a=+n[1],r=t.split("\n"),o=r.length.toString().length+2,i=r.map(((t,e)=>s.ZSL.rightPad((e+1).toString(),o)+t));let c=0;for(let s=0;s<i.length;s++)c=Math.max(i[s].length,c);const l=i.slice(0,a-1),u=i.slice(a-1,a),h=i.slice(a);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log("%c ".concat(s.ZSL.rightPad(u[0],c)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}function v(t,e){if(g(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function w(t,e,n,a,s,r,o){const i=t.getAttribLocation(e,n);return-1!==i&&(g(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,a))),g(t,(()=>t.vertexAttribPointer(i,s,t.FLOAT,!1,r,o))),g(t,(()=>t.enableVertexAttribArray(i))),!0)}function k(t,e,n,a){g(t,(()=>function(t,e,n){N(t,n),g(t,(()=>t.activeTexture(t.TEXTURE0+n))),g(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,a))),g(t,(()=>t.uniform1i(n,a)))}function S(t,e,n){g(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),g(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function T(t,e){g(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),g(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function I(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(e)}}(t,e))}function C(t,e,n){const a=g(t,(()=>e()));if(null==a)throw new Error(n);return a}function N(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=e+t.TEXTURE0;if(a<t.TEXTURE0||a>n){const t="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(t,"."))}}function A(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return s.ZSL.sizeFromShape(t.slice(0,t.length-e))}function E(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function R(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[A(t),...E(t)]),e}function F(t){return t%2===0}function D(t,e){if(t=t.slice(-2),e=e.slice(-2),s.ZSL.arraysEqual(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t[t.length-1],a=e[e.length-1];if(n===a)return!0;if(F(n)&&F(a)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&F(t[0])&&F(e[0])}let _,L;function O(t,e){return null!=t.getExtension(e)}function M(t){try{if(null!=i(t))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function z(t){if(0===t)return!1;const e=i(t);if(1!==t){if(O(e,"EXT_color_buffer_float"))return P(e);const t="EXT_color_buffer_half_float";if(O(e,t)){const n=e.getExtension(t);return function(t,e){const n=f(t,e),a=t.createTexture();t.bindTexture(t.TEXTURE_2D,a);const s=1,r=1;t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,s,r,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,o),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,a,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(a),t.deleteFramebuffer(o),i}(e,n)}return!1}if(!O(e,"OES_texture_float"))return!1;if(!O(e,"WEBGL_color_buffer_float"))return!1;return P(e)}function P(t){const e=f(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(a),s}function B(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&s.ZSL.assert("complex64"!==t.dtype,(()=>"".concat(e," does not support complex64 tensors ")+"in the WebGL backend."))}))}const W=(0,s._K2)();function U(){let t,e,n,a,r,o,i,c,l,u;return 2===(0,s._K2)().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",a="in",r="texture",o="outputColor",i="out vec4 outputColor;",c=(0,s._K2)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",a="varying",r="texture2D",o="gl_FragColor",i="",c="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:a,texture2D:r,output:o,defineOutput:i,defineSpecialNaN:c,defineSpecialInf:l,defineRound:u}}function V(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=s.ZSL.computeStrides(e);return a.map(((e,s)=>{const r="int ".concat(t[s]," = ").concat(n," / ").concat(e),o=s===a.length-1?"int ".concat(t[s+1]," = ").concat(n," - ").concat(t[s]," * ").concat(e):"index -= ".concat(t[s]," * ").concat(e);return"".concat(r,"; ").concat(o,";")})).join("")}function G(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=s.ZSL.computeStrides(e);return a.map(((e,s)=>{const r="int ".concat(t[s]," = ").concat(n," / outShapeStrides[").concat(s,"]"),o=s===a.length-1?"int ".concat(t[s+1]," = ").concat(n," - ").concat(t[s]," * outShapeStrides[").concat(s,"]"):"index -= ".concat(t[s]," * outShapeStrides[").concat(s,"]");return"".concat(r,"; ").concat(o,";")})).join("")}function Z(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=function(t,e){const n=t.length,a=t.map((t=>"".concat(e,"[").concat(t,"]"))),s=new Array(n-1);s[n-2]=a[n-1];for(let r=n-3;r>=0;--r)s[r]="(".concat(s[r+1]," * ").concat(a[r+1],")");return s}(t.map(((t,e)=>e)),e);return a.map(((e,s)=>{const r="int ".concat(t[s]," = ").concat(n," / ").concat(a[s]),o=s===a.length-1?"int ".concat(t[s+1]," = ").concat(n," - ").concat(t[s]," * ").concat(a[s]):"index -= ".concat(t[s]," * ").concat(a[s]);return"".concat(r,"; ").concat(o,";")})).join("")}function K(t){const e=s.ZSL.computeStrides(t).map((t=>t.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(e[0]," + coords.y * ").concat(e[1]," + coords.z;\n  }\n")}W.registerFlag("HAS_WEBGL",(()=>W.getNumber("WEBGL_VERSION")>0)),W.registerFlag("WEBGL_VERSION",(()=>M(2)?2:M(1)?1:0)),W.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),W.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===W.get("WEBGL_VERSION"))),W.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),W.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),W.registerFlag("WEBGL_PACK",(()=>W.getBool("HAS_WEBGL"))),W.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>W.getBool("WEBGL_PACK"))),W.registerFlag("WEBGL_PACK_CLIP",(()=>W.getBool("WEBGL_PACK"))),W.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>W.getBool("WEBGL_PACK"))),W.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>W.getBool("WEBGL_PACK"))),W.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>W.getBool("WEBGL_PACK"))),W.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>W.getBool("WEBGL_PACK"))),W.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>W.getBool("WEBGL_PACK"))),W.registerFlag("WEBGL_PACK_REDUCE",(()=>W.getBool("WEBGL_PACK"))),W.registerFlag("WEBGL_LAZILY_UNPACK",(()=>W.getBool("WEBGL_PACK"))),W.registerFlag("WEBGL_CONV_IM2COL",(()=>W.getBool("WEBGL_PACK"))),W.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>W.getBool("WEBGL_PACK"))),W.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==_){const e=i(t);_=e.getParameter(e.MAX_TEXTURE_SIZE)}return _}(W.getNumber("WEBGL_VERSION")))),W.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==L){const e=i(t);L=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,L)}(W.getNumber("WEBGL_VERSION")))),W.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=W.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=i(t);return e=O(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:O(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),W.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>W.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!s.eMq.isMobile())),W.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=i(t);if(1===t){if(!O(e,"OES_texture_float"))return!1}else if(!O(e,"EXT_color_buffer_float"))return!1;return P(e)}(W.getNumber("WEBGL_VERSION")))),W.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!W.getBool("WEBGL_FORCE_F16_TEXTURES")&&W.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),W.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>z(W.getNumber("WEBGL_VERSION")))),W.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=W.getNumber("WEBGL_VERSION"))&&null!=i(t).fenceSync;var t})),W.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>W.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),W.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if("number"!==typeof t)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(t,"."));if(t<0&&-1!==t)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(t,"."))})),W.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>s.eMq.isMobile()?1:-1),(t=>{if("number"!==typeof t)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(t,"."));if(t<0&&-1!==t)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(t,"."))})),W.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),W.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),W.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),W.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),W.registerFlag("WEBGL_EXP_CONV",(()=>!1)),W.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>W.getBool("IS_TEST"))),W.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),W.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),W.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),W.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const H="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:j}=s.C0T;function q(t,e,n){const a=[];if(t.forEach((t=>{const e=s.ZSL.sizeFromShape(t.shapeInfo.logicalShape);if(t.shapeInfo.isUniform?a.push("uniform float ".concat(t.name).concat(e>1?"[".concat(e,"]"):"",";")):(a.push("uniform sampler2D ".concat(t.name,";")),a.push("uniform int offset".concat(t.name,";"))),n.enableShapeUniforms){const{uniformShape:e}=st(n.packedInputs,t.shapeInfo.logicalShape,t.shapeInfo.texShape);switch(e.length){case 1:a.push("uniform int ".concat(t.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(t.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(t.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(t.name,"Shape;"))}a.push("uniform ivec2 ".concat(t.name,"TexShape;"))}})),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((t=>{a.push("uniform ".concat(t.type," ").concat(t.name).concat(t.arrayIndex?"[".concat(t.arrayIndex,"]"):"",";"))}));const r=a.join("\n"),o=t.map((t=>function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?Q(t,a):Y(t,a);const o=t.shapeInfo.logicalShape,i=e.logicalShape;o.length<=i.length&&(r+=n?function(t,e){const n=t.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",o=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,c=j(t.shapeInfo.logicalShape,e.logicalShape),l=at(i),u=i-o;let h;const d=["x","y","z","w","u","v"];h=0===o?"":i<2&&c.length>=1?"coords = 0;":c.map((t=>"coords.".concat(d[t+u]," = 0;"))).join("\n");let p="";p=i<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>"coords.".concat(d[e+u]))).join(", ");let f="return outputValue;";const g=1===s.ZSL.sizeFromShape(t.shapeInfo.logicalShape),m=s.ZSL.sizeFromShape(e.logicalShape),b=1===m;if(1!==o||g||b){if(g&&!b)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(c.length){const t=o-2,e=o-1;c.indexOf(t)>-1&&c.indexOf(e)>-1?f="return vec4(outputValue.x);":c.indexOf(t)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(e)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(r,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(h,"\n      vec4 outputValue = get").concat(a,"(").concat(p,");\n      ").concat(f,"\n    }\n  ")}(t,e):function(t,e){const n=t.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",o=e.texShape,i=t.shapeInfo.texShape,c=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&c===l&&null==t.shapeInfo.flatOffset&&s.ZSL.arraysEqual(i,o))return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const u=at(l),h=j(t.shapeInfo.logicalShape,e.logicalShape),d=l-c;let p;const f=["x","y","z","w","u","v"];p=0===c?"":l<2&&h.length>=1?"coords = 0;":h.map((t=>"coords.".concat(f[t+d]," = 0;"))).join("\n");let g="";g=l<2&&c>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>"coords.".concat(f[e+d]))).join(", ");return"\n    float ".concat(r,"() {\n      ").concat(u," coords = getOutputCoords();\n      ").concat(p,"\n      return get").concat(a,"(").concat(g,");\n    }\n  ")}(t,e));return r}(t,e,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=e.texShape,c=U(),l=function(t){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(t.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(c);let u,h,d=function(t){const e="".concat(t.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(t.varyingFs," vec2 resultUV;\n    ").concat(t.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(t.defineSpecialNaN,"\n    ").concat(t.defineSpecialInf,"\n    ").concat(t.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(X,"\n    ").concat(J,"\n    ").concat($,"\n  ");return e}(c);e.isPacked?(u=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){const a=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,e,n);case 2:return function(t,e,n){const a=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(s.ZSL.arraysEqual(t,e))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const r=Math.ceil(t[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(t,e,n);case 3:return function(t,e,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),r=s*Math.ceil(t[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(r,";\n      index -= b * ").concat(r,";\n\n      int r = 2 * (index / ").concat(s,");\n      int c = imod(index, ").concat(s,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(t,e,n);default:return function(t,e,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),r=s*Math.ceil(t[t.length-2]/2);let o=r,i="",c="b, r, c";for(let l=2;l<t.length-1;l++)o*=t[t.length-l-1],i="\n      int b".concat(l," = index / ").concat(o,";\n      index -= b").concat(l," * ").concat(o,";\n    ")+i,c="b".concat(l,", ")+c;return"\n    ivec".concat(t.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(r,";\n      index -= b * ").concat(r,";\n\n      int r = 2 * (index / ").concat(s,");\n      int c = imod(index, ").concat(s,") * 2;\n\n      return ivec").concat(t.length,"(").concat(c,");\n    }\n  ")}(t,e,n)}}(e.logicalShape,i,n.enableShapeUniforms),h=function(t){return"\n    void setOutput(vec4 val) {\n      ".concat(t.output," = val;\n    }\n  ")}(c)):(u=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){if(1===e[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(e[1],".0);\n      }\n    ");if(1===e[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(e[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      return resTexRC.x * ").concat(e[1]," + resTexRC.y;\n    }\n  ")}(0,e,n);case 2:return function(t,e,n){if(s.ZSL.arraysEqual(t,e))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(e[0],", ").concat(e[1],"));\n      }\n    ");if(1===t[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===t[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      int r = index / ").concat(t[1],";\n      int c = index - r * ").concat(t[1],";\n      return ivec2(r, c);\n    }\n  ")}(t,e,n);case 3:return function(t,e,n){if(n){const e=G(["r","c","d"],t);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(e,"\n    return ivec3(r, c, d);\n  }\n")}const a=V(["r","c","d"],t);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,e,n);case 4:return function(t,e,n){if(n){const e=G(["r","c","d","d2"],t);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(e,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=V(["r","c","d","d2"],t);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(t,e,n);case 5:return function(t,e){const n=V(["r","c","d","d2","d3"],t);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(e[0],",\n                             ").concat(e[1],"));\n\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(t,e);case 6:return function(t,e){const n=V(["r","c","d","d2","d3","d4"],t);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(t,e);default:throw new Error("".concat(t.length,"-D output sampling is not yet supported"))}}(e.logicalShape,i,n.enableShapeUniforms),h=function(t){return"\n    void setOutput(float val) {\n      ".concat(t.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(c)),n.packedInputs&&(d+=tt);return[d,l,h,r,u,o,n.userCode].join("\n")}function Y(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return function(t,e){const n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[s,r]=t.shapeInfo.texShape;if(1===s&&1===r)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const o=et(n);if(e)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=t.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t,e);case 1:return function(t,e){const n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(nt(t),"\n      }\n    ");const s=t.shapeInfo.texShape,r=s[0],o=s[1];if(1===o&&1===r)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=et(n);if(1===o)return e?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(r,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===r)return e?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(e)return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(r,", ").concat(o,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=t.shapeInfo.texShape;if(null!=o&&s.ZSL.arraysEqual(n,o)){if(e)return"\n      float ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const t=o[0],n=o[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(t,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:i,keptDims:c}=s.ZSL.squeezeShape(n),l=i;if(l.length<n.length){const n=rt(t,l),a=["row","col"];return"\n      ".concat(Y(n,e),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(ot(a,c),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(nt(t),"\n      }\n    ");const u=o[0],h=o[1],d=et(a);if(1===h)return e?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(u,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(1===u)return e?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(h,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(e)return"\n      float ".concat(r,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(d,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");return"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(d,";\n    vec2 uv = uvFromFlat(").concat(u,", ").concat(h,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=n[1]*n[2],i=n[2],{newShape:c,keptDims:l}=s.ZSL.squeezeShape(n),u=c;if(u.length<n.length){const n=rt(t,u),a=["row","col","depth"];return"\n        ".concat(Y(n,e),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(ot(a,l),");\n        }\n      ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(o,", ").concat(i,", 1)));\n        ").concat(nt(t),"\n      }\n    ");const h=t.shapeInfo.texShape,d=h[0],p=h[1],f=t.shapeInfo.flatOffset;if(p===o&&null==f)return e?"\n      float ".concat(r,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(i,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(p,".0, ").concat(d,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(p===i&&null==f)return e?"\n      float ".concat(r,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(p,".0, ").concat(d,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const g=et(a);if(e)return"\n    float ".concat(r,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(g,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    ");return"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(o," + col * ").concat(i," + depth + ").concat(g,";\n        vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}(t,e);case 4:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=n[3],i=n[2]*o,c=n[1]*i,{newShape:l,keptDims:u}=s.ZSL.squeezeShape(n);if(l.length<n.length){const n=rt(t,l),a=["row","col","depth","depth2"];return"\n      ".concat(Y(n,e),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(ot(a,u),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(c,", ").concat(i,", ").concat(o,", 1)));\n        ").concat(nt(t),"\n      }\n    ");const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1],g="int stride2 = ".concat(a,"Shape[3];"),m="int stride1 = ".concat(a,"Shape[2] * stride2;"),b="int stride0 = ".concat(a,"Shape[1] * stride1;");if(f===c&&null==h)return e?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        ").concat(g,"\n        ").concat(m,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(i,", ").concat(o,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(f===o&&null==h)return e?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const x=et(a);if(e)return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(g,"\n      ").concat(m,"\n      ").concat(b,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(x,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(i," +\n          depth * ").concat(o," + depth2;\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index + ").concat(x,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}(t,e);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[4],o=e[3]*r,i=e[2]*o,c=e[1]*i,{newShape:l,keptDims:u}=s.ZSL.squeezeShape(e);if(l.length<e.length){const e=rt(t,l),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(Y(e),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(ot(n,u),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(c,", ").concat(i,", ").concat(o,", ").concat(r,")) +\n          depth3;\n        ").concat(nt(t),"\n      }\n    ");const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(i,", ").concat(o,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===r&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3],",\n               ").concat(e[2]*e[3],", ").concat(e[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const g=et(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(i," + depth * ").concat(o," +\n          depth2 * ").concat(r," + depth3 + ").concat(g,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:o}=s.ZSL.squeezeShape(e);if(r.length<e.length){const e=rt(t,r),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(Y(e),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(ot(n,o),");\n      }\n    ")}const i=e[5],c=e[4]*i,l=e[3]*c,u=e[2]*l,h=e[1]*u;if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(h,", ").concat(u,", ").concat(l,", ").concat(c,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(i,", 1)));\n        ").concat(nt(t),"\n      }\n    ");const d=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,f=p[0],g=p[1];if(g===h&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(u,", ").concat(l,", ").concat(c,", ").concat(i,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(g,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(g===i&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3]*e[4],",\n               ").concat(e[2]*e[3]*e[4],",\n               ").concat(e[3]*e[4],",\n               ").concat(e[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(g,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=et(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(h," + col * ").concat(u," + depth * ").concat(l," +\n          depth2 * ").concat(c," + depth3 * ").concat(i," + depth4 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(f,", ").concat(g,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function Q(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),a=U();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(e,", halfCR);\n    }\n  ")}(t);case 1:return function(t,e){const n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,r=U();if(e)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(o[0],", ").concat(o[1],", index);\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=t.shapeInfo.texShape,i=o[0],c=o[1],l=U();if(null!=o&&s.ZSL.arraysEqual(n,o))return e?"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(l.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(c,".0, ").concat(i,".0);\n\n        return ").concat(l.texture2D,"(").concat(a,", uv);\n      }\n    ");if(e)return"\n    vec4 ".concat(r,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(l.texture2D,"(").concat(a,", uv);\n    }\n  ");const u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],h=Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(h,", ").concat(u[0],", ").concat(u[1],", row, col);\n      return ").concat(l.texture2D,"(").concat(a,", uv);\n    }\n  ")}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),r=t.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===n[0]){const a=[1,2],r=rt(t,n.slice(1)),o=["b","row","col"];return"\n        ".concat(Q(r,e),"\n        vec4 ").concat(s,"(int b, int row, int col) {\n          return ").concat(s,"(").concat(ot(o,a),");\n        }\n      ")}const i=U();if(e)return"\n    vec4 ".concat(s,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=o[0],l=o[1],u=Math.ceil(n[2]/2),h=u*Math.ceil(n[1]/2);return"\n    vec4 ".concat(s,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(l,", ").concat(h,", ").concat(u,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(t,e);default:return function(t,e){const n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=U();if(e)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ");const r=t.shapeInfo.logicalShape,o=r.length,i=t.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],h=Math.ceil(r[o-1]/2);let d=h*Math.ceil(r[o-2]/2),p="int b, int row, int col",f="b * ".concat(d," + (row / 2) * ").concat(h," + (col / 2)");for(let g=2;g<o-1;g++)p="int b".concat(g,", ")+p,d*=r[o-g-1],f="b".concat(g," * ").concat(d," + ")+f;return"\n    vec4 ".concat(a,"(").concat(p,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(u,";\n      int texC = index - texR * ").concat(u,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(u,", ").concat(l,");\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ")}(t,e)}}const X="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",J="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",$="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",tt="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function et(t){return"offset".concat(t)}function nt(t){const e=t.name,n=s.ZSL.sizeFromShape(t.shapeInfo.logicalShape);return n<2?"return ".concat(e,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(e,"[i];\n      }\n    }\n  ")}function at(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error("GPU for rank ".concat(t," is not yet supported"))}function st(t,e,n){const{newShape:a,keptDims:r}=s.ZSL.squeezeShape(e),o=e.length,i=t&&3===o&&1===e[0],c=i?e.slice(1):a,l=!t&&o>1&&!s.ZSL.arraysEqual(e,n)&&a.length<o||i;return{useSqueezeShape:l,uniformShape:l?c:e,keptDims:r}}function rt(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function ot(t,e){return e.map((e=>t[e])).join(", ")}function it(t,e,n,a){const r=n.map(((t,n)=>{const a={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(a.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:a}})),o=r.map((t=>t.shapeInfo)),i={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},c=q(r,i,e),l=function(t,e){const n=C(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(g(t,(()=>t.shaderSource(n,e))),g(t,(()=>t.compileShader(n))),(0,s._K2)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw y(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t.gl,c),u=t.createProgram(l);return(0,s._K2)().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:c,webGLProgram:u,inShapeInfos:o,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(t.buildVao(u),Object.assign({program:e,fragmentShader:l,source:c,webGLProgram:u,inShapeInfos:o,outShapeInfo:i},ct(t,e,u)))}function ct(t,e,n){const a=[],r=[];let o,i,c,l=null,u=null;u=t.getUniformLocation(n,"NAN",!1),1===(0,s._K2)().getNumber("WEBGL_VERSION")&&(l=t.getUniformLocation(n,"INFINITY",!1));const h=!1;for(const s of e.variableNames){const r={name:s,uniform:t.getUniformLocation(n,s,h),offset:t.getUniformLocation(n,"offset".concat(s),h)};e.enableShapeUniforms&&(r.shape=t.getUniformLocation(n,"".concat(s,"Shape"),h),r.texShape=t.getUniformLocation(n,"".concat(s,"TexShape"),h)),a.push(r)}if(e.enableShapeUniforms&&(o=t.getUniformLocation(n,"outShape",h),c=t.getUniformLocation(n,"outShapeStrides",h),i=t.getUniformLocation(n,"outTexShape",h)),e.customUniforms)for(const s of e.customUniforms)r.push(t.getUniformLocation(n,s.name,h));return{variablesLocations:a,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:o,outShapeStridesLocation:c,outTexShapeLocation:i}}function lt(t,e){if(t.length!==e.length)throw Error("Binary was compiled with ".concat(t.length," inputs, but ")+"was executed with ".concat(e.length," inputs"));t.forEach(((t,n)=>{const a=t.logicalShape,r=e[n],o=r.shape;if(!s.ZSL.arraysEqual(a,o))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(o," must match"));if(t.isUniform&&r.isUniform)return;const i=t.texShape,c=r.isUniform?null:r.texData.texShape;if(!s.ZSL.arraysEqual(i,c))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(i," and ").concat(c," must match"))}))}function ut(t){return(0,s._K2)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}class ht{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=c.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=U();this.outputShape=t,this.enableShapeUniforms=ut(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?G(["r","c","d"],t):V(["r","c","d"],t),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(e.output," = result;\n      }\n    ")}}class dt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=c.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=U();this.outputShape=t,this.enableShapeUniforms=ut(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?G(["r","c","d"],t):V(["r","c","d"],t),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(e.output," = result;\n      }\n    ")}}class pt{constructor(t){this.variableNames=["A"],this.outTexUsage=l.DOWNLOAD;const e=U();this.outputShape=t,this.userCode="\n      ".concat(H,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(e.output," = encode_float(x);\n      }\n    ")}}class ft{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=l.DOWNLOAD;const e=U();this.outputShape=t,this.userCode="\n      ".concat(H,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(e.output," = encode_float(x);\n      }\n    ")}}const gt={R:0,G:1,B:2,A:3};class mt{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=U();this.outputShape=t,this.enableShapeUniforms=ut(this.outputShape.length);let s="result";e&&(s="floor(result * 255. + 0.5)");let r="";for(let o=0;o<n.length;o++){const t=n[o];r+="\n          if(offset == ".concat(o,") {\n            result = values[").concat(gt[t],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":K(t),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(r,"\n        }\n        ").concat(a.output," = vec4(").concat(s,", 0., 0., 0.);\n      }\n    ")}}class bt{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=U();this.outputShape=t,this.enableShapeUniforms=ut(this.outputShape.length);let a="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let r=0;r<=1;r++)for(let e=0;e<=1;e++){const s=2*r+e;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(e," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(t[2]),") {\n          localCoords[2] += ").concat(e,";\n          if (localCoords[1] + ").concat(r," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(t[1]),") {\n            localCoords[1] += ").concat(r,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(s,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(s,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(s,"] = values[2];\n            } else {\n              result[").concat(s,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":K(t),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(s,";\n        }\n    ")}}function xt(t){const e=U();return function(t,e){const n=C(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(g(t,(()=>t.shaderSource(n,e))),g(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,"".concat(e.version,"\n    precision highp float;\n    ").concat(e.attribute," vec3 clipSpacePos;\n    ").concat(e.attribute," vec2 uv;\n    ").concat(e.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function yt(t){return function(t,e){const n=C(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return g(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),g(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function vt(t){return function(t,e){const n=C(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return g(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),g(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}function wt(t,e,n,a,r,o){!function(t,e){const n=(0,s._K2)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const n="[".concat(t,"x").concat(e,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(t>n||e>n){const a="[".concat(t,"x").concat(e,"]"),s="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+s+".")}}(e,n);const i=function(t){return C(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),c=t.TEXTURE_2D;return g(t,(()=>t.bindTexture(c,i))),g(t,(()=>t.texParameteri(c,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),g(t,(()=>t.texParameteri(c,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),g(t,(()=>t.texParameteri(c,t.TEXTURE_MIN_FILTER,t.NEAREST))),g(t,(()=>t.texParameteri(c,t.TEXTURE_MAG_FILTER,t.NEAREST))),1===(0,s._K2)().getNumber("WEBGL_VERSION")?g(t,(()=>t.texImage2D(c,0,a,e,n,0,r,o,null))):g(t,(()=>t.texStorage2D(c,1,a,e,n))),g(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),{texture:i,texShape:[n,e]}}function kt(t){return t.internalFormatFloat}function St(t){return t.internalFormatHalfFloat}function Tt(t){return t.downloadTextureFormat}function It(t){return t.internalFormatPackedFloat}function Ct(t){return t.internalFormatPackedHalfFloat}function Nt(t,e,n,a,s,r,o,i){const c=t,l=new Float32Array(function(t,e){const[n,a]=p(t,e);return n*a*4}(r,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,e),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}class At{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=(0,s._K2)().getNumber("WEBGL_VERSION");if(null!=t?(this.gl=t,function(t,e){r[t]=e}(e,t)):this.gl=i(e),t=this.gl,2===(0,s._K2)().getNumber("WEBGL_VERSION")){const e=t;this.createVertexArray=()=>g(e,(()=>e.createVertexArray())),this.bindVertexArray=t=>g(e,(()=>e.bindVertexArray(t))),this.deleteVertexArray=t=>g(e,(()=>e.deleteVertexArray(t))),this.getVertexArray=()=>g(e,(()=>e.getParameter(e.VERTEX_ARRAY_BINDING)))}else if(null!=t){const e=t.getExtension("OES_vertex_array_object");if(null==e)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>g(t,(()=>e.createVertexArrayOES())),this.bindVertexArray=n=>g(t,(()=>e.bindVertexArrayOES(n))),this.deleteVertexArray=n=>g(t,(()=>e.deleteVertexArrayOES(n))),this.getVertexArray=()=>g(t,(()=>t.getParameter(e.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,s._K2)().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=b(this.gl,t),O(this.gl,e))this.textureHalfFloatExtension=b(this.gl,e);else if((0,s._K2)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),O(this.gl,a))this.colorBufferHalfFloatExtension=b(this.gl,a);else if((0,s._K2)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",O(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!O(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=yt(this.gl),this.indexBuffer=vt(this.gl),this.framebuffer=function(t){return C(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=f(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,s._K2)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;g(t,(()=>t.finish())),g(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),g(t,(()=>t.deleteFramebuffer(this.framebuffer))),g(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),g(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),g(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[s,r]=h(e,n);return wt(t,s,r,kt(a),a.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[s,r]=h(e,n);return wt(t,s,r,St(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[s,r]=h(e,n);return wt(t,s,r,Tt(a),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){g(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?2===(0,s._K2)().getNumber("WEBGL_VERSION")?g(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data))):g(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):2===(0,s._K2)().getNumber("WEBGL_VERSION")?g(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n))):g(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),g(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,a){this.throwIfDisposed(),function(t,e,n,a,r,o){let i,c,l;g(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),r instanceof Uint8Array?(i=new Uint8Array(n*a*4),c=t.UNSIGNED_BYTE,l=t.RGBA):(i=new Float32Array(n*a*4),c=t.FLOAT,l=o.internalFormatPackedFloat),i.set(r),2===(0,s._K2)().getNumber("WEBGL_VERSION")?g(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,a,t.RGBA,c,i))):g(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,a,0,t.RGBA,c,i))),g(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[s,r]=p(e,n);return wt(t,s,r,Ct(a),t.RGBA,a.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[s,r]=p(e,n);return wt(t,s,r,It(a),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(T(this.gl,this.framebuffer),this.outputTexture=null),g(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,a){const[s,r]=h(e,n),o=new Uint8Array(e*n*4);return g(t,(()=>t.readPixels(0,0,s,r,a.downloadTextureFormat,t.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,a,s,r){return Nt(this.gl,t,0,0,0,s,r,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const a=t,s=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,e),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,s),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const a=function(t,e,n){const a=t.createBuffer();g(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,a)));const s=16*e*n;return g(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,s,t.STREAM_READ))),g(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),g(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),a}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if((0,s._K2)().getBool("WEBGL_FENCE_API_ENABLED")){const a=t,s=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=a.clientWaitSync(s,0,0);return t===a.ALREADY_SIGNALED||t===a.CONDITION_SATISFIED},e=s}else(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const a=new Float32Array(e*n*4);return g(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,a))),a}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=xt(e));const n=function(t){return C(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);g(e,(()=>e.attachShader(n,this.vertexShader))),g(e,(()=>e.attachShader(n,t))),function(t,e){if(g(t,(()=>t.linkProgram(e))),!(0,s._K2)().get("ENGINE_COMPILE_ONLY")&&!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&v(e,a),a}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);const e=this.gl;g(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(t,e,n){g(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),w(t,e,"clipSpacePos",n,3,20,0)&&w(t,e,"uv",n,2,20,12)}(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&(g(this.gl,(()=>this.gl.deleteProgram(t))),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&v(this.gl,this.program),g(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(t,e,n){return C(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),g(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),k(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[a,s]=p(e,n);this.setOutputMatrixTextureDriver(t,a,s)}setOutputMatrixWriteRegion(t,e,n,a){this.setOutputMatrixWriteRegionDriver(n,t,a,e)}setOutputPackedMatrixWriteRegion(t,e,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&v(this.gl,this.program),I(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}g(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),g(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=b(this.gl,2===(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await s.ZSL.repeatedTry((()=>this.disposed||this.isQueryAvailable(t,(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,s._K2)().platform&&(n=(0,s._K2)().platform.setTimeoutCustom.bind((0,s._K2)().platform)),s.ZSL.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),S(this.gl,t,this.framebuffer),this.debug&&I(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(S(this.gl,this.outputTexture,this.framebuffer),this.debug&&I(this.gl)):T(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const a=this.gl;S(a,t,this.framebuffer),this.debug&&I(a),this.outputTexture=t,g(a,(()=>a.viewport(0,0,e,n))),g(a,(()=>a.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,a){this.throwIfDisposed(),g(this.gl,(()=>this.gl.scissor(t,e,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}var Et=n(85903),Rt=n(49864),Ft=n(92412),Dt=n(89475),_t=n(668),Lt=n(74034),Ot=n(9044),Mt=n(3439),zt=n(84308),Pt=n(17046),Bt=n(7742),Wt=n(15003),Ut=n(92525),Vt=n(11217),Gt=n(98829),Zt=n(47242),Kt=n(32784),Ht=n(23633),jt=n(70477),qt=n(56238),Yt=n(58617),Qt=n(2491),Xt=n(50063),Jt=n(20321),$t=n(38440),te=n(51206),ee=n(45335),ne=n(14417),ae=n(78545),se=n(56635),re=n(3555),oe=n(526),ie=n(42511),ce=n(34357),le=n(22785),ue=n(50706),he=n(53326),de=n(98041),pe=n(67844),fe=n(3445),ge=n(58793),me=n(37185),be=n(82536),xe=n(24413),ye=n(18024),ve=n(78036),we=n(82137),ke=n(23705);const{mx:Se,XI:Te,Nk:Ie,f6:Ce,ct:Ne,YG:Ae,hH:Ee,z3:Re,sG:Fe,uM:De,vS:_e,qB:Le,GG:Oe,rq:Me,lg:ze,WR:Pe,cu:Be,GE:We,px:Ue,jC:Ve,He:Ge,hE:Ze,BF:Ke,Dk:He,cl:je,_B:qe,ub:Ye,_f:Qe,Ku:Xe,qy:Je,Zy:$e,bu:tn,zv:en,dH:nn,HS:an,yH:sn,l3:rn,z9:on,x6:cn,_m:ln,eW:un,GK:hn,SP:dn,yr:pn,dl:fn,Dw:gn,xT:mn,_X:bn,wz:xn}=a;function yn(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>"".concat(t,".").concat(e)))}function vn(t,e){return 1===e?[t]:yn(t,e)}class wn{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=ut(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const t=vn("rc",this.rank),e=at(this.rank),n=this.getOutOfBoundsCondition(t),a=this.getSetup(t),s=this.getOutput(t);this.userCode="\n        void main() {\n          ".concat(e," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(s,"));\n          }\n        }\n      ")}}getSourceCoordsArr(t){const e=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let s="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let e=2;e<this.rank;e++)s="".concat(t[t.length-1-e],",")+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let e="";for(let n=this.rank-2;n<this.rank;n++)e+="".concat(t[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(e[0],";\n      int c = ").concat(e[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(t){const e=this.getSourceCoordsArr(t);if(1===this.rank){const t=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(t," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(e[0],"),\n            cEdge ? 0. : getA(").concat(e[1],"),\n            rEdge ? 0. : getA(").concat(e[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(e[3],")")}}class kn{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=ut(this.outputShape.length);let n="";for(let a=0;a<4;a++){let t="thisRC = rc;";a%2===1&&(t+="thisRC.z += 1;"),a>1&&(t+="thisRC.y += 1;"),n+="\n        ".concat(t,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(t,e){const n=e?Z(["r","c","d"],"inputShape"):V(["r","c","d"],t);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":K(t),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":t[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":t[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class Sn{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,n){const a=In(e,n),s=Cn(t,a,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const r=Tn(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=r,this.log();const t=this.freeTextures[s].pop();return this.usedTextures[s].push(t),t}let o;return a===u.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):a===u.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):a===u.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):a===u.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):a===u.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(o),this.numUsedTextures++,this._numBytesAllocated+=r,this.log(),o}releaseTexture(t,e,n,a){if(null==this.freeTextures)return;const r=In(n,a),o=Cn(e,r,a);o in this.freeTextures||(this.freeTextures[o]=[]);const i=Tn(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),c=(0,s._K2)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==c&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=i):(this.freeTextures[o].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[o],u=l&&l.indexOf(t);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(t,")"));const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*e),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Tn(t,e,n,a,s){const r=function(t,e){switch(t){case u.PACKED_2X2_FLOAT32:return It(e);case u.PACKED_2X2_FLOAT16:return Ct(e);case u.UNPACKED_FLOAT32:return kt(e);case u.UNPACKED_FLOAT16:return St(e);case u.PACKED_4X1_UNSIGNED_BYTE:return Tt(e);default:throw new Error("Unknown physical texture type ".concat(t))}}(e,a);let o;if(s){const[e,n]=p(t[0],t[1]);o=e*n}else{const[e,n]=h(t[0],t[1]);o=e*n}const i=function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(e))}(n,r);return o*i}function In(t,e){if(t===l.UPLOAD)return u.PACKED_2X2_FLOAT32;if(t===l.RENDER||null==t)return function(t){return(0,s._K2)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?u.PACKED_2X2_FLOAT32:u.UNPACKED_FLOAT32:t?u.PACKED_2X2_FLOAT16:u.UNPACKED_FLOAT16}(e);if(t===l.DOWNLOAD||t===l.PIXELS)return u.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(t))}function Cn(t,e,n){return"".concat(t[0],"_").concat(t[1],"_").concat(e,"_").concat(n)}class Nn{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=ut(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const An="if (isnan(x)) return x;",En="return abs(x);";const Rn=An+"\n  return (x < 0.0) ? 0.0 : x;\n",Fn=An+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Dn="return x;";class _n{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=ut(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class Ln{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=ut(this.outputShape.length);const e=t.length,n=vn("rc",e),a=at(e),s=function(t,e){if(1===t)return"rc";let n="";for(let a=0;a<t;a++)n+=e[a],a<t-1&&(n+=",");return n}(e,n),r=n.slice(-2),o=e<=1?"rc":"vec2(".concat(r.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(s,");\n\n        setOutput(getChannel(packedInput, ").concat(o,"));\n      }\n    ")}}const On=s.kpo.YO,Mn={};const zn=(0,s._K2)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Pn extends s.uI_{nextDataId(){return Pn.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,s._K2)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(null!=t){if(t instanceof At)e=t;else{const n=i((0,s._K2)().getNumber("WEBGL_VERSION"),t);e=new At(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const t=i((0,s._K2)().getNumber("WEBGL_VERSION"));e=new At(t),this.binaryCache=((n=(0,s._K2)().getNumber("WEBGL_VERSION"))in Mn||(Mn[n]={}),Mn[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Sn(this.gpgpu),this.numMBBeforeWarning=null==(0,s._K2)().global.screen?1024:(0,s._K2)().global.screen.height*(0,s._K2)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new s.GJx(this,(0,s.Hi9)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,n,a,s,r){const o=this.makeTensorInfo(e,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:t,texShape:[a,s]},i.texShape=[a,s];const c=R(e),l=new mt(c,!1,r),u=this.runWebGLProgram(l,[o],n,[[a,s]]);return u.shape=e,i.texture=null,this.disposeIntermediateTensorInfo(o),u.dataId}write(t,e,n){if(((0,s._K2)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,s._K2)().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:e,dtype:n,values:t,usage:l.UPLOAD,refCount:1}),a}refCount(t){if(this.texData.has(t)){return this.texData.get(t).refCount}return 0}incRef(t){this.texData.get(t).refCount++}decRef(t){if(this.texData.has(t)){this.texData.get(t).refCount--}}move(t,e,n,a,r){if((0,s._K2)().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:a,values:e,usage:l.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:a,complexTensorInfos:r,slice:o,shape:i,isPacked:c}=e;if(null!=o){let e;e=c?new _n(i,Dn):new Nn(i,Dn);const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:a}],a),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===a)return n;const l=null!=this.activeTimers;let u,h;if(l&&(u=s.ZSL.now()),"complex64"===a){const t=this.readSync(r.real.dataId),e=this.readSync(r.imag.dataId);h=s.C0T.mergeRealAndImagArrays(t,e)}else h=this.getValuesFromTexture(t);return l&&(this.downloadWaitMs+=s.ZSL.now()-u),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:a,slice:r,dtype:o,complexTensorInfos:i,isPacked:c}=e;if(null!=r){let e;e=c?new _n(a,Dn):new Nn(a,Dn);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:o}],o),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if((0,s._K2)().getBool("DEBUG")&&!(0,s._K2)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,s._K2)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,h=null;if("complex64"!==o&&(0,s._K2)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(e.texture.texture,...d(a))}if(this.pendingRead.set(t,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const t=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),e=t[0],n=t[1];u=s.C0T.mergeRealAndImagArrays(e,n)}else if(null==h)u=this.getValuesFromTexture(t);else{const t=s.ZSL.sizeFromShape(a);u=this.gpgpu.downloadFloat32MatrixFromBuffer(h,t)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=h){const t=this.gpgpu.gl;g(t,(()=>t.deleteBuffer(h)))}const p=this.convertAndCacheOnCPU(t,u),f=this.pendingRead.get(t);return this.pendingRead.delete(t),f.forEach((t=>t(p))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&(0,s.Hi9)().removeDataId(t,this),this.pendingDeletes--),p}readToGPU(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(t),{values:a,shape:r,slice:o,dtype:i,isPacked:c,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=o){let n;n=c?new _n(r,Dn):new Nn(r,Dn);const a=this.runWebGLProgram(n,[{dataId:t,shape:r,dtype:i}],i),s=this.readToGPU(a,e);return this.disposeIntermediateTensorInfo(a),s}if(null==l)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(t,e.customTexShape),h=(0,s.Hi9)().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map((t=>s.ZSL.decodeString(t)));return(0,s.ra8)(t.shape,t.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,s.ra8)(t.shape,t.dtype,e)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!m(n)){if((0,s._K2)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:a}=this.texData.get(t),r=s.ZSL.sizeFromShape(e);if((0,s._K2)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...d(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}const o=(0,s._K2)().getBool("WEBGL_PACK")&&!0===a,i=o?R(e):e,c=o?new ft(i):new pt(i),l=this.runWebGLProgram(c,[{shape:i,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,t();const r=s.ZSL.flatten(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),o=s.ZSL.flatten(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(r);i.kernelMs=s.ZSL.sum(t),i.getExtraProfileInfo=()=>t.map(((t,e)=>({name:o[e],ms:t}))).map((t=>"".concat(t.name,": ").concat(t.ms))).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:s.ZSL.now(),endMs:null}}endTimer(t){return(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=s.ZSL.now(),t)}async getQueryTime(t){if((0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:a,usage:s,isPacked:r,slice:o}=this.texData.get(t),i=o&&o.origDataId||t,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=e&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(e,a,s,r)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:zn;return(0,s._K2)().getBool("WEBGL_CPU_FORWARD")&&t.every((t=>null==this.texData.get(t.dataId).texture&&s.ZSL.sizeFromShape(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){s.C0T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return On(t.shape,e)}packedUnaryOp(t,e,n){const a=new _n(t.shape,e),r=this.compileAndRun(a,[t],n);return(0,s.Hi9)().makeTensorFromTensorInfo(r)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=nn(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if((0,s._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,En,t.dtype);const e=new Nn(t.shape,En),n=this.compileAndRun(e,[t]);return(0,s.Hi9)().makeTensorFromTensorInfo(n)}makeTensorInfo(t,e,n){let a;if("string"===e&&null!=n&&n.length>0&&s.ZSL.isString(n[0])){const r=n.map((t=>s.ZSL.encodeString(t)));a=this.write(r,t,e)}else a=this.write(n,t,e);return this.texData.get(a).usage=null,{dataId:a,shape:t,dtype:e}}makeOutput(t,e,n){return(0,s.Hi9)().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,n),this)}unpackTensor(t){const e=new Ln(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new wn(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[A(t.shape),...E(t.shape)],a={dtype:t.dtype,shape:n,dataId:t.dataId},s=[A(e),...E(e)],r=new kn(s,n),o=[n],i=this.runWebGLProgram(r,[a],t.dtype,o,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:a,shape:r,dtype:o}=n;if(null!=e){const t=s.ZSL.sizeFromShape(r),n=e[0]*e[1]*4;s.ZSL.assert(t<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=R(r);let c;c=a?new dt(i):new ht(i);const l=[null!=e?e:d(i)];return{dtype:o,shape:r,dataId:this.runWebGLProgram(c,[{shape:i,dtype:o,dataId:t}],o,l,!0,e).dataId}}runWebGLProgram(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5?arguments[5]:void 0;const i=this.makeTensorInfo(t.outputShape,n),l=this.texData.get(i.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===c.DENSE){const e=null!=o?o:d(t.outputShape);l.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(l.usage=t.outTexUsage),0===s.ZSL.sizeFromShape(i.shape))return l.values=s.ZSL.getTypedArrayFromDType(i.dtype,0),i;const u=[],h=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&s.ZSL.sizeFromShape(e.shape)<=(0,s._K2)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}if(this.uploadToGPU(e.dataId),!!n.isPacked!==!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),u.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!D(n.shape,e.shape)){const t=e,a=e.shape;e.shape=n.shape,e=this.packedReshape(e,a),u.push(e),n=this.texData.get(e.dataId),t.shape=a}return{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const p={shape:i.shape,texData:l,isUniform:!1},f=function(t,e,n){let a="";e.concat(n).forEach((e=>{const r=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!e.isUniform){const o=e.texData.texShape,{useSqueezeShape:i,uniformShape:c,keptDims:l}=st(t.packedInputs,e.shape,o);let u="",h="",d="";if(1===c.length&&t.packedInputs){const t=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];u="".concat(t[0]>1,"_").concat(t[1]>1)}else if(2!==c.length||t.packedInputs){if(c.length>2&&!t.packedInputs){const t=s.ZSL.computeStrides(c);d="".concat(t[0]===o[1],"_").concat(t[t.length-1]===o[1])}}else h="".concat(c[0]>1,"_").concat(c[1]>1);const p=e.shape.length,f=2===c.length&&s.ZSL.arraysEqual(e.shape,o),g=1===s.ZSL.sizeFromShape(e.shape),m=s.C0T.getBroadcastDims(e.shape,n.shape),b=!t.packedInputs&&p===n.shape.length&&s.ZSL.arraysEqual(o,n.texData.texShape),x=t.packedInputs||c.length>2?"":"".concat(o[0]>1,"_").concat(o[1]>1);a+="".concat(p,"_").concat(b,"_").concat(i?l:"","_").concat(c.length,"_").concat(g,"_").concat(m,"_").concat(f,"_").concat(u,"_").concat(h,"_").concat(d,"_").concat(x,"_").concat(r)}else{const t=e.isUniform?"uniform":e.texData.texShape;a+="".concat(e.shape,"_").concat(t,"_").concat(r)}}));const r=t.userCode;let o=t.constructor.name;return o+="_"+a+"_"+r+"".concat((0,s._K2)().getNumber("WEBGL_VERSION")),o}(t,h,p),g=this.getAndSaveBinary(f,(()=>it(this.gpgpu,t,h,p))),m=null!=this.activeTimers;let b;m&&(b=this.startTimer()),(0,s._K2)().get("ENGINE_COMPILE_ONLY")||function(t,e,n,a,r){e.program.enableShapeUniforms||(lt(e.inShapeInfos,n),lt([e.outShapeInfo],[a]));const o=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?t.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):t.setOutputMatrixTexture(o.texture,i[0],i[1]),t.setProgram(e.webGLProgram),t.bindVertexArray(e.webGLProgram.vao),1===(0,s._K2)().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<n.length;++l){const a=n[l],{uniform:r,offset:o,shape:i,texShape:c}=e.variablesLocations[l];if(i){const{uniformShape:n}=st(e.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:t.gl.uniform1iv(i,new Int32Array(n));break;case 2:t.gl.uniform2iv(i,new Int32Array(n));break;case 3:t.gl.uniform3iv(i,new Int32Array(n));break;case 4:t.gl.uniform4iv(i,new Int32Array(n))}}if(c&&t.gl.uniform2i(c,a.texData.texShape[0],a.texData.texShape[1]),null!=r)if(a.isUniform)if(s.ZSL.sizeFromShape(a.shape)<2)t.gl.uniform1f(r,a.uniformValues[0]);else{let e=a.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(r,e)}else null!=a.texData.slice&&null!=o&&t.gl.uniform1i(o,a.texData.slice.flatOffset),t.setInputMatrixTexture(a.texData.texture.texture,r,l)}const c=e.outShapeLocation;if(c)switch(a.shape.length){case 1:t.gl.uniform1iv(c,new Int32Array(a.shape));break;case 2:t.gl.uniform2iv(c,new Int32Array(a.shape));break;case 3:t.gl.uniform3iv(c,new Int32Array(a.shape));break;case 4:t.gl.uniform4iv(c,new Int32Array(a.shape))}if(e.outShapeStridesLocation){const n=s.ZSL.computeStrides(a.shape);switch(a.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(n));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(n));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(n))}}if(e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),e.program.customUniforms&&r)for(let s=0;s<e.program.customUniforms.length;++s){const n=e.program.customUniforms[s],a=e.customUniformLocations[s],o=r[s];if("float"===n.type)t.gl.uniform1fv(a,o);else if("vec2"===n.type)t.gl.uniform2fv(a,o);else if("vec3"===n.type)t.gl.uniform3fv(a,o);else if("vec4"===n.type)t.gl.uniform4fv(a,o);else if("int"===n.type)t.gl.uniform1iv(a,o);else if("ivec2"===n.type)t.gl.uniform2iv(a,o);else if("ivec3"===n.type)t.gl.uniform3iv(a,o);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));t.gl.uniform4iv(a,o)}}t.executeProgram()}(this.gpgpu,g,h,p,a),u.forEach((t=>this.disposeIntermediateTensorInfo(t))),m&&(b=this.endTimer(b),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(b)}));const x=(0,s._K2)().getNumber("WEBGL_FLUSH_THRESHOLD");if(x>0){const t=s.ZSL.now();t-this.lastGlFlushTime>x&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!(0,s._K2)().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&!1===r){const t=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),t}return i}compileAndRun(t,e,n,a){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||e[0].dtype;return this.runWebGLProgram(t,e,n,a,s)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,s._K2)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,s.DZQ)((()=>{if(!(0,s._K2)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=(0,s._K2)().getBool("DEBUG");(0,s._K2)().set("DEBUG",!1);const e=this.abs((0,s.d_2)(1e-8)).dataSync()[0];if((0,s._K2)().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:a,values:r,texture:o,usage:i,isPacked:c}=e;if(null!=o)return;const u=null!=this.activeTimers;let h;u&&(h=s.ZSL.now());let d=e.texShape;if(null==d&&(d=function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=(0,s._K2)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=(0,s._K2)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&(0,s._K2)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),e&&(n*=2,a*=2,1===(t=t.map(((e,n)=>n>=t.length-2?s.ZSL.nearestLargerEven(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=s.ZSL.squeezeShape(t);t=e.newShape}let r=s.ZSL.sizeFromShape(t),o=null;t.length<=1&&r<=n?o=[1,r]:2===t.length&&t[0]<=n&&t[1]<=n?o=t:3===t.length&&t[0]*t[1]<=n&&t[2]<=n?o=[t[0]*t[1],t[2]]:3===t.length&&t[0]<=n&&t[1]*t[2]<=n?o=[t[0],t[1]*t[2]]:4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n?o=[t[0]*t[1]*t[2],t[3]]:4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n&&(o=[t[0],t[1]*t[2]*t[3]]);const i=null!=o&&Math.max(...o)>a&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(null==o||i)if(e){const e=A(t);let n=2,a=2;t.length&&([n,a]=E(t)),r=e*(n/2)*(a/2),o=s.ZSL.sizeToSquarishShape(r).map((t=>2*t))}else o=s.ZSL.sizeToSquarishShape(r);return o}(n,c),e.texShape=d),null!=r){const t=R(n);let o,i=d[1],f=d[0];const g=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!c&&g||([i,f]=p(d[0],d[1])),o=c?new bt(t,g):new mt(t,g);const m=g?[f,i]:d,b=this.makeTensorInfo(m,a),x=this.texData.get(b.dataId);x.usage=g?l.PIXELS:l.UPLOAD,x.texShape=m,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),i,f,r);const y=[[f,i]],v=!0,w=this.runWebGLProgram(o,[b],a,y,v),k=this.texData.get(w.dataId);e.texShape=k.texShape,e.isPacked=k.isPacked,e.usage=k.usage,(0,s._K2)().get("ENGINE_COMPILE_ONLY")?this.disposeData(w.dataId):(e.texture=k.texture,e.values=null,this.texData.delete(w.dataId)),this.disposeIntermediateTensorInfo(b),u&&(this.uploadWaitMs+=s.ZSL.now()-h)}else{const t=this.acquireTexture(d,i,a,c);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:a}=n;return null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype ".concat(e))}(e,a)),n.values}acquireTexture(t,e,n,a){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(t," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(t,e,a)}computeBytes(t,e){return t[0]*t[1]*s.ZSL.bytesPerElement(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}for(const[,e]of Object.entries(this.binaryCache)){const n=new Promise((t=>{try{this.checkCompletion_(e),t(!0)}catch(n){throw n}}));t.push(n)}return Promise.all(t)}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await(0,s.dA1)(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(!1===this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw y(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);const{variablesLocations:e,customUniformLocations:n,infLoc:a,nanLoc:s,outShapeLocation:r,outShapeStridesLocation:o,outTexShapeLocation:i}=ct(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=e,t.customUniformLocations=n,t.infLoc=a,t.nanLoc=s,t.outShapeLocation=r,t.outShapeStridesLocation=o,t.outTexShapeLocation=i}}createTensorFromGPUData(t,e,n){t.channels=t.channels||"RGBA";const{texture:a,height:r,width:o,channels:i}=t,c=(0,s.Hi9)().backend;if(!c.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=c.writeTexture(a,e,n,r,o,i);return(0,s.Hi9)().makeTensorFromDataId(l,e,n,c)}}Pn.nextDataId=0;const Bn="4.22.0";s.eMq.isBrowser()&&(0,s.gJX)("webgl",(()=>new Pn),2);const Wn="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Un{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=s.C0T.assertAndGetBroadcastShape(e,n),this.enableShapeUniforms=ut(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const Vn="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Gn{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s.C0T.assertAndGetBroadcastShape(e,n);const r=this.outputShape.length;this.enableShapeUniforms=ut(r);let o="";if(a)if(0===r||1===s.ZSL.sizeFromShape(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const t=at(r);if(o="\n          ".concat(t," coords = getOutputCoords();\n        "),1===r)this.enableShapeUniforms?o+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":o+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const t=vn("coords",r);this.enableShapeUniforms?o+="\n            bool nextRowOutOfBounds =\n              (".concat(t[r-2]," + 1) >= outShape[").concat(r," - 2];\n            bool nextColOutOfBounds =\n              (").concat(t[r-1]," + 1) >= outShape[").concat(r," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):o+="\n            bool nextRowOutOfBounds =\n              (".concat(t[r-2]," + 1) >= ").concat(this.outputShape[r-2],";\n            bool nextColOutOfBounds =\n              (").concat(t[r-1]," + 1) >= ").concat(this.outputShape[r-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(o,"\n\n        setOutput(result);\n      }\n    ")}}function Zn(t){const{inputs:e,backend:n}=t,{x:a}=e;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const Kn={kernelName:s.lzr,backendName:"webgl",kernelFunc:Zn};function Hn(t){const{inputs:e,backend:n}=t,{real:a,imag:s}=e,r=n.makeTensorInfo(a.shape,"complex64"),o=n.texData.get(r.dataId),i=Zn({inputs:{x:a},backend:n}),c=Zn({inputs:{x:s},backend:n});return o.complexTensorInfos={real:i,imag:c},r}const jn={kernelName:s.pr3,backendName:"webgl",kernelFunc:Hn},qn="return (a < 0.) ? b * a : a;",Yn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Qn={kernelName:s.X0$,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{alpha:o}=a,i=n.makeTensorInfo([],"float32",s.ZSL.createScalarValue(o,"float32")),c=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Gn(Yn,r.shape,i.shape):new Un(qn,r.shape,i.shape),l=n.runWebGLProgram(c,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},Xn="return (a < 0.) ? b * a : a;",Jn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const $n={kernelName:s.Ncv,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a,alpha:r}=e,o=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Gn(Jn,a.shape,r.shape):new Un(Xn,a.shape,r.shape);return n.runWebGLProgram(o,[a,r],"float32")}},ta="if (isnan(x)) return x;";function ea(t){let{opSnippet:e,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=t;return t=>{let{inputs:o,backend:i}=t;const{x:c}=o,l=i,u=r||c.dtype;if(l.shouldExecuteOnCPU([c])&&null!=a){const t=l.texData.get(c.dataId),e=a(t.values,u);return l.makeTensorInfo(c.shape,u,e)}let h;return h=(0,s._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new _n(c.shape,n):new Nn(c.shape,e),l.runWebGLProgram(h,[c],u)}}function na(t){let{opSnippet:e,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:o,dtype:i}=t;return t=>{let{inputs:c,backend:l}=t;const{a:u,b:h}=c,d=l;if(r&&"complex64"===u.dtype){const t=d.texData.get(u.dataId),n=d.texData.get(h.dataId),[a,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,a]=t,r={dataId:n.dataId,dtype:n.dtype,shape:u.shape},o={dataId:a.dataId,dtype:a.dtype,shape:h.shape},i=new Un(e,u.shape,h.shape);return d.runWebGLProgram(i,[r,o],(0,s.TuY)(n.dtype,a.dtype))})),o=Hn({inputs:{real:a,imag:r},backend:d});return d.disposeIntermediateTensorInfo(a),d.disposeIntermediateTensorInfo(r),o}const p=i||(0,s.TuY)(u.dtype,h.dtype);if(("string"===u.dtype||"string"===h.dtype||d.shouldExecuteOnCPU([u,h]))&&null!=o){const t=d.texData.get(u.dataId).values,e=d.texData.get(h.dataId).values,n="string"===u.dtype?s.C0T.fromUint8ToStringArray(t):t,a="string"===u.dtype?s.C0T.fromUint8ToStringArray(e):e,[r,i]=o(u.shape,h.shape,n,a,p),c=d.makeTensorInfo(i,p);return d.texData.get(c.dataId).values=r,c}let f;return f=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new Gn(n,u.shape,h.shape,a):new Un(e,u.shape,h.shape),d.runWebGLProgram(f,[u,h],p)}}function aa(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===t)return"return x;";if("relu"===t)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":Rn;if("elu"===t)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":Fn;if("prelu"===t)return e?Jn:Xn;if("leakyrelu"===t)return e?Yn:qn;if("sigmoid"===t)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error("Activation ".concat(t," has not been implemented for the WebGL backend."))}class sa{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],r=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ut(this.outputShape.length);const l=a?t[1]:t[2],u=Math.ceil(l/2),h=a?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";o&&(g=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(o,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(o,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(o,"\n        }"),m="result = activation(result);");const b=r?"result += getBiasAtOutCoords();":"";r&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";t[0]<e[0]?x="imod(rc.x, ".concat(t[0],")"):e[0]<t[0]&&(y="imod(rc.x, ".concat(e[0],")")),this.userCode="\n      ".concat(g,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(u,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(x,";\n        int batchB = ").concat(y,";\n        for (int i = 0; i < ").concat(u,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(h,");\n          vec4 b = getMatrixB(batchB, ").concat(d,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(b,"\n\n        ").concat(m,"\n\n        setOutput(result);\n      }\n    ")}}const ra="return areal * breal - aimag * bimag;",oa="return areal * bimag + aimag * breal;";class ia{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=s.C0T.assertAndGetBroadcastShape(e,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const ca="return a * b;";function la(t){const{inputs:e,backend:n}=t,{a:a,b:r}=e,o=s.C0T.upcastType(a.dtype,r.dtype);if("complex64"===a.dtype){const t=n.texData.get(a.dataId),e=n.texData.get(r.dataId),s=new ia(ra,a.shape,r.shape),o=new ia(oa,a.shape,r.shape),i=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape}],c=n.runWebGLProgram(s,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),u=Hn({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([a,r])){const t=n.texData.get(a.dataId),e=n.texData.get(r.dataId),[s,i]=Ke(a.shape,r.shape,t.values,e.values,o),c=n.makeTensorInfo(i,o);return n.texData.get(c.dataId).values=s,c}let i;return i=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Gn(ca,a.shape,r.shape):new Un(ca,a.shape,r.shape),n.runWebGLProgram(i,[a,r],o)}const ua={kernelName:s.xu7,backendName:"webgl",kernelFunc:la};function ha(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{shape:o}=a,i=n,c=s.ZSL.sizeFromShape(r.shape),l=s.ZSL.inferFromImplicitShape(o,c),u=s.ZSL.sizeFromShape(l);s.ZSL.assert(c===u,(()=>"The new shape (".concat(l,") has ").concat(u," elements and the old ")+"shape (".concat(r.shape,") has ").concat(c," elements. The new shape and old ")+"shape must have the same number of elements."));const h=i.texData.get(r.dataId);return!h.isPacked||D(r.shape,l)||null!==h.texture&&D(h.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(t,e,n){const a=[A(t.shape),...E(t.shape)],s={dtype:t.dtype,shape:a,dataId:t.dataId},r=[A(e),...E(e)],o=new kn(r,a),i=[a],c=n.runWebGLProgram(o,[s],t.dtype,i,!0);return{dataId:c.dataId,shape:e,dtype:c.dtype}}(r,l,i)}const da={kernelName:s.R23,backendName:"webgl",kernelFunc:ha};class pa{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:o}=t;this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4;let l="sumValue += dot(values, ones);";if(null!=e){const t=1/e;l="sumValue += dot(values * ".concat(s.ZSL.isInt(t)?t.toPrecision(2):t,", ones);")}let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(l,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class fa{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:s,outSize:r}=t;this.outputShape=[a,r];let o="0.0",i="";"prod"===e?o="1.0":"min"===e?(o="1.0 / 1e-20",i="min"):"max"===e&&(o="-1.0 / 1e-20",i="max");let c="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===e?c="sumValue":"prod"===e?c="prodValue":"all"===e?c="allValue":"any"===e&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let h="\n      if (".concat("sum"===e,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===e,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===e," || ").concat("max"===e,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),d="vec4";"all"===e?(o="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(o="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(s,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(o,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(o,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(h,"\n        }\n\n        int inIdx = inOffset + ").concat(l,";\n        if (").concat(1===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(2===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(3===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(h,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function ga(t,e,n,a){const r=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],a=s.C0T.computeOptimalWindowSize(n);e.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return e}(t.shape);let o=t;for(let s=0;s<r.length;s++){const{inSize:i,windowSize:c,outSize:l}=r[s];let u,h;u="mean"===n?0===s?new pa({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:l},i):new pa({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:l}):new fa({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:l},n),h=o,o=a.runWebGLProgram(u,[o],e),h.dataId!==t.dataId&&a.disposeIntermediateTensorInfo(h)}return o}class ma{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const a=at(this.rank),s=function(t){const e=t.length;if(e>6)throw Error("Transpose for rank ".concat(e," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(e);for(let s=0;s<t.length;s++)a[t[s]]=n[s];return a.join()}(e);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(s,"));\n    }\n    ")}}class ba{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let l=0;l<n.length;l++)n[l]=t[e[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=at(this.rank),s=yn("rc",this.rank),r=new Array(this.rank);for(let l=0;l<e.length;l++)r[e[l]]=s[l];const o="vec2(".concat(r.slice(-2).join(),")"),i="++".concat(s[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(r.join(),"), ").concat(o,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(s[this.rank-1],";\n      if(++").concat(s[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function xa(t,e,n){const a=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ba(t.shape,e):new ma(t.shape,e);return n.runWebGLProgram(a,[t],t.dtype)}function ya(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,keepDims:i}=a;return function(t,e,n,a){const r=e,o=t.shape.length,i=s.ZSL.parseAxisParam(r,t.shape);let c=i;const l=s.C0T.getAxesPermutation(c,o),u=null!=l;let h=t;u&&(h=xa(t,l,a),c=s.C0T.getInnerMostAxes(c.length,o)),s.C0T.assertAxesAreInnerMostDims("sum",c,o);const[d,p]=s.C0T.computeOutAndReduceShapes(h.shape,c);let f=d;n&&(f=s.C0T.expandShapeToKeepDim(d,i));const g=s.ZSL.sizeFromShape(p),m=ha({inputs:{x:h},attrs:{shape:[s.ZSL.sizeFromShape(t.shape)/g,g]},backend:a}),b=ga(m,(0,s.chL)(t.dtype),"sum",a),x=ha({inputs:{x:b},attrs:{shape:f},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(b),u&&a.disposeIntermediateTensorInfo(h),x}(r,o,i,n)}const va={kernelName:s.WuN,backendName:"webgl",kernelFunc:ya};function wa(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{perm:r}=a,o=n,i=s.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=s.shape[r[u]];let l;if(o.shouldExecuteOnCPU([s])){const t=o.texData.get(s.dataId).values,e=bn(t,s.shape,s.dtype,r,c);l=o.makeTensorInfo(c,s.dtype);o.texData.get(l.dataId).values=e}else l=xa(s,r,o);return l}const ka={kernelName:s.wx0,backendName:"webgl",kernelFunc:wa};function Sa(t){let{a:e,b:n,transposeA:a,transposeB:r,backend:o,bias:i=null,preluActivationWeights:c=null,leakyreluAlpha:l=0,activation:u=null}=t;const h=e.shape.length,d=n.shape.length,p=a?e.shape[h-2]:e.shape[h-1],f=r?n.shape[d-1]:n.shape[d-2],g=a?e.shape[h-1]:e.shape[h-2],m=r?n.shape[d-2]:n.shape[d-1],b=e.shape.slice(0,-2),x=n.shape.slice(0,-2),y=s.ZSL.sizeFromShape(b),v=s.ZSL.sizeFromShape(x),w=s.ZEY.assertAndGetBroadcastShape(e.shape.slice(0,-2),n.shape.slice(0,-2)).concat([g,m]);s.ZSL.assert(p===f,(()=>"Error in matMul: inner shapes (".concat(p,") and (")+"".concat(f,") of Tensors with shapes ").concat(e.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const k=a?[y,p,g]:[y,g,p],S=r?[v,m,f]:[v,f,m],T=ha({inputs:{x:e},backend:o,attrs:{shape:k}}),I=ha({inputs:{x:n},backend:o,attrs:{shape:S}}),C=[T,I],N=Math.max(y,v),A=a?T.shape[1]:T.shape[2],E=null!=i,R=null!=c,F="leakyrelu"===u,D=null!=u?aa(u,!0):null;let _;if((1===g||1===m)&&A>1e3&&!1===(E||R||F||null!=D)){let t=T,e=I;a&&(t=wa({inputs:{x:T},backend:o,attrs:{perm:[0,2,1]}}),C.push(t)),r&&(e=wa({inputs:{x:I},backend:o,attrs:{perm:[0,2,1]}}),C.push(e));const n=1===m;let s=t;1!==m&&(s=ha({inputs:{x:t},backend:o,attrs:{shape:[N,A,1]}}),C.push(s));const i=1===m?2:1;let c=e;n&&(c=ha({inputs:{x:e},backend:o,attrs:{shape:[N,1,A]}}),C.push(c));const l=la({inputs:{a:s,b:c},backend:o});_=ya({inputs:{x:l},backend:o,attrs:{axis:i,keepDims:!0}}),C.push(l)}else{const t=(0,s.TuY)(e.dtype,n.dtype),u=new sa(k,S,[N,g,m],a,r,E,D,R,F),h=[T,I];if(null!=i&&h.push(i),R&&h.push(c),F){const t=o.makeTensorInfo([],"float32",s.ZSL.createScalarValue(l,"float32"));h.push(t),C.push(t)}_=o.runWebGLProgram(u,h,t)}const L=ha({inputs:{x:_},backend:o,attrs:{shape:w}});C.push(_);for(const s of C)o.disposeIntermediateTensorInfo(s);return L}const Ta={kernelName:s.Dr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:s,b:r,bias:o,preluActivationWeights:i}=e,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;return Sa({a:s,b:r,transposeA:c,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:u})}},Ia="return abs(x);";const Ca={kernelName:s.ljI,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const t=n.texData.get(a.dataId),e=nn(t.values);return n.makeTensorInfo(a.shape,a.dtype,e)}let r;return r=(0,s._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new _n(a.shape,Ia):new Nn(a.shape,Ia),n.runWebGLProgram(r,[a],a.dtype)}},Na=ea({opSnippet:An+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Aa={kernelName:s.Vvy,backendName:"webgl",kernelFunc:Na},Ea=ea({opSnippet:An+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Ra={kernelName:s.PH8,backendName:"webgl",kernelFunc:Ea},Fa="return a + b;",Da=na({opSnippet:Fa,packedOpSnippet:Fa,supportsComplex:!0,cpuKernelImpl:Se}),_a={kernelName:s.OMN,backendName:"webgl",kernelFunc:Da};class La{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>"T".concat(e)));const n=[];this.variableNames.forEach((t=>{n.push("float v".concat(t," = get").concat(t,"AtOutCoords();"))}));const a=this.variableNames.map((t=>"v".concat(t))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class Oa{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>"T".concat(e)));const n=[];this.variableNames.forEach((t=>{n.push("vec4 v".concat(t," = get").concat(t,"AtOutCoords();"))}));const a=this.variableNames.map((t=>"v".concat(t))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const Ma={kernelName:s.EkD,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:a}=e,r=n;if(1===r.length)return Zn({inputs:{x:r[0]},backend:a});if(r.length>(0,s._K2)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(r.length/2),n=t({inputs:r.slice(0,e),backend:a}),s=t({inputs:r.slice(e),backend:a});return t({inputs:[n,s],backend:a})}const o=r.map((t=>t.dtype)).reduce(((t,e)=>(0,s.TuY)(t,e))),i=r.map((t=>t.shape)),c=(0,s._K2)().getBool("WEBGL_PACK")?new Oa(r[0].shape,i):new La(r[0].shape,i);return a.runWebGLProgram(c,r,o)}};const za={kernelName:s.u8Z,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,keepDims:i}=a,c=r.shape.length,l=s.ZSL.parseAxisParam(o,r.shape);let u=l;const h=s.C0T.getAxesPermutation(u,c);let d=r;null!=h&&(d=wa({inputs:{x:r},backend:n,attrs:{perm:h}}),u=s.C0T.getInnerMostAxes(u.length,c)),s.C0T.assertAxesAreInnerMostDims("all",u,c);const[p,f]=s.C0T.computeOutAndReduceShapes(d.shape,u),g=ha({inputs:{x:d},backend:n,attrs:{shape:[-1,s.ZSL.sizeFromShape(f)]}}),m=ga(g,g.dtype,"all",n);let b;if(i){b=ha({inputs:{x:m},backend:n,attrs:{shape:s.C0T.expandShapeToKeepDim(p,l)}})}else b=ha({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=h&&n.disposeIntermediateTensorInfo(d),b}};const Pa={kernelName:s.FSt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,keepDims:i}=a,c=r.shape.length,l=s.ZSL.parseAxisParam(o,r.shape);let u=l;const h=s.C0T.getAxesPermutation(u,c);let d=r;null!=h&&(d=wa({inputs:{x:r},backend:n,attrs:{perm:h}}),u=s.C0T.getInnerMostAxes(u.length,c)),s.C0T.assertAxesAreInnerMostDims("any",u,c);const[p,f]=s.C0T.computeOutAndReduceShapes(d.shape,u),g=ha({inputs:{x:d},backend:n,attrs:{shape:[-1,s.ZSL.sizeFromShape(f)]}}),m=ga(g,g.dtype,"any",n);let b;if(i){b=ha({inputs:{x:m},backend:n,attrs:{shape:s.C0T.expandShapeToKeepDim(p,l)}})}else b=ha({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=h&&n.disposeIntermediateTensorInfo(d),b}};class Ba{constructor(t,e,n){this.variableNames=["A"];const{windowSize:a,batchSize:s,outSize:r}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,r];const o="max"===e?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(o," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class Wa{constructor(t,e,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,s.ZSL.assert(t.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const r=t[t.length-1],o=Math.ceil(r/e);this.outputShape=t.slice(0,-1),o>1&&this.outputShape.push(o),a||this.variableNames.push("bestIndicesA");const i=this.outputShape,c=i.length,l=at(c),u=vn("coords",c);let h,d;if(1===o){d=c+1;const t=at(d);h="\n        ".concat(t," sourceLocR = ").concat(t,"(").concat(u.join(),", 0);\n        ++").concat(u[c-1],";\n        ").concat(t," sourceLocG = ").concat(t,"(").concat(u.join(),", 0);\n        ++").concat(u[c-2],";\n        ").concat(t," sourceLocA = ").concat(t,"(").concat(u.join(),", 0);\n        --").concat(u[c-1],";\n        ").concat(t," sourceLocB = ").concat(t,"(").concat(u.join(),", 0);\n        --").concat(u[c-2],";")}else d=c,h="\n        ".concat(l," sourceLocR = coords;\n        ++").concat(u[c-1],";\n        ").concat(l," sourceLocG = coords;\n        ++").concat(u[c-2],";\n        ").concat(l," sourceLocA = coords;\n        --").concat(u[c-1],";\n        ").concat(l," sourceLocB = coords;\n        --").concat(u[c-2],";");const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],g=p.map((t=>"int "+t)),m=vn("sourceLocR",d-1).concat("inIdx.r"),b=vn("sourceLocG",d-1).concat("inIdx.g"),x=vn("sourceLocB",d-1).concat("inIdx.b"),y=vn("sourceLocA",d-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(m.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),"),\n                             getBestIndicesAChannel(").concat(x.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),")));"),k="vec4(\n            getAChannel(".concat(m.join(),"),\n            hasNextCol ? getAChannel(").concat(b.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(x.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(y.join(),") : 0.)"),S=a?"":"\n      float getBestIndicesAChannel(".concat(g.join(),") {\n        return getChannel(getBestIndicesA(").concat(p.join(),"),\n                                          vec2(").concat(p.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(g.join(),") {\n        return getChannel(getA(").concat(p.join(),"),\n                               vec2(").concat(p.slice(-2).join(),"));\n      }\n      ").concat(S,"\n      void main() {\n        ").concat(l," coords = getOutputCoords();\n        bool hasNextCol = ").concat(u[c-1]," < ").concat(i[c-1]-1,";\n        bool hasNextRow = ").concat(u[c-2]," < ").concat(i[c-2]-1,";\n        ").concat(h,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(f,", sourceLocG").concat(f,",\n          sourceLocB").concat(f,", sourceLocA").concat(f,") * ").concat(e,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(k,";\n\n        for (int i = 0; i < ").concat(e,"; i++) {\n          inIdx = srcIdx;\n          ").concat(w,"\n          vec4 candidate = ").concat(k,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(v,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function Ua(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=e.shape[0],o=e.shape[1];null!=a&&(r=a.shape[0],o=a.shape[1]);const i=s.C0T.computeOptimalWindowSize(o),c={windowSize:i,inSize:o,batchSize:r,outSize:Math.ceil(o/i)},l=new Ba(c,n,null==a),u=[e];null!=a&&u.push(a);const h=t.runWebGLProgram(l,u,"int32");if(1===h.shape[1])return h;const d=Ua(t,e,n,h);return t.disposeIntermediateTensorInfo(h),d}function Va(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:e.shape,o=r[r.length-1],i=s.C0T.computeOptimalWindowSize(o),c=new Wa(r,i,n,null==a),l=null==a?[e]:[e,a],u=t.runWebGLProgram(c,l,"int32");if(u.shape.length===e.shape.length){const a=Va(t,e,n,u);return t.disposeIntermediateTensorInfo(u),a}return u}function Ga(t,e,n,a){const r=[n];if(s.C0T.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,e.shape.length),!(0,s._K2)().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],o=t.texData.get(e.dataId);let i=e;null!==o&&o.isPacked&&(i=t.unpackTensor(e),n.push(i));const[c,l]=s.C0T.computeOutAndReduceShapes(i.shape,r),u=s.ZSL.sizeFromShape(l),h=ha({inputs:{x:i},backend:t,attrs:{shape:[-1,u]}});n.push(h);const d=Ua(t,h,a);n.push(d);const p=ha({inputs:{x:d},backend:t,attrs:{shape:c}});return n.forEach((e=>t.disposeIntermediateTensorInfo(e))),p}return Va(t,e,a)}const Za={kernelName:s.Jp_,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o}=a;let i=s.ZSL.parseAxisParam(o,r.shape);const c=s.C0T.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=wa({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=s.C0T.getInnerMostAxes(i.length,l.shape.length)),s.C0T.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);const h=Ga(n,l,i[0],"max");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}};const Ka={kernelName:s.p_m,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o}=a;let i=s.ZSL.parseAxisParam(o,r.shape);const c=s.C0T.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=wa({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=s.C0T.getInnerMostAxes(i.length,l.shape.length)),s.C0T.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);const h=Ga(n,l,i[0],"min");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},Ha=ea({opSnippet:An+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),ja={kernelName:s.QKF,backendName:"webgl",kernelFunc:Ha},qa=ea({opSnippet:An+"return log(x + sqrt(x * x + 1.0));"}),Ya={kernelName:s.epO,backendName:"webgl",kernelFunc:qa},Qa=ea({opSnippet:An+"\n  return atan(x);\n"}),Xa={kernelName:s.TyE,backendName:"webgl",kernelFunc:Qa},Ja=na({opSnippet:Wn+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Vn+"\n  return result;\n"}),$a={kernelName:s.lxb,backendName:"webgl",kernelFunc:Ja},ts=ea({opSnippet:An+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),es={kernelName:s.zP9,backendName:"webgl",kernelFunc:ts};class ns{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const r=t.filterWidth,o=t.strideHeight,i=t.strideWidth,c=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,g="((batch  * ".concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + d"),m="(xR * ".concat(t.inWidth," + xC) * ").concat(t.inChannels," + d");let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(l,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(e," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?s?g:m:"wR * ".concat(h," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let x="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===e&&(x="avgValue / max(count, 1.0)");const y=4*Math.floor(r/4),v=r%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n      const float initializationValue = ").concat(b,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(t.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(b,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(u,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(t.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(y,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              getValue(batch, xR, xC + 3 * ").concat(l,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(y,";\n          if (").concat(1===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(x,");\n      }\n    ")}}class as{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const r=t.filterWidth,o=t.strideDepth,i=t.strideHeight,c=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,g=t.padInfo.front,m=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const x="avg"===e;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(g,", ").concat(m,", ").concat(b,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(d,";\n              wD += ").concat(l,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(t.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(u,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(t.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(h,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(e," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?s?"(((batch * ".concat(t.inDepth," + xD) * ").concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + ch"):"((xD * ".concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let v="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===e&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(r/4),k=r%4,S="\n      if (".concat(x,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(g,", ").concat(m,", ").concat(b,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(t.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(d,";\n            wD += ").concat(l,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(t.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(h,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(h,", ch)\n              );\n\n              ").concat(S,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(2===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(3===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                initializationValue\n              );\n\n              ").concat(S,"\n            }\n          }\n        }\n        setOutput(").concat(v,");\n      }\n    ")}}const ss={kernelName:s.ho8,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e;B(r,"avgPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;s.ZSL.assert(s.C0T.eitherStridesOrDilationsAreOne(i,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'")));const u=s.C0T.computePool2DInfo(r.shape,o,i,1,c,l);if(1===u.filterWidth&&1===u.filterHeight&&s.ZSL.arraysEqual(u.inShape,u.outShape))return Zn({inputs:{x:r},backend:n});const h=new ns(u,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};const rs={kernelName:s.cS,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{filterSize:o,strides:i,pad:c,dimRoundingMode:l,dataFormat:u}=a,h=s.C0T.computePool3DInfo(r.shape,o,i,[1,1,1],c,l,u),d=new as(h,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}};class os{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,s=t.strideWidth,r=t.dilationHeight,o=t.dilationWidth,i=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=i-1-t.padInfo.top,u=c-1-t.padInfo.left,h=1/(e*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(l,", ").concat(u,");\n      const float avgMultiplier = float(").concat(h,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(r,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(o,") {\n            float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class is{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,a=t.filterWidth,s=t.strideDepth,r=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=u-1-t.padInfo.front,f=h-1-t.padInfo.top,g=d-1-t.padInfo.left,m=1/(e*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(g,");\n      const float avgMultiplier = float(").concat(m,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(s,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(h,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(l,") {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const cs={kernelName:s.wwC,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:o}=e,i=o,{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=s.C0T.computePool3DInfo(i.shape,c,l,[1,1,1],u,h),p=new is(d);return n.runWebGLProgram(p,[r],i.dtype)}};const ls={kernelName:s.VCH,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:o}=e,i=o;B([r,o],"avgPoolGrad");const{filterSize:c,strides:l,pad:u}=a,h=s.C0T.computePool2DInfo(i.shape,c,l,1,u),d=new os(h);return n.runWebGLProgram(d,[r],i.dtype)}};const us={kernelName:s.jAQ,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:s,b:r}=e,{transposeA:o,transposeB:i}=a;return Sa({a:s,b:r,transposeA:o,transposeB:i,backend:n})}};class hs{constructor(t,e,n,a,r,o){this.outputShape=[],this.variableNames=["x","mean","variance"],s.C0T.assertAndGetBroadcastShape(t,e),s.C0T.assertAndGetBroadcastShape(t,n);let i="0.0";null!=a&&(s.C0T.assertAndGetBroadcastShape(t,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="1.0";null!=r&&(s.C0T.assertAndGetBroadcastShape(t,r),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(i,";\n        float scale = ").concat(c,";\n        float inv = scale * inversesqrt(variance + float(").concat(o,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class ds{constructor(t,e,n,a,r,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],s.C0T.assertAndGetBroadcastShape(t,e),s.C0T.assertAndGetBroadcastShape(t,n);let i="vec4(0.0)";null!=a&&(s.C0T.assertAndGetBroadcastShape(t,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="vec4(1.0)";null!=r&&(s.C0T.assertAndGetBroadcastShape(t,r),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        vec4 offset = ".concat(i,";\n        vec4 scale = ").concat(c,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(o,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const ps={kernelName:s.i5R,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n,attrs:a}=t;const{x:r,mean:o,variance:i,offset:c,scale:l}=e;s.ZSL.assert(o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.ZSL.assert(null==c||o.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.ZSL.assert(null==l||o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=a;null==u&&(u=.001);const h=[r,o,i];let d=null;null!=c&&(d=c.shape,h.push(c));let p=null;null!=l&&(p=l.shape,h.push(l));const f=(0,s._K2)().getBool("WEBGL_PACK_NORMALIZATION")?new ds(r.shape,o.shape,i.shape,d,p,u):new hs(r.shape,o.shape,i.shape,d,p,u);return n.runWebGLProgram(f,h,h[0].dtype)}};class fs{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=at(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(t){if(1===t)return"sourceLoc";if(t<=6)return gs.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error("Slicing for rank ".concat(t," is not yet supported"))}(this.rank);let a;const s=t.map(((t,e)=>"sourceLoc.".concat(gs[e]," = start[").concat(e,"] + coords.").concat(gs[e],";")));a="\n        ".concat(e," sourceLoc;\n        ").concat(e," coords = getOutputCoords();\n        ").concat(s.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const gs=["x","y","z","w","u","v"];class ms{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=at(this.rank),n=vn("coords",this.rank),a=vn("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),r="getChannel(getSource(".concat(a.join(),"), ").concat(s,")"),o="\n      result.x = ".concat(r,";\n      if (++").concat(n[this.rank-1]," < ").concat(t[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(r,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(t[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(r,";\n        if (++").concat(n[this.rank-1]," < ").concat(t[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(r,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(e,"(").concat(t.map(((t,e)=>"start[".concat(e,"]"))).join(),");"):t.map(((t,e)=>"".concat(a[e]," = ").concat(n[e]," + start[").concat(e,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(e," coords = getOutputCoords();\n        ").concat(e," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(o,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function bs(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{begin:o,size:i}=a,[c,l]=s.Kro.parseSliceParams(r,o,i);if(s.Kro.assertParamsValid(r,c,l),0===s.ZSL.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const t=n.texData.get(r.dataId),e=an(t.values,c,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,e)}const{isPacked:u}=n.texData.get(r.dataId),h=s.Kro.isSliceContinous(r.shape,c,l);if(u||!h){const t=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ms(l):new fs(l),e=[c];return n.runWebGLProgram(t,[r],r.dtype,e)}return n.uploadToGPU(r.dataId),function(t,e,n,a){const r=a.texData.get(t.dataId),o=a.makeTensorInfo(n,t.dtype),i=a.texData.get(o.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=t.dtype;let c=s.Kro.computeFlatOffset(e,s.ZSL.computeStrides(t.shape));r.slice&&(c+=r.slice.flatOffset),i.slice={flatOffset:c,origDataId:r.slice&&r.slice.origDataId||t.dataId};const l=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,l+1),o}(r,c,l,n)}const xs={kernelName:s.JiE,backendName:"webgl",kernelFunc:bs},ys={kernelName:s.Ik2,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockShape:o,crops:i}=a;s.ZSL.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const c=o.reduce(((t,e)=>t*e)),l=s.C0T.getReshaped(r.shape,o,c),u=s.C0T.getPermuted(l.length,o.length),h=s.C0T.getReshapedPermuted(r.shape,o,c),d=s.C0T.getSliceBeginCoords(i,o.length),p=s.C0T.getSliceSize(h,i,o.length),f=[],g=ha({inputs:{x:r},backend:n,attrs:{shape:l}}),m=wa({inputs:{x:g},backend:n,attrs:{perm:u}}),b=ha({inputs:{x:m},backend:n,attrs:{shape:h}}),x=bs({inputs:{x:b},backend:n,attrs:{begin:d,size:p}});return f.push(g),f.push(m),f.push(b),f.forEach((t=>n.disposeIntermediateTensorInfo(t))),x}};const vs={kernelName:s.N4F,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,weights:r}=e,{size:o}=a,i=n.readSync(s.dataId),c=n.readSync(r.dataId),l=Te(i,c,r.dtype,r.shape,o);return n.makeTensorInfo([o],r.dtype,l)}};const ws={kernelName:s.HNs,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{a:a,b:r}=e,o=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=(0,s._K2)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===i){const t=n.texData.get(a.dataId).values,e=n.texData.get(r.dataId).values,[s,o]=Ce(a.shape,r.shape,t,e,a.dtype),i=n.makeTensorInfo(o,a.dtype);return n.texData.get(i.dataId).values=s,i}let c;return c=o?new Gn("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new Un("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(c,[a,r],a.dtype)}};const ks={kernelName:s.vj7,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:a,s1:r}=e,o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=s.C0T.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return n.makeTensorInfo([c.length],"int32",Int32Array.from(c))}},Ss=na({opSnippet:"return float(a != b);",cpuKernelImpl:je,dtype:"bool"}),Ts={kernelName:s.ylV,backendName:"webgl",kernelFunc:Ss};function Is(t){const{inputs:e,backend:n}=t,{input:a}=e;return Zn({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const Cs={kernelName:s.LRy,backendName:"webgl",kernelFunc:Is};const Ns={kernelName:s.KXH,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:a,attrs:r}=e,{x:o}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===o.dtype)return Zn({inputs:{x:o},backend:a});const e=s.Ul9(o.shape),n=t({inputs:{x:o},backend:a,attrs:{dtype:"float32"}}),r=Hn({inputs:{real:n,imag:e},backend:a});return e.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===o.dtype){const e=Is({inputs:{input:o},backend:a}),n=t({inputs:{x:e},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(e),n}if(!s.ZSL.hasEncodingLoss(o.dtype,i)){const t=Zn({inputs:{x:o},backend:a});return{dataId:t.dataId,shape:t.shape,dtype:i}}if(a.shouldExecuteOnCPU([o])){const t=a.texData.get(o.dataId).values,[e,n,s]=Ne(t,o.shape,o.dtype,i);return a.makeTensorInfo(e,n,s)}if("int32"===i)return function(t,e){const n=new Nn(t.shape,"return float(int(x));"),a=e.runWebGLProgram(n,[t],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(o,a);if("bool"===i){const t=a.makeTensorInfo([],"bool",s.ZSL.getTypedArrayFromDType("bool",1)),e=Ss({inputs:{a:o,b:t},backend:a});return a.disposeIntermediateTensorInfo(t),e}throw new Error("Error in Cast: failed to cast ".concat(o.dtype," to ").concat(i))}},As="return ceil(x);",Es=ea({opSnippet:As,packedOpSnippet:As,cpuKernelImpl:Ae}),Rs={kernelName:s.QDP,backendName:"webgl",kernelFunc:Es};class Fs{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Ds{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const _s={kernelName:s.vaV,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{clipValueMin:o,clipValueMax:i}=a;let c;c=(0,s._K2)().getBool("WEBGL_PACK_CLIP")?new Ds(r.shape):new Fs(r.shape);const l=[[o],[i]];return n.runWebGLProgram(c,[r],r.dtype,l)}};class Ls{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Os(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const Ms={kernelName:s.$zE,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e,s=n.texData.get(a.dataId),r=new Ls(a.shape),o=[Os(a,s.complexTensorInfos.real),Os(a,s.complexTensorInfos.imag)];return n.runWebGLProgram(r,o,o[0].dtype)}};class zs{constructor(t){this.outputShape=[],this.outputShape=s.C0T.computeOutShape(t,1),this.variableNames=t.map(((t,e)=>"T".concat(e)));const e=new Array(t.length-1);e[0]=t[0][1];for(let s=1;s<e.length;s++)e[s]=e[s-1]+t[s][1];const n=["if (yC < ".concat(e[0],") setOutput(getT0(yR, yC));")];for(let s=1;s<e.length;s++){const t=e[s-1];n.push("else if (yC < ".concat(e[s],") ")+"setOutput(getT".concat(s,"(yR, yC-").concat(t,"));"))}const a=e.length,r=e[e.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(r,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class Ps{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=s.C0T.computeOutShape(t,e);const n=this.outputShape,a=n.length,r=at(a),o=vn("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=t.map(((t,e)=>"T".concat(e)));const c=new Array(t.length-1);c[0]=t[0][e];for(let s=1;s<c.length;s++)c[s]=c[s-1]+t[s][e];const l=i[e],u=i.slice(-2),h=i.join();let d="if (".concat(l," < ").concat(c[0],") {\n        return getChannel(\n            getT0(").concat(h,"), vec2(").concat(u.join(),"));\n        }");for(let s=1;s<c.length;s++){const t=c[s-1];d+="\n        if (".concat(l," < ").concat(c[s],"  && ").concat(l," >= ").concat(c[s-1],") {\n          return getChannel(\n            getT").concat(s,"(").concat(Bs(i,l,t),"),\n            vec2(").concat(Bs(u,l,t),"));\n        }")}const p=c.length,f=c[c.length-1];d+="\n        return getChannel(\n          getT".concat(p,"(").concat(Bs(i,l,f),"),\n          vec2(").concat(Bs(u,l,f),"));"),this.userCode="\n      float getValue(".concat(i.map((t=>"int "+t)),") {\n        ").concat(d,"\n      }\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(o,"), 0., 0., 0.);\n\n        ").concat(o[a-1]," = ").concat(o[a-1]," + 1;\n        if (").concat(o[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(o,");\n        }\n\n        ").concat(o[a-2]," = ").concat(o[a-2]," + 1;\n        if (").concat(o[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(o,");\n        }\n\n        ").concat(o[a-1]," = ").concat(o[a-1]," - 1;\n        if (").concat(o[a-2]," < ").concat(n[a-2]," &&\n            ").concat(o[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(o,");\n        }\n        setOutput(result);\n      }\n    ")}}function Bs(t,e,n){const a=t.indexOf(e);return t.map(((t,e)=>e===a?"".concat(t," - ").concat(n):t)).join()}function Ws(t){const{inputs:e,backend:n}=t,{input:a}=e;return Zn({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const Us={kernelName:s.dv8,backendName:"webgl",kernelFunc:Ws};function Vs(t,e,n){const a=t[0].dtype;if("complex64"===a){const a=t.map((t=>Is({inputs:{input:t},backend:n}))),s=t.map((t=>Ws({inputs:{input:t},backend:n}))),r=Vs(a,e,n),o=Vs(s,e,n),i=Hn({inputs:{real:r,imag:o},backend:n});return a.forEach((t=>n.disposeIntermediateTensorInfo(t))),s.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),i}let r=n.shouldExecuteOnCPU(t);if("string"===a&&(r=!0),r){const r=t.map((t=>{const a=s.ZSL.sizeFromShape(t.shape.slice(e));return ha({inputs:{x:t},backend:n,attrs:{shape:[-1,a]}})})),o=r.map((t=>({vals:n.readSync(t.dataId),shape:t.shape}))),i=s.C0T.computeOutShape(r.map((t=>t.shape)),1),c=1===r[0].shape[0],l=Ee(o,i,a,c),u=s.C0T.computeOutShape(t.map((t=>t.shape)),e),h=n.makeTensorInfo(u,a,l);return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}const o=t.filter((t=>s.ZSL.sizeFromShape(t.shape)>0)),i=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(1===o.length){const e=i?new Nn(t[0].shape,Dn):new _n(t[0].shape,Dn);return n.runWebGLProgram(e,t,a)}const c=(0,s._K2)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>c){const t=[];for(let s=0;s<o.length;s+=c){const a=o.slice(s,s+c);t.push(Vs(a,e,n))}const a=Vs(t,e,n);for(const e of t)n.disposeIntermediateTensorInfo(e);return a}if(i){const t=new Ps(o.map((t=>t.shape)),e);return n.runWebGLProgram(t,o,a)}const{tensors2D:l,outShape:u}=function(t,e,n){const a=s.C0T.computeOutShape(t.map((t=>t.shape)),e),r=t.map((t=>ha({inputs:{x:t},attrs:{shape:[-1,s.ZSL.sizeFromShape(t.shape.slice(e))]},backend:n})));return{tensors2D:r,outShape:a}}(o,e,n),h=new zs(l.map((t=>t.shape))),d=n.runWebGLProgram(h,l,a);l.forEach((t=>n.disposeIntermediateTensorInfo(t)));const p=ha({inputs:{x:d},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(d),p}function Gs(t){const{inputs:e,backend:n,attrs:a}=t,{axis:r}=a,o=s.ZSL.parseAxisParam(r,e[0].shape)[0],i=e.map((t=>t.shape));s.C0T.assertParamsConsistent(i,o);const c=s.C0T.computeOutShape(e.map((t=>t.shape)),o);if(0===s.ZSL.sizeFromShape(c))return n.makeTensorInfo(c,e[0].dtype,[]);const l=e.filter((t=>s.ZSL.sizeFromShape(t.shape)>0));return 1===l.length?Zn({inputs:{x:l[0]},backend:n}):Vs(l,o,n)}const Zs={kernelName:s.$dB,backendName:"webgl",kernelFunc:Gs};class Ks{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=t.outShape;const r=t.padInfo.top,o=t.padInfo.left,i=t.strideHeight,c=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4,g="channelsLast"===t.dataFormat,m=g?1:2,b=g?2:3,x=g?3:1;let y="",v="";n&&(y=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):s?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),v="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(y,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(r,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(x,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(m,"], coords[").concat(b,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(h,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(t.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(d,"; wC++) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            if (xC < 0 || xC >= ").concat(t.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(g,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(g,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(g,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(g,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(v,"\n        setOutput(result);\n      }\n    ")}}class Hs{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,a=t.padInfo.left,s=t.strideDepth,r=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,u=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(s,", ").concat(r,", ").concat(o,");\n      const ivec3 pads = ivec3(").concat(e,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(u,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(t.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(h,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,"; wC++) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class js{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ut(this.outputShape.length);const o=t.padInfo.left,i=t.strideWidth,c=t.dilationWidth,l=t.filterHeight,u=t.filterWidth,h=u;let d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let s=0;s<u;s++)d+="\n           vec4 xTexelC".concat(2*s,";\n           int xTexelC").concat(2*s,"Ready;\n           vec4 xTexelC").concat(2*s+1,";\n           int xTexelC").concat(2*s+1,"Ready;\n           vec4 xC").concat(s,";");d+="\n     for (int r = 0; r < ".concat(l,"; r++) {\n      for (int d1 = 0; d1 < ").concat(t.inChannels,"; d1 += 2) {\n       ");for(let s=0;s<u;s++)d+="\n           xTexelC".concat(2*s," = vec4(0.0);\n           xTexelC").concat(2*s,"Ready = 0;\n           xTexelC").concat(2*s+1," = vec4(0.0);\n           xTexelC").concat(2*s+1,"Ready = 0;\n           xC").concat(s," = vec4(0.0);");d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(h+1)/2;m++){const e=2*m;if(d+="\n           xC = xCCorner + ".concat(e*c,";\n           "),1===i){if(e<u&&(o%2===1?(d+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                   xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(e,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e,"Ready = 1;\n                 }\n               "),d+=1===c&&e>0?"\n                 xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                   } else {\n                     xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                   }\n                   ")):d+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                   xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(e,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e,"Ready = 1;\n                 }\n\n                 xC").concat(e," = xTexelC").concat(e,";\n                 "),e+1<u)){const t=o%2===0?s.ZSL.nearestLargerEven(c):c;c%2===0&&o%2===1||c%2!==0&&o%2!==1?(d+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                     xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(e+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(e+1,"Ready = 1;\n                   }\n                   "),d+=c>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                     } else {\n                      xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                     }\n                     "):"\n                     xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                     ")):d+=1===t?"\n                     xC".concat(e+1," = xTexelC").concat(e,";\n                     "):"\n                     xCOffset = xC + ".concat(t,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                       xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(e+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(e+1,"Ready = 1;\n                     }\n\n                     xC").concat(e+1," = xTexelC").concat(e+1,";\n                     ")}}else e<u&&(o%2===1?(d+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                   xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(e,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                   xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(e+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e+1,"Ready = 1;\n                 }\n\n                 xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n               "),e+1<u&&(d+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                 "))):(d+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                   xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(e,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(e,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                   xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(e+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(e+1,"Ready = 1;\n                 }\n\n                 xC").concat(e," = vec4(\n                   xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n               "),e+1<u&&(d+="\n                   xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                 "))));e<u&&(d+="\n             wTexel = getW(r, ".concat(e,", d1, d2);\n             dotProd += xC").concat(e,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(t.inChannels,") {\n               dotProd += xC").concat(e,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),e+1<u&&(d+="\n               wTexel = getW(r, ".concat(e+1,", d1, d2);\n               dotProd += xC").concat(e+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(t.inChannels,") {\n                 dotProd += xC").concat(e+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let p="",f="";n&&(p=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):r?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),f="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(p,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(d,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(g,"\n         ").concat(f,"\n         setOutput(result);\n       }\n     ")}}class qs{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=ut(this.outputShape.length);const{dataFormat:n}=e,a=U(),s="channelsLast"===n,r=s?1:2,o=s?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(t[2]," && pos < ").concat(t[1],") {");let c="";for(let l=0;l<=1;l++)for(let t=0;t<=1;t++)c+="\n          blockIndex = rc.z + ".concat(t,";\n          pos = rc.y + ").concat(l,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(r,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(o,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(s,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*l+t,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*l+t,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}function Ys(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&1===n&&t[0]>1?[t[0],1]:null}function Qs(t){let{x:e,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=t;const u=e.shape,h=r.texData.get(e.dataId),d=a.inChannels,p=u[0]*u[1]*u[2],f=a.outChannels,g="channelsLast"===a.dataFormat,m=!1;let b;const x=[];if(null!=i){const t=Ys(i.shape,g);null!=t&&(i=ha({inputs:{x:i},backend:r,attrs:{shape:t}}),x.push(i))}if(null!=o){const t=Ys(o.shape,g);null!=t&&(o=ha({inputs:{x:o},backend:r,attrs:{shape:t}}),x.push(o))}if(!((1===p||1===f)&&d>1e3)&&h.isPacked&&g&&null!=h.texture&&u[2]%2!==0&&s.ZSL.arraysEqual(h.shape.slice(-3),u.slice(-3))){const t=u[0]*u[1]*(u[2]+1),d={dataId:e.dataId,shape:[1,t,a.inChannels],dtype:e.dtype},p=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,s.ZSL.assert(D(h.shape,d.shape),(()=>"packed reshape ".concat(h.shape," to ").concat(d.shape," isn't free")));const f=ha({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});x.push(f);const g=Sa({a:d,b:f,backend:r,transposeA:false,transposeB:m,bias:o,activation:l,preluActivationWeights:i,leakyreluAlpha:c}),y=r.texData.get(g.dataId);s.ZSL.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),h.shape=p,y.shape=a.outShape,b=Zn({inputs:{x:g},backend:r}),b.shape=a.outShape,x.push(g)}else{const t=a.outHeight*a.outWidth,s=ha({inputs:{x:e},backend:r,attrs:{shape:g?[a.batchSize,t,a.inChannels]:[a.batchSize,a.inChannels,t]}}),u=ha({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),h=Sa({a:g?s:u,b:g?u:s,transposeA:!g,transposeB:m,backend:r,bias:o,activation:l,preluActivationWeights:i,leakyreluAlpha:c});b=ha({inputs:{x:h},backend:r,attrs:{shape:a.outShape}}),x.push(s),x.push(u),x.push(h)}for(const s of x)r.disposeIntermediateTensorInfo(s);return b}function Xs(t){let{x:e,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=t;const{filterWidth:u,filterHeight:h,inChannels:d,outWidth:p,outHeight:f,dataFormat:g}=a,m="channelsLast"===g,b=u*h*d,x=f*p,y=[a.batchSize,b,x],v=[];if(null!=i){const t=Ys(i.shape,m);null!=t&&(i=ha({inputs:{x:i},backend:r,attrs:{shape:t}}),v.push(i))}if(null!=o){const t=Ys(o.shape,m);null!=t&&(o=ha({inputs:{x:o},backend:r,attrs:{shape:t}}),v.push(o))}const w=ha({inputs:{x:n},backend:r,attrs:{shape:[1,b,s.ZSL.sizeFromShape(n.shape)/b]}});v.push(w);const k=new qs(y,a),S=[e.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],T=r.runWebGLProgram(k,[e],"float32",S),I=ha({inputs:{x:T},backend:r,attrs:{shape:y}});v.push(T),v.push(I);const C=null!=o,N=null!=i,A="leakyrelu"===l,E=l?aa(l,!0):null,R=new sa(m?I.shape:w.shape,m?w.shape:I.shape,m?[a.batchSize,x,a.outChannels]:[a.batchSize,a.outChannels,x],!0,!1,C,E,N,A),F=m?[I,w]:[w,I];if(o&&F.push(o),N&&F.push(i),A){const t=r.makeTensorInfo([],"float32",s.ZSL.createScalarValue(c,"float32"));F.push(t),v.push(t)}const D=r.runWebGLProgram(R,F,"float32"),_=ha({inputs:{x:D},backend:r,attrs:{shape:a.outShape}});v.push(D);for(const s of v)r.disposeIntermediateTensorInfo(s);return _}const Js={kernelName:s.p2J,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:o}=e,{strides:i,pad:c,dataFormat:l,dilations:u,dimRoundingMode:h}=a,d=s.C0T.convertConv2DDataFormat(l),p=s.C0T.computeConv2DInfo(r.shape,o.shape,i,u,c,h,!1,d);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===d&&(0,s._K2)().getBool("WEBGL_EXP_CONV")){const t=new js(p),e=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];f=n.runWebGLProgram(t,[r,o],"float32",e)}else if((0,s._K2)().getBool("WEBGL_CONV_IM2COL"))f=Xs({x:r,filter:o,convInfo:p,backend:n});else{const t=new Ks(p);f=n.runWebGLProgram(t,[r,o],"float32")}else f=Qs({x:r,filter:o,convInfo:p,backend:n});const g=ha({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),g}};class $s{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,a=t.padInfo.top,s=t.padInfo.left,r="channelsLast"===t.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(e," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(s,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              ").concat(r?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class tr{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,s=t.strideWidth,r="channelsLast"===t.dataFormat,o=e-1-t.padInfo.top,i=n-1-t.padInfo.left,c=r?1:2,l=r?2:3,u=r?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(u,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(l,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2++) {\n\n              if (").concat(r,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class er{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,a=t.strideWidth,s=t.padInfo.front,r=t.padInfo.top,o=t.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(t.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(e," - ").concat(s,";\n\n            if (xF < 0 || xF >= ").concat(t.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(r,";\n\n              if (xR < 0 || xR >= ").concat(t.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(o,";\n\n                if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class nr{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,a=t.filterWidth,s=t.strideDepth,r=t.strideHeight,o=t.strideWidth,i=e-1-t.padInfo.front,c=n-1-t.padInfo.top,l=a-1-t.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(l,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(e,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(s,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(t.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(e," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const ar={kernelName:s.rFm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:o}=e,{strides:i,pad:c,dataFormat:l,dimRoundingMode:u,filterShape:h}=a,d=s.C0T.convertConv2DDataFormat(l),p=s.C0T.computeConv2DInfo(r.shape,h,i,1,c,u,!1,d),f=new $s(p);return n.runWebGLProgram(f,[r,o],"float32")}};class sr{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=ut(this.outputShape.length);const e=t.filterHeight,n=t.filterWidth,a=e-1-t.padInfo.top,s=n-1-t.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(s,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(t.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(t.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const rr={kernelName:s.jfg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:o}=e,{inputShape:i,strides:c,pad:l,dataFormat:u,dimRoundingMode:h}=a,d=s.C0T.convertConv2DDataFormat(u),p=s.C0T.computeConv2DInfo(i,o.shape,c,1,l,h,!1,d);if((0,s._K2)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===d){const t=[[p.strideHeight,p.strideWidth]],e=new sr(p);return n.runWebGLProgram(e,[r,o],"float32",t)}{const t=new tr(p);return n.runWebGLProgram(t,[r,o],"float32")}}};const or={kernelName:s.A1h,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:o}=e,{strides:i,pad:c,dilations:l}=a,u=s.C0T.computeConv3DInfo(r.shape,o.shape,i,l,c),h=new Hs(u);return n.runWebGLProgram(h,[r,o],"float32")}};const ir={kernelName:s.iGz,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:o}=e,{strides:i,pad:c,filterShape:l}=a,u=s.C0T.computeConv3DInfo(r.shape,l,i,1,c),h=new er(u);return n.runWebGLProgram(h,[r,o],"float32")}};const cr={kernelName:s.gC7,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:o}=e,{pad:i,strides:c,inputShape:l}=a,u=s.C0T.computeConv3DInfo(l,o.shape,c,1,i),h=new nr(u);return n.runWebGLProgram(h,[r,o],"float32")}},lr=ea({opSnippet:ta+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Vn,"\n  return result;\n")}),ur={kernelName:s.Mn0,backendName:"webgl",kernelFunc:lr},hr=ea({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),dr={kernelName:s.MnK,backendName:"webgl",kernelFunc:hr};class pr{constructor(t,e,n,a,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[r,o,i,c]=t,[l]=e,[u,h]=n;this.outputShape=[l,u,h,c];const d="bilinear"===a?1:0,[p,f]=["".concat(o-1,".0"),"".concat(i-1,".0")],[g,m,b]=u>1?["".concat((o-1)/(u-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[x,y,v]=h>1?["".concat((i-1)/(h-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(g,");\n      const float width_ratio = float(").concat(x,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(r,") {\n          return;\n        }\n\n        float height_scale = ").concat(m,";\n        float width_scale = ").concat(y,";\n\n        float in_y = ").concat(b,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(s,"));\n          return;\n        }\n        float in_x = ").concat(v,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(s,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(d," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const fr={kernelName:s.MRQ,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{image:s,boxes:r,boxInd:o}=e,{cropSize:i,method:c,extrapolationValue:l}=a,u=new pr(s.shape,r.shape,i,c,l);return n.runWebGLProgram(u,[s,r,o],"float32")}};var gr;!function(t){t.Prod="*",t.Sum="+"}(gr||(gr={}));class mr{constructor(t,e,n,a){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,r=this.op===gr.Prod?"1.0":"0.0",o=n?r:"getX(".concat(br(s,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",l="";n?(c=a?"end != ".concat(i-1):"end != 0",l=a?"end + 1":"end - 1"):(c=a?"end + pow2 < ".concat(i):"end >= pow2",l=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(at(s)," coords = getOutputCoords();\n        int end = ").concat(xr(s,"coords",this.op),";\n        float val = ").concat(o,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(l,";\n          ").concat(xr(s,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(br(s,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function br(t,e,n){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".x, ").concat(e,".y");if(3===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z");if(4===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z, ").concat(e,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(t," is not yet supported"))}function xr(t,e,n){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".y");if(3===t)return"".concat(e,".z");if(4===t)return"".concat(e,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(t," is not yet supported"))}function yr(t,e,n,a,r,o){const i=e.shape.length,c=s.C0T.getAxesPermutation([a],i);let l=e;null!=c&&(l=wa({inputs:{x:e},backend:n,attrs:{perm:c}}));const u=s.C0T.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(e.shape.length-1," ")+"but got axis=".concat(a));const h=l.shape[u];let d=Zn({inputs:{x:l},backend:n});for(let s=0;s<=Math.ceil(Math.log2(h))-1;s++){const e=new mr(t,l.shape,!1,o),a=[[s]],r=d;d=n.runWebGLProgram(e,[d],d.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){const e=new mr(t,l.shape,r,o),a=d;d=n.runWebGLProgram(e,[d],d.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=c){const t=wa({inputs:{x:d},backend:n,attrs:{perm:s.C0T.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(l),t}return d}const vr={kernelName:s.jj_,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:r,exclusive:o,reverse:i}=a;return yr(gr.Prod,s,n,r,o,i)}};const wr={kernelName:s.nY8,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{axis:r,exclusive:o,reverse:i}=a;return yr(gr.Sum,s,n,r,o,i)}};const kr={kernelName:s.wNW,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,weights:r}=e,{size:o,binaryOutput:i}=a;if(1===s.shape.length){const t=n.readSync(s.dataId),e=n.readSync(r.dataId),a=Te(t,e,r.dtype,r.shape,o);return n.makeTensorInfo([o],r.dtype,a)}if(2===s.shape.length){const t=n.bufferSync(s),e=n.bufferSync(r),a=Ie(t,e,o,i);return n.makeTensorInfo(a.shape,r.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(s.shape.length,"."))}};class Sr{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(e,";\n      int offset_h = imod(h, ").concat(e,");\n      int in_w = w / ").concat(e,";\n      int offset_w = imod(w, ").concat(e,");\n      int offset_d = (offset_h * ").concat(e," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Tr={kernelName:s.TMz,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{blockSize:r,dataFormat:o}=a,i=s.shape[0],c=("NHWC"===o?s.shape[1]:s.shape[2])*r,l=("NHWC"===o?s.shape[2]:s.shape[3])*r,u=("NHWC"===o?s.shape[3]:s.shape[1])/(r*r),h=new Sr("NHWC"===o?[i,c,l,u]:[i,u,c,l],r,o);return n.runWebGLProgram(h,[s],s.dtype)}};class Ir{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ut(this.outputShape.length);const r=t.filterHeight,o=t.filterWidth,i=t.outChannels/t.inChannels;let c="",l="";n&&(c=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):s?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),l="result = activation(result);");const u=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(r,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(u,"\n        ").concat(l,"\n        setOutput(result);\n      }\n    ")}}class Cr{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ut(this.outputShape.length);const o=t.outChannels/t.inChannels,i=t.padInfo.left,c=t.strideWidth,l=t.dilationWidth,u=t.filterHeight,h=t.filterWidth,d=h;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let s=0;s<h;s++)p+="\n          vec4 xTexelC".concat(2*s,";\n          int xTexelC").concat(2*s,"Ready;\n          vec4 xTexelC").concat(2*s+1,";\n          int xTexelC").concat(2*s+1,"Ready;\n          vec4 xC").concat(s,";");p+="\n    for (int r = 0; r < ".concat(u,"; r++) {\n      ");for(let s=0;s<h;s++)p+="\n          xTexelC".concat(2*s," = vec4(0.0);\n          xTexelC").concat(2*s,"Ready = 0;\n          xTexelC").concat(2*s+1," = vec4(0.0);\n          xTexelC").concat(2*s+1,"Ready = 0;\n          xC").concat(s," = vec4(0.0);");p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let b=0;b<(d+1)/2;b++){const t=2*b;if(p+="\n          xC = xCCorner + ".concat(t*l,";\n          "),1===c){if(t<h&&(i%2===1?(p+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                  xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(t,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t,"Ready = 1;\n                }\n              "),p+=1===l&&t>0?"\n                xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                  } else {\n                    xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                  }\n                  ")):p+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                  xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(t,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t,"Ready = 1;\n                }\n\n                xC").concat(t," = xTexelC").concat(t,";\n                "),t+1<h)){const e=i%2===0?s.ZSL.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(p+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                    xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(t+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(t+1,"Ready = 1;\n                  }\n                  "),p+=l>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                    } else {\n                     xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                    }\n                    "):"\n                    xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                    ")):p+=1===e?"\n                    xC".concat(t+1," = xTexelC").concat(t,";\n                    "):"\n                    xCOffset = xC + ".concat(e,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                      xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(t+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(t+1,"Ready = 1;\n                    }\n\n                    xC").concat(t+1," = xTexelC").concat(t+1,";\n                    ")}}else t<h&&(i%2===1?(p+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                  xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(t,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                  xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(t+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t+1,"Ready = 1;\n                }\n\n                xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n              "),t+1<h&&(p+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                "))):(p+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                  xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(t,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(t,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                  xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(t+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(t+1,"Ready = 1;\n                }\n\n                xC").concat(t," = vec4(\n                  xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n              "),t+1<h&&(p+="\n                  xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                "))));t<h&&(p+="\n            wTexel = getW(r, ".concat(t,", d1, q);\n            dotProd += xC").concat(t," * vec4(wTexel.xz, wTexel.xz);\n          "),t+1<h&&(p+="\n              wTexel = getW(r, ".concat(t+1,", d1, q);\n              dotProd += xC").concat(t+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",g="";n&&(f=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),g="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(f,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(o,";\n        int q = d2 - d1 * ").concat(o,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(p,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(m,"\n        ").concat(g,"\n        setOutput(result);\n      }\n    ")}}const Nr={kernelName:s.tGH,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:o}=e,{strides:i,pad:c,dilations:l,dimRoundingMode:u}=a;let h=l;null==h&&(h=[1,1]),s.ZSL.assert(s.C0T.eitherStridesOrDilationsAreOne(i,h),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(h,"'")));const d=s.C0T.computeConv2DInfo(r.shape,o.shape,i,h,c,u,!0);let p;p=(0,s._K2)().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?new Cr(d):new Ir(d);const f=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[r,o],"float32",f)}};class Ar{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,a=t.padInfo.top,s=t.padInfo.left,r=t.outChannels/t.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(r," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(t.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(e," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(s,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Er{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,s=t.strideWidth,r=e-1-t.padInfo.top,o=n-1-t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(r,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Rr={kernelName:s.X$8,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:o}=e,{strides:i,dilations:c,pad:l,dimRoundingMode:u,filterShape:h}=a,d=s.C0T.computeConv2DInfo(r.shape,h,i,c,l,u,!0),p=new Ar(d);return n.runWebGLProgram(p,[r,o],"float32")}};const Fr={kernelName:s.nVu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:o}=e,{strides:i,dilations:c,pad:l,dimRoundingMode:u,inputShape:h}=a,d=s.C0T.computeConv2DInfo(h,o.shape,i,c,l,u,!0),p=new Er(d);return n.runWebGLProgram(p,[r,o],"float32")}};class Dr{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const _r={kernelName:s.ORI,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e,r=[...a.shape,...a.shape],o=s.ZSL.sizeFromShape(a.shape),i=ha({inputs:{x:a},backend:n,attrs:{shape:[o]}}),c=new Dr(o),l=n.runWebGLProgram(c,[i],i.dtype),u=ha({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class Lr{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:a,strideHeight:s,strideWidth:r,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:l}=t,{top:u,left:h}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(s,", ").concat(r,");\n      const ivec2 pads = ivec2(").concat(u,", ").concat(h,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(o,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(e,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(l,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const Or={kernelName:s.jxD,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:o}=e,{strides:i,pad:c,dilations:l}=a,u=s.C0T.computeDilation2DInfo(r.shape,o.shape,i,c,"NHWC",l);let h;const d=new Lr(u);h=n.runWebGLProgram(d,[r,o],"float32");const p=ha({inputs:{x:h},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(h),p}};const Mr={kernelName:s.Qgm,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{equation:r}=a,o=e,{allDims:i,summedDims:c,idDims:l}=s.C0T.decodeEinsumEquation(r,o.length);s.C0T.checkEinsumDimSizes(i.length,l,o);const{path:u,steps:h}=s.C0T.getEinsumComputePath(c,l),d=h.length;let p=null,f=i.length;const g=[];for(let m=0;m<d;++m){for(const t of h[m]){const{permutationIndices:e,expandDims:a}=s.C0T.getEinsumPermutation(f,l[t]);let r;s.C0T.isIdentityPermutation(e)?r=o[t]:(r=wa({inputs:{x:o[t]},backend:n,attrs:{perm:e}}),g.push(r));const i=r.shape.slice();for(let t=0;t<a.length;++t)i.splice(a[t],0,1);s.ZSL.arraysEqual(r.shape,i)||(r=ha({inputs:{x:r},backend:n,attrs:{shape:i}}),g.push(r)),null===p?p=r:(p=la({inputs:{a:r,b:p},backend:n}),g.push(p))}m<d-1&&(u[m]>=0&&(p=ya({inputs:{x:p},backend:n,attrs:{axis:u[m]-(i.length-f),keepDims:!1}}),g.push(p)),f--)}for(const s of g)s!==p&&n.disposeIntermediateTensorInfo(s);return p}},zr=ea({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Pr={kernelName:s.Pah,backendName:"webgl",kernelFunc:zr},Br={kernelName:s.rsH,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:a,y:r}=e,o=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Gn("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new Un("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(o,[a,r],a.dtype)}},Wr=na({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Re}),Ur={kernelName:s.BRl,backendName:"webgl",kernelFunc:Wr},Vr=ea({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(s.C0T.ERF_P,";\n  float a1 = ").concat(s.C0T.ERF_A1,";\n  float a2 = ").concat(s.C0T.ERF_A2,";\n  float a3 = ").concat(s.C0T.ERF_A3,";\n  float a4 = ").concat(s.C0T.ERF_A4,";\n  float a5 = ").concat(s.C0T.ERF_A5,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),Gr={kernelName:s._s9,backendName:"webgl",kernelFunc:Vr},Zr=ea({opSnippet:ta+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Fe,dtype:"float32"}),Kr={kernelName:s.ox3,backendName:"webgl",kernelFunc:Zr};function Hr(t){const{inputs:e,attrs:n,backend:a}=t,{dim:r}=n,{input:o}=e,i=o.shape.length,c=o.shape.slice();let l=r;return r<0&&(s.ZSL.assert(-(i+1)<=r,(()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]"))),l=i+r+1),c.splice(l,0,1),ha({inputs:{x:o},backend:a,attrs:{shape:c}})}const jr={kernelName:s.ybN,backendName:"webgl",kernelFunc:Hr},qr="return exp(x) - 1.0;",Yr=ea({opSnippet:qr,packedOpSnippet:qr,cpuKernelImpl:De}),Qr={kernelName:s.ybj,backendName:"webgl",kernelFunc:Yr};class Xr{constructor(t,e,n){this.variableNames=["real","imag"];const a=e[1];this.outputShape=e;const s=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),r=n?"".concat(a,".0"):"1.0";let o;if("real"===t)o="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error('FFT component must be either "real" or "imag", got '.concat(t,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(s,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(r,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function Jr(t,e,n){const a=n.texData.get(t.dataId),r=s.ZSL.sizeFromShape(t.shape),o=t.shape[t.shape.length-1],i=ha({inputs:{x:t},backend:n,attrs:{shape:[r/o,o]}}),c=i.shape,l=new Xr("real",c,e),u=new Xr("imag",c,e),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:c},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:c}],d=n.runWebGLProgram(l,h,"float32"),p=n.runWebGLProgram(u,h,"float32"),f=Hn({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const g=ha({inputs:{x:f},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),g}const $r={kernelName:s.rGP,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e;return Jr(a,!1,n)}};class to{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function eo(t){const{backend:e,attrs:n}=t,{shape:a,value:r}=n;let{dtype:o}=n;if(o=o||s.ZSL.inferDtype(r),"string"===o){const t=s.ZSL.getArrayFromDType(o,s.ZSL.sizeFromShape(a));return t.fill(r),e.makeTensorInfo(a,o,t)}{const t=new to(a,r),n=[[r]];return e.runWebGLProgram(t,[],o,n)}}const no={kernelName:s.SQl,backendName:"webgl",kernelFunc:eo};class ao{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(e," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(e,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const so={kernelName:s.BxF,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n}=t;const{image:a}=e,s=n,r=new ao(a.shape);return s.runWebGLProgram(r,[a],a.dtype)}},ro="return floor(x);",oo=ea({opSnippet:ro,packedOpSnippet:ro,cpuKernelImpl:_e}),io={kernelName:s.ZgB,backendName:"webgl",kernelFunc:oo},co=na({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),lo={kernelName:s.ElG,backendName:"webgl",kernelFunc:co};class uo{constructor(t){this.variableNames=["A"];const e=U(),[n,a]=t;this.outputShape=t,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(e.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class ho{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=U(),[n,a]=t;this.outputShape=t,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(e.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(e.output," = result;\n      }\n    ")}}const po={kernelName:s.awo,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t;let{pixels:r}=e;const{numChannels:o}=a,i="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,c="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[u,h]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[h,u],p=[h,u,o];if(c||i){const t=(0,s._K2)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=fo&&t===go||(go=t,fo=document.createElement("canvas").getContext("2d",{willReadFrequently:go})),fo.canvas.width=u,fo.canvas.height=h,fo.drawImage(r,0,0,u,h),r=fo.canvas}const f=n.makeTensorInfo(d,"int32");n.texData.get(f.dataId).usage=l.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),r);const g=(0,s._K2)().getBool("WEBGL_PACK")?new ho(p):new uo(p),m=n.runWebGLProgram(g,[f],"int32");return n.disposeData(f.dataId),m}};let fo,go=(0,s._K2)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const mo={kernelName:s.aAr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:o,bias:i,preluActivationWeights:c}=e,{strides:l,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:g}=a,m=s.C0T.convertConv2DDataFormat(h),b=s.C0T.computeConv2DInfo(r.shape,o.shape,l,d,u,p,!1,m);let x;const y=[],v=null!=i,w=null!=c,k="leakyrelu"===f,S=()=>{const t=[r,o],e=(t,e)=>{if("NCHW"===e&&1===t.shape.length&&1!==t.shape[0]){const e=ha({inputs:{x:t},backend:n,attrs:{shape:[t.shape[0],1,1]}});return y.push(e),e}return t};if(v&&t.push(e(i,h)),w&&t.push(e(c,h)),k){const e=n.makeTensorInfo([],"float32",s.ZSL.createScalarValue(g,"float32"));t.push(e),y.push(e)}return t};if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if(b.strideWidth<=2&&"channelsLast"===m&&(0,s._K2)().getBool("WEBGL_EXP_CONV")){const t=f?aa(f,!0):null,e=new js(b,v,t,w,k),a=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],s=S();x=n.runWebGLProgram(e,s,"float32",a)}else if((0,s._K2)().getBool("WEBGL_CONV_IM2COL"))x=Xs({x:r,filter:o,convInfo:b,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:g});else{const t=f?aa(f,!1):null,e=new Ks(b,v,t,w,k),a=S();x=n.runWebGLProgram(e,a,"float32")}else x=Qs({x:r,filter:o,convInfo:b,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:g});const T=ha({inputs:{x:x},backend:n,attrs:{shape:b.outShape}});return y.push(x),y.forEach((t=>n.disposeIntermediateTensorInfo(t))),T}};const bo={kernelName:s.T7M,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:o,bias:i,preluActivationWeights:c}=e,{strides:l,pad:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a,g=[];let m=h;null==m&&(m=[1,1]),s.ZSL.assert(s.C0T.eitherStridesOrDilationsAreOne(l,m),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(l," and dilations '").concat(m,"'")));const b=s.C0T.computeConv2DInfo(r.shape,o.shape,l,m,u,d,!0),x=(0,s._K2)().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels===1,y=p?aa(p,x):null,v=[r,o],w=null!=i,k=null!=c,S="leakyrelu"===p;if(w&&v.push(i),k&&v.push(c),S){const t=n.makeTensorInfo([],"float32",s.ZSL.createScalarValue(f,"float32"));v.push(t),g.push(t)}let T;T=x?new Cr(b,w,y,k,S):new Ir(b,w,y,k,S);const I=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],C=n.runWebGLProgram(T,v,"float32",I);return g.forEach((t=>n.disposeIntermediateTensorInfo(t))),C}};class xo{constructor(t,e,n,a){this.sliceDim=t,this.strides=e,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const s=at(n.length);let r="\n    int index;";for(let o=0;o<this.sliceDim;o++)r+="\n          index = round(getIndices(coords[0], ".concat(o,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[o],";\n          flattenIndex += index * ").concat(this.strides[o],";");this.userCode="\n         void main() {\n          ".concat(s," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(r,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const yo={kernelName:s.O4G,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:a,indices:r}=e,o=r.shape,i=o[o.length-1],c=s.ZSL.sizeFromShape(a.shape),[l,u,h,d]=s.C0T.prepareAndValidate(a,r),p=ha({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),f=ha({inputs:{x:a},backend:n,attrs:{shape:[s.ZSL.sizeFromShape(a.shape)/h,h]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const t=n.readSync(r.dataId),e=n.bufferSync(a),s=Le(t,e,a.dtype,u,i,h,d,a.shape,c);return n.makeTensorInfo(l,a.dtype,s.values)}const g=new xo(i,d,[u,h],a.shape),m=n.runWebGLProgram(g,[f,p],f.dtype),b=ha({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}};class vo{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=at(this.rank),a=function(t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<t.length;a++)2===a?n.push("index"):n.push("".concat(e[a]));return n.join()}(t);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(t[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function wo(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,indices:o}=e,{axis:i,batchDims:c}=a,l=s.ZSL.parseAxisParam(i,r.shape)[0];if((0,s._K2)().get("DEBUG")){const t=n.readSync(o.dataId),e=r.shape[l];for(let n=0;n<t.length;++n){const a=t[n];s.ZSL.assert(a<=e-1&&a>=0,(()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(e-1,"]")))}}const u=s.C0T.segment_util.collectGatherOpShapeInfo(r,o,l,c),h=s.ZSL.sizeFromShape(o.shape),d=[],p=ha({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=ha({inputs:{x:o},backend:n,attrs:{shape:[u.batchSize,h/u.batchSize]}});d.push(p),d.push(f);const g=[u.batchSize,u.outerSize,h/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,o])||"string"===r.dtype){const t=n.bufferSync(f),e=n.bufferSync(p),a=Oe(e,t,g);return d.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(u.outputShape,a.dtype,a.values)}const m=new vo(p.shape,g),b=n.runWebGLProgram(m,[p,f],p.dtype);d.push(b);const x=ha({inputs:{x:b},backend:n,attrs:{shape:u.outputShape}});return d.forEach((t=>n.disposeIntermediateTensorInfo(t))),x}const ko={kernelName:s.mxL,backendName:"webgl",kernelFunc:wo},So=na({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Me,dtype:"bool"}),To={kernelName:s.XhZ,backendName:"webgl",kernelFunc:So},Io=na({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:ze}),Co={kernelName:s.lLS,backendName:"webgl",kernelFunc:Io};const No={kernelName:s.OAQ,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e;return Jr(a,!0,n)}},Ao=ea({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Eo={kernelName:s.gIW,backendName:"webgl",kernelFunc:Ao},Ro=ea({opSnippet:"return float(isinf(x));",dtype:"bool"}),Fo={kernelName:s.E3$,backendName:"webgl",kernelFunc:Ro},Do=ea({opSnippet:"return float(isnan(x));",dtype:"bool"}),_o={kernelName:s.iPs,backendName:"webgl",kernelFunc:Do},Lo=na({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Pe,dtype:"bool"}),Oo={kernelName:s.mIA,backendName:"webgl",kernelFunc:Lo},Mo=na({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Be,dtype:"bool"}),zo={kernelName:s.CwD,backendName:"webgl",kernelFunc:Mo};const Po={kernelName:s.mnI,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:a,stop:s,num:r}=n,o=We(a,s,r);return e.makeTensorInfo([o.length],"float32",o)}},Bo=ea({opSnippet:ta+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Ue}),Wo={kernelName:s.tG8,backendName:"webgl",kernelFunc:Bo},Uo=ea({opSnippet:ta+"\n  return log(1.0 + x);\n"}),Vo={kernelName:s.Cg$,backendName:"webgl",kernelFunc:Uo},Go=na({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Zo={kernelName:s.RUm,backendName:"webgl",kernelFunc:Go},Ko=ea({opSnippet:"return float(!(x >= 1.0));"}),Ho={kernelName:s.nZd,backendName:"webgl",kernelFunc:Ko},jo=na({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),qo={kernelName:s.LXA,backendName:"webgl",kernelFunc:jo};class Yo{constructor(t,e,n,a,s){this.variableNames=["x"],this.outputShape=[];const r=e,o=t[3]-1;let i;this.outputShape=t;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===s?"inversesqrt(".concat(c,")"):1===s?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(s,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(r,"; j <= ").concat(r,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(o,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class Qo{constructor(t,e,n,a,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const r=e,o=t[3]-1;let i;this.outputShape=t;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===s?"inversesqrt(".concat(c,")"):1===s?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(s,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(r,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(r,"; j <= ").concat(r,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(o,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const Xo={kernelName:s.jM4,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{depthRadius:o,bias:i,alpha:c,beta:l}=a,u=(0,s._K2)().getBool("WEBGL_PACK_NORMALIZATION")?new Qo(r.shape,o,i,c,l):new Yo(r.shape,o,i,c,l);return n.runWebGLProgram(u,[r],r.dtype)}};class Jo{constructor(t,e,n,a,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=a,this.beta=s,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(e,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(e," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(s,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(s,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const $o={kernelName:s.ToN,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:s,y:r,dy:o}=e,{depthRadius:i,bias:c,alpha:l,beta:u}=a,h=new Jo(s.shape,i,c,l,u);return n.runWebGLProgram(h,[s,r,o],s.dtype)}};function ti(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{reductionIndices:o,keepDims:i}=a,c=r.shape.length,l=s.ZSL.parseAxisParam(o,r.shape);let u=l;const h=s.C0T.getAxesPermutation(u,c),d=null!=h,p=n.shouldExecuteOnCPU([r]);let f=r;if(d){if(p){const t=n.texData.get(f.dataId).values,e=new Array(c);for(let n=0;n<e.length;n++)e[n]=r.shape[h[n]];const a=bn(t,r.shape,r.dtype,h,e);f=n.makeTensorInfo(e,r.dtype);n.texData.get(f.dataId).values=a}else f=xa(r,h,n);u=s.C0T.getInnerMostAxes(u.length,c)}s.C0T.assertAxesAreInnerMostDims("max",u,c);const[g,m]=s.C0T.computeOutAndReduceShapes(f.shape,u);let b,x=g;if(i&&(x=s.C0T.expandShapeToKeepDim(g,l)),p){const t=n.texData.get(f.dataId).values,e=Ve(t,s.ZSL.sizeFromShape(m),x,r.dtype);b=n.makeTensorInfo(x,r.dtype);n.texData.get(b.dataId).values=e}else b=function(t,e,n,a){const r=s.ZSL.sizeFromShape(e),o=ha({inputs:{x:t},attrs:{shape:[s.ZSL.sizeFromShape(t.shape)/r,r]},backend:a}),i=ga(o,t.dtype,"max",a),c=ha({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(i),c}(f,m,x,n);return d&&n.disposeIntermediateTensorInfo(f),b}const ei={kernelName:s.VAI,backendName:"webgl",kernelFunc:ti},ni=na({opSnippet:Wn+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Vn+"\n  return result;\n",cpuKernelImpl:Ge}),ai={kernelName:s.LDN,backendName:"webgl",kernelFunc:ni};const si={kernelName:s.t3d,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e;B(r,"maxPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;s.ZSL.assert(s.C0T.eitherStridesOrDilationsAreOne(i,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'")));const u=s.C0T.computePool2DInfo(r.shape,o,i,1,c,l);if(1===u.filterWidth&&1===u.filterHeight&&s.ZSL.arraysEqual(u.inShape,u.outShape))return Zn({inputs:{x:r},backend:n});const h=new ns(u,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};const ri={kernelName:s.ySp,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{filterSize:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,h=s.C0T.computePool3DInfo(r.shape,o,i,[1,1,1],c,u,l),d=new as(h,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}};class oi{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,a=t.dilationHeight,s=t.effectiveFilterHeight,r=t.effectiveFilterWidth,o=s-1-t.padInfo.top,i=r-1-t.padInfo.left,c=s*r-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(s,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(e,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(r,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(r," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class ii{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,a=t.strideWidth,s=t.dilationDepth,r=t.dilationHeight,o=t.dilationWidth,i=t.effectiveFilterDepth,c=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=i-1-t.padInfo.front,h=c-1-t.padInfo.top,d=l-1-t.padInfo.left,p=i*c*l-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(u,", ").concat(h,", ").concat(d,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(s,") {\n          float dyD = float(dyDCorner + wD) / ").concat(e,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(r,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(o,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(l," +\n                  wR * ").concat(l," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const ci={kernelName:s.cHb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:o}=e,i=o,{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=s.C0T.computePool3DInfo(i.shape,c,l,[1,1,1],u,h),p=new as(d,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),g=new ii(d),m=n.runWebGLProgram(g,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),m}};const li={kernelName:s.RXX,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:o,output:i}=e,c=o;B([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:h,dimRoundingMode:d}=a,p=s.C0T.computePool2DInfo(c.shape,l,u,1,h,d),f=new ns(p,"max",!0),g=n.runWebGLProgram(f,[c],c.dtype),m=new oi(p),b=n.runWebGLProgram(m,[r,g],c.dtype);return n.disposeIntermediateTensorInfo(g),b}};const ui={kernelName:s.TL8,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{x:r}=e,{filterSize:o,strides:i,pad:c,includeBatchInIndex:l}=n,u=a;s.ZSL.assert(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const h=[1,1];s.ZSL.assert(s.C0T.eitherStridesOrDilationsAreOne(i,h),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(h,"'")));const d=s.C0T.computePool2DInfo(r.shape,o,i,h,c),[p,f]=function(t,e,n,a){let s=new ns(n,"max",!1);const r=a.runWebGLProgram(s,[t],"float32");return s=new ns(n,"max",!0,!0,e),[r,a.runWebGLProgram(s,[t],"float32")]}(r,l,d,u);return[p,f]}};const hi={kernelName:s.g5A,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{x:r}=e,{keepDims:o,axis:i}=n,c=a,l=r.shape.length,u=s.ZSL.parseAxisParam(i,r.shape);let h=u;const d=s.C0T.getAxesPermutation(h,l),p=null!=d,f=c.shouldExecuteOnCPU([r]),g=[];let m=r;if(p){if(f){const t=c.texData.get(m.dataId).values,e=new Array(l);for(let a=0;a<e.length;a++)e[a]=r.shape[d[a]];const n=bn(t,r.shape,r.dtype,d,e);m=c.makeTensorInfo(e,r.dtype);c.texData.get(m.dataId).values=n}else m=xa(r,d,c);g.push(m),h=s.C0T.getInnerMostAxes(h.length,l)}s.C0T.assertAxesAreInnerMostDims("sum",h,l);const[b,x]=s.C0T.computeOutAndReduceShapes(m.shape,h);let y=b;o&&(y=s.C0T.expandShapeToKeepDim(b,u));const v=function(t,e,n,a){const r=s.ZSL.sizeFromShape(e),o=ha({inputs:{x:t},attrs:{shape:[s.ZSL.sizeFromShape(t.shape)/r,r]},backend:a}),i=ga(o,"float32","mean",a),c=ha({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(i),c}(m,x,y,c);for(const s of g)c.disposeIntermediateTensorInfo(s);return v}};const di={kernelName:s.lNG,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,keepDims:i}=a,c=r.shape.length,l=s.ZSL.parseAxisParam(o,r.shape);let u=l;const h=s.C0T.getAxesPermutation(u,c);let d=r;null!=h&&(d=wa({inputs:{x:r},backend:n,attrs:{perm:h}}),u=s.C0T.getInnerMostAxes(u.length,r.shape.length)),s.C0T.assertAxesAreInnerMostDims("min",u,c);const[p,f]=s.C0T.computeOutAndReduceShapes(d.shape,u),g=ha({inputs:{x:d},backend:n,attrs:{shape:[-1,s.ZSL.sizeFromShape(f)]}}),m=ga(g,g.dtype,"min",n);let b;if(i){b=ha({inputs:{x:m},backend:n,attrs:{shape:s.C0T.expandShapeToKeepDim(p,l)}})}else b=ha({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=h&&n.disposeIntermediateTensorInfo(d),b}},pi=na({opSnippet:Wn+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Vn+"\n  return result;\n",cpuKernelImpl:Ze}),fi={kernelName:s.LG0,backendName:"webgl",kernelFunc:pi};class gi{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,s=at(a),r=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(s," start = ").concat(s,"(").concat(r,");\n      ").concat(s," end = ").concat(s,"(").concat(o,");\n\n      void main() {\n        ").concat(s," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(s," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(r,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class mi{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,s=at(a),r=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=vn("rc",a),c=vn("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h="reflect"===n?0:1;let d="";if(1===a){const t="\n        ".concat(s," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(h,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(h,";\n        }\n        source -= start;\n      ");d="\n        ".concat(s," rc = outputLoc;\n        ").concat(t,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(t,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ")}else{const t="\n        ".concat(s," source = rc;\n        ").concat(s," lt = ").concat(s,"(lessThan(source, start));\n        ").concat(s," gte = ").concat(s,"(greaterThanEqual(source, end));\n        ").concat(s," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(h,") +\n                gte * ((end - 1) * 2 - source + ").concat(h,");\n        source -= start;\n      ");d="\n        ".concat(s," rc = outputLoc;\n        ").concat(t,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(t,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(t,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(l,") {\n            ").concat(t,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(s," start = ").concat(s,"(").concat(r,");\n      const ").concat(s," end = ").concat(s,"(").concat(o,");\n\n      void main() {\n        ").concat(s," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(d,"\n        setOutput(result);\n      }\n    ")}}const bi={kernelName:s.x7F,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n,attrs:a}=t;const{x:r}=e,{paddings:o,mode:i}=a,c=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mi(r.shape,o,i):new gi(r.shape,o,i);return n.runWebGLProgram(c,[r],r.dtype)}},xi=na({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+Vn+"\n  return result;\n"}),yi={kernelName:s.BLA,backendName:"webgl",kernelFunc:xi};class vi{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(e-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(e-1,"));\n      }\n    ")}}const wi=na({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),ki={kernelName:s.sDr,backendName:"webgl",kernelFunc:wi},Si="return a - b;",Ti=na({opSnippet:Si,packedOpSnippet:Si,supportsComplex:!0,cpuKernelImpl:fn}),Ii={kernelName:s.PbM,backendName:"webgl",kernelFunc:Ti};function Ci(t){const{inputs:e,backend:n,attrs:a}=t,{logits:r}=e,{dim:o}=a,i=s.ZSL.parseAxisParam([o],r.shape),c=ti({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=s.C0T.expandShapeToKeepDim(c.shape,i),u=ha({inputs:{x:c},backend:n,attrs:{shape:l}}),h=Ti({inputs:{a:r,b:u},backend:n}),d=Zr({inputs:{x:h},backend:n}),p=ya({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),f=ha({inputs:{x:p},backend:n,attrs:{shape:l}}),g=wi({inputs:{a:d,b:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}const Ni={kernelName:s.rFG,backendName:"webgl",kernelFunc:Ci};const Ai={kernelName:s.WT3,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{logits:s}=e,{numSamples:r,seed:o,normalized:i}=a,c=i?s:Ci({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=c.shape[0],u=c.shape[1],h=new vi(l,u,r),d=[[o]],p=n.runWebGLProgram(h,[c],"int32",d);return i||n.disposeIntermediateTensorInfo(c),p}},Ei=An+"\n  return -x;\n";const Ri={kernelName:s.l0G,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;if(n.shouldExecuteOnCPU([a])){const t=n.texData.get(a.dataId),[e,s]=He(t.values,a.shape,a.dtype);return n.makeTensorInfo(s,a.dtype,e)}let r;return r=(0,s._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new _n(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Nn(a.shape,Ei),n.runWebGLProgram(r,[a],a.dtype)}},Fi=s.kpo.c7;const Di={kernelName:s.SDM,backendName:"webgl",kernelFunc:function(t){s.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l}=a,u=n.readSync(r.dataId),h=n.readSync(o.dataId),{selectedIndices:d}=Fi(u,h,i,c,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},_i=s.kpo.ZS;const Li={kernelName:s.Zl4,backendName:"webgl",kernelFunc:function(t){s.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l,padToMaxOutputSize:u}=a,h=n.readSync(r.dataId),d=n.readSync(o.dataId),{selectedIndices:p,validOutputs:f}=_i(h,d,i,c,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},Oi=s.kpo.ut;const Mi={kernelName:s.e0f,backendName:"webgl",kernelFunc:function(t){s.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l,softNmsSigma:u}=a,h=n.readSync(r.dataId),d=n.readSync(o.dataId),p=i,f=c,g=l,m=u,{selectedIndices:b,selectedScores:x}=Oi(h,d,p,f,g,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}};class zi{constructor(t,e,n,a){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const Pi={kernelName:s.urI,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{indices:r}=e,{dtype:o,depth:i,onValue:c,offValue:l}=a,u=s.ZSL.sizeFromShape(r.shape),h=new zi(u,i,c,l),d=ha({inputs:{x:r},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(h,[d],o);n.disposeIntermediateTensorInfo(d);const f=ha({inputs:{x:p},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeIntermediateTensorInfo(p),f}};function Bi(t){const{inputs:e,backend:n}=t,{x:a}=e;if("complex64"===a.dtype){const t=Is({inputs:{input:a},backend:n}),e=Bi({inputs:{x:t},backend:n}),s=Ws({inputs:{input:a},backend:n}),r=Bi({inputs:{x:s},backend:n}),o=Hn({inputs:{real:e,imag:r},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),o}return eo({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const Wi={kernelName:s.xJ3,backendName:"webgl",kernelFunc:Bi};const Ui={kernelName:s.LWX,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:a}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const e=Is({inputs:{input:s},backend:a}),n=t({inputs:{x:e},backend:a}),r=Ws({inputs:{input:s},backend:a}),o=Bi({inputs:{x:r},backend:a}),i=Hn({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(o),i}return eo({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:a})}};const Vi={kernelName:s.mM$,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{axis:r}=a;if(1===e.length)return Hr({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach((t=>{s.ZSL.assertShapesMatch(o,t.shape,"All tensors passed to stack must have matching shapes"),s.ZSL.assert(i===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const c=[],l=Gs({inputs:e.map((t=>{const e=Hr({inputs:{input:t},backend:n,attrs:{dim:r}});return c.push(e),e})),backend:n,attrs:{axis:r}});return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}};class Gi{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,s=at(a),r=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(s," start = ").concat(s,"(").concat(r,");\n      ").concat(s," end = ").concat(s,"(").concat(o,");\n\n      void main() {\n        ").concat(s," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(s," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(r,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class Zi{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,s=at(a),r=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=vn("rc",a),c=vn("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h=["".concat(s," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(l,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(l,") {")],d=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,g=1===a?2:4;f<g;f++)p+="\n        ".concat(h[f],"\n        if (").concat(d,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(s," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ");p+=1===a?"} ":"}}",this.userCode="\n      const ".concat(s," start = ").concat(s,"(").concat(r,");\n      const ").concat(s," end = ").concat(s,"(").concat(o,");\n\n      void main() {\n        ").concat(s," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const Ki=t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{paddings:o,constantValue:i}=a;if(0===s.ZSL.sizeFromShape(r.shape)){return eo({backend:n,attrs:{shape:o.map(((t,e)=>t[0]+r.shape[e]+t[1])),value:i,dtype:r.dtype}})}const c=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Zi(r.shape,o,i):new Gi(r.shape,o,i),l=[[i]];return n.runWebGLProgram(c,[r],r.dtype,l)},Hi={kernelName:s.ODT,backendName:"webgl",kernelFunc:Ki},ji=na({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+Vn+"\n  return result;\n"}),qi={kernelName:s.pyJ,backendName:"webgl",kernelFunc:ji};const Yi={kernelName:s.kdj,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:o,keepDims:i}=a,c=r.shape.length,l=[],u=s.ZSL.parseAxisParam(o,r.shape);let h=u;const d=s.C0T.getAxesPermutation(h,c);let p,f=r;if(null!=d&&(f=wa({inputs:{x:r},backend:n,attrs:{perm:d}}),h=s.C0T.getInnerMostAxes(h.length,c),l.push(f)),s.C0T.assertAxesAreInnerMostDims("prod",h,c),n.shouldExecuteOnCPU([f])){const t=n.texData.get(f.dataId).values,{outVals:e,outShape:a,outDtype:s}=qe(f.shape,f.dtype,t,h);p=n.makeTensorInfo(a,s,e)}else{const[t,e]=s.C0T.computeOutAndReduceShapes(f.shape,h),a=s.ZSL.sizeFromShape(e),o=ha({inputs:{x:f},backend:n,attrs:{shape:[-1,a]}}),i=ga(o,(0,s.chL)(r.dtype),"prod",n);p=ha({inputs:{x:i},backend:n,attrs:{shape:t}}),l.push(o),l.push(i)}if(i){l.push(p);const t=s.C0T.expandShapeToKeepDim(p.shape,u);p=ha({inputs:{x:p},backend:n,attrs:{shape:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}};const Qi={kernelName:s.oJ2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{paramsNestedSplits:s,paramsDenseValues:r,indices:o}=e,{outputRaggedRank:i}=a,c=s.map((t=>n.readSync(t.dataId))),l=s.map((t=>t.shape)),u=n.readSync(r.dataId),h=n.readSync(o.dataId),[d,p,f]=Ye(c,l,u,r.shape,r.dtype,h,o.shape,i),g=d.map((t=>n.makeTensorInfo([t.length],"int32",t))),m=n.makeTensorInfo(f,r.dtype,p);return g.concat([m])}};const Xi={kernelName:s.CQC,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{starts:a,limits:s,deltas:r}=e,o=n.readSync(a.dataId),i=n.readSync(s.dataId),c=n.readSync(r.dataId),[l,u]=Qe(o,a.shape,a.dtype,i,s.shape,c,r.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};const Ji={kernelName:s.mH5,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{shape:s,values:r,defaultValue:o,rowPartitionTensors:i}=e,{rowPartitionTypes:c}=a,l=n.readSync(s.dataId),u=n.readSync(r.dataId),h=n.readSync(o.dataId),d=i.map((t=>n.readSync(t.dataId))),p=i.map((t=>t.shape)),[f,g]=Xe(l,s.shape,u,r.shape,r.dtype,h,o.shape,d,p,c);return n.makeTensorInfo(f,r.dtype,g)}},$i=t=>{const{backend:e,attrs:n}=t,{start:a,stop:s,step:r,dtype:o}=n,i=Je(a,s,r,o);return e.makeTensorInfo([i.length],o,i)},tc={kernelName:s.Q6t,backendName:"webgl",kernelFunc:$i},ec=ea({opSnippet:"return 1.0 / x;"}),nc={kernelName:s.huO,backendName:"webgl",kernelFunc:ec},ac=ea({opSnippet:An+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),sc={kernelName:s.fUj,backendName:"webgl",kernelFunc:ac},rc=ea({opSnippet:An+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),oc={kernelName:s.P_L,backendName:"webgl",kernelFunc:rc};class ic{constructor(t,e,n,a,s){this.variableNames=["A"],this.outputShape=[];const[r,o,i,c]=t;this.outputShape=[r,e,n,c];const l=[a&&e>1?o-1:o,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class cc{constructor(t,e,n,a,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,o,i,c]=t;this.outputShape=[r,e,n,c];const l=[a&&e>1?o-1:o,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const lc={kernelName:s.hgw,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:c}=a,[l,u]=c,h=(0,s._K2)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new cc(r.shape,l,u,o,i):new ic(r.shape,l,u,o,i);return n.runWebGLProgram(h,[r],"float32")}};class uc{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,s]=e,[,r,o]=t,i=[n&&r>1?a-1:a,n&&o>1?s-1:s],c=[n&&r>1?r-1:r,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(r,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(s-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const hc={kernelName:s.FCQ,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:s,dy:r}=e,{alignCorners:o}=a,i=new uc(r.shape,s.shape,o);return n.runWebGLProgram(i,[r],r.dtype)}};class dc{constructor(t,e,n,a,s){this.variableNames=["A"],this.outputShape=[];const[r,o,i,c]=t;this.outputShape=[r,e,n,c];const l=[a&&e>1?o-1:o,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class pc{constructor(t,e,n,a,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,o,i,c]=t;this.outputShape=[r,e,n,c];const l=[a&&e>1?o-1:o,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const fc={kernelName:s.jOE,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:c}=a,[l,u]=c,h=(0,s._K2)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new pc(r.shape,l,u,o,i):new dc(r.shape,l,u,o,i);return n.runWebGLProgram(h,[r],r.dtype)}};class gc{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,s]=e,[,r,o]=t,i=[n&&r>1?a-1:a,n&&o>1?s-1:s],c=[n&&r>1?r-1:r,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(r,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(s,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const mc={kernelName:s.XQy,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:s,dy:r}=e,{alignCorners:o}=a,i=new gc(r.shape,s.shape,o);return n.runWebGLProgram(i,[r],r.dtype)}};class bc{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=t,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(t[0]," - coord - 1));\n        }\n      "));const a=t.map(((n,a)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?"".concat(t[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),s=at(n);this.userCode="\n      void main() {\n        ".concat(s," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class xc{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=t;const a=vn("rc",n),s="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),r="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),o=at(n);function i(n){const a=t.map(((a,s)=>function(n,a){return-1!==e.indexOf(n)&&1!==t[n]?"".concat(t[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(s,n))),s=a.join(","),r=a.slice(-2).join(",");return"getChannel(getX(".concat(s,"), vec2(").concat(r,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(t[0]," - rc - 1),\n            ").concat(t[0]," - rc - 1);\n          if(").concat(s,"){\n              result.g = getChannel(getX(").concat(t[0]," - (rc  + 1) - 1),\n                ").concat(t[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(o," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(t){return i(t)}(a.slice()),";\n          if(").concat(s,"){\n            result.g = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",i(t)}(a.slice()),";\n          }\n          if(").concat(r,") {\n            result.b = ").concat(function(t){return t[n-2]="("+t[n-2]+" + 1)",i(t)}(a.slice()),";\n            if(").concat(s,") {\n              result.a = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",i(t)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const yc={kernelName:s.D7i,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{dims:o}=a,i=r.shape.length,c=s.ZSL.parseAxisParam(o,r.shape);if(0===i)return Zn({inputs:{x:r},backend:n});const l=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xc(r.shape,c):new bc(r.shape,c);return n.runWebGLProgram(l,[r],r.dtype)}};class vc{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],a=t[2];this.outputShape=t;let s="";s="number"===typeof e?"float outputValue = ".concat(e.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(e.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(s,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const wc={kernelName:s.BK4,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{image:r}=e,{radians:o,fillValue:i,center:c}=n,l=a,u=new vc(r.shape,i),[h,d]=s.C0T.getImageCenter(c,r.shape[1],r.shape[2]),p=[[h,d,Math.sin(o),Math.cos(o)]];return l.runWebGLProgram(u,[r],r.dtype,p)}},kc=ea({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Sc={kernelName:s.hVg,backendName:"webgl",kernelFunc:kc},Tc=ea({opSnippet:"return inversesqrt(x);",cpuKernelImpl:$e}),Ic={kernelName:s.TOR,backendName:"webgl",kernelFunc:Tc};class Cc{constructor(t,e,n,a,s,r){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=r;const i=at(s.length),c=at(r.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),g=e>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(s,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(t,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(e,"; j++) {\n              int index = round(").concat(u,");\n              flattenedIndex += index * ").concat(g,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(d,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(f,", sum, float(found)));\n        }\n      ")}}class Nc{constructor(t,e,n,a,s,r){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r;const i=at(s.length),c=at(r.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),g=e>1?"strides[j]":"strides",m=e>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(s,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(t,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(e,"; j+=2) {\n              ivec4 index = round(").concat(u,");\n              flattenedIndex += index.xz * ").concat(g,";\n              if (j + 1 < ").concat(e,") {\n                flattenedIndex += index.yw * ").concat(m,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(d,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(f,", sum, found));\n        }\n      ")}}const Ac={kernelName:s.pJc,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{indices:r,updates:o}=e,{shape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=s.C0T.calculateShapes(o,r,i),p=[d/u,u];if(0===d)return n.makeTensorInfo(i,r.dtype);const f=ha({inputs:{x:r},backend:n,attrs:{shape:[l,c]}}),g=ha({inputs:{x:o},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let b;b=(0,s._K2)().getBool("WEBGL_PACK")?new Nc(l,c,f.shape.length,g.shape.length,h,p):new Cc(l,c,f.shape.length,g.shape.length,h,p);const x=n.runWebGLProgram(b,[g,f,m],g.dtype),y=ha({inputs:{x:x},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(m),y}};class Ec{constructor(t,e,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];const r="for (int i = 0; i < ".concat(Math.ceil(Math.log2(e+1)),"; ++i) { if (left >= right) break;"),o=2===(0,s._K2)().getNumber("WEBGL_VERSION")?"while (left < right) {":r,i="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(o,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(i," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const Rc={kernelName:s.uWl,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{sortedSequence:s,values:r}=e,{side:o}=a,i=new Ec(s.shape[0],s.shape[1],r.shape[1],o),c=[[s.shape[1]]];return n.runWebGLProgram(i,[s,r],"int32",c)}};class Fc{constructor(t,e,n){let a,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)s="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],o=[];for(let a=0;a<e.length;a++)o.push("".concat(n[a])),a<t&&r.push("".concat(n[a]));a=r.join(),s=o.join()}const r=at(n);this.userCode="\n      void main() {\n        ".concat(r," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(s,"));\n        } else {\n          setOutput(getB(").concat(s,"));\n        }\n      }\n    ")}}const Dc={kernelName:s.l6P,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:a,t:r,e:o}=e,i=new Fc(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[a,r,o],(0,s.TuY)(r.dtype,o.dtype))}},_c=ea({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(s.C0T.SELU_SCALEALPHA,";\n  float scale = ").concat(s.C0T.SELU_SCALE,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),Lc={kernelName:s.u$b,backendName:"webgl",kernelFunc:_c},Oc=ea({opSnippet:ta+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:en}),Mc={kernelName:s.vI1,backendName:"webgl",kernelFunc:Oc},zc=ea({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Pc={kernelName:s.YVe,backendName:"webgl",kernelFunc:zc},Bc=ea({opSnippet:ta+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Vn,"\n  return result;\n")}),Wc={kernelName:s.hql,backendName:"webgl",kernelFunc:Bc},Uc=ea({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Vc={kernelName:s.J3C,backendName:"webgl",kernelFunc:Uc},Gc=ea({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Zc={kernelName:s.Fin,backendName:"webgl",kernelFunc:Gc},Kc={kernelName:s.A8B,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockShape:o,paddings:i}=a;s.ZSL.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const c=o.reduce(((t,e)=>t*e)),l=[[0,0]];l.push(...i);for(let s=1+o.length;s<r.shape.length;++s)l.push([0,0]);const u=[],h=Ki({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=s.C0T.getReshaped(h.shape,o,c,!1),p=s.C0T.getPermuted(d.length,o.length,!1),f=s.C0T.getReshapedPermuted(h.shape,o,c,!1),g=ha({inputs:{x:h},backend:n,attrs:{shape:d}}),m=wa({inputs:{x:g},backend:n,attrs:{perm:p}}),b=ha({inputs:{x:m},backend:n,attrs:{shape:f}});return u.push(h),u.push(g),u.push(m),u.forEach((t=>n.disposeIntermediateTensorInfo(t))),b}};const Hc={kernelName:s.C8s,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:a,values:s,denseShape:r,defaultValue:o}=e;if(1!==r.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(r.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==s.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(s.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.readSync(a.dataId),c=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(o.dataId)[0],[h,d,p,f,g]=sn(i,a.shape,a.dtype,c,s.dtype,l,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([g.length],a.dtype,new Int32Array(g))]}};const jc={kernelName:s.BoJ,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:a,inputShape:s,newShape:r}=e;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==s.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(s.shape));if(1!==r.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(r.shape));const o=Array.from(n.readSync(s.dataId)),i=n.readSync(a.dataId),c=Array.from(n.readSync(r.dataId)),[l,u,h]=rn(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}};const qc={kernelName:s.L6G,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:a,indices:s,segmentIds:r}=e;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(s.shape));if(1!==r.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(r.shape));const o=n.readSync(a.dataId),i=n.readSync(s.dataId),c=n.readSync(r.dataId),[l,u]=on(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const Yc={kernelName:s.DvZ,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:a,indices:s,segmentIds:r}=e;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(s.shape));if(1!==r.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(r.shape));const o=n.readSync(a.dataId),i=n.readSync(s.dataId),c=n.readSync(r.dataId),[l,u]=on(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const Qc={kernelName:s.jgd,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:c}=a,{sliceRank:l,numUpdates:u,sliceSize:h,strides:d,outputSize:p}=s.C0T.calculateShapes(o,r,c),f=!1;if("string"===o.dtype){const t=n.bufferSync(r),e=n.bufferSync(o),a=s.ZSL.decodeString(n.readSync(i.dataId)[0]),g=tn(t,e,c,p,h,u,l,d,a,f);return n.makeTensorInfo(c,g.dtype,g.values)}const g=new Cc(u,l,r.shape.length,o.shape.length,d,[p,1],f),m=n.runWebGLProgram(g,[o,r,i],o.dtype),b=ha({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),b}};const Xc={kernelName:s.Blb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{numOrSizeSplits:o,axis:i}=a,c=s.ZSL.parseAxisParam(i,r.shape)[0],l=s.C0T.prepareSplitSize(r,o,c),u=r.shape.length,h=new Array(u).fill(0),d=r.shape.slice();return l.map((t=>{const e=[...d];e[c]=t;const a=bs({inputs:{x:r},backend:n,attrs:{begin:h,size:e}});return h[c]+=t,a}))}},Jc="return sqrt(x);",$c=ea({opSnippet:Jc,packedOpSnippet:Jc,cpuKernelImpl:cn}),tl={kernelName:s.dFH,backendName:"webgl",kernelFunc:$c},el=ea({opSnippet:"return x * x;"}),nl={kernelName:s.M6A,backendName:"webgl",kernelFunc:el},al="return (a - b) * (a - b);",sl=na({opSnippet:al,packedOpSnippet:al}),rl={kernelName:s.Ddj,backendName:"webgl",kernelFunc:sl};const ol={kernelName:s.GZp,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const o=n.readSync(r.dataId),i=s.C0T.fromUint8ToStringArray(o),c=ln(i,"string",a);return n.makeTensorInfo(r.shape,"string",c)}};const il={kernelName:s.pnw,backendName:"webgl",kernelFunc:function(t){let{inputs:e,attrs:n,backend:a}=t;const{x:s}=e,r=An+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),o=new Nn(s.shape,r);return a.runWebGLProgram(o,[s],s.dtype)}};class cl{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,s=at(n.length),r=at(n.length);let o="";if(1===a)o="coords * strides + begin";else{let t=0;o=n.map(((e,a)=>(t++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(t-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(s," begin = ").concat(s,"(").concat(t,");\n      ").concat(s," strides = ").concat(s,"(").concat(e,");\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(o,"));\n      }\n    ")}}const ll={kernelName:s.UcO,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{begin:o,end:i,strides:c,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=a,{finalShapeSparse:f,finalShape:g,isIdentity:m,sliceDim0:b,isSimpleSlice:x,begin:y,end:v,strides:w}=s.Kro.sliceInfo(r.shape,o,i,c,l,u,h,d,p);let k;if(m)k=ha({inputs:{x:r},backend:n,attrs:{shape:g}});else if(b||x){s.ZSL.assert(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const t=s.Kro.computeOutShape(y,v,w),e=bs({inputs:{x:r},backend:n,attrs:{begin:y,size:t}});k=ha({inputs:{x:e},backend:n,attrs:{shape:g}}),n.disposeIntermediateTensorInfo(e)}else{if(n.shouldExecuteOnCPU([r])){const t=n.readSync(r.dataId),e=(0,s.ra8)(r.shape,r.dtype,t),a=un(f,e,w,y);k=n.makeTensorInfo(g,r.dtype,a.values)}else{const t=new cl(y,w,f);k=n.runWebGLProgram(t,[r],r.dtype)}}const S=ha({inputs:{x:k},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(k),S}};const ul={kernelName:s.YAb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{separator:s,nGramWidths:r,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:h}=e,d=n.readSync(u.dataId),p=n.readSync(h.dataId),[f,g]=hn(d,p,s,r,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}};const hl={kernelName:s.iW0,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{skipEmpty:s}=a,{input:r,delimiter:o}=e;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(1!==r.shape.length)throw new Error("Input must be a vector, got shape: ".concat(r.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.readSync(r.dataId),c=n.readSync(o.dataId)[0],[l,u,h]=dn(i,c,s),d=u.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const dl={kernelName:s.$jE,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{numBuckets:s}=a,{input:r}=e;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(r.dataId),i=pn(o,s);return n.makeTensorInfo(r.shape,"int32",i)}},pl=ea({opSnippet:"return tan(x);"}),fl={kernelName:s.oFs,backendName:"webgl",kernelFunc:pl},gl=ea({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),ml={kernelName:s.iuW,backendName:"webgl",kernelFunc:gl};const bl={kernelName:s.X4r,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{tensor:r,indices:o,updates:i}=e,{}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=s.C0T.calculateShapes(i,o,r.shape),p=[d/u,u];if(0===d)return n.makeTensorInfo(r.shape,o.dtype);const f=ha({inputs:{x:o},backend:n,attrs:{shape:[l,c]}}),g=ha({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=ha({inputs:{x:r},backend:n,attrs:{shape:p}}),b=new Cc(l,c,f.shape.length,g.shape.length,h,p,!1,!0),x=n.runWebGLProgram(b,[g,f,m],m.dtype),y=ha({inputs:{x:x},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),y}};class xl{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const a=at(this.rank),s=function(t){const e=t.length;if(e>5)throw Error("Tile for rank ".concat(e," is not yet supported"));if(1===e)return"imod(resRC, ".concat(t[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let s=0;s<t.length;s++)a.push("imod(".concat(n[s],", ").concat(t[s],")"));return a.join()}(t);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(s,"));\n      }\n    ")}}function yl(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{reps:o}=a;if("string"===r.dtype||r.shape.length>5){const t=n.readSync(r.dataId),e="string"===r.dtype?t.map((t=>s.ZSL.decodeString(t))):t,a=(0,s.ra8)(r.shape,r.dtype,e),i=gn(a,o);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new xl(r.shape,o);return n.runWebGLProgram(i,[r],r.dtype)}const vl={kernelName:s.FAs,backendName:"webgl",kernelFunc:yl};class wl{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class kl{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Sl(t,e){null!==e&&t.disposeIntermediateTensorInfo(e)}function Tl(t){let e=1;for(;e<t;)e*=2;return e}const Il={kernelName:s.TBb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{k:o,sorted:i}=a,c=(0,s._K2)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,s._K2)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,h=u[u.length-1];if(n.shouldExecuteOnCPU([r])||h<c||o>l){const t=n.readSync(r.dataId),[e,a]=mn(t,u,r.dtype,o,i);return[n.makeTensorInfo(e.shape,e.dtype,e.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===o)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===h)return[r,eo({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const d=n.texData.get(r.dataId),p=null!==d&&d.isPacked,f=p?n.unpackTensor(r):r,g=s.ZSL.sizeFromShape(u)/h,m=ha({inputs:{x:f},attrs:{shape:[g,h]},backend:n});p&&Sl(n,f);const b=Tl(o),x=Tl(h);let y=null;const v=()=>null===y?[m,m]:[m,y],w=(t,e,a)=>{const s=v(),r=new wl(a),o=[[h],[null===y?1:0],[Number.NEGATIVE_INFINITY],[t],[e]],i=y;y=n.runWebGLProgram(r,s,"int32",o),Sl(n,i)};for(let s=1;s<b;s*=2){const t=2*s;for(let e=s;e>=1;e/=2)w(t,e,[g,x])}for(let s=x;s>b;s/=2){const t=v(),e=new kl([g,s/2]),a=[[h],[null===y?1:0],[b]],r=y;y=n.runWebGLProgram(e,t,"int32",a),Sl(n,r);const o=b/2,i=2*o;for(let n=o;n>=1;n/=2)w(i,n,y.shape)}let k=y;y=bs({inputs:{x:y},backend:n,attrs:{begin:0,size:[g,o]}}),Sl(n,k);let S=wo({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});Sl(n,m);const T=u.slice(0,-1);T.push(o),k=y,y=ha({inputs:{x:y},attrs:{shape:T},backend:n}),Sl(n,k);const I=S;return S=ha({inputs:{x:S},attrs:{shape:T},backend:n}),Sl(n,I),[S,y]}};class Cl{constructor(t,e,n,a,s,r){this.variableNames=["Image","Transforms"],this.outputShape=r;const o="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(t," && 0 <= coordX && coordX < ").concat(e,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(s,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(s,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(e,"));\n                float mapY = mapCoord(inY, float(").concat(t,"));\n\n                if (").concat(o," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const Nl={kernelName:s.dLy,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{image:s,transforms:r}=e,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=a,[u,h,d,p]=s.shape,[f,g]=null!=l?l:[h,d],m=new Cl(h,d,o,i,c,[u,f,g,p]);return n.runWebGLProgram(m,[s,r],"float32")}};const Al={kernelName:s.EwU,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:a}=t,{axis:s}=n,{x:r}=e;B(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=a.readSync(r.dataId),{outputValues:i,outputShape:c,indices:l}=xn(o,s,r.shape,r.dtype);return[a.makeTensorInfo(c,r.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const El={kernelName:s.dXR,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{value:s}=e;let{axis:r}=a;r<0&&(r+=s.shape.length);const o=s,i=o.shape.length,c=s.shape[r],l=new Array(i-1);let u=0;for(let g=0;g<i;g++)g!==r&&(l[u++]=o.shape[g]);const h=[],d=new Array(i).fill(0),p=o.shape.slice();p[r]=1;const f=new Array(c);for(let g=0;g<f.length;g++){d[r]=g;const t=bs({inputs:{x:o},backend:n,attrs:{begin:d,size:p}}),e=ha({inputs:{x:t},backend:n,attrs:{shape:l}});f[g]=e,h.push(t)}return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}};class Rl{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,a=t.batchSize,s=t.inSize,r=t.numSegments,o=r*Math.ceil(s/n);this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";s%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(s,") {\n          return initializationValue;\n        }\n      "));let h="";s%n>0&&(h="\n        if (inIdx < 0 || inIdx >= ".concat(s,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(h,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(r,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(r,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const Fl=[Ta,Ca,Aa,Ra,_a,Ma,za,Pa,Za,Ka,ja,Ya,Xa,$a,es,ss,rs,cs,ls,us,ps,ys,vs,ws,ks,Ns,Rs,_s,jn,Ms,Zs,Js,ar,rr,or,ir,cr,ur,dr,fr,vr,wr,kr,Tr,Nr,Rr,Fr,_r,Or,Mr,Pr,Br,Ur,Gr,Kr,jr,Qr,$r,no,so,io,lo,po,mo,bo,yo,ko,To,Co,Kn,No,Us,Eo,Fo,_o,Qn,Oo,zo,Po,Wo,Vo,Zo,Ho,qo,Xo,$o,ei,ai,si,ri,ci,li,ui,hi,di,fi,bi,yi,Ai,ua,Ri,Di,Li,Mi,Ts,Pi,Ui,Vi,Hi,qi,$n,Yi,Qi,Xi,Ji,tc,Cs,ki,nc,sc,oc,da,lc,hc,fc,mc,yc,wc,Sc,Ic,Ac,Rc,Dc,Lc,Mc,Pc,Wc,Vc,xs,Ni,Zc,Kc,Hc,jc,qc,Yc,Qc,Xc,tl,nl,rl,ol,il,ll,ul,hl,dl,Ii,va,fl,ml,bl,vl,Il,Nl,ka,Al,El,{kernelName:s.pPe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,segmentIds:o}=e,{numSegments:i}=a,c=r.shape.length,l=[];let u=0;const h=s.C0T.getAxesPermutation([u],c);let d=r;null!=h&&(d=wa({inputs:{x:r},backend:n,attrs:{perm:h}}),l.push(d),u=s.C0T.getInnerMostAxes(1,c)[0]);const p=s.C0T.segment_util.computeOutShape(d.shape,u,i),f=s.ZSL.sizeFromShape([d.shape[u]]),g=ha({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}});l.push(g);const m=(0,s.chL)(r.dtype),b=(t,e,a,r,o)=>{const i=t.shape[0],c=t.shape[1],u=s.C0T.segment_util.segOpComputeOptimalWindowSize(c,o),h=new Rl({windowSize:u,inSize:c,batchSize:i,numSegments:o},e),d=n.compileAndRun(h,[t,a],r);if(l.push(d),d.shape[1]===o)return d;const p=$i({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),f=yl({inputs:{x:p},backend:n,attrs:{reps:[c/u]}});l.push(p),l.push(f);return b(d,e,f,r,o)},x=ha({inputs:{x:b(g,"unsortedSegmentSum",o,m,i)},backend:n,attrs:{shape:p}});let y=x;if(null!=h){l.push(x);const t=s.C0T.getUndoAxesPermutation(h);y=wa({inputs:{x:y},backend:n,attrs:{perm:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}},Wi];for(const Dl of Fl)(0,s.tAK)(Dl)},46790:(t,e,n)=>{"use strict";n.d(e,{GJ:()=>a,uI:()=>s});class a{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class s{refCount(t){return r("refCount")}incRef(t){return r("incRef")}timerAvailable(){return!0}time(t){return r("time")}read(t){return r("read")}readSync(t){return r("readSync")}readToGPU(t,e){return r("readToGPU")}numDataIds(){return r("numDataIds")}disposeData(t,e){return r("disposeData")}write(t,e,n){return r("write")}move(t,e,n,a,s){return r("move")}createTensorFromGPUData(t,e,n){return r("createTensorFromGPUData")}memory(){return r("memory")}floatPrecision(){return r("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return r("dispose")}}function r(t){throw new Error("'".concat(t,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}},82164:(t,e,n)=>{"use strict";n.d(e,{T2:()=>v,Ye:()=>y});var a=n(46790),s=n(55399),r=n(97926),o=n(39554),i=n(10843),c=n(64124),l=n(58977),u=n(71426);class h{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new p)}profileKernel(t,e,n){let a;const r=()=>{a=n()};let o;const i=l.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(r);else{r();for(const t of a)t.dataSync();o=Promise.resolve({kernelMs:l.now()-i})}if((0,s._K)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let s=0;s<a.length;s++){const e=a[s];e.data().then((n=>{d(n,e.dtype,t)}))}return{kernelName:t,outputs:a,inputs:e,timeMs:o.then((t=>t.kernelMs)),extraInfo:o.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:a,inputs:s,extraInfo:r}=t;n.forEach((t=>{Promise.all([t.data(),a,r]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function d(t,e,n){if("float32"!==e)return!1;for(let a=0;a<t.length;a++){const e=t[a];if(isNaN(e)||!isFinite(e))return console.warn("Found ".concat(e," in the result of '").concat(n,"'")),!0}return!1}class p{logKernelProfile(t,e,n,a,s,r){const o="number"===typeof a?u.av("".concat(a,"ms"),9):a.error,i=u.av(t,25),c=e.rank,l=e.size,h=u.av(e.shape.toString(),14);let d="";for(const u in s){const t=s[u];if(null!=t){const n=t.shape||e.shape,a=n.length;d+="".concat(u,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(c,"D ").concat(h,"\t%c").concat(l,"\t%c").concat(d,"\t%c").concat(r),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(79494),g=n(68804);function m(t){return null!=t.kernelName}class b{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class x{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new b}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error("The highest priority backend '".concat(t,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return t in this.registryFactory?(c.i("".concat(t," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error("Backend name '".concat(t,"' not found in registry"));if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new h(this.backendInstance),!0}setupRegisteredKernels(){(0,i.Op)(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){(0,i.Op)(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error("Cannot initialize backend ".concat(t,", no registration found."));try{const n=e.factory();if(!n||n instanceof a.uI||"function"!==typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,a=n.then((n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,c.i("Initialization of backend ".concat(t," failed")),c.i(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return c.i("Initialization of backend ".concat(t," failed")),c.i(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error("".concat(t," backend not found in registry"));this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:a,asyncInit:s}=this.initializeBackend(n);if(s||a)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),a=n.backend,s=this.readSync(e),r=a.refCount(e);a.disposeData(e,!0),n.backend=t,t.move(e,s,n.shape,n.dtype,r),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,a=null;if(null==e){if("function"!==typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!==typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=t}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(a){throw e(),a}}nextTensorId(){return x.nextTensorId++}nextVariableId(){return x.nextVariableId++}clone(t){const e=v.runKernel(o.lzr,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t},n={dtype:"float32"};return v.runKernel(o.KXH,e,n)}})),[],{}),e}runKernel(t,e,n){null==this.backendName&&this.backend;if(!(null!=(0,i._5)(t,this.backendName)))throw new Error("Kernel '".concat(t,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const a=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const r=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-e-s-r;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(t,"'"))}runKernelFunc(t){let e,n=[];const a=this.isTapeOn(),s=this.state.numBytes,r=this.state.numTensors;let o,c;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=m(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(m(t)){const{kernelName:e,inputs:s,attrs:r}=t;null==this.backendName&&this.backend;const l=(0,i._5)(e,this.backendName);u.vA(null!=l,(()=>"Cannot find registered kernel '".concat(e,"' for backend '").concat(this.backendName,"'"))),o=()=>{const t=this.backend.numDataIds();c=l.kernelFunc({inputs:s,attrs:r,backend:this.backend});const o=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,o);const i=o.map((t=>null!=t.rank?t:this.makeTensorFromTensorInfo(t)));if(a){const t=this.getTensorsForGradient(e,s,i);n=this.saveTensorsForBackwardMode(t)}return i}}else{const{forwardFunc:e}=t,s=t=>{a&&(n=t.map((t=>this.keep(this.clone(t)))))};o=()=>{const t=this.backend.numDataIds();c=this.tidy((()=>e(this.backend,s)));const n=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,t,n),n}}const{inputs:h,attrs:d}=t,p=m(t)?null:t.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,h,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs):e=o()})),a&&this.addTapeNode(l,h,e,p,n,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-r,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((t=>null!=h[t]?h[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?e:e[0]}saveTensorsForBackwardMode(t){const e=t.map((t=>this.keep(this.clone(t))));return e}getTensorsForGradient(t,e,n){const a=(0,i.vQ)(t);if(null!=a){const t=a.inputsToSave||[],s=a.outputsToSave||[];let r;a.saveAllInputs?(u.vA(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),r=Object.keys(e).map((t=>e[t]))):r=t.map((t=>e[t]));const o=n.filter(((t,e)=>s[e]));return r.concat(o)}return[]}makeTensor(t,e,n,a){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let s=t;"string"===n&&u.Kg(t[0])&&(s=t.map((t=>l.encodeString(t))));const r=a.write(s,e,n),o=new f.qY(e,n,r,this.nextTensorId());if(this.trackTensor(o,a),"string"===n){const t=this.state.tensorInfo.get(r),e=(0,u.SL)(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return o}makeTensorFromDataId(t,e,n,a){const s={dataId:t,shape:e,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,a)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:a,dtype:s}=t,r=new f.qY(a,s,n,this.nextTensorId());return this.trackTensor(r,e),r}makeVariable(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==t.dtype&&(t=t.cast(a));const s=new f.rT(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error("Variable with name ".concat(s.name," was already registered"));return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*u.jv(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof f.rT||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*u.jv(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,a,s,r){const o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},c=(0,i.vQ)(t);null!=c&&(a=c.gradFunc),null!=a&&(o.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],a=u.Ty(t.size,t.dtype);return this.makeTensor(a,t.shape,t.dtype)}return t})),a(t.length>1?t:t[0],s,r))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=(0,g.getTensorsInContainer)(t),n=new Set(e.map((t=>t.id)));for(let s=0;s<this.state.activeScope.track.length;s++){const t=this.state.activeScope.track[s];t.kept||n.has(t.id)||t.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==a.id||this.track(t)}))}gradients(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(u.vA(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));u.vA(s instanceof f.qY,(()=>"The result y returned by f() must be a tensor."));const r=function(t,e,n){const a={},s={};for(let c=0;c<e.length;c++)a[e[c].id]=!0;for(let c=0;c<t.length;c++){const n=t[c],r=n.inputs;for(const t in r){const o=r[t];let i=!1;for(let t=0;t<e.length;t++)if(a[o.id]){n.outputs.forEach((t=>a[t.id]=!0)),i=!0,s[n.id]=!0;break}if(i)break}}const r={};r[n.id]=!0;const o={};for(let c=t.length-1;c>=0;c--){const e=t[c],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(r[e.outputs[t].id]){for(const t in n)r[n[t].id]=!0,o[e.id]=!0;break}}const i=[];for(let c=0;c<t.length;c++){const e=t[c];if(s[e.id]&&o[e.id]){const t={};for(const s in e.inputs){const n=e.inputs[s];a[n.id]&&(t[s]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,i.push(n)}}return i}(this.state.activeTape,e,s);if(!a&&0===r.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=(0,u.FZ)((0,u.Ze)(t),"float32");return v.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,a){for(let s=e.length-1;s>=0;s--){const r=e[s],o=[];if(r.outputs.forEach((e=>{const n=t[e.id];null!=n?o.push(n):o.push(null)})),null==r.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(r.kernelName,"."));const i=r.gradient(o);for(const e in r.inputs){if(!(e in i))throw new Error("Cannot backprop through input ".concat(e,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const s=n((()=>i[e]()));if("float32"!==s.dtype)throw new Error("Error in gradient for op ".concat(r.kernelName,". The gradient of input ")+"".concat(e," must have 'float32' dtype, but has '").concat(s.dtype,"'"));const o=r.inputs[e];if(!u.r1(s.shape,o.shape))throw new Error("Error in gradient for op ".concat(r.kernelName,". The gradient of input ")+"'".concat(e,"' has shape '").concat(s.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==t[o.id])t[o.id]=s;else{const e=t[o.id];t[o.id]=a(e,s),e.dispose()}}}}(t,r,(t=>this.tidy(t)),w);const a=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:a}}))}customGrad(t){var e=this;return u.vA(u.Tn(t),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),s=0;s<n;s++)a[s]=arguments[s];let r;u.vA(a.every((t=>t instanceof f.qY)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};a.forEach(((t,e)=>{o[e]=t}));return e.runKernelFunc({forwardFunc:(e,n)=>(r=t(...a,n),u.vA(r.value instanceof f.qY,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),u.vA(u.Tn(r.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),r.value),backwardsFunc:(t,e)=>{const n=r.gradFunc(t,e),s=Array.isArray(n)?n:[n];u.vA(s.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),u.vA(s.every((t=>t instanceof f.qY)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return s.forEach(((t,e)=>{o[e]=()=>t})),o},inputs:o})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=(0,l.now)(),n=await this.backend.time(t);return n.wallMs=(0,l.now)()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new b;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function y(){const t=(0,r.L)();if(null==t._tfengine){const e=new s.OH(t);t._tfengine=new x(e)}return(0,s.tj)(t._tfengine.ENV),(0,f.qP)((()=>t._tfengine)),t._tfengine}x.nextTensorId=0,x.nextVariableId=0;const v=y();function w(t,e){const n={a:t,b:e};return v.runKernel(o.OMN,n)}},55399:(t,e,n)=>{"use strict";n.d(e,{OH:()=>r,_K:()=>i,tj:()=>l});var a=n(71426);const s="tfjsflags";class r{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=o,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(t,"."))),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Setting feature override from URL ".concat(t,": ").concat(e,".")),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if((0,a.yL)(e))throw new Error("Flag ".concat(t," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error("Cannot set flag ".concat(t," as it has not been registered."));this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error("Cannot evaluate flag '".concat(t,"': no evaluation function found."));return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);if(s in t){t[s].split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){const n=e.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:e}(0,n)}))}}}function o(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(t){for(var n=arguments.length,a=new Array(n>1?n-1:0),s=1;s<n;s++)a[s-1]=arguments[s];return function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,a[0],a[1]),a.join("=")})),e}function i(){return c}let c=null;function l(t){c=t}},97926:(t,e,n)=>{"use strict";let a;function s(){if(null==a){let t;if("undefined"!==typeof window)t=window;else if("undefined"!==typeof n.g)t=n.g;else if("undefined"!==typeof process)t=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");t=self}a=t}return a}function r(t,e){const n=function(){const t=s();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const a=e();return n.set(t,a),n.get(t)}}n.d(e,{L:()=>s,m:()=>r})},58046:(t,e,n)=>{"use strict";n.d(e,{AS:()=>u,DZ:()=>l,Hi:()=>i,Hs:()=>f,aC:()=>h,gJ:()=>p,jz:()=>d,m1:()=>c});var a=n(82164),s=n(55399),r=n(79494),o=n(68804);function i(){return a.T2}function c(){return a.T2.memory()}function l(t,e){return a.T2.tidy(t,e)}function u(t){(0,o.getTensorsInContainer)(t).forEach((t=>t.dispose()))}function h(t){return a.T2.keep(t)}function d(){return a.T2.backendName}function p(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return a.T2.registerBackend(t,e,n)}function f(){return a.T2.backend}(0,r.B4)((function(t){(0,s._K)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},1839:(t,e,n)=>{"use strict";n.d(e,{_X:()=>i,y7:()=>o});var a=n(82164),s=n(79494),r=n(71426);function o(t,e){r.vA(r.Tn(t),(()=>"The f passed in variableGrads(f) must be a function")),r.vA(null==e||Array.isArray(e)&&e.every((t=>t instanceof s.rT)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in a.T2.registeredVariables)e.push(a.T2.registeredVariables[t])}const o=n?e.filter((t=>!t.trainable)):null,i=e.length;e=e.filter((t=>t.trainable)),r.vA(e.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(i," variables is ")+"trainable."));const{value:c,grads:l}=a.T2.gradients(t,e,null,!0);r.vA(l.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),r.vA(0===c.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(c.rank," tensor")));const u={};return e.forEach(((t,e)=>{null!=l[e]&&(u[t.name]=l[e])})),null!=o&&o.forEach((t=>u[t.name]=null)),{value:c,grads:u}}function i(t){return a.T2.customGrad(t)}},73882:(t,e,n)=>{"use strict";n.d(e,{ljI:()=>ce.ljI,Vvy:()=>ce.Vvy,PH8:()=>ce.PH8,OMN:()=>ce.OMN,EkD:()=>ce.EkD,u8Z:()=>ce.u8Z,FSt:()=>ce.FSt,Jp_:()=>ce.Jp_,p_m:()=>ce.p_m,QKF:()=>ce.QKF,epO:()=>ce.epO,TyE:()=>ce.TyE,lxb:()=>ce.lxb,zP9:()=>ce.zP9,ho8:()=>ce.ho8,cS:()=>ce.cS,wwC:()=>ce.wwC,VCH:()=>ce.VCH,jAQ:()=>ce.jAQ,Ik2:()=>ce.Ik2,N4F:()=>ce.N4F,HNs:()=>ce.HNs,vj7:()=>ce.vj7,KXH:()=>ce.KXH,QDP:()=>ce.QDP,vaV:()=>ce.vaV,pr3:()=>ce.pr3,$zE:()=>ce.$zE,$dB:()=>ce.$dB,p2J:()=>ce.p2J,rFm:()=>ce.rFm,jfg:()=>ce.jfg,A1h:()=>ce.A1h,iGz:()=>ce.iGz,gC7:()=>ce.gC7,Mn0:()=>ce.Mn0,MnK:()=>ce.MnK,MRQ:()=>ce.MRQ,jj_:()=>ce.jj_,nY8:()=>ce.nY8,GJx:()=>Cr.GJ,wNW:()=>ce.wNW,TMz:()=>ce.TMz,tGH:()=>ce.tGH,X$8:()=>ce.X$8,nVu:()=>ce.nVu,ORI:()=>ce.ORI,jxD:()=>ce.jxD,pk0:()=>ce.pk0,bP9:()=>ce.bP9,XmO:()=>ce.XmO,Qgm:()=>ce.Qgm,Pah:()=>ce.Pah,rsH:()=>ce.rsH,BRl:()=>ce.BRl,_s9:()=>ce._s9,ox3:()=>ce.ox3,ybN:()=>ce.ybN,ybj:()=>ce.ybj,rGP:()=>ce.rGP,SQl:()=>ce.SQl,BxF:()=>ce.BxF,ZgB:()=>ce.ZgB,ElG:()=>ce.ElG,awo:()=>ce.awo,i5R:()=>ce.i5R,aAr:()=>ce.aAr,T7M:()=>ce.T7M,O4G:()=>ce.O4G,mxL:()=>ce.mxL,XhZ:()=>ce.XhZ,lLS:()=>ce.lLS,OAQ:()=>ce.OAQ,lzr:()=>ce.lzr,dv8:()=>ce.dv8,gIW:()=>ce.gIW,E3$:()=>ce.E3$,iPs:()=>ce.iPs,uI_:()=>Cr.uI,jM4:()=>ce.jM4,ToN:()=>ce.ToN,X0$:()=>ce.X0$,mIA:()=>ce.mIA,CwD:()=>ce.CwD,mnI:()=>ce.mnI,tG8:()=>ce.tG8,Cg$:()=>ce.Cg$,RUm:()=>ce.RUm,nZd:()=>ce.nZd,LXA:()=>ce.LXA,VAI:()=>ce.VAI,t3d:()=>ce.t3d,ySp:()=>ce.ySp,cHb:()=>ce.cHb,RXX:()=>ce.RXX,TL8:()=>ce.TL8,LDN:()=>ce.LDN,g5A:()=>ce.g5A,lNG:()=>ce.lNG,LG0:()=>ce.LG0,x7F:()=>ce.x7F,BLA:()=>ce.BLA,WT3:()=>ce.WT3,xu7:()=>ce.xu7,l0G:()=>ce.l0G,SDM:()=>ce.SDM,Zl4:()=>ce.Zl4,e0f:()=>ce.e0f,ylV:()=>ce.ylV,urI:()=>ce.urI,LWX:()=>ce.LWX,ELo:()=>Ct,mM$:()=>ce.mM$,ODT:()=>ce.ODT,pyJ:()=>ce.pyJ,Ncv:()=>ce.Ncv,kdj:()=>ce.kdj,oJ2:()=>ce.oJ2,CQC:()=>ce.CQC,mH5:()=>ce.mH5,Q6t:()=>ce.Q6t,LRy:()=>ce.LRy,sDr:()=>ce.sDr,huO:()=>ce.huO,fUj:()=>ce.fUj,P_L:()=>ce.P_L,R23:()=>ce.R23,hgw:()=>ce.hgw,FCQ:()=>ce.FCQ,jOE:()=>ce.jOE,XQy:()=>ce.XQy,D7i:()=>ce.D7i,BK4:()=>ce.BK4,hVg:()=>ce.hVg,TOR:()=>ce.TOR,pJc:()=>ce.pJc,uWl:()=>ce.uWl,l6P:()=>ce.l6P,u$b:()=>ce.u$b,vI1:()=>ce.vI1,YVe:()=>ce.YVe,hql:()=>ce.hql,J3C:()=>ce.J3C,JiE:()=>ce.JiE,rFG:()=>ce.rFG,Fin:()=>ce.Fin,A8B:()=>ce.A8B,C8s:()=>ce.C8s,BoJ:()=>ce.BoJ,L6G:()=>ce.L6G,DvZ:()=>ce.DvZ,jgd:()=>ce.jgd,Blb:()=>ce.Blb,dFH:()=>ce.dFH,M6A:()=>ce.M6A,Ddj:()=>ce.Ddj,GZp:()=>ce.GZp,pnw:()=>ce.pnw,UcO:()=>ce.UcO,YAb:()=>ce.YAb,iW0:()=>ce.iW0,$jE:()=>ce.$jE,PbM:()=>ce.PbM,WuN:()=>ce.WuN,oFs:()=>ce.oFs,iuW:()=>ce.iuW,qYS:()=>ot.qY,ylz:()=>ot.yl,X4r:()=>ce.X4r,FAs:()=>ce.FAs,TBb:()=>ce.TBb,dLy:()=>ce.dLy,wx0:()=>ce.wx0,EwU:()=>ce.EwU,dXR:()=>ce.dXR,pPe:()=>ce.pPe,xJ3:()=>ce.xJ3,Dr:()=>ce.Dr,tnl:()=>_t.t,WQq:()=>dt.W,Q7R:()=>Ne.Q,bzn:()=>Ae.b,FLi:()=>Ee.F,$jT:()=>Re.$,sub:()=>_e,Hs:()=>ht.Hs,C0T:()=>l,BFc:()=>Oe,kSi:()=>Me,T5N:()=>ze,hOW:()=>Pe.h,ZEY:()=>ie,TaL:()=>o,ra8:()=>it,wgE:()=>ct.w,zQh:()=>Be.z,o8B:()=>lt.o,xWs:()=>We.x,I1m:()=>Ue,RPU:()=>Ve,O5O:()=>Ge,P1l:()=>Ze,kA9:()=>Ke.k,Xtf:()=>He.X,wX9:()=>je.w,IPL:()=>qe,jIJ:()=>Qe,aOp:()=>Xe,Gl3:()=>Je.G,eMq:()=>a,ASo:()=>ht.AS,y4m:()=>pt.y,EZY:()=>ha,Pqc:()=>$e.P,Hi9:()=>ht.Hi,_K2:()=>m._K,LCg:()=>tn.L,Y12:()=>en.Y,oNF:()=>nn.o,UG6:()=>an.U,y5U:()=>rn,GSj:()=>At.G,RIf:()=>on.R,cZk:()=>i,kgh:()=>cn.k,rhj:()=>ln.r,DQN:()=>un.D,Slp:()=>hs,io:()=>r,aCs:()=>ht.aC,kpo:()=>u,H8d:()=>hn.H,mPL:()=>ds,Rm2:()=>dn.R,Kko:()=>pn.K,HPB:()=>fn.H,VZ:()=>gn.V,n76:()=>mn.n,NoW:()=>bn.N,T9B:()=>xn.T,jgi:()=>yn.j,NYV:()=>vn,PhQ:()=>Lt.P,i2o:()=>wn.i,m1Z:()=>ht.m1,jkA:()=>kn.j,BpO:()=>Sn.B,Clk:()=>In,lKK:()=>ft.l,HZy:()=>Cn.H,dA1:()=>gs,Ec:()=>Nn.E,Mw0:()=>An.M,SaS:()=>En.S,P61:()=>Rn.P,eVF:()=>Fn.e,n7C:()=>Rt.n,NsG:()=>Dn.N,FE$:()=>Mn,YeY:()=>zn,y17:()=>Pn,gJX:()=>ht.gJ,tAK:()=>le.tA,VVh:()=>Bn.V,tQQ:()=>De.t,BEg:()=>Wn.B,d_2:()=>yt.d,WfX:()=>Un.W,wdz:()=>Vn.w,JFn:()=>s,ry7:()=>Gn.r,dik:()=>Zn.d,Q$M:()=>Kn,zAd:()=>Hn,wck:()=>jn,R0O:()=>qn,Kro:()=>ke,Vs9:()=>Yn.V,lw0:()=>Qn.l,lDo:()=>Xn.l,RZD:()=>gt.R,r2V:()=>Jn.r,t$z:()=>$n.t,jbE:()=>Ft.j,czq:()=>ta.c,chL:()=>Ce.ch,ymU:()=>ea.y,OEK:()=>na.O,tGX:()=>aa,KtR:()=>sa,d_S:()=>Se,DZQ:()=>ht.DZ,Vsq:()=>sn.V,BaG:()=>ps,mgz:()=>ua.m,efE:()=>ra,K$i:()=>oa.K,TuY:()=>Ce.Tu,ZSL:()=>Te,bvq:()=>ia,bgA:()=>Ie,_M9:()=>ca._,Ul9:()=>la.U,POl:()=>bt.P});var a={};n.r(a),n.d(a,{isBrowser:()=>g,isMobile:()=>f,mockIsMobile:()=>p});var s={};n.r(s),n.d(s,{Serializable:()=>kt,SerializationMap:()=>St,getRegisteredName:()=>It,registerClass:()=>Tt});var r={};n.r(r),n.d(r,{CompositeArrayBuffer:()=>T.D,browserFiles:()=>Gt,browserHTTPRequest:()=>$t,concatenateArrayBuffers:()=>x.AQ,copyModel:()=>$,decodeWeights:()=>x.CY,decodeWeightsStream:()=>x.s5,encodeWeights:()=>x.aG,fromMemory:()=>ae,fromMemorySync:()=>se,getLoadHandlers:()=>S,getModelArtifactsForJSON:()=>x.Ej,getModelArtifactsForJSONSync:()=>x.Rl,getModelArtifactsInfoForJSON:()=>x.oR,getSaveHandlers:()=>k,getWeightSpecs:()=>x.Xf,http:()=>Jt,isHTTPScheme:()=>Qt,listModels:()=>X,loadWeights:()=>jt,moveModel:()=>tt,registerLoadRouter:()=>w,registerSaveRouter:()=>v,removeModel:()=>J,weightsLoaderFactory:()=>qt,withSaveHandler:()=>re,withSaveHandlerSync:()=>oe});var o={};n.r(o),n.d(o,{draw:()=>ve,fromPixels:()=>we,fromPixelsAsync:()=>be,toPixels:()=>ye});var i={};n.r(i),n.d(i,{conv2d:()=>Ta,depthwiseConv2d:()=>Na,matMul:()=>Aa});var c={};n.r(c),n.d(c,{collectGatherOpShapeInfo:()=>kr,computeOutShape:()=>wr,segOpComputeOptimalWindowSize:()=>vr});var l={};n.r(l),n.d(l,{ERF_A1:()=>zs,ERF_A2:()=>Ps,ERF_A3:()=>Bs,ERF_A4:()=>Ws,ERF_A5:()=>Us,ERF_P:()=>Ms,PARALLELIZE_THRESHOLD:()=>Ss,RowPartitionType:()=>xs,SELU_SCALE:()=>Os.X,SELU_SCALEALPHA:()=>Os.j,applyActivation:()=>ka,assertAndGetBroadcastShape:()=>ie.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>Tn.WC,assertParamsConsistent:()=>ms,assignToTypedArray:()=>qs,axesAreInnerMostDims:()=>Tn.WH,calculateShapes:()=>Ls,checkEinsumDimSizes:()=>ar,checkPadOnDimRoundingMode:()=>Fe.s_,combineLocations:()=>Tn.aF,combineRaggedTensorToTensorShapes:()=>ys,complexWithEvenIndex:()=>Ks,complexWithOddIndex:()=>Hs,computeConv2DInfo:()=>Fe.uf,computeConv3DInfo:()=>Fe.p$,computeDefaultPad:()=>Fe.G8,computeDilation2DInfo:()=>Fe.YQ,computeOptimalWindowSize:()=>Ts,computeOutAndReduceShapes:()=>Tn.lb,computeOutShape:()=>bs,computePool2DInfo:()=>Fe.E6,computePool3DInfo:()=>Fe.l5,convertConv2DDataFormat:()=>Fe.$Q,decodeEinsumEquation:()=>er,eitherStridesOrDilationsAreOne:()=>Fe.G0,expandShapeToKeepDim:()=>Tn.SM,exponent:()=>Qs,exponents:()=>Ys,fromStringArrayToUint8:()=>Tr,fromUint8ToStringArray:()=>Sr,getAxesPermutation:()=>Tn.Em,getBroadcastDims:()=>ie.getBroadcastDims,getComplexWithIndex:()=>js,getEinsumComputePath:()=>sr,getEinsumPermutation:()=>nr,getFusedBiasGradient:()=>wa,getFusedDyActivation:()=>va,getImageCenter:()=>Is,getInnerMostAxes:()=>Tn.fK,getPermuted:()=>Ns,getRaggedRank:()=>ws,getReductionAxes:()=>ie.getReductionAxes,getReshaped:()=>Cs,getReshapedPermuted:()=>As,getRowPartitionTypesHelper:()=>vs,getSliceBeginCoords:()=>Es,getSliceSize:()=>Rs,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>cr,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>lr,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>ur,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>pr,getSparseReshapeInputOutputMismatchErrorMessage:()=>gr,getSparseReshapeInputOutputMultipleErrorMessage:()=>fr,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>hr,getSparseReshapeNegativeOutputDimErrorMessage:()=>dr,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>yr,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>mr,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>br,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>xr,getUndoAxesPermutation:()=>Tn.gx,isIdentityPermutation:()=>rr,log:()=>Vs.R,mergeRealAndImagArrays:()=>Gs,prepareAndValidate:()=>Fs,prepareSplitSize:()=>ir,segment_util:()=>c,shouldFuse:()=>Sa,slice_util:()=>ke,splitRealAndImagArrays:()=>Zs,stridesOrDilationsArePositive:()=>Fe.qk,tupleValuesAreOne:()=>Fe.Dh,upcastType:()=>Ce.Tu,validateDefaultValueShape:()=>ks,validateInput:()=>_s,validateUpdateShape:()=>Ds,warn:()=>Vs.i});var u={};n.r(u),n.d(u,{c7:()=>Ba,ZS:()=>Wa,ut:()=>Ua,YO:()=>Ir});var h=n(82164);let d;function p(t){d=t}function f(t){if(void 0!==d)return d;if(t||"undefined"!==typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||("undefined"!==typeof window?window.opera:"");if(!e){const e=t;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function g(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}var m=n(55399);const b=(0,m._K)();b.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),b.registerFlag("IS_BROWSER",(()=>g())),b.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),b.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),b.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),b.registerFlag("PROD",(()=>!1)),b.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>b.getBool("DEBUG"))),b.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),b.registerFlag("IS_TEST",(()=>!1)),b.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>b.getBool("DEBUG"))),b.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),b.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),b.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var x=n(70285);class y{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==y.instance&&(y.instance=new y),y.instance}static registerSaveRouter(t){y.getInstance().saveRouters.push(t)}static registerLoadRouter(t){y.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return y.getHandlers(t,"save")}static getLoadHandlers(t,e){return y.getHandlers(t,"load",e)}static getHandlers(t,e,n){const a=[];return("load"===e?y.getInstance().loadRouters:y.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&a.push(s)})),a}}const v=t=>y.registerSaveRouter(t),w=t=>y.registerLoadRouter(t),k=t=>y.getSaveHandlers(t),S=(t,e)=>y.getLoadHandlers(t,e);var T=n(39512);const I="tensorflowjs",C="models_store",N="model_info_store";function A(){if(!(0,m._K)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"===typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function E(t){const e=t.result;e.createObjectStore(C,{keyPath:"modelPath"}),e.createObjectStore(N,{keyPath:"modelPath"})}class R{constructor(t){if(this.indexedDB=A(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const a=this.indexedDB.open(I,1);a.onupgradeneeded=()=>E(a),a.onsuccess=()=>{const s=a.result;if(null==e){const e=s.transaction(C,"readonly"),a=e.objectStore(C).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return s.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));t(a.result.modelArtifacts)},a.onerror=t=>(s.close(),n(a.error)),e.oncomplete=()=>s.close()}else{e.weightData=T.D.join(e.weightData);const a=(0,x.oR)(e),o=s.transaction(N,"readwrite");let i,c,l=o.objectStore(N);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(r){return n(r)}i.onsuccess=()=>{c=s.transaction(C,"readwrite");const i=c.objectStore(C);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a})}catch(r){return n(r)}u.onsuccess=()=>t({modelArtifactsInfo:a}),u.onerror=t=>{l=o.objectStore(N);const e=l.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(u.error)),e.onerror=t=>(s.close(),n(u.error))}},i.onerror=t=>(s.close(),n(i.error)),o.oncomplete=()=>{null==c?s.close():c.oncomplete=()=>s.close()}}},a.onerror=t=>n(a.error)}))}}R.URL_SCHEME="indexeddb://";const F=t=>{return(0,m._K)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(R.URL_SCHEME)?(e=t.slice(R.URL_SCHEME.length),new R(e)):null;var e};y.registerSaveRouter(F),y.registerLoadRouter(F);class D{constructor(){this.indexedDB=A()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(I,1);n.onupgradeneeded=()=>E(n),n.onsuccess=()=>{const a=n.result,s=a.transaction(N,"readonly"),r=s.objectStore(N).getAll();r.onsuccess=()=>{const e={};for(const t of r.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},r.onerror=t=>(a.close(),e(r.error)),s.oncomplete=()=>a.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(R.URL_SCHEME)?e.slice(R.URL_SCHEME.length):e,new Promise(((e,n)=>{const a=this.indexedDB.open(I,1);a.onupgradeneeded=()=>E(a),a.onsuccess=()=>{const s=a.result,r=s.transaction(N,"readwrite"),o=r.objectStore(N),i=o.get(t);let c;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error("Cannot find model with path '".concat(t,"' ")+"in IndexedDB."));{const a=o.delete(t),r=()=>{c=s.transaction(C,"readwrite");const a=c.objectStore(C).delete(t);a.onsuccess=()=>e(i.result.modelArtifactsInfo),a.onerror=t=>n(i.error)};a.onsuccess=r,a.onerror=t=>(r(),s.close(),n(i.error))}},i.onerror=t=>(s.close(),n(i.error)),r.oncomplete=()=>{null==c?s.close():c.oncomplete=()=>s.close()}},a.onerror=t=>n(a.error)}))}}var _=n(71426);const L="/",O="tensorflowjs_models",M="info",z="model_topology",P="weight_specs",B="weight_data",W="model_metadata";function U(t){return{info:[O,t,M].join(L),topology:[O,t,z].join(L),weightSpecs:[O,t,P].join(L),weightData:[O,t,B].join(L),modelMetadata:[O,t,W].join(L)}}function V(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function G(t){const e=t.split(L);if(e.length<3)throw new Error("Invalid key format: ".concat(t));return e.slice(1,e.length-1).join(L)}class Z{constructor(t){if(!(0,m._K)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=U(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),a=JSON.stringify(t.weightSpecs),s=(0,x.oR)(t),r=T.D.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,(0,x.l3)(r));const e={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:null!=t.signature?t.signature:void 0,userDefinedMetadata:null!=t.userDefinedMetadata?t.userDefinedMetadata:void 0,modelInitializer:null!=t.modelInitializer?t.modelInitializer:void 0,initializerSignature:null!=t.initializerSignature?t.initializerSignature:void 0,trainingConfig:null!=t.trainingConfig?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(e)),{modelArtifactsInfo:s}}catch(e){throw V(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(s.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(s.weightSpecsBytes,", ")+"weightDataBytes=".concat(s.weightDataBytes,"."))}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");e.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");e.weightSpecs=a;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),null!=t.initializerSignature&&(e.initializerSignature=t.initializerSignature),null!=t.trainingConfig&&(e.trainingConfig=t.trainingConfig)}const r=this.LS.getItem(this.keys.weightData);if(null==r)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return e.weightData=(0,x.jf)(r),e}}Z.URL_SCHEME="localstorage://";const K=t=>{return(0,m._K)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Z.URL_SCHEME)?(e=t.slice(Z.URL_SCHEME.length),new Z(e)):null;var e};y.registerSaveRouter(K),y.registerLoadRouter(K);class H{constructor(){(0,_.vA)((0,m._K)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,_.vA)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=O+L,n=L+M;for(let a=0;a<this.LS.length;++a){const s=this.LS.key(a);if(s.startsWith(e)&&s.endsWith(n)){t[G(s)]=JSON.parse(this.LS.getItem(s))}}return t}async removeModel(t){var e;const n=U(t=(e=t).startsWith(Z.URL_SCHEME)?e.slice(Z.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(t,"'"));const a=JSON.parse(this.LS.getItem(n.info));return V(n),a}}const j="://";class q{constructor(){this.managers={}}static getInstance(){return null==q.instance&&(q.instance=new q),q.instance}static registerManager(t,e){(0,_.vA)(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith(j)&&(t=t.slice(0,t.indexOf(j))),(0,_.vA)(t.length>0,(()=>"scheme must not be an empty string."));const n=q.getInstance();(0,_.vA)(null==n.managers[t],(()=>"A model store manager is already registered for scheme '".concat(t,"'."))),n.managers[t]=e}static getManager(t){const e=q.getInstance().managers[t];if(null==e)throw new Error("Cannot find model manager for scheme '".concat(t,"'"));return e}static getSchemes(){return Object.keys(q.getInstance().managers)}}function Y(t){if(-1===t.indexOf(j))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(q.getSchemes().join(",")));return{scheme:t.split(j)[0],path:t.split(j)[1]}}async function Q(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];(0,_.vA)(t!==e,(()=>"Old path and new path are the same: '".concat(t,"'")));const a=y.getLoadHandlers(t);(0,_.vA)(a.length>0,(()=>"Copying failed because no load handler is found for source URL ".concat(t,"."))),(0,_.vA)(a.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(t,".")));const s=a[0],r=y.getSaveHandlers(e);(0,_.vA)(r.length>0,(()=>"Copying failed because no save handler is found for destination "+"URL ".concat(e,"."))),(0,_.vA)(r.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(e,".")));const o=r[0],i=Y(t).scheme,c=Y(t).path,l=i===Y(t).scheme,u=await s.load();n&&l&&await q.getManager(i).removeModel(c);const h=await o.save(u);return n&&!l&&await q.getManager(i).removeModel(c),h.modelArtifactsInfo}async function X(){const t=q.getSchemes(),e={};for(const n of t){const t=await q.getManager(n).listModels();for(const a in t){e[n+j+a]=t[a]}}return e}async function J(t){const e=Y(t);return q.getManager(e.scheme).removeModel(e.path)}async function $(t,e){return Q(t,e,!1)}async function tt(t,e){return Q(t,e,!0)}var et=n(55767);class nt{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got ".concat(e));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){"undefined"!==typeof window&&(0,m._K)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(t),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(t=>{if(t.source===window&&t.data.name===this.messageName){t.stopPropagation();(0,this.functionRefs[t.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(t,e)}isTypedArray(t){return(0,et.Y)(t)}}if((0,m._K)().get("IS_BROWSER")){(0,m._K)().setPlatform("browser",new nt);try{q.registerManager(Z.URL_SCHEME,new H)}catch(Nr){}try{q.registerManager(R.URL_SCHEME,new D)}catch(Nr){}}const at=()=>n(85817);let st;class rt{constructor(){this.util=n(18590),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=(0,m._K)().global.fetch?(0,m._K)().global.fetch(t,e):(null==st&&(st=at()),st(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(e));return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}}(0,m._K)().get("IS_NODE")&&!(0,m._K)().get("IS_BROWSER")&&(0,m._K)().setPlatform("node",new rt);var ot=n(79494);function it(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return e=e||"float32",_.SA(t),new ot.yl(t,e,n)}var ct=n(47794),lt=n(49820);(0,h.Ye)();const ut={buffer:it,cast:ct.w,clone:lt.o,print:function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(t.toString(e))}};(0,ot.Q5)(ut);var ht=n(58046),dt=n(87242),pt=n(24974),ft=n(20803),gt=n(70191),mt=n(7738),bt=n(63290),xt=n(1839),yt=n(51997);const vt=new Map,wt=new Map;class kt{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class St{constructor(){this.classNameMap={}}static getMap(){return null==St.instance&&(St.instance=new St),St.instance}static register(t){St.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Tt(t,e,n){(0,_.vA)(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),(0,_.vA)("string"===typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),(0,_.vA)(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof e&&(e="Custom"),"undefined"===typeof n&&(n=t.className);const a=e+">"+n;return St.register(t),vt.set(a,t),wt.set(t,a),t}function It(t){return wt.has(t)?wt.get(t):t.className}class Ct extends kt{minimize(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:s[t.name]})));this.applyGradients(t)}else this.applyGradients(s);return(0,ht.AS)(s),e?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return(0,xt.y7)(t,e)}dispose(){null!=this.iterations_&&(0,ht.AS)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,yt.d)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Ct,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class Nt extends Ct{static get className(){return"Adadelta"}constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=h.T2.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=h.T2.registeredVariables[e],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(e,"/accum_grad"),variable:(0,ht.DZ)((()=>(0,bt.P)(a).variable(s)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(e,"/accum_var"),variable:(0,ht.DZ)((()=>(0,bt.P)(a).variable(s)))});const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const o=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,ht.DZ)((()=>{const t=(0,dt.W)((0,ft.l)(o,this.rho),(0,ft.l)((0,mt.E)(r),1-this.rho)),e=(0,ft.l)((0,pt.y)((0,gt.R)((0,dt.W)(i,this.epsilon)),(0,gt.R)((0,dt.W)(o,this.epsilon))),r),n=(0,dt.W)((0,ft.l)(i,this.rho),(0,ft.l)((0,mt.E)(e),1-this.rho));o.assign(t),i.assign(n);const s=(0,dt.W)((0,ft.l)(e,-this.learningRate),a);a.assign(s)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,ht.AS)(this.accumulatedGrads.map((t=>t.variable))),(0,ht.AS)(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2,n=!1;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}var At=n(24660);class Et extends Ct{static get className(){return"Adagrad"}constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=h.T2.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:"".concat(e,"/accumulator"),variable:(0,ht.DZ)((()=>(0,At.G)(a.shape,this.initialAccumulatorValue).variable(t)))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const r=this.accumulatedGrads[n].variable;(0,ht.DZ)((()=>{const t=(0,dt.W)(r,(0,mt.E)(s));r.assign(t);const e=(0,dt.W)((0,ft.l)((0,pt.y)(s,(0,gt.R)((0,dt.W)(t,h.T2.backend.epsilon()))),-this.learningRate),a);a.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,ht.AS)(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}var Rt=n(77587),Ft=n(37951);class Dt extends Ct{static get className(){return"Adam"}constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,ht.DZ)((()=>{this.accBeta1=(0,yt.d)(e).variable(),this.accBeta2=(0,yt.d)(n).variable()})),null==a&&(this.epsilon=h.T2.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);(0,ht.DZ)((()=>{const n=(0,Ft.j)(1,this.accBeta1),a=(0,Ft.j)(1,this.accBeta2);e.forEach(((e,s)=>{const r=h.T2.registeredVariables[e],o=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:"".concat(e,"/m"),variable:(0,ht.DZ)((()=>(0,bt.P)(r).variable(o)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:"".concat(e,"/v"),variable:(0,ht.DZ)((()=>(0,bt.P)(r).variable(o)))});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const c=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=(0,dt.W)((0,ft.l)(c,this.beta1),(0,ft.l)(i,1-this.beta1)),d=(0,dt.W)((0,ft.l)(l,this.beta2),(0,ft.l)((0,mt.E)(i),1-this.beta2)),p=(0,pt.y)(u,n),f=(0,pt.y)(d,a);c.assign(u),l.assign(d);const g=(0,dt.W)((0,ft.l)((0,pt.y)(p,(0,dt.W)((0,gt.R)(f),this.epsilon)),-this.learningRate),r);r.assign(g)})),this.accBeta1.assign((0,ft.l)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,ft.l)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,ht.AS)(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&(0,ht.AS)(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),(0,ht.DZ)((()=>{this.accBeta1.assign((0,Rt.n)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,Rt.n)(this.beta2,this.iterations_+1))}));const e=t.length/2,n=!1;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}var _t=n(33753),Lt=n(82131);class Ot extends Ct{static get className(){return"Adamax"}constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=a,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,ht.DZ)((()=>{this.iteration=(0,yt.d)(0).variable(),this.accBeta1=(0,yt.d)(e).variable()})),null==a&&(this.epsilon=h.T2.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);(0,ht.DZ)((()=>{const n=(0,Ft.j)(1,this.accBeta1),a=(0,pt.y)(-this.learningRate,(0,dt.W)((0,ft.l)(this.iteration,this.decay),1));e.forEach(((e,s)=>{const r=h.T2.registeredVariables[e],o=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:"".concat(e,"/m"),variable:(0,bt.P)(r).variable(o)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:"".concat(e,"/v"),variable:(0,bt.P)(r).variable(o)});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const c=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=(0,dt.W)((0,ft.l)(c,this.beta1),(0,ft.l)(i,1-this.beta1)),d=(0,ft.l)(l,this.beta2),p=(0,_t.t)(i),f=(0,Lt.P)(d,p);c.assign(u),l.assign(f);const g=(0,dt.W)((0,ft.l)((0,pt.y)(a,n),(0,pt.y)(u,(0,dt.W)(f,this.epsilon))),r);r.assign(g)})),this.iteration.assign((0,dt.W)(this.iteration,1)),this.accBeta1.assign((0,ft.l)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,ht.AS)(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&(0,ht.AS)(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}class Mt extends Ct{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const s=h.T2.registeredVariables[e];(0,ht.DZ)((()=>{const t=(0,dt.W)((0,ft.l)(this.c,a),s);s.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=(0,ht.aC)((0,yt.d)(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}class zt extends Mt{static get className(){return"Momentum"}constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=(0,yt.d)(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=h.T2.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:"".concat(e,"/momentum"),variable:(0,ht.DZ)((()=>(0,bt.P)(a).variable(t)))}}const s=this.accumulations[n].variable,r=Array.isArray(t)?t[n].tensor:t[e];null!=r&&(0,ht.DZ)((()=>{let t;const e=(0,dt.W)((0,ft.l)(this.m,s),r);t=this.useNesterov?(0,dt.W)((0,ft.l)(this.c,(0,dt.W)(r,(0,ft.l)(e,this.m))),a):(0,dt.W)((0,ft.l)(this.c,e),a),s.assign(e),a.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,ht.AS)(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}class Pt extends Ct{static get className(){return"RMSProp"}constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==a&&(this.epsilon=h.T2.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=h.T2.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(e,"/rms"),variable:(0,ht.DZ)((()=>(0,bt.P)(a).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(e,"/momentum"),variable:(0,ht.DZ)((()=>(0,bt.P)(a).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(e,"/mg"),variable:(0,ht.DZ)((()=>(0,bt.P)(a).variable(s)))});const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;(0,ht.DZ)((()=>{const t=(0,dt.W)((0,ft.l)(o,this.decay),(0,ft.l)((0,mt.E)(r),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=(0,dt.W)((0,ft.l)(e,this.decay),(0,ft.l)(r,1-this.decay)),c=(0,pt.y)((0,ft.l)(r,this.learningRate),(0,gt.R)((0,Ft.j)(t,(0,dt.W)((0,mt.E)(s),this.epsilon)))),l=(0,dt.W)((0,ft.l)(i,this.momentum),c);o.assign(t),e.assign(s),i.assign(l);const u=(0,Ft.j)(a,l);a.assign(u)}else{const t=(0,dt.W)((0,ft.l)(o,this.decay),(0,ft.l)((0,mt.E)(r),1-this.decay)),e=(0,dt.W)((0,ft.l)(i,this.momentum),(0,pt.y)((0,ft.l)(r,this.learningRate),(0,gt.R)((0,dt.W)(t,this.epsilon))));o.assign(t),i.assign(e);const n=(0,Ft.j)(a,e);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,ht.AS)(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,ht.AS)(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&(0,ht.AS)(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}const Bt=[Nt,Et,Dt,Ot,zt,Pt,Mt];function Wt(t){return new Promise((t=>setTimeout(t))).then(t)}class Ut{constructor(t){if(!(0,m._K)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Ut.URL_SCHEME)&&(t=t.slice(Ut.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=T.D.join(t.weightData),n=window.URL.createObjectURL(new Blob([e],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const e=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],a=(0,x.zV)(t,e),s=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=s,await Wt((()=>r.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=n,await Wt((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:(0,x.oR)(t)}}}}Ut.URL_SCHEME="downloads://";class Vt{constructor(t){if(null==t||t.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(t));this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise(((t,e)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),s=a.modelTopology;if(null==s)return void e(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==a.weightsManifest)return void e(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void t({modelTopology:s});const r=(0,x.Ej)(a,(t=>this.loadWeights(t)));t(r)},n.onerror=t=>e("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)}))}loadWeights(t){const e=[],n=[];for(const r of t)e.push(...r.weights),n.push(...r.paths);const a=this.checkManifestAndWeightFiles(t),s=n.map((t=>this.loadWeightsFile(t,a[t])));return Promise.all(s).then((t=>[e,t]))}loadWeightsFile(t,e){return new Promise(((n,a)=>{const s=new FileReader;s.onload=t=>{const e=t.target.result;n(e)},s.onerror=e=>a("Failed to weights data from file of path '".concat(t,"'.")),s.readAsArrayBuffer(e)}))}checkManifestAndWeightFiles(t){const e=[],n=this.weightsFiles.map((t=>(0,x.P8)(t.name))),a={};for(const s of t)s.paths.forEach((t=>{const s=(0,x.P8)(t);if(-1!==e.indexOf(s))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(s,"'"));if(e.push(s),-1===n.indexOf(s))throw new Error("Weight file with basename '".concat(s,"' is not provided."));a[t]=this.weightsFiles[n.indexOf(s)]}));if(e.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(e.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return a}}function Gt(t){return new Vt(t)}function Zt(t,e,n,a){!function(t){(0,_.vA)(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){(0,_.vA)(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(t))),(0,_.vA)(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(e))),(0,_.vA)(e>=t,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(t," and endFraction ")+"".concat(e)))}(n=null==n?0:n,a=null==a?1:a);let s=0;return Promise.all(t.map((r=>(r.then((r=>{const o=n+ ++s/t.length*(a-n);return e(o),r})),r))))}y.registerSaveRouter((t=>(0,m._K)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ut.URL_SCHEME)?function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Ut(t)}(t.slice(Ut.URL_SCHEME.length)):null));var Kt=n(71042);async function Ht(t,e){null==e&&(e={});const n=null==e.fetchFunc?(0,m._K)().platform.fetch:e.fetchFunc,a=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),s=(null==e.onProgress?await Promise.all(a):await Zt(a,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(s):await Zt(s,e.onProgress,.5,1)}async function jt(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return qt((t=>Ht(t,{requestInit:a})))(t,e,n)}function qt(t){return async function(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0;const s=e.map((()=>!1)),r={},o=null!=a?a.map((()=>!1)):[],i=[];if(e.forEach(((t,e)=>{let n=0;t.weights.forEach((t=>{const c="quantization"in t?t.quantization.dtype:t.dtype,l=Kt.i[c]*_.Ze(t.shape),u=()=>{s[e]=!0,null==r[e]&&(r[e]=[]),r[e].push({manifestEntry:t,groupOffset:n,sizeBytes:l})};null!=a?a.forEach(((e,n)=>{e===t.name&&(u(),o[n]=!0)})):u(),i.push(t.name),n+=l}))})),!o.every((t=>t))){const t=a.filter(((t,e)=>!o[e]));throw new Error("Could not find weights in manifest with names: "+"".concat(t.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=s.reduce(((t,e,n)=>(e&&t.push(n),t)),[]),l=[];c.forEach((t=>{e[t].paths.forEach((t=>{const e=n+(n.endsWith("/")?"":"/")+t;l.push(e)}))}));const u=await t(l),h={};let d=0;return c.forEach((t=>{const n=e[t].paths.length,a=new T.D(u.slice(d,d+n));r[t].forEach((t=>{const e=a.slice(t.groupOffset,t.groupOffset+t.sizeBytes),n=(0,x.CY)(e,[t.manifestEntry]);for(const a in n)h[a]=n[a]})),d+=n})),h}}class Yt{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?((0,_.vA)("function"===typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=(0,m._K)().platform.fetch,(0,_.vA)(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&(0,_.vA)(2===t.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(t.length,")."))),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{},this.loadOptions=e}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],a=(0,x.zV)(t,n);if(e.body.append("model.json",new Blob([JSON.stringify(a)],{type:"application/json"}),"model.json"),null!=t.weightData){const n=T.D.join(t.weightData);e.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:(0,x.oR)(t),responses:[s]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(s.status,"."))}async loadModelJSON(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(t.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let e;try{e=await t.json()}catch(s){let t="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=e.modelTopology,a=e.weightsManifest;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return e}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const t=await this.loadModelJSON();return(0,x.Ej)(t,(t=>this.loadWeights(t)))}async loadStream(){const t=await this.loadModelJSON(),e=await this.getWeightUrls(t.weightsManifest),n=(0,x.Xf)(t.weightsManifest);return Object.assign(Object.assign({},t),{weightSpecs:n,getWeightStream:()=>function(t,e){var n;const a=null==e.fetchFunc?(0,m._K)().platform.fetch:e.fetchFunc;let s,r=0;return null===(n=e.onProgress)||void 0===n||n.call(e,0),new ReadableStream({pull:async n=>{for(var o;r<t.length;){if(!s){const n=(await a(t[r],e.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:i,value:c}=await s.read();if(!i)return void n.enqueue(c);r++,s=void 0,null===(o=e.onProgress)||void 0===o||o.call(e,r/t.length)}n.close()}})}(e,this.loadOptions)})}async getWeightUrls(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),a=t.substring(0,e),s=n>e?t.substring(n):"";return[a+"/",s]}(e),s=this.weightPathPrefix||n,r=[],o=[];for(const i of t)for(const t of i.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):r.push(s+t+a);return this.weightUrlConverter&&r.push(...await Promise.all(o)),r}async loadWeights(t){const e=await this.getWeightUrls(t);return[(0,x.Xf)(t),await Ht(e,this.loadOptions)]}}function Qt(t){return null!=t.match(Yt.URL_SCHEME_REGEX)}Yt.URL_SCHEME_REGEX=/^https?:\/\//;const Xt=(t,e)=>{if("undefined"===typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>Qt(t))):Qt(t),n)return Jt(t,e)}return null};function Jt(t,e){return new Yt(t,e)}function $t(t,e){return Jt(t,e)}y.registerSaveRouter(Xt),y.registerLoadRouter(Xt);class te{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class ee{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class ne{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}}function ae(t,e,n,a){return new ne(se(...arguments))}function se(t,e,n,a){if(1===arguments.length){return null!=t.modelTopology||null!=t.weightSpecs?new te(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new te({modelTopology:t}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new te({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:a})}function re(t){return new ee(t)}function oe(t){return new ee(t)}var ie=n(48805),ce=n(39554),le=n(10843),ue=n(64148),he=n(47892),de=n(79914);let pe,fe=!1;function ge(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,s=!1,r=!1,o=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&t instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement)r=!0;else if(null!=t.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(t.constructor.name));i=!0}if(null!=(0,le._5)(ce.awo,h.T2.backendName)){const n={pixels:t},a={numChannels:e};return h.T2.runKernel(ce.awo,n,a)}const[c,l]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let u,d;if(o)u=t.getContext("2d").getImageData(0,0,c,l).data;else if(a||n)u=t.data;else if(r||s||i){if(null==pe)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");pe=new OffscreenCanvas(1,1).getContext("2d")}else pe=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});pe.canvas.width=c,pe.canvas.height=l,pe.drawImage(t,0,0,c,l),u=pe.getImageData(0,0,c,l).data}if(4===e)d=new Int32Array(u);else{const t=c*l;d=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)d[n*e+t]=u[4*n+t]}return function(t,e,n){if((0,_.HO)(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const a=(0,ue.MZ)(t,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,de.Q)(t,e,a,n)}(d,[l,c,e],"int32")}function me(t){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(t instanceof ImageBitmap)&&function(t){return null!=t&&0!==t.width&&0!==t.height}(t)&&!function(t){return null!=t&&t.data instanceof Uint8Array}(t)}async function be(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if((0,m._K)().getBool("WRAP_TO_IMAGEBITMAP")&&me(t)){let e;try{e=await createImageBitmap(t,{premultiplyAlpha:"none"})}catch(a){e=null}n=null!=e&&e.width===t.width&&e.height===t.height?e:t}else n=t;return ge(n,e)}function xe(t){if(2!==t.rank&&3!==t.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(t.rank,"."));const e=2===t.rank?1:t.shape[2];if(e>4||2===e)throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(e));if("float32"!==t.dtype&&"int32"!==t.dtype)throw new Error("Unsupported type for toPixels: ".concat(t.dtype,".")+" Please use float32 or int32 tensors.")}async function ye(t,e){let n=(0,ue.YT)(t,"img","toPixels");if(!(t instanceof ot.qY)){const t=n;n=(0,ct.w)(t,"int32"),t.dispose()}xe(n);const[a,s]=n.shape.slice(0,2),r=2===n.rank?1:n.shape[2],o=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(s*a*4);for(let l=0;l<a*s;++l){const t=[0,0,0,255];for(let a=0;a<r;a++){const e=o[l*r+a];if("float32"===n.dtype){if(e<0||e>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(e,"."))}else if("int32"===n.dtype&&(e<0||e>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(e,"."));1===r?(t[0]=e*i,t[1]=e*i,t[2]=e*i):t[a]=e*i}const e=4*l;c[e+0]=Math.round(t[0]),c[e+1]=Math.round(t[1]),c[e+2]=Math.round(t[2]),c[e+3]=Math.round(t[3])}if(null!=e){if(!fe){null!=(0,le._5)(ce.XmO,h.T2.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),fe=!0)}e.width=s,e.height=a;const t=e.getContext("2d"),n=new ImageData(c,s,a);t.putImageData(n,0,0)}return n!==t&&n.dispose(),c}function ve(t,e,n){let a=(0,ue.YT)(t,"img","draw");if(!(t instanceof ot.qY)){const t=a;a=(0,ct.w)(t,"int32"),t.dispose()}xe(a),function(t){const e=(null===t||void 0===t?void 0:t.alpha)||1;if(e>1||e<0)throw new Error("Alpha value ".concat(e," is suppoed to be in range [0 - 1]."))}(null===n||void 0===n?void 0:n.imageOptions);const s={image:a},r={canvas:e,options:n};h.T2.runKernel(ce.XmO,s,r)}const we=(0,he.op)({fromPixels_:ge});var ke=n(34642),Se=n(68804),Te=n(58977);const Ie="4.22.0";var Ce=n(38075),Ne=n(51802),Ae=n(41819),Ee=n(23068),Re=n(28650),Fe=n(17538),De=n(45583);const _e=(0,he.op)({avgPool3d_:function(t,e,n,a,s){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=(0,ue.YT)(t,"x","avgPool3d","float32");let i=o,c=!1;4===o.rank&&(c=!0,i=(0,De.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),_.vA(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),_.vA("NDHWC"===r,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(r))),_.vA("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),(0,Fe.s_)("avgPool3d",a,s);const l={x:i},u={filterSize:e,strides:n,pad:a,dimRoundingMode:s,dataFormat:r};let d=h.T2.runKernel(ce.cS,l,u);return d=(0,ct.w)(d,i.dtype),c?(0,De.t)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var Le=n(27237);const Oe=(0,he.op)({batchNorm2d_:function(t,e,n,a,s,r){const o=(0,ue.YT)(t,"x","batchNorm"),i=(0,ue.YT)(e,"mean","batchNorm"),c=(0,ue.YT)(n,"variance","batchNorm");let l,u;return null!=s&&(l=(0,ue.YT)(s,"scale","batchNorm")),null!=a&&(u=(0,ue.YT)(a,"offset","batchNorm")),_.vA(2===o.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(o.rank,"."))),_.vA(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),_.vA(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&_.vA(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&_.vA(2===u.rank||1===u.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,"."))),(0,Le.$)(o,i,c,u,l,r)}});const Me=(0,he.op)({batchNorm3d_:function(t,e,n,a,s,r){const o=(0,ue.YT)(t,"x","batchNorm"),i=(0,ue.YT)(e,"mean","batchNorm"),c=(0,ue.YT)(n,"variance","batchNorm");let l,u;return null!=s&&(l=(0,ue.YT)(s,"scale","batchNorm")),null!=a&&(u=(0,ue.YT)(a,"offset","batchNorm")),_.vA(3===o.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(o.rank,"."))),_.vA(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),_.vA(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&_.vA(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&_.vA(3===u.rank||1===u.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,"."))),(0,Le.$)(o,i,c,u,l,r)}});const ze=(0,he.op)({batchNorm4d_:function(t,e,n,a,s,r){const o=(0,ue.YT)(t,"x","batchNorm"),i=(0,ue.YT)(e,"mean","batchNorm"),c=(0,ue.YT)(n,"variance","batchNorm");let l,u;return null!=s&&(l=(0,ue.YT)(s,"scale","batchNorm")),null!=a&&(u=(0,ue.YT)(a,"offset","batchNorm")),_.vA(4===o.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(o.rank,"."))),_.vA(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),_.vA(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&_.vA(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&_.vA(4===u.rank||1===u.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,"."))),(0,Le.$)(o,i,c,u,l,r)}});var Pe=n(4920),Be=n(53829),We=n(94429);const Ue=(0,he.op)({concat1d_:function(t){return(0,We.x)(t,0)}});const Ve=(0,he.op)({concat2d_:function(t,e){return(0,We.x)(t,e)}});const Ge=(0,he.op)({concat3d_:function(t,e){return(0,We.x)(t,e)}});const Ze=(0,he.op)({concat4d_:function(t,e){return(0,We.x)(t,e)}});var Ke=n(89870),He=n(14969),je=n(1137);const qe=(0,he.op)({conv3d_:function(t,e,n,a){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=(0,ue.YT)(t,"x","conv3d"),i=(0,ue.YT)(e,"filter","conv3d");let c=o,l=!1;4===o.rank&&(l=!0,c=(0,De.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),_.vA(5===c.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(c.rank,"."))),_.vA(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),_.vA(c.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(c.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),_.vA((0,Fe.G0)(n,r),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(r,"'"))),_.vA("NDHWC"===s,(()=>"Error in conv3d: got dataFormat of ".concat(s," but only NDHWC is currently supported."))),_.vA((0,Fe.qk)(r),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),_.vA((0,Fe.qk)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const u={x:c,filter:i},d={strides:n,pad:a,dataFormat:s,dilations:r},p=h.T2.runKernel(ce.A1h,u,d);return l?(0,De.t)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var Ye=n(46410);const Qe=(0,he.op)({conv3dTranspose_:function(t,e,n,a,s){const r=(0,ue.YT)(t,"x","conv3dTranspose"),o=(0,ue.YT)(e,"filter","conv3dTranspose");return(0,Ye.c)(n,r,o,a,s)}});const Xe=(0,he.op)({denseBincount_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=(0,ue.YT)(t,"x","denseBincount"),r=(0,ue.YT)(e,"weights","denseBincount");_.vA("int32"===s.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(s.dtype))),_.vA(s.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(s.rank,"."))),_.vA(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),_.vA(r.size===s.size||0===r.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(s.shape,", weights shape: ")+"".concat(r.shape,".")));const o={x:s,weights:r},i={size:n,binaryOutput:a};return h.T2.runKernel(ce.wNW,o,i)}});var Je=n(49899),$e=n(83645),tn=n(37457),en=n(48810),nn=n(25462),an=n(74023),sn=n(43017);const rn=(0,he.op)({eye_:function(t,e,n){null==e&&(e=t);const a=it([t,e],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),s=t<=e?t:e;for(let o=0;o<s;++o)a.set(1,o,o);const r=(0,De.t)(a.toTensor(),[t,e]);if(null==n)return r;if(1===n.length)return(0,sn.V)((0,an.U)(r,0),[n[0],1,1]);if(2===n.length)return(0,sn.V)((0,an.U)((0,an.U)(r,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,sn.V)((0,an.U)((0,an.U)((0,an.U)(r,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});var on=n(48587),cn=n(56178),ln=n(22759),un=n(9996),hn=n(18076),dn=n(75911),pn=n(21386),fn=n(71194),gn=n(42175),mn=n(45692),bn=n(5162),xn=n(60891),yn=n(6044);const vn=(0,he.op)({maxPool3d_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=(0,ue.YT)(t,"x","maxPool3d");let i=o,c=!1;4===o.rank&&(c=!0,i=(0,De.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),_.vA(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),_.vA("NDHWC"===r,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(r))),(0,Fe.s_)("maxPool3d",a,s);const l={x:i},u={filterSize:e,strides:n,pad:a,dimRoundingMode:s,dataFormat:r},d=h.T2.runKernel(ce.ySp,l,u);return c?(0,De.t)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var wn=n(55396),kn=n(21465),Sn=n(6561),Tn=n(19235);const In=(0,he.op)({moments_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];t=(0,ue.YT)(t,"x","moments");const a=(0,_.Y6)(e,t.shape),s=(0,wn.i)(t,a,n);let r=s.shape;n||(r=(0,Tn.SM)(s.shape,a));const o=(0,mt.E)((0,Ft.j)((0,ct.w)(t,"float32"),(0,De.t)(s,r)));return{mean:s,variance:(0,wn.i)(o,a,n)}}});var Cn=n(1011),Nn=n(50135),An=n(26865),En=n(44616),Rn=n(64100),Fn=n(85048),Dn=n(99855),_n=n(34334);class Ln{constructor(t,e,n,a,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const r=s||Math.random();this.random=_n.alea(r.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let a,s,r;do{a=2*this.random()-1,s=2*this.random()-1,r=a*a+s*s}while(r>=1||0===r);const o=Math.sqrt(-2*Math.log(r)/r);t=this.mean+this.stdDev*a*o,e=this.mean+this.stdDev*s*o,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class On{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(t," - ").concat(e," <= 1 and dtype is not float"));this.random=_n.alea(a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Mn=(0,he.op)({randomNormal_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;if((0,_.SA)(t),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const r=new Ln(e,n,a,!1,s),o=it(t,a);for(let i=0;i<o.values.length;i++)o.values[i]=r.nextValue();return o.toTensor()}});const zn=(0,he.op)({randomUniform_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",s=arguments.length>4?arguments[4]:void 0;(0,_.SA)(t);const r=it(t,a),o=new On(e,n,null,s);for(let i=0;i<r.values.length;i++)r.values[i]=o.nextValue();return r.toTensor()}});function Pn(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:a};return h.T2.runKernel(ce.Q6t,{},s)}var Bn=n(85251),Wn=n(47419),Un=n(42022),Vn=n(63117),Gn=n(74213),Zn=n(10463);const Kn=(0,he.op)({slice1d_:function(t,e,n){const a=(0,ue.YT)(t,"x","slice1d");return _.vA(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),(0,Zn.d)(a,[e],[n])}});const Hn=(0,he.op)({slice2d_:function(t,e,n){const a=(0,ue.YT)(t,"x","slice2d");return _.vA(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),(0,Zn.d)(a,e,n)}});const jn=(0,he.op)({slice3d_:function(t,e,n){const a=(0,ue.YT)(t,"x","slice3d");return _.vA(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),(0,Zn.d)(a,e,n)}});const qn=(0,he.op)({slice4d_:function(t,e,n){const a=(0,ue.YT)(t,"x","slice4d");return _.vA(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),(0,Zn.d)(a,e,n)}});var Yn=n(86719),Qn=n(9973),Xn=n(35181),Jn=n(60613),$n=n(901),ta=n(47382),ea=n(66532),na=n(68032);function aa(t,e){(0,_.HO)(t);const n=(0,ue.MZ)(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,de.Q)(t,null,n,e)}function sa(t,e,n){if((0,_.HO)(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const a=(0,ue.MZ)(t,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,de.Q)(t,e,a,n)}const ra=(0,he.op)({truncatedNormal_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;if((0,_.SA)(t),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const r=new Ln(e,n,a,!0,s),o=it(t,a);for(let i=0;i<o.values.length;i++)o.values[i]=r.nextValue();return o.toTensor()}});var oa=n(3984);function ia(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return h.T2.makeVariable(t,e,n,a)}var ca=n(93986),la=n(74218),ua=n(2154);const ha=(0,he.op)({dropout_:function(t,e,n,a){const s=(0,ue.YT)(t,"x","dropout");if(_.vA("float32"===s.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(s.dtype," tensor instead."))),_.vA(e>=0&&e<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(e,"."))),0===e)return t instanceof ot.qY?s.clone():s;const r=function(t,e){if(null==e)return t.shape.slice();if(_.r1(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let a=0;a<t.shape.length;a++)null==e[a]&&null!=t.shape[a]?n.push(t.shape[a]):n.push(e[a]);return n}return e}(s,n),o=1-e,i=(0,pt.y)((0,on.R)((0,dt.W)(zn(r,0,1,"float32",a),o)),o);return(0,ft.l)(s,i)}});var da=n(49486),pa=n(63062),fa=n(1405),ga=n(57307),ma=n(56927),ba=n(91565),xa=n(99721),ya=n(60319);function va(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return(0,ft.l)(t,(0,ya.P)(e));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function wa(t,e){let n=e;const a=ie.getReductionAxes(t.shape,e.shape);return a.length>0&&(n=(0,ta.c)(n,a)),(0,De.t)(n,t.shape)}function ka(t,e,n,a){if("linear"===e)return t;if("relu"===e)return(0,Bn.V)(t);if("elu"===e)return(0,$e.P)(t);if("relu6"===e)return(0,xa.j)(t);if("prelu"===e)return(0,Dn.N)(t,n);if("leakyrelu"===e)return(0,hn.H)(t,a);if("sigmoid"===e)return(0,Gn.r)(t);throw new Error("Unknown fused activation ".concat(e,"."))}const Sa=(t,e)=>!(t>0)||"linear"===e;const Ta=(0,he.op)({fusedConv2d_:function(t){let{x:e,filter:n,strides:a,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}=t;if(l=l||"linear",!1===Sa(h.T2.state.gradientDepth,l)){_.vA("NHWC"===r,(()=>"Error in fused conv2d: got dataFormat of ".concat(r," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let t=(0,He.X)(e,n,a,s,r,o,i);return null!=c&&(t=(0,dt.W)(t,c)),ka(t,l,u,d)}const p=(0,ue.YT)(e,"x","conv2d","float32"),f=(0,ue.YT)(n,"filter","conv2d","float32");let g=p,m=!1;3===p.rank&&(m=!0,g=(0,De.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),_.vA(4===g.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(g.rank,"."))),_.vA(4===f.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(f.rank,"."))),Fe.s_("fused conv2d",s,i);const b="NHWC"===r?g.shape[3]:g.shape[1];_.vA(f.shape[2]===b,(()=>"Error in conv2d: depth of input (".concat(b,") must match ")+"input depth for filter ".concat(f.shape[2],"."))),_.vA(Fe.G0(a,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(o,"'")));const x=Fe.uf(g.shape,f.shape,a,o,s,i);let y,v;if(null!=c&&(y=(0,ue.YT)(c,"bias","fused conv2d"),[y]=(0,Se.makeTypesMatch)(y,p),"NHWC"===r?ie.assertAndGetBroadcastShape(x.outShape,y.shape):(_.vA(y.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(y.shape.length,"."))),_.vA(0===y.shape.length||y.shape[0]===x.outChannels||1===y.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(y.shape,") is not ")+"compatible with the number of output channels "+"(".concat(x.outChannels,")"))))),null!=u){const t=u.shape;if(_.vA(t.length<=1||3===t.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(t.length,"."))),1===t.length)_.vA(1===t[0]||t[0]===x.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(t,") is not compatible with the number of output ")+"channels (".concat(x.outChannels,").")));else if(3===t.length)try{ie.assertAndGetBroadcastShape(t,x.outShape)}catch(T){const e="Error in fused conv2d: PReLU activation weights (".concat(t,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(x.outShape,").");throw Error(e)}v=(0,ue.YT)(u,"prelu weights","fused conv2d")}const w=(t,e)=>{_.vA("NHWC"===r,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(r," but only NHWC is currently supported.")));const[n,i,c,u]=e,h=va(t,c,l);_.vA(Fe.Dh(o),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")));const d=[(0,ba.v)(i.shape,h,n,a,s),(0,ma.H)(i,h,n.shape,a,s)];if(null!=u){const t=wa(u,h);d.push(t)}return d},k={x:g,filter:f,bias:y,preluActivationWeights:v},S={strides:a,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:d};if(null==c){const t=(0,xt._X)(((t,e,n)=>{let a=h.T2.runKernel(ce.aAr,k,S);return n([e,t,a]),m&&(a=(0,De.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:w}}));return t(g,f)}{const t=(0,xt._X)(((t,e,n,a)=>{let s=h.T2.runKernel(ce.aAr,k,S);return a([e,t,s,n]),m&&(s=(0,De.t)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:w}}));return t(g,f,y)}}});var Ia=n(17399),Ca=n(10261);const Na=(0,he.op)({fusedDepthwiseConv2d_:function(t){let{x:e,filter:n,strides:a,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}=t;if(!1===Sa(h.T2.state.gradientDepth,l)){let t=(0,Je.G)(e,n,a,s,r,o,i);return null!=c&&(t=(0,dt.W)(t,c)),ka(t,l,u,d)}const p=(0,ue.YT)(e,"x","depthwiseConv2d","float32"),f=(0,ue.YT)(n,"filter","depthwiseConv2d","float32");let g=p,m=!1;3===p.rank&&(m=!0,g=(0,De.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),_.vA(4===g.rank,(()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(g.rank,"."))),_.vA(4===f.rank,(()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(f.rank,"."))),_.vA(g.shape[3]===f.shape[2],(()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(g.shape[3],") must match the inChannels dimension in ")+"filter ".concat(f.shape[2],"."))),null==o&&(o=[1,1]),_.vA(Fe.G0(a,o),(()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(o,"'"))),Fe.s_("fused depthwiseConv2d",s,i);const b=Fe.uf(g.shape,f.shape,a,o,s,i,!0);let x,y;null!=c&&(x=(0,ue.YT)(c,"bias","fused conv2d"),[x]=(0,Se.makeTypesMatch)(x,p),ie.assertAndGetBroadcastShape(b.outShape,x.shape)),null!=u&&(y=(0,ue.YT)(u,"prelu weights","fused depthwiseConv2d"));const v=(t,e)=>{_.vA(Fe.Dh(o),(()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(o,"'")));const[n,r,c,u]=e,h=va(t,c,l),d=(0,Ca.l)(r.shape,h,n,a,s,o,i),p=(0,Ia.x)(r,h,n.shape,a,s,o,i);if(null!=u){return[d,p,wa(x,h)]}return[d,p]},w={x:g,filter:f,bias:x,preluActivationWeights:y},k={strides:a,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:d};if(null==c){const t=(0,xt._X)(((t,e,n)=>{let a=h.T2.runKernel(ce.T7M,w,k);return n([e,t,a]),m&&(a=(0,De.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}}));return t(g,f)}{const t=(0,xt._X)(((t,e,n,a)=>{let s=h.T2.runKernel(ce.T7M,w,k);return a([e,t,s,n]),m&&(s=(0,De.t)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}));return t(g,f,x)}}});const Aa=(0,he.op)({fusedMatMul_:function(t){let{a:e,b:n,transposeA:a=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:c=.2}=t;if(!1===Sa(h.T2.state.gradientDepth,o)){let t=(0,bn.N)(e,n,a,s);return null!=r&&(t=(0,dt.W)(t,r)),ka(t,o,i,c)}let l=(0,ue.YT)(e,"a","fused matMul"),u=(0,ue.YT)(n,"b","fused matMul");[l,u]=(0,Se.makeTypesMatch)(l,u);const d=a?l.shape[l.rank-2]:l.shape[l.rank-1],p=s?u.shape[u.rank-1]:u.shape[u.rank-2],f=a?l.shape[l.rank-1]:l.shape[l.rank-2],g=s?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),b=u.shape.slice(0,-2),x=_.Ze(m),y=_.Ze(b);_.vA(d===p,(()=>"Error in fused matMul: inner shapes (".concat(d,") and (")+"".concat(p,") of Tensors with shapes ").concat(l.shape," and ")+"".concat(u.shape," and transposeA=").concat(a)+" and transposeB=".concat(s," must match.")));const v=ie.assertAndGetBroadcastShape(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([f,g]),w=a?(0,De.t)(l,[x,d,f]):(0,De.t)(l,[x,f,d]),k=s?(0,De.t)(u,[y,g,p]):(0,De.t)(u,[y,p,g]);let S,T;null!=r&&(S=(0,ue.YT)(r,"bias","fused matMul"),[S]=(0,Se.makeTypesMatch)(S,l),ie.assertAndGetBroadcastShape(v,S.shape)),null!=i&&(T=(0,ue.YT)(i,"prelu weights","fused matMul"));const I=(t,e)=>{const[n,i,c,l]=e,u=va((0,De.t)(t,c.shape),c,o);let h,d;if(a||s?!a&&s?(h=(0,bn.N)(u,i,!1,!1),d=(0,bn.N)(u,n,!0,!1)):a&&!s?(h=(0,bn.N)(i,u,!1,!0),d=(0,bn.N)(n,u,!1,!1)):(h=(0,bn.N)(i,u,!0,!0),d=(0,bn.N)(u,n,!0,!0)):(h=(0,bn.N)(u,i,!1,!0),d=(0,bn.N)(n,u,!0,!1)),null!=r){return[h,d,wa(l,u)]}return[h,d]},C={a:w,b:k,bias:S,preluActivationWeights:T},N={transposeA:a,transposeB:s,activation:o,leakyreluAlpha:c};if(null==r){const t=(0,xt._X)(((t,e,n)=>{const a=h.T2.runKernel(ce.Dr,C,N);return n([t,e,a]),{value:(0,De.t)(a,v),gradFunc:I}}));return t(w,k)}{const t=(0,xt._X)(((t,e,n,a)=>{const s=h.T2.runKernel(ce.Dr,C,N);return a([t,e,s,n]),{value:(0,De.t)(s,v),gradFunc:I}}));return t(w,k,S)}}});const Ea=(0,he.op)({cropAndResize_:function(t,e,n,a){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,ue.YT)(t,"image","cropAndResize"),i=(0,ue.YT)(e,"boxes","cropAndResize","float32"),c=(0,ue.YT)(n,"boxInd","cropAndResize","int32"),l=i.shape[0];_.vA(4===o.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),_.vA(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(l,",4] ")+"but had shape ".concat(i.shape,"."))),_.vA(1===c.rank&&c.shape[0]===l,(()=>"Error in cropAndResize: boxInd must be have size [".concat(l,"] ")+"but had shape ".concat(i.shape,"."))),_.vA(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),_.vA(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),_.vA("bilinear"===s||"nearest"===s,(()=>"method must be bilinear or nearest, but was ".concat(s)));const u={image:o,boxes:i,boxInd:c},d={method:s,extrapolationValue:r,cropSize:a};return h.T2.runKernel(ce.MRQ,u,d)}});const Ra=(0,he.op)({flipLeftRight_:function(t){const e=(0,ue.YT)(t,"image","flipLeftRight","float32");_.vA(4===e.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(e.rank,".")));const n={image:e};return h.T2.runKernel(ce.BxF,n,{})}});const Fa=(0,he.op)({grayscaleToRGB_:function(t){const e=(0,ue.YT)(t,"image","grayscaleToRGB"),n=e.rank-1,a=e.shape[n];_.vA(e.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(e.rank,"."))),_.vA(1===a,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,".")));const s=new Array(e.rank);return s.fill(1,0,n),s[n]=3,(0,sn.V)(e,s)}});const Da=(0,he.op)({einsum_:function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),a=1;a<e;a++)n[a-1]=arguments[a];const s=n.map(((t,e)=>(0,ue.YT)(t,"tensors".concat(e),"einsum"))),r={equation:t};return h.T2.runKernel(ce.Qgm,s,r)}});const _a=(0,he.op)({rgbToGrayscale_:function(t){const e=(0,ue.YT)(t,"image","RGBToGrayscale"),n=e.rank-1,a=e.shape[n];_.vA(e.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(e.rank,"."))),_.vA(3===a,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,".")));const s=e.dtype,r=(0,ct.w)(e,"float32"),o=aa([.2989,.587,.114]);let i;switch(e.rank){case 2:i=Da("ij,j->i",r,o);break;case 3:i=Da("ijk,k->ij",r,o);break;case 4:i=Da("ijkl,l->ijk",r,o);break;case 5:i=Da("ijklm,m->ijkl",r,o);break;case 6:i=Da("ijklmn,n->ijklm",r,o);break;default:throw new Error("Not a valid tensor rank.")}return i=(0,an.U)(i,-1),(0,ct.w)(i,s)}});const La=(0,he.op)({rotateWithOffset_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const s=(0,ue.YT)(t,"image","rotateWithOffset","float32");_.vA(4===s.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(s.rank,".")));const r={image:s},o={radians:e,fillValue:n,center:a};return h.T2.runKernel(ce.BK4,r,o)}});function Oa(t,e,n,a,s,r){null==a&&(a=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==r&&(r=0);const o=t.shape[0];return n=Math.min(n,o),_.vA(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),_.vA(2===t.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(t.rank,"'"))),_.vA(4===t.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(t.shape[1]))),_.vA(1===e.rank,(()=>"scores must be a 1D tensor")),_.vA(e.shape[0]===o,(()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(e.shape[0]))),_.vA(0<=r&&r<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(r,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:s,softNmsSigma:r}}const Ma=(0,he.op)({nonMaxSuppression_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const r=(0,ue.YT)(t,"boxes","nonMaxSuppression","float32"),o=(0,ue.YT)(e,"scores","nonMaxSuppression","float32"),i=Oa(r,o,n,a,s);n=i.maxOutputSize,a=i.iouThreshold,s=i.scoreThreshold;const c={maxOutputSize:n,iouThreshold:a,scoreThreshold:s};return h.T2.runKernel(ce.SDM,{boxes:r,scores:o},c)}});function za(t,e,n){const a=function(t,e,n){return function(t,e,n){let a=0,s=t.length,r=0,o=!1;for(;a<s;){r=a+(s-a>>>1);const i=n(e,t[r]);i>0?a=r+1:(s=r,o=!i)}return o?a:-a-1}(t,e,n||Pa)}(t,e,n),s=a<0?-(a+1):a;t.splice(s,0,e)}function Pa(t,e){return t>e?1:t<e?-1:0}function Ba(t,e,n,a,s){return Va(t,e,n,a,s,0)}function Wa(t,e,n,a,s,r){return Va(t,e,n,a,s,0,!1,r,!0)}function Ua(t,e,n,a,s,r){return Va(t,e,n,a,s,r,!0)}function Va(t,e,n,a,s,r){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const l=[];for(let m=0;m<e.length;m++)e[m]>s&&l.push({score:e[m],boxIndex:m,suppressBeginIndex:0});l.sort(Ka);const u=r>0?-.5/r:0,h=[],d=[];for(;h.length<n&&l.length>0;){const e=l.pop(),{score:n,boxIndex:r,suppressBeginIndex:o}=e;if(n<s)break;let i=!1;for(let c=h.length-1;c>=o;--c){const n=Ga(t,r,h[c]);if(n>=a){i=!0;break}if(e.score=e.score*Za(a,u,n),e.score<=s)break}e.suppressBeginIndex=h.length,i||(e.score===n?(h.push(r),d.push(e.score)):e.score>s&&za(l,e,Ka))}const p=h.length,f=n-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return o&&(g.selectedScores=d),c&&(g.validOutputs=p),g}function Ga(t,e,n){const a=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),r=Math.min(a[0],a[2]),o=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),l=Math.min(s[0],s[2]),u=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(i-r)*(c-o),f=(h-l)*(d-u);if(p<=0||f<=0)return 0;const g=Math.max(r,l),m=Math.max(o,u),b=Math.min(i,h),x=Math.min(c,d),y=Math.max(b-g,0)*Math.max(x-m,0);return y/(p+f-y)}function Za(t,e,n){const a=Math.exp(e*n*n);return n<=t?a:0}function Ka(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const Ha=async function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const r=(0,ue.YT)(t,"boxes","nonMaxSuppressionAsync"),o=(0,ue.YT)(e,"scores","nonMaxSuppressionAsync"),i=Oa(r,o,n,a,s);n=i.maxOutputSize,a=i.iouThreshold,s=i.scoreThreshold;const c=await Promise.all([r.data(),o.data()]),l=c[0],u=c[1],{selectedIndices:h}=Ba(l,u,n,a,s);return r!==t&&r.dispose(),o!==e&&o.dispose(),aa(h,"int32")};const ja=(0,he.op)({nonMaxSuppressionWithScore_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,ue.YT)(t,"boxes","nonMaxSuppression"),i=(0,ue.YT)(e,"scores","nonMaxSuppression"),c=Oa(o,i,n,a,s,r);n=c.maxOutputSize,a=c.iouThreshold,s=c.scoreThreshold,r=c.softNmsSigma;const l={boxes:o,scores:i},u={maxOutputSize:n,iouThreshold:a,scoreThreshold:s,softNmsSigma:r},d=h.T2.runKernel(ce.e0f,l,u);return{selectedIndices:d[0],selectedScores:d[1]}}});const qa=async function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,ue.YT)(t,"boxes","nonMaxSuppressionAsync"),i=(0,ue.YT)(e,"scores","nonMaxSuppressionAsync"),c=Oa(o,i,n,a,s,r);n=c.maxOutputSize,a=c.iouThreshold,s=c.scoreThreshold,r=c.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Ua(u,h,n,a,s,r);return o!==t&&o.dispose(),i!==e&&i.dispose(),{selectedIndices:aa(d,"int32"),selectedScores:aa(p)}};const Ya=(0,he.op)({nonMaxSuppressionPadded_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,r=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,ue.YT)(t,"boxes","nonMaxSuppression"),i=(0,ue.YT)(e,"scores","nonMaxSuppression"),c=Oa(o,i,n,a,s,null),l={boxes:o,scores:i},u={maxOutputSize:c.maxOutputSize,iouThreshold:c.iouThreshold,scoreThreshold:c.scoreThreshold,padToMaxOutputSize:r},d=h.T2.runKernel(ce.Zl4,l,u);return{selectedIndices:d[0],validOutputs:d[1]}}});const Qa=async function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,r=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,ue.YT)(t,"boxes","nonMaxSuppressionAsync"),i=(0,ue.YT)(e,"scores","nonMaxSuppressionAsync"),c=Oa(o,i,n,a,s,null),l=c.maxOutputSize,u=c.iouThreshold,h=c.scoreThreshold,[d,p]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:g}=Wa(d,p,l,u,h,r);return o!==t&&o.dispose(),i!==e&&i.dispose(),{selectedIndices:aa(f,"int32"),validOutputs:(0,yt.d)(g,"int32")}};var Xa=n(22214),Ja=n(92823);const $a=(0,he.op)({bincount_:function(t,e,n){const a=(0,ue.YT)(t,"x","bincount"),s=(0,ue.YT)(e,"weights","bincount");_.vA("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),_.vA(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),_.vA(s.size===a.size||0===s.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(s.shape,".")));const r={x:a,weights:s},o={size:n};return h.T2.runKernel(ce.N4F,r,o)}});var ts=n(827),es=n(96509);const ns=(0,he.op)({threshold_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const s=(0,ue.YT)(t,"image","threshold"),r=s.shape[0]*s.shape[1];let o,i,c,l,u=(0,ft.l)(aa([a]),255);if(_.vA(3===s.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(s.rank,"."))),_.vA(3===s.shape[2]||1===s.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(s.shape[2],"."))),_.vA("int32"===s.dtype||"float32"===s.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(s.dtype,"."))),_.vA("otsu"===e||"binary"===e,(()=>"Method must be binary or otsu, but was ".concat(e))),3===s.shape[2]){[o,i,c]=(0,Xn.l)(s,[1,1,1],-1);const t=(0,ft.l)(o,.2989),e=(0,ft.l)(i,.587),n=(0,ft.l)(c,.114);l=(0,dt.W)((0,dt.W)(t,e),n)}else l=t;if("otsu"===e){u=function(t,e){let n,a,s,r,o,i,c=aa([-1]),l=aa([0]),u=aa([0]);for(let h=0;h<t.size-1;h++){n=(0,Zn.d)(t,0,h+1),a=(0,Zn.d)(t,h+1),o=(0,pt.y)((0,ta.c)(n),e),i=(0,pt.y)((0,ta.c)(a),e);const d=(0,ta.c)((0,ft.l)(n,Pn(0,n.size)));s=(0,pt.y)(d,(0,ta.c)(n));const p=(0,At.G)(a.shape,n.size),f=(0,dt.W)(Pn(0,a.size),p),g=(0,ft.l)(a,f);r=(0,pt.y)((0,ta.c)(g),(0,ta.c)(a));const m=(0,Ft.j)(s,r),b=(0,Ft.j)(s,r),x=(0,ft.l)(o,i);u=(0,ft.l)((0,ft.l)(x,m),b);const y=(0,ln.r)(u,l);l=(0,ca._)(y,u,l),c=(0,ca._)(y,aa([h]),c)}return c}($a((0,ct.w)((0,es.L)(l),"int32"),(0,na.O)([]),256),r)}const h=n?(0,ts.I)(l,u):(0,ln.r)(l,u);return(0,ct.w)((0,ft.l)(h,255),"int32")}});const as=(0,he.op)({transform_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,r=arguments.length>5?arguments[5]:void 0;const o=(0,ue.YT)(t,"image","transform","float32"),i=(0,ue.YT)(e,"transforms","transform","float32");_.vA(4===o.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),_.vA(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),_.vA(null==r||2===r.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(r,".")));const c={image:o,transforms:i},l={interpolation:n,fillMode:a,fillValue:s,outputShape:r};return h.T2.runKernel(ce.dLy,c,l)}});var ss=n(58320);const rs=(0,he.op)({bandPart_:function(t,e,n){const a=(0,ue.YT)(t,"a","bandPart");(0,_.vA)(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const s=a.shape,[r,o]=a.shape.slice(-2);let i,c;"number"===typeof e?((0,_.vA)(e%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(e,"."))),(0,_.vA)(e<=r,(()=>"bandPart(): numLower (".concat(e,")")+" must not be greater than the number of rows (".concat(r,")."))),i=(0,ue.YT)(e<0?r:e,"numLower","bandPart")):((0,_.vA)("int32"===e.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=(0,ca._)((0,ss.M)(e,0),r,(0,Sn.B)(e,r))),"number"===typeof n?((0,_.vA)(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),(0,_.vA)(n<=o,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,")."))),c=(0,ue.YT)(n<0?o:n,"numUpper","bandPart")):((0,_.vA)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),c=(0,ca._)((0,ss.M)(n,0),o,(0,Sn.B)(n,o)));const l=(0,De.t)(Pn(0,r,1,"int32"),[-1,1]),u=Pn(0,o,1,"int32"),h=(0,Ft.j)(l,u),d=(0,mn.n)((0,ts.I)(h,i),(0,un.D)(h,(0,Cn.H)(c))),p=(0,la.U)([r,o],a.dtype);return(0,De.t)((0,$n.t)((0,oa.K)((0,De.t)(a,[-1,r,o])).map((t=>(0,ca._)(d,t,p)))),s)}});var os=n(92155);const is=(0,he.op)({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,(0,_.vA)(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)(0,_.vA)(t[e].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(t[e].shape[0]," vs. ").concat(n,")")))}else e=!0,t=(0,Xn.l)(t,t.shape[0],0).map((t=>(0,Jn.r)(t,[0])));(0,_.vA)(t.length<=t[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(t.length,") exceeds ")+"number of dimensions (".concat(t[0].shape[0],").")));const n=[],a=t;for(let s=0;s<t.length;++s)n.push(h.T2.tidy((()=>{let t=a[s];if(s>0)for(let e=0;e<s;++e){const a=(0,ft.l)((0,ta.c)((0,ft.l)(n[e],t)),n[e]);t=(0,Ft.j)(t,a)}return(0,pt.y)(t,(0,os.x)(t,"euclidean"))})));return e?(0,$n.t)(n,0):n}});function cs(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return h.T2.tidy((()=>{(0,_.vA)(2===t.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(t.shape.length,"D Tensor.")));const n=t.shape[0],a=t.shape[1];let s=rn(n),r=(0,lt.o)(t);const o=sa([[1]],[1,1]);let i=(0,lt.o)(o);const c=n>=a?a:n;for(let t=0;t<c;++t){const e=r,c=i,l=s;[i,r,s]=h.T2.tidy((()=>{const e=(0,Zn.d)(r,[t,t],[n-t,1]),c=(0,os.x)(e),l=(0,Zn.d)(r,[t,t],[1,1]),u=(0,ca._)((0,ln.r)(l,0),sa([[-1]]),sa([[1]])),h=(0,Ft.j)(l,(0,ft.l)(u,c)),d=(0,pt.y)(e,h);i=1===d.shape[0]?(0,lt.o)(o):(0,We.x)([o,(0,Zn.d)(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=(0,Cn.H)((0,pt.y)((0,bn.N)(u,h),c)),f=(0,Zn.d)(r,[t,0],[n-t,a]),g=(0,ft.l)(p,i),m=(0,ua.m)(i);if(0===t)r=(0,Ft.j)(f,(0,bn.N)(g,(0,bn.N)(m,f)));else{const e=(0,Ft.j)(f,(0,bn.N)(g,(0,bn.N)(m,f)));r=(0,We.x)([(0,Zn.d)(r,[0,0],[t,a]),e],0)}const b=(0,ua.m)(g),x=(0,Zn.d)(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=(0,Ft.j)(x,(0,bn.N)((0,bn.N)(x,i),b));else{const e=(0,Ft.j)(x,(0,bn.N)((0,bn.N)(x,i),b));s=(0,We.x)([(0,Zn.d)(s,[0,0],[n,t]),e],1)}return[i,r,s]})),(0,ht.AS)([e,c,l])}return!e&&n>a&&(s=(0,Zn.d)(s,[0,0],[n,a]),r=(0,Zn.d)(r,[0,0],[a,a])),[s,r]}))}const ls=(0,he.op)({qr_:function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if((0,_.vA)(t.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(t.rank))),2===t.rank)return cs(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),a=(0,oa.K)((0,De.t)(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],r=[];a.forEach((t=>{const[n,a]=cs(t,e);s.push(n),r.push(a)}));return[(0,De.t)((0,$n.t)(s,0),t.shape),(0,De.t)((0,$n.t)(r,0),t.shape)]}}});var us;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(us||(us={}));n(30208);pa.h,fa.K,da.z,ga.g;const hs={flipLeftRight:Ra,grayscaleToRGB:Fa,resizeNearestNeighbor:Ja.b,resizeBilinear:Xa.v,rgbToGrayscale:_a,rotateWithOffset:La,cropAndResize:Ea,nonMaxSuppression:Ma,nonMaxSuppressionAsync:Ha,nonMaxSuppressionWithScore:ja,nonMaxSuppressionWithScoreAsync:qa,nonMaxSuppressionPadded:Ya,nonMaxSuppressionPaddedAsync:Qa,threshold:ns,transform:as},ds={bandPart:rs,gramSchmidt:is,qr:ls};const ps=class{static sgd(t){return new Mt(t)}static momentum(t,e){return new zt(t,e,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(t){return new Pt(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Dt(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Nt(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Ot(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(t){return new Et(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},fs="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:t=>t();function gs(){return new Promise((t=>fs((()=>t()))))}function ms(t,e){const n=t[0].length;t.forEach(((t,e)=>{_.vA(t.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(e,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),_.vA(e>=0&&e<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=t[0];t.forEach(((t,s)=>{for(let r=0;r<n;r++)_.vA(r===e||t[r]===a[r],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(s,"] (").concat(t,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(s,".")))}))}function bs(t,e){const n=t[0].slice();for(let a=1;a<t.length;a++)n[e]+=t[a][e];return n}var xs;function ys(t,e,n){let a=new Array;if(null==n&&null==e)return a;if(null==e)for(;a.length<t+n.length;)a.push(-1);else a=e.slice();if(null==n)return a;if(t+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(e," are incompatible: rt input.rank = ").concat(t+n.length,", but shape.rank = ").concat(a.length));for(let s=1;s<n.length;++s){const r=n[s],o=a[a.length-n.length+s],i=a[o];if(r>=0)if(i>=0){if(i!==r)throw new Error("rt input.shape and shape=".concat(e," are incompatible: rt input.shape[").concat(s+t,"] = ").concat(r," but shape[").concat(s+t,"] = ").concat(i))}else a[o]=r}return a}function vs(t){const e={FIRST_DIM_SIZE:xs.FIRST_DIM_SIZE,VALUE_ROWIDS:xs.VALUE_ROWIDS,ROW_LENGTHS:xs.ROW_LENGTHS,ROW_SPLITS:xs.ROW_SPLITS,ROW_LIMITS:xs.ROW_LIMITS,ROW_STARTS:xs.ROW_STARTS},n=[];for(const a of t){if(!(a in e))break;n.push(e[a])}return n}function ws(t){return 0===t.length?0:t[0]===xs.FIRST_DIM_SIZE?t.length-1:t.length}function ks(t,e){if(null==t||null==e)return;const n=t.length,a=e.length;if(n>=a)throw new Error("defaultValue.shape=".concat(t," and ragged tensor flatValues.shape=").concat(e,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let s=0;s<Math.min(n,a-1);++s){const n=t[s],a=e[s+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(t,", and ragged tensor input flatValues.shape=").concat(e," are incompatible: defaultValue.shape[").concat(s-t.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(s-t.length,"] = ").concat(a))}}!function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"}(xs||(xs={}));const Ss=30;function Ts(t){return t<=Ss?t:(0,_.lK)(t,Math.floor(Math.sqrt(t)))}function Is(t,e,n){return[n*("number"===typeof t?t:t[0]),e*("number"===typeof t?t:t[1])]}function Cs(t,e,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(e.slice(0)),a.push(t[0]/n),a=a.concat(t.slice(1));else{a=a.concat(t[0]);const n=e.length;for(let s=0;s<n;++s)a=a.concat([t[s+1]/e[s],e[s]]);a=a.concat(t.slice(n+1))}return a}function Ns(t,e){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(e);for(let a=e+1;a<t;++a)a<=2*e?(n.push(a),n.push(a-(e+1))):n.push(a)}else{const a=[],s=[];for(let n=1;n<t;++n)n>=2*e+1||n%2===1?s.push(n):a.push(n);n.push(...a),n.push(0),n.push(...s)}return n}function As(t,e,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const s=[];a?s.push(t[0]/n):s.push(t[0]*n);for(let r=1;r<t.length;++r)r<=e.length?a?s.push(e[r-1]*t[r]):s.push(t[r]/e[r-1]):s.push(t[r]);return s}function Es(t,e){const n=[0];for(let a=0;a<e;++a)n.push(t[a][0]);return n}function Rs(t,e,n){const a=t.slice(0,1);for(let s=0;s<n;++s)a.push(t[s+1]-e[s][0]-e[s][1]);return a}function Fs(t,e){const n=t.shape.length,a=e.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==e.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(e.shape[a-1]," vs. ").concat(n));if(0===(0,_.Ze)(t.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(t.shape,"."));const s=e.shape,r=s[s.length-1];let o=1;for(let h=0;h<s.length-1;++h)o*=s[h];const i=t.shape,c=s.slice();c.pop();let l=1;for(let h=r;h<n;++h)l*=i[h],c.push(i[h]);const u=[...(0,_.Ur)(t.shape).map((t=>t/l)),1].slice(0,r);return[c,o,l,u]}function Ds(t,e,n){const a=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,r="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(e.shape,", shape: ").concat(t)+", sliceDim: ".concat(a,", and batchDim: ").concat(s,".");if(n.rank<s)throw new Error(r+" update.rank < ".concat(s,". "));if(t.length<a+(n.rank-s))throw new Error(r+" Output shape length < ".concat(a+(n.rank-s)));if(n.rank!==s+t.length-a)throw new Error(r+" update.rank != ".concat(s+t.length-a));for(let o=0;o<s;++o)if(n.shape[o]!==e.shape[o])throw new Error(r+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(e.shape[o],")."));for(let o=0;o<n.rank-s;++o)if(n.shape[o+s]!==t[o+a])throw new Error(r+" updates.shape[".concat(o+s,"] (").concat(n.shape[o+s],") != shape[").concat(o+s,"] (").concat(t[o+s],")"))}function _s(t,e,n){if(e.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if(t.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(e.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: ".concat(e.shape));if(0===t.size)throw new Error("Updates specified for empty output. updates shape: ".concat(t.shape))}Ds(n,e,t)}function Ls(t,e,n){const a=e.shape.length,s=a>1?e.shape[a-1]:1,r=n.length;let o=1;for(let c=s;c<r;++c)o*=n[c];const i=s<1?1:s;return{sliceRank:s,numUpdates:(0,_.Ze)(e.shape)/i,sliceSize:o,strides:[...(0,_.Ur)(n.slice(0,s)),1],outputSize:(0,_.Ze)(n)}}var Os=n(3765);const Ms=.3275911,zs=.254829592,Ps=-.284496736,Bs=1.421413741,Ws=-1.453152027,Us=1.061405429;var Vs=n(64124);function Gs(t,e){if(t.length!==e.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(t.length,", imag: ").concat(e.length,"."));const n=new Float32Array(2*t.length);for(let a=0;a<n.length;a+=2)n[a]=t[a/2],n[a+1]=e[a/2];return n}function Zs(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let a=0;a<t.length;a+=2)e[a/2]=t[a],n[a/2]=t[a+1];return{real:e,imag:n}}function Ks(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),a=new Float32Array(e);for(let s=0;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],a[Math.floor(s/4)]=t[s+1];return{real:n,imag:a}}function Hs(t){const e=Math.floor(t.length/4),n=new Float32Array(e),a=new Float32Array(e);for(let s=2;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],a[Math.floor(s/4)]=t[s+1];return{real:n,imag:a}}function js(t,e){return{real:t[2*e],imag:t[2*e+1]}}function qs(t,e,n,a){t[2*a]=e,t[2*a+1]=n}function Ys(t,e){const n=new Float32Array(t/2),a=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const r=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(r),a[s]=Math.sin(r)}return{real:n,imag:a}}function Qs(t,e,n){const a=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(a),imag:Math.sin(a)}}const Xs="->",Js=/->/g,$s=",",tr="...";function er(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace(Js,"").length)/Xs.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(Xs,'").'));const[a,s]=t.split(Xs);(0,_.vA)(-1===a.indexOf(tr),(()=>'The ellipsis notation ("'.concat(tr,'") is not supported yet.')));const r=a.split($s),o=r.length;if(e!==o)throw new Error("Expected ".concat(o," input tensors, received ").concat(e));if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<s.length;++h){const t=s[h];if(!r.some((e=>-1!==e.indexOf(t))))throw new Error("Output subscripts contain the label ".concat(t," ")+"not present in the input subscripts.");-1===i.indexOf(t)&&i.push(t)}for(let h=0;h<a.length;++h){const t=a[h];-1===i.indexOf(t)&&t!==$s&&i.push(t)}const c=new Array(r.length);for(let h=0;h<o;++h){if(new Set(r[h].split("")).size!==r[h].length)throw new Error("Found duplicate axes in input component ".concat(r[h],". ")+"Support for duplicate axes in input is not implemented yet.");c[h]=[];for(let t=0;t<r[h].length;++t)c[h].push(i.indexOf(r[h][t]))}const l=i.length,u=[];for(let h=s.length;h<l;++h)u.push(h);return{allDims:i,summedDims:u,idDims:c}}function nr(t,e){let n=new Array(t);n.fill(-1);for(let s=0;s<e.length;++s)n[e[s]]=s;const a=[];for(let s=0;s<t;++s)-1===n[s]&&a.push(s);return n=n.filter((t=>-1!==t)),{permutationIndices:n,expandDims:a}}function ar(t,e,n){const a=new Array(t);for(let s=0;s<n.length;++s){const t=n[s].shape;for(let n=0;n<e[s].length;++n)void 0===a[e[s][n]]?a[e[s][n]]=t[n]:(0,_.vA)(a[e[s][n]]===t[n],(()=>"Expected dimension ".concat(a[e[s][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(t),", ")+"but got dimension ".concat(t[n])))}}function sr(t,e){const n=t,a=[];let s=0;0===t.length&&n.push(-1),s=t.length+1;for(let o=0;o<s;++o)a.push([]);const r=[];for(let o=0;o<n.length;++o){const t=or(e,n[o]);for(const e of t)-1===r.indexOf(e)&&(a[o].push(e),r.push(e))}return{path:n,steps:a}}function rr(t){return t.every(((t,e)=>t===e))}function or(t,e){const n=[];for(let a=0;a<t.length;++a)0!==t[a].length&&-1===t[a].indexOf(e)&&-1!==e||n.push(a);return n}function ir(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof e)(0,_.vA)(t.shape[n]%e===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(e).fill(t.shape[n]/e);else{const s=e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0);(0,_.vA)(s<=1,(()=>"There should be only one negative value in split array."));const r=e.indexOf(-1);if(-1!==r){const a=e.reduce(((t,e)=>e>0?t+e:t));e[r]=t.shape[n]-a}(0,_.vA)(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=e}return a}function cr(t){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(t)}function lr(t,e){return"indices(".concat(t,", 0) is invalid: ").concat(e," < 0")}function ur(t,e,n){return"indices(".concat(t,", 0) is invalid: ").concat(e," >= ").concat(n)}function hr(t,e){return"only one output dimension may be -1, not both ".concat(t," and ").concat(e)}function dr(t,e){return"size ".concat(t," must be non-negative, not ").concat(e)}function pr(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function fr(t,e){const n=(0,_.Ze)(t),a=(0,_.Ze)(e);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(t," outputShape= ").concat(e)}function gr(t,e){const n=(0,_.Ze)(t),a=(0,_.Ze)(e);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(t," outputShape=").concat(e)}function mr(){return"segment ids must be >= 0"}function br(){return"segment ids are not increasing"}function xr(t,e){return"Segment id ".concat(t," out of range [0, ").concat(e,"), possibly because segmentIds input is not sorted.")}function yr(t,e,n){return"Bad: indices[".concat(t,"] == ").concat(e," out of range [0, ").concat(n,")")}function vr(t,e){let n,a=!1;for(t<=Ss?(n=t,a=!0):n=(0,_.lK)(t,Math.floor(Math.sqrt(t)));!a;)n>e||n===t?a=!0:n=(0,_.lK)(t,n+1);return n}function wr(t,e,n){const a=[],s=t.length;for(let r=0;r<s;r++)r!==e?a.push(t[r]):a.push(n);return a}function kr(t,e,n,a){const s=e.shape.length,r=t.shape.length;if(0!==a&&(a<-s||a>s))throw new Error("Expect batchDims in the range of [-".concat(s,", ").concat(s,"], but got ").concat(a));if(a<0&&(a+=s),a>r)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(r,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let h=0;h<a;++h)if(t.shape[h]!==e.shape[h])throw new Error("x.shape[".concat(h,"]: ").concat(t.shape[h]," should be equal to indices.shape[").concat(h,"]: ").concat(e.shape[h],"."));const o=t.shape[n],i=[];let c=1,l=1,u=1;for(let h=0;h<a;++h)i.push(t.shape[h]),c*=t.shape[h];for(let h=a;h<n;h++)i.push(t.shape[h]),l*=t.shape[h];for(let h=a;h<s;h++)i.push(e.shape[h]);for(let h=n+1;h<r;h++)i.push(t.shape[h]),u*=t.shape[h];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:o,outputShape:i}}function Sr(t){try{return t.map((t=>(0,Te.decodeString)(t)))}catch(Nr){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(Nr))}}function Tr(t){return t.map((t=>(0,Te.encodeString)(t)))}function Ir(t,e){const n=[];for(let r=0;r<e.length;r++)e[r]&&n.push(r);const a=it(t,"int32"),s=it([n.length,t.length],"int32");for(let r=0;r<n.length;r++){const e=a.indexToLoc(n[r]),o=r*t.length;s.values.set(e,o)}return s.toTensor()}var Cr=n(46790);!function(){for(const t of Bt)Tt(t)}()},39512:(t,e,n)=>{"use strict";n.d(e,{D:()=>s});var a=n(58977);class s{static join(t){return new s(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,null==t)return;if(t instanceof Array||(t=[t]),0===(t=t.map((t=>a.isTypedArray(t)?t.buffer:t))).length)return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let n=0;n<t.length;n++){const a=t[n];n!==t.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=e+a.byteLength;this.shards.push({buffer:a,start:e,end:s}),e=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);const n=this.findShardForByte(t);if(-1===n)throw new Error("Could not find start shard for byte ".concat(t));const a=new ArrayBuffer(e-t),s=new Uint8Array(a);let r=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],a=t+r-n.start,i=r,c=Math.min(e,n.end)-n.start,l=new Uint8Array(n.buffer,a,c-a);if(s.set(l,i),r+=l.length,e<n.end)break}return a}findShardForByte(t){if(0===this.shards.length||t<0||t>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(e){return t<e.start?-1:t>=e.end?1:0}if(0===e(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(t,e){let n=0,a=t.length;for(;n<=a;){const s=Math.floor((a-n)/2)+n,r=e(t[s]);if(0===r)return s;r<0?a=s:n=s+1}return-1}(this.shards,e);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}},70285:(t,e,n)=>{"use strict";n.d(e,{AQ:()=>S,CY:()=>d,Ej:()=>N,P8:()=>T,Rl:()=>C,Xf:()=>E,aG:()=>h,jf:()=>k,l3:()=>w,oR:()=>A,s5:()=>b,zV:()=>I});var a=n(86149),s=n(68032),r=n(71426),o=n(71042),i=n(39512),c=n(58046),l=n(55399);const u=4;async function h(t,e){const n=[],a=[],s=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let r=0;r<s.length;++r){const o=s[r],i=Array.isArray(t)?t[r].tensor:t[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(o,"': ").concat(i.dtype));const c={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const t=new Promise((async t=>{const e=await i.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+u*e.length,a=new Uint8Array(n);let s=0;for(let r=0;r<e.length;r++){const t=e[r],n=new Uint8Array(new Uint32Array([t.length]).buffer);a.set(n,s),s+=u,a.set(t,s),s+=t.length}t(a)}));a.push(t)}else a.push(i.data());null!=e&&(c.group=e),n.push(c)}return{data:x(await Promise.all(a)),specs:n}}function d(t,e){const n=new i.D(t),a={};let s=0;for(const r of e){const t=p(r,((t,e)=>n.slice(s+t,s+e)));a[r.name]=g(r,n.slice(s,s+t)),s+=t}return a}function p(t,e){const n=(0,r.Ze)(t.shape);let a;if("quantization"in t){const e=t.quantization;a=o.i[e.dtype]}else{if("string"===t.dtype){let t=0;for(let a=0;a<n;a++)t+=u+new Uint32Array(e(t,t+u))[0];return t}a=o.i[t.dtype]}return n*a}async function f(t,e){const n=(0,r.Ze)(t.shape);let a;if("quantization"in t){const e=t.quantization;a=o.i[e.dtype]}else{if("string"===t.dtype){let t=0;for(let a=0;a<n;a++)t+=u+new Uint32Array(await e(t,t+u))[0];return t}a=o.i[t.dtype]}return n*a}function g(t,e){const n=t.name,i=t.dtype,c=t.shape,l=(0,r.Ze)(c);let h,d=0;if("quantization"in t){const a=t.quantization;if("uint8"===a.dtype||"uint16"===a.dtype){if(!("min"in a)||!("scale"in a))throw new Error("Weight ".concat(t.name," with quantization ").concat(a.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==a.dtype)throw new Error("Weight ".concat(t.name," has unknown ")+"quantization dtype ".concat(a.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==i)throw new Error("Weight ".concat(t.name," is quantized with ").concat(a.dtype," ")+"which only supports weights of type float32 not ".concat(i,"."))}const s=o.i[a.dtype],r="uint8"===a.dtype?new Uint8Array(e):new Uint16Array(e);if("float32"===i)if("uint8"===a.dtype||"uint16"===a.dtype){h=new Float32Array(r.length);for(let t=0;t<r.length;t++){const e=r[t];h[t]=e*a.scale+a.min}}else{if("float16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type float32.");{const t=function(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0===(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return a=>{const s=new ArrayBuffer(4*a.length),r=new Uint32Array(s);for(let o=0;o<a.length;o++){const s=a[o],i=t[n[s>>10]+(1023&s)]+e[s>>10];r[o]=i}return new Float32Array(s)}}();h=t(r)}}else{if("int32"!==i)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i));if("uint8"!==a.dtype&&"uint16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type int32.");h=new Int32Array(r.length);for(let t=0;t<r.length;t++){const e=r[t];h[t]=Math.round(e*a.scale+a.min)}}d+=l*s}else if("string"===i){const n=(0,r.Ze)(t.shape);h=[];for(let t=0;t<n;t++){const t=new Uint32Array(e.slice(d,d+u))[0];d+=u;const n=new Uint8Array(e.slice(d,d+t));h.push(n),d+=t}}else{const t=o.i[i];if("float32"===i)h=new Float32Array(e);else if("int32"===i)h=new Int32Array(e);else{if("bool"!==i){if("complex64"===i){h=new Float32Array(e);const t=new Float32Array(h.length/2),n=new Float32Array(h.length/2);for(let e=0;e<t.length;e++)t[e]=h[2*e],n[e]=h[2*e+1];const r=(0,s.O)(t,c,"float32"),o=(0,s.O)(n,c,"float32"),i=(0,a.f)(r,o);return r.dispose(),o.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i))}h=new Uint8Array(e)}d+=l*t}return(0,s.O)(h,c,i)}async function m(t,e,n){let a=new Uint8Array(e);for(;a.byteLength<n;){const{done:e,value:s}=await t.read();if(e&&null==s){const t=n-a.byteLength;throw new Error("Reader is done but ".concat(t," bytes are still expected"))}const r=new Uint8Array(a.length+s.byteLength);r.set(a,0),r.set(new Uint8Array(s),a.length),a=r}return a.buffer}async function b(t,e){const n={},a=t.getReader();let s=new ArrayBuffer(0);for(const o of e){const t=await f(o,(async(t,e)=>(s=await m(a,s,e),s.slice(t,e))));s=await m(a,s,t);const e=s.slice(0,t);s=s.slice(t);const i=g(o,e);if(n[o.name]=i,"webgpu"===(0,c.jz)()){const t=(0,c.Hs)();"uploadToGPU"in t&&(0,r.Ze)(i.shape)>=(0,l._K)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&t.uploadToGPU(i.dataId)}}return n}function x(t){if(null===t)throw new Error("Invalid input value: ".concat(JSON.stringify(t)));let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(t.constructor.name))}));const a=new Uint8Array(e);let s=0;return n.forEach((t=>{a.set(new Uint8Array(t.buffer),s),s+=t.byteLength})),a.buffer}const y="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function v(t){return y?Buffer.byteLength(t,"utf8"):new Blob([t]).size}function w(t){if(y)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let a=0,s=e.length;a<s;a++)n+=String.fromCharCode(e[a]);return btoa(n)}function k(t){if(y){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let a=0;a<e.length;++a)n.set([e.charCodeAt(a)],a);return n.buffer}function S(t){return i.D.join(t)}function T(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function I(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),null!=t.initializerSignature&&(n.initializerSignature=t.initializerSignature),null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),n}function C(t,e,n){const a={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(null!=t.trainingConfig&&(a.trainingConfig=t.trainingConfig),null!=t.weightsManifest){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=e,a.weightData=n}return null!=t.signature&&(a.signature=t.signature),null!=t.userDefinedMetadata&&(a.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(a.modelInitializer=t.modelInitializer),null!=t.initializerSignature&&(a.initializerSignature=t.initializerSignature),a}async function N(t,e){let n,a;return null!=t.weightsManifest&&([n,a]=await e(t.weightsManifest)),C(t,n,a)}function A(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:v(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:v(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:new i.D(t.weightData).byteLength}}function E(t){const e=[];for(const n of t)e.push(...n.weights);return e}},71042:(t,e,n)=>{"use strict";n.d(e,{i:()=>a});const a={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},39554:(t,e,n)=>{"use strict";n.d(e,{$dB:()=>D,$jE:()=>Je,$zE:()=>F,A1h:()=>M,A8B:()=>Pe,BK4:()=>pn,BLA:()=>qt,BRl:()=>rt,Blb:()=>Be,BoJ:()=>Ve,BxF:()=>ht,C8s:()=>Ue,CQC:()=>ue,Cg$:()=>Rt,CwD:()=>Nt,D7i:()=>ke,Ddj:()=>He,Dr:()=>fn,DvZ:()=>Ze,E3$:()=>St,EkD:()=>i,ElG:()=>pt,EwU:()=>on,FAs:()=>nn,FCQ:()=>ve,FSt:()=>l,Fin:()=>Oe,GZp:()=>qe,HNs:()=>T,Ik2:()=>k,J3C:()=>De,JiE:()=>Re,Jp_:()=>u,KXH:()=>N,L6G:()=>Ge,LB5:()=>I,LDN:()=>Pt,LG0:()=>Ht,LRy:()=>pe,LWX:()=>ne,LXA:()=>_t,M6A:()=>je,MRQ:()=>G,Mn0:()=>B,MnK:()=>W,N4F:()=>S,Ncv:()=>ie,O4G:()=>mt,OAQ:()=>vt,ODT:()=>re,OMN:()=>o,ORI:()=>Y,PH8:()=>r,P_L:()=>we,Pah:()=>nt,PbM:()=>$e,Q6t:()=>de,QDP:()=>A,QKF:()=>d,Qgm:()=>et,R23:()=>me,RUm:()=>Ft,RXX:()=>Wt,SDM:()=>$t,SQl:()=>ut,T7M:()=>mn,TBb:()=>an,TL8:()=>Gt,TMz:()=>K,TOR:()=>Te,ToN:()=>Mt,TyE:()=>f,UcO:()=>Ye,VAI:()=>zt,VCH:()=>x,Vvy:()=>s,WT3:()=>Yt,WuN:()=>ze,X$8:()=>j,X0$:()=>It,X4r:()=>Ce,XQy:()=>xe,XhZ:()=>bt,XmO:()=>$,YAb:()=>Qe,YVe:()=>_e,ZgB:()=>dt,Zl4:()=>te,_s9:()=>st,aAr:()=>gn,awo:()=>dn,bP9:()=>X,cHb:()=>Vt,cS:()=>y,dFH:()=>Me,dLy:()=>sn,dXR:()=>cn,dv8:()=>wt,e0f:()=>ee,epO:()=>p,fUj:()=>ge,g5A:()=>Zt,gC7:()=>P,gIW:()=>kt,hVg:()=>Se,hgw:()=>ye,ho8:()=>b,hql:()=>Fe,huO:()=>fe,i5R:()=>ft,iGz:()=>z,iPs:()=>Tt,iW0:()=>Xe,iuW:()=>en,jAQ:()=>w,jM4:()=>Ot,jOE:()=>be,jfg:()=>O,jgd:()=>Ke,jj_:()=>U,jxD:()=>Q,kdj:()=>ce,l0G:()=>Xt,l6P:()=>Ae,lLS:()=>xt,lNG:()=>Kt,ljI:()=>a,lxb:()=>m,lzr:()=>yt,mH5:()=>he,mIA:()=>Ct,mM$:()=>se,mnI:()=>At,mxL:()=>gt,nVu:()=>q,nY8:()=>V,nZd:()=>Dt,oFs:()=>tn,oJ2:()=>le,ox3:()=>ot,p2J:()=>_,pJc:()=>Ie,pPe:()=>ln,p_m:()=>h,pk0:()=>J,pnw:()=>hn,pr3:()=>R,pyJ:()=>oe,rFG:()=>We,rFm:()=>L,rGP:()=>lt,rsH:()=>at,sDr:()=>tt,t3d:()=>Bt,tG8:()=>Et,tGH:()=>H,u$b:()=>Ee,u8Z:()=>c,uWl:()=>Ne,urI:()=>ae,vI1:()=>Le,vaV:()=>E,vj7:()=>C,wNW:()=>Z,wwC:()=>v,wx0:()=>rn,x7F:()=>jt,xJ3:()=>un,xu7:()=>Qt,ySp:()=>Ut,ybN:()=>it,ybj:()=>ct,ylV:()=>Jt,zP9:()=>g,zfU:()=>Lt});const a="Abs",s="Acos",r="Acosh",o="Add",i="AddN",c="All",l="Any",u="ArgMax",h="ArgMin",d="Asin",p="Asinh",f="Atan",g="Atanh",m="Atan2",b="AvgPool",x="AvgPoolGrad",y="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",S="Bincount",T="BitwiseAnd",I="BroadcastTo",C="BroadcastArgs",N="Cast",A="Ceil",E="ClipByValue",R="Complex",F="ComplexAbs",D="Concat",_="Conv2D",L="Conv2DBackpropFilter",O="Conv2DBackpropInput",M="Conv3D",z="Conv3DBackpropFilterV2",P="Conv3DBackpropInputV2",B="Cos",W="Cosh",U="Cumprod",V="Cumsum",G="CropAndResize",Z="DenseBincount",K="DepthToSpace",H="DepthwiseConv2dNative",j="DepthwiseConv2dNativeBackpropFilter",q="DepthwiseConv2dNativeBackpropInput",Y="Diag",Q="Dilation2D",X="Dilation2DBackpropInput",J="Dilation2DBackpropFilter",$="Draw",tt="RealDiv",et="Einsum",nt="Elu",at="EluGrad",st="Erf",rt="Equal",ot="Exp",it="ExpandDims",ct="Expm1",lt="FFT",ut="Fill",ht="FlipLeftRight",dt="Floor",pt="FloorDiv",ft="FusedBatchNorm",gt="GatherV2",mt="GatherNd",bt="Greater",xt="GreaterEqual",yt="Identity",vt="IFFT",wt="Imag",kt="IsFinite",St="IsInf",Tt="IsNan",It="LeakyRelu",Ct="Less",Nt="LessEqual",At="LinSpace",Et="Log",Rt="Log1p",Ft="LogicalAnd",Dt="LogicalNot",_t="LogicalOr",Lt="LogSoftmax",Ot="LRN",Mt="LRNGrad",zt="Max",Pt="Maximum",Bt="MaxPool",Wt="MaxPoolGrad",Ut="MaxPool3D",Vt="MaxPool3DGrad",Gt="MaxPoolWithArgmax",Zt="Mean",Kt="Min",Ht="Minimum",jt="MirrorPad",qt="Mod",Yt="Multinomial",Qt="Multiply",Xt="Neg",Jt="NotEqual",$t="NonMaxSuppressionV3",te="NonMaxSuppressionV4",ee="NonMaxSuppressionV5",ne="OnesLike",ae="OneHot",se="Pack",re="PadV2",oe="Pow",ie="Prelu",ce="Prod",le="RaggedGather",ue="RaggedRange",he="RaggedTensorToTensor",de="Range",pe="Real",fe="Reciprocal",ge="Relu",me="Reshape",be="ResizeNearestNeighbor",xe="ResizeNearestNeighborGrad",ye="ResizeBilinear",ve="ResizeBilinearGrad",we="Relu6",ke="Reverse",Se="Round",Te="Rsqrt",Ie="ScatterNd",Ce="TensorScatterUpdate",Ne="SearchSorted",Ae="Select",Ee="Selu",Re="Slice",Fe="Sin",De="Sinh",_e="Sign",Le="Sigmoid",Oe="Softplus",Me="Sqrt",ze="Sum",Pe="SpaceToBatchND",Be="SplitV",We="Softmax",Ue="SparseFillEmptyRows",Ve="SparseReshape",Ge="SparseSegmentMean",Ze="SparseSegmentSum",Ke="SparseToDense",He="SquaredDifference",je="Square",qe="StaticRegexReplace",Ye="StridedSlice",Qe="StringNGrams",Xe="StringSplit",Je="StringToHashBucketFast",$e="Sub",tn="Tan",en="Tanh",nn="Tile",an="TopK",sn="Transform",rn="Transpose",on="Unique",cn="Unpack",ln="UnsortedSegmentSum",un="ZerosLike",hn="Step",dn="FromPixels",pn="RotateWithOffset",fn="_FusedMatMul",gn="FusedConv2D",mn="FusedDepthwiseConv2D"},10843:(t,e,n)=>{"use strict";n.d(e,{Op:()=>u,_5:()=>c,kr:()=>d,tA:()=>h,vQ:()=>l});var a=n(55399),s=n(97926),r=n(64124);const o=(0,s.m)("kernelRegistry",(()=>new Map)),i=(0,s.m)("gradRegistry",(()=>new Map));function c(t,e){const n=p(t,e);return o.get(n)}function l(t){return i.get(t)}function u(t){const e=o.entries(),n=[];for(;;){const{done:a,value:s}=e.next();if(a)break;const[r,o]=s,[i]=r.split("_");i===t&&n.push(o)}return n}function h(t){const{kernelName:e,backendName:n}=t,a=p(e,n);o.has(a)&&r.i("The kernel '".concat(e,"' for backend ")+"'".concat(n,"' is already registered")),o.set(a,t)}function d(t){const{kernelName:e}=t;i.has(e)&&(0,a._K)().getBool("DEBUG")&&r.i("Overriding the gradient for '".concat(e,"'")),i.set(e,t)}function p(t,e){return"".concat(e,"_").concat(t)}},64124:(t,e,n)=>{"use strict";n.d(e,{R:()=>r,i:()=>s});var a=n(55399);function s(){(0,a._K)().getBool("IS_TEST")||(0,a._K)().getBool("PROD")||console.warn(...arguments)}function r(){(0,a._K)().getBool("IS_TEST")||(0,a._K)().getBool("PROD")||console.log(...arguments)}},33753:(t,e,n)=>{"use strict";n.d(e,{t:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({abs_:function(t){const e=(0,r.YT)(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return a.T2.runKernel(s.$zE,t)}{const t={x:e};return a.T2.runKernel(s.ljI,t)}}})},87242:(t,e,n)=>{"use strict";n.d(e,{W:()=>i});var a=n(82164),s=n(39554),r=n(68804),o=n(64148);const i=(0,n(47892).op)({add_:function(t,e){let n=(0,o.YT)(t,"a","add"),i=(0,o.YT)(e,"b","add");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(s.OMN,c)}})},51802:(t,e,n)=>{"use strict";n.d(e,{Q:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({all_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,r.YT)(t,"x","all","bool")},i={axis:e,keepDims:n};return a.T2.runKernel(s.u8Z,o,i)}})},41819:(t,e,n)=>{"use strict";n.d(e,{b:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({any_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,r.YT)(t,"x","any","bool")},i={axis:e,keepDims:n};return a.T2.runKernel(s.FSt,o,i)}})},23068:(t,e,n)=>{"use strict";n.d(e,{F:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({argMax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,r.YT)(t,"x","argMax")},o={axis:e};return a.T2.runKernel(s.Jp_,n,o)}})},28650:(t,e,n)=>{"use strict";n.d(e,{$:()=>h});var a=n(82164),s=n(39554),r=n(64148),o=n(71426),i=n(47794),c=n(17538),l=n(47892),u=n(45583);const h=(0,l.op)({avgPool_:function(t,e,n,l,h){const d=(0,r.YT)(t,"x","avgPool","float32");o.vA(c.G0(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let p=d,f=!1;3===d.rank&&(f=!0,p=(0,u.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.vA(4===p.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(p.rank,"."))),c.s_("avgPool",l,h);const g={x:p},m={filterSize:e,strides:n,pad:l,dimRoundingMode:h};let b=a.T2.runKernel(s.ho8,g,m);return b=(0,i.w)(b,d.dtype),f?(0,u.t)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},19235:(t,e,n)=>{"use strict";n.d(e,{Em:()=>l,SM:()=>i,WC:()=>c,WH:()=>s,aF:()=>r,fK:()=>h,gx:()=>u,lb:()=>o});var a=n(71426);function s(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function r(t,e,n){const a=t.length+e.length,s=[];let r=0,o=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?s.push(t[r++]):s.push(e[o++]);return s}function o(t,e){const n=[],a=t.length;for(let s=0;s<a;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function i(t,e){return r(t,e.map((t=>1)),e)}function c(t,e,n){a.vA(s(e,n),(()=>"".concat(t," supports only inner-most axes for now. ")+"Got axes ".concat(e," and rank-").concat(n," input.")))}function l(t,e){if(s(t,e))return null;const n=[];for(let a=0;a<e;++a)-1===t.indexOf(a)&&n.push(a);return t.forEach((t=>n.push(t))),n}function u(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function h(t,e){const n=[];for(let a=e-t;a<e;++a)n.push(a);return n}},27237:(t,e,n)=>{"use strict";n.d(e,{$:()=>c});var a=n(82164),s=n(39554),r=n(64148),o=n(71426),i=n(45583);const c=(0,n(47892).op)({batchNorm_:function(t,e,n,c,l,u){null==u&&(u=.001);const h=(0,r.YT)(t,"x","batchNorm"),d=(0,r.YT)(e,"mean","batchNorm"),p=(0,r.YT)(n,"variance","batchNorm");let f,g;null!=l&&(f=(0,r.YT)(l,"scale","batchNorm")),null!=c&&(g=(0,r.YT)(c,"offset","batchNorm")),o.vA(d.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.vA(null==g||d.rank===g.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.vA(null==f||d.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const m={x:function(t){let e;return e=0===t.rank||1===t.rank?(0,i.t)(t,[1,1,1,t.size]):2===t.rank?(0,i.t)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?(0,i.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(h),scale:f,offset:g,mean:d,variance:p},b={varianceEpsilon:u},x=a.T2.runKernel(s.i5R,m,b);return(0,i.t)(x,h.shape)}})},4920:(t,e,n)=>{"use strict";n.d(e,{h:()=>u});var a=n(82164),s=n(39554),r=n(64148),o=n(71426),i=n(49820),c=n(47892),l=n(45583);const u=(0,c.op)({broadcastTo_:function(t,e){let n=(0,r.YT)(t,"broadcastTo","x");const c=n.shape;if((0,o.SA)(e),e.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(e.length," < input.rank=").concat(n.rank,"."));if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=(0,l.t)(n,t)}const u=n.shape,h=Array.from(e);for(let a=e.length-1;a>=0;a--)if(u[a]===e[a])h[a]=1;else if(1!==n.shape[a])throw new Error("broadcastTo(): [".concat(c,"] cannot be broadcast to [").concat(e,"]."));if(0===h.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return(0,i.o)(n);const d={x:n},p={reps:h};return a.T2.runKernel(s.FAs,d,p)}})},48805:(t,e,n)=>{"use strict";function a(t,e){const n=t.length,a=[];for(let s=0;s<n;s++){const r=n-1-s,o=t[r]||1;(e[e.length-1-s]||1)>1&&1===o&&a.unshift(r)}return a}function s(t,e){const n=[];for(let a=0;a<e.length;a++){const s=t[t.length-a-1],r=e.length-a-1,o=e[r];(null==s||1===s&&o>1)&&n.unshift(r)}return n}function r(t,e){const n=Math.max(t.length,e.length),a=new Array(n);for(let s=0;s<n;s++){let r=t[t.length-s-1];null==r&&(r=1);let o=e[e.length-s-1];if(null==o&&(o=1),1===r)a[n-s-1]=o;else if(1===o)a[n-s-1]=r;else{if(r!==o){const n="Operands could not be broadcast together with shapes "+"".concat(t," and ").concat(e,".");throw Error(n)}a[n-s-1]=r}}return a}n.r(e),n.d(e,{assertAndGetBroadcastShape:()=>r,getBroadcastDims:()=>a,getReductionAxes:()=>s})},47794:(t,e,n)=>{"use strict";n.d(e,{w:()=>i});var a=n(82164),s=n(39554),r=n(64148),o=n(71426);const i=(0,n(47892).op)({cast_:function(t,e){const n=(0,r.YT)(t,"x","cast");if(!o.xn(e))throw new Error("Failed to cast to unknown dtype ".concat(e));if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},c={dtype:e};return a.T2.runKernel(s.KXH,i,c)}})},53829:(t,e,n)=>{"use strict";n.d(e,{z:()=>c});var a=n(82164),s=n(39554),r=n(64148),o=n(71426),i=n(24660);const c=(0,n(47892).op)({clipByValue_:function(t,e,n){const c=(0,r.YT)(t,"x","clipByValue");if(o.vA(e<=n,(()=>"Error in clip: min (".concat(e,") must be ")+"less than or equal to max (".concat(n,")."))),e===n)return(0,i.G)(c.shape,e,c.dtype);const l={x:c},u={clipValueMin:e,clipValueMax:n};return a.T2.runKernel(s.vaV,l,u)}})},49820:(t,e,n)=>{"use strict";n.d(e,{o:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({clone_:function(t){const e={x:(0,r.YT)(t,"x","clone","string_or_numeric")};return a.T2.runKernel(s.lzr,e)}})},86149:(t,e,n)=>{"use strict";n.d(e,{f:()=>i});var a=n(82164),s=n(39554),r=n(64148),o=n(71426);const i=(0,n(47892).op)({complex_:function(t,e){const n=(0,r.YT)(t,"real","complex"),i=(0,r.YT)(e,"imag","complex");o.O3(n.shape,i.shape,"real and imag shapes, ".concat(n.shape," and ").concat(i.shape,", ")+"must match in call to tf.complex().");const c={real:n,imag:i};return a.T2.runKernel(s.pr3,c)}})},94429:(t,e,n)=>{"use strict";n.d(e,{x:()=>c});var a=n(82164),s=n(39554),r=n(64148),o=n(71426),i=n(49820);const c=(0,n(47892).op)({concat_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,o.vA)(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,r.j1)(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(t.dtype,". "))})),1===n.length)return(0,i.o)(n[0]);const c=n,l={axis:e};return a.T2.runKernel(s.$dB,c,l)}})},89870:(t,e,n)=>{"use strict";n.d(e,{k:()=>l});var a=n(64148),s=n(71426),r=n(14969),o=n(17538),i=n(47892),c=n(45583);const l=(0,i.op)({conv1d_:function(t,e,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,h=arguments.length>6?arguments[6]:void 0;const d=(0,a.YT)(t,"x","conv1d"),p=(0,a.YT)(e,"filter","conv1d");let f=d,g=!1;2===d.rank&&(g=!0,f=(0,c.t)(d,[1,d.shape[0],d.shape[1]])),s.vA(3===f.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(f.rank,"."))),s.vA(3===p.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(p.rank,"."))),o.s_("conv1d",i,h),s.vA(f.shape[2]===p.shape[1],(()=>"Error in conv1d: depth of input (".concat(f.shape[2],") must match ")+"input depth for filter ".concat(p.shape[1],"."))),s.vA(o.G0(n,u),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(u,"'"))),s.vA(o.qk(u),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),s.vA(o.qk(n),(()=>"Error in conv1D: Stride should be larger than 0.")),s.vA("NWC"===l,(()=>"Error in conv1d: got dataFormat of ".concat(l," but only NWC is currently supported.")));const m=(0,c.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),b=(0,c.t)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),x=[1,n],y=[1,u],v=(0,r.X)(b,m,x,i,"NHWC",y,h);return g?(0,c.t)(v,[v.shape[2],v.shape[3]]):(0,c.t)(v,[v.shape[0],v.shape[2],v.shape[3]])}})},14969:(t,e,n)=>{"use strict";n.d(e,{X:()=>u});var a=n(82164),s=n(39554),r=n(64148),o=n(71426),i=n(17538),c=n(47892),l=n(45583);const u=(0,c.op)({conv2d_:function(t,e,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6?arguments[6]:void 0;const p=(0,r.YT)(t,"x","conv2d","float32"),f=(0,r.YT)(e,"filter","conv2d","float32");let g=p,m=!1;3===p.rank&&(m=!0,g=(0,l.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.vA(4===g.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(g.rank,"."))),o.vA(4===f.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(f.rank,"."))),i.s_("conv2d",c,d);const b="NHWC"===u?g.shape[3]:g.shape[1];o.vA(b===f.shape[2],(()=>"Error in conv2d: depth of input (".concat(b,") must match ")+"input depth for filter ".concat(f.shape[2],"."))),o.vA(i.G0(n,h),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(h,"'"))),o.vA(i.qk(h),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),o.vA(i.qk(n),(()=>"Error in conv2D: Strides should be larger than 0."));const x={x:g,filter:f},y={strides:n,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d},v=a.T2.runKernel(s.p2J,x,y);return m?(0,l.t)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},56927:(t,e,n)=>{"use strict";n.d(e,{H:()=>l});var a=n(82164),s=n(39554),r=n(71426),o=n(17538),i=n(47892),c=n(45583);const l=(0,i.op)({conv2DBackpropFilter_:function(t,e,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",h=arguments.length>6?arguments[6]:void 0,d=t;3===t.rank&&(d=(0,c.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p=e;3===p.rank&&(p=(0,c.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]])),r.vA(4===d.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(d.shape,"."))),r.vA(4===p.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(p.shape,"."))),r.vA(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const f="NHWC"===u?d.shape[3]:d.shape[1],g="NHWC"===u?p.shape[3]:p.shape[1];r.vA(f===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(f,") must ")+"match input depth in filter (".concat(n[2],"."))),r.vA(g===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(g,") must ")+"match output depth for filter (".concat(n[3],")."))),o.s_("conv2dDerFilter",l,h);const m={x:d,dy:p},b={strides:i,pad:l,dataFormat:u,dimRoundingMode:h,filterShape:n};return a.T2.runKernel(s.rFm,m,b)}})},91565:(t,e,n)=>{"use strict";n.d(e,{v:()=>l});var a=n(82164),s=n(39554),r=n(71426),o=n(17538),i=n(47892),c=n(45583);const l=(0,i.op)({conv2DBackpropInput_:function(t,e,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",h=arguments.length>6?arguments[6]:void 0;r.vA(t.length===e.rank,(()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match")));let d=t,p=e,f=!1;3===e.rank&&(f=!0,p=(0,c.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]),d=[1,t[0],t[1],t[2]]),r.vA(4===d.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(d.length,"."))),r.vA(4===p.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(p.rank))),r.vA(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const g="NHWC"===u?d[3]:d[1],m="NHWC"===u?p.shape[3]:p.shape[1];r.vA(g===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(g,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),r.vA(m===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(m,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),o.s_("conv2dDerInput",l,h);const b={dy:p,filter:n},x={strides:i,pad:l,dataFormat:u,dimRoundingMode:h,inputShape:d},y=a.T2.runKernel(s.jfg,b,x);return f?(0,c.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1137:(t,e,n)=>{"use strict";n.d(e,{w:()=>r});var a=n(64148),s=n(91565);const r=(0,n(47892).op)({conv2dTranspose_:function(t,e,n,r,o,i){const c=(0,a.YT)(t,"x","conv2dTranspose"),l=(0,a.YT)(e,"filter","conv2dTranspose");return(0,s.v)(n,c,l,r,o,"NHWC",i)}})},46410:(t,e,n)=>{"use strict";n.d(e,{c:()=>c});var a=n(82164),s=n(39554),r=n(71426),o=n(47892),i=n(45583);const c=(0,o.op)({conv3DBackpropInput_:function(t,e,n,o,c){r.vA(t.length===e.rank,(()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match")));let l=t,u=e,h=!1;4===e.rank&&(h=!0,u=(0,i.t)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),l=[1,t[0],t[1],t[2],t[3]]);const d=l[4],p=u.shape[4];r.vA(5===l.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(l.length,"."))),r.vA(5===u.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(u.rank))),r.vA(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),r.vA(d===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(d,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),r.vA(p===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(p,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const f={dy:u,filter:n},g={pad:c,strides:o,inputShape:l},m=a.T2.runKernel(s.gC7,f,g);return h?(0,i.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}})},17538:(t,e,n)=>{"use strict";n.d(e,{$Q:()=>b,Dh:()=>f,E6:()=>r,G0:()=>g,G8:()=>l,YQ:()=>s,l5:()=>o,p$:()=>c,qk:()=>m,s_:()=>x,uf:()=>i});var a=n(71426);function s(t,e,n,a){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",r=arguments.length>5?arguments[5]:void 0;return i(t,[...e,t[3]],n,r,a,null,null,b(s))}function r(t,e,n,a,s,r){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[c,l]=u(e);let h;if("channelsLast"===o)h=[c,l,t[3],t[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));h=[c,l,t[1],t[1]]}return i(t,h,n,a,s,r,!1,o)}function o(t,e,n,a,s,r){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,l,u]=h(e);let d,p;if("NDHWC"===o)p="channelsLast",d=[i,l,u,t[4],t[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat ".concat(o));p="channelsFirst",d=[i,l,u,t[1],t[1]]}return c(t,d,n,a,s,!1,p,r)}function i(t,e,n,a,s,r){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,h,f,g]=[-1,-1,-1,-1];if("channelsLast"===i)[c,h,f,g]=t;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,g,h,f]=t}const[m,b,,x]=e,[y,v]=u(n),[w,k]=u(a),S=d(m,w),T=d(b,k),{padInfo:I,outHeight:C,outWidth:N}=function(t,e,n,a,s,r,o,i,c){let u,h,d;if("number"===typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,a,s){null==a&&(a=l(t,e,n));const r=t[0],o=t[1],i=p((r-e+2*a)/n+1,s),c=p((o-e+2*a)/n+1,s);return[i,c]}([e,n],r,a,t,i);h=s[0],d=s[1]}else if("same"===t){h=Math.ceil(e/a),d=Math.ceil(n/s);const t=Math.max(0,(h-1)*a+r-e),i=Math.max(0,(d-1)*s+o-n),c=Math.floor(t/2),l=t-c,p=Math.floor(i/2);u={top:c,bottom:l,left:p,right:i-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((e-r+1)/a),d=Math.ceil((n-o+1)/s);else{if("object"!==typeof t)throw Error("Unknown padding parameter: ".concat(t));{const l="channelsLast"===c?t[1][0]:t[2][0],f="channelsLast"===c?t[1][1]:t[2][1],g="channelsLast"===c?t[2][0]:t[3][0],m="channelsLast"===c?t[2][1]:t[3][1];u={top:l,bottom:f,left:g,right:m,type:0===l&&0===f&&0===g&&0===m?"VALID":"EXPLICIT"},h=p((e-r+l+f)/a+1,i),d=p((n-o+g+m)/s+1,i)}}return{padInfo:u,outHeight:h,outWidth:d}}(s,h,f,y,v,S,T,r,i),A=o?x*g:x;let E;return"channelsFirst"===i?E=[c,A,C,N]:"channelsLast"===i&&(E=[c,C,N,A]),{batchSize:c,dataFormat:i,inHeight:h,inWidth:f,inChannels:g,outHeight:C,outWidth:N,outChannels:A,padInfo:I,strideHeight:y,strideWidth:v,filterHeight:m,filterWidth:b,effectiveFilterHeight:S,effectiveFilterWidth:T,dilationHeight:w,dilationWidth:k,inShape:t,outShape:E,filterShape:e}}function c(t,e,n,a,s){let r=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,u,f,g,m]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[c,u,f,g,m]=t;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));[c,m,u,f,g]=t}const[b,x,y,,v]=e,[w,k,S]=h(n),[T,I,C]=h(a),N=d(b,T),A=d(x,I),E=d(y,C),{padInfo:R,outDepth:F,outHeight:D,outWidth:_}=function(t,e,n,a,s,r,o,i,c,u,h){let d,f,g,m;"valid"===t&&(t=0);if("number"===typeof t){d={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const b=function(t,e,n,a,s,r){null==s&&(s=l(t,e[0],a[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)t[i]+2*s>=e[i]&&(o[i]=p((t[i]-e[i]+2*s)/a[i]+1,r));return o}([e,n,a,1],[i,c,u],1,[s,r,o],t,h);f=b[0],g=b[1],m=b[2]}else{if("same"!==t)throw Error("Unknown padding parameter: ".concat(t));{f=Math.ceil(e/s),g=Math.ceil(n/r),m=Math.ceil(a/o);const t=(f-1)*s+i-e,l=(g-1)*r+c-n,h=(m-1)*o+u-a,p=Math.floor(t/2),b=t-p,x=Math.floor(l/2),y=l-x,v=Math.floor(h/2);d={top:x,bottom:y,left:v,right:h-v,front:p,back:b,type:"SAME"}}}return{padInfo:d,outDepth:f,outHeight:g,outWidth:m}}(s,u,f,g,w,k,S,N,A,E,i),L=r?v*m:v;let O;return"channelsFirst"===o?O=[c,L,F,D,_]:"channelsLast"===o&&(O=[c,F,D,_,L]),{batchSize:c,dataFormat:o,inDepth:u,inHeight:f,inWidth:g,inChannels:m,outDepth:F,outHeight:D,outWidth:_,outChannels:L,padInfo:R,strideDepth:w,strideHeight:k,strideWidth:S,filterDepth:b,filterHeight:x,filterWidth:y,effectiveFilterDepth:N,effectiveFilterHeight:A,effectiveFilterWidth:E,dilationDepth:T,dilationHeight:I,dilationWidth:C,inShape:t,outShape:O,filterShape:e}}function l(t,e,n){const a=d(e,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((t[0]*(n-1)-n+a)/2)}function u(t){return"number"===typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function h(t){return"number"===typeof t?[t,t,t]:t}function d(t,e){return e<=1?t:t+(t-1)*(e-1)}function p(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode ".concat(e))}}function f(t){const[e,n,a]=u(t);return 1===e&&1===n&&1===a}function g(t,e){return f(t)||f(e)}function m(t){return u(t).every((t=>t>0))}function b(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(t))}function x(t,e,n){if(null!=n){if("string"===typeof e)throw Error("Error in ".concat(t,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(e,"."));if("number"===typeof e)a.vA(a.E6(e),(()=>"Error in ".concat(t,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(e,".")));else{if("object"!==typeof e)throw Error("Error in ".concat(t,": Unknown padding parameter: ").concat(e));e.forEach((e=>{e.forEach((e=>{a.vA(a.E6(e),(()=>"Error in ".concat(t,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(e,".")))}))}))}}}},49899:(t,e,n)=>{"use strict";n.d(e,{G:()=>u});var a=n(82164),s=n(39554),r=n(64148),o=n(71426),i=n(17538),c=n(47892),l=n(45583);const u=(0,c.op)({depthwiseConv2d_:function(t,e,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6?arguments[6]:void 0;const p=(0,r.YT)(t,"x","depthwiseConv2d","float32"),f=(0,r.YT)(e,"filter","depthwiseConv2d","float32");let g=p,m=!1;3===p.rank&&(m=!0,g=(0,l.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.vA(4===g.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(g.rank,"."))),o.vA(4===f.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(f.rank,".")));const b="NHWC"===u?g.shape[3]:g.shape[1];o.vA(b===f.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(b,") must match the inChannels dimension in ")+"filter ".concat(f.shape[2],"."))),i.s_("depthwiseConv2d",c,d);const x={x:g,filter:f},y={strides:n,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d},v=a.T2.runKernel(s.tGH,x,y);return m?(0,l.t)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},17399:(t,e,n)=>{"use strict";n.d(e,{x:()=>i});var a=n(82164),s=n(39554),r=n(47892),o=n(45583);const i=(0,r.op)({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=t;3===t.rank&&(u=(0,o.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let h=e;3===h.rank&&(h=(0,o.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const d={x:u,dy:h},p={strides:r,pad:i,dimRoundingMode:l,dilations:c,filterShape:n};return a.T2.runKernel(s.X$8,d,p)}})},10261:(t,e,n)=>{"use strict";n.d(e,{l:()=>i});var a=n(82164),s=n(39554),r=n(47892),o=n(45583);const i=(0,r.op)({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=e,h=!1;3===e.rank&&(h=!0,u=(0,o.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const d={dy:u,filter:n},p={strides:r,pad:i,dimRoundingMode:l,dilations:c,inputShape:t},f=a.T2.runKernel(s.nVu,d,p);return h?(0,o.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},24974:(t,e,n)=>{"use strict";n.d(e,{y:()=>c});var a=n(82164),s=n(39554),r=n(68804),o=n(64148),i=n(63612);const c=(0,n(47892).op)({div_:function(t,e){let n=(0,o.YT)(t,"a","div"),c=(0,o.YT)(e,"b","div");if([n,c]=(0,r.makeTypesMatch)(n,c),"int32"===n.dtype&&"int32"===c.dtype)return(0,i.w)(n,c);const l={a:n,b:c};return a.T2.runKernel(s.sDr,l,{})}})},83645:(t,e,n)=>{"use strict";n.d(e,{P:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({elu_:function(t){const e={x:(0,r.YT)(t,"x","elu","float32")};return a.T2.runKernel(s.Pah,e)}})},37457:(t,e,n)=>{"use strict";n.d(e,{L:()=>c});var a=n(82164),s=n(39554),r=n(68804),o=n(64148),i=n(48805);const c=(0,n(47892).op)({equal_:function(t,e){let n=(0,o.YT)(t,"a","equal","string_or_numeric"),c=(0,o.YT)(e,"b","equal","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(s.BRl,l)}})},48810:(t,e,n)=>{"use strict";n.d(e,{Y:()=>c});var a=n(82164),s=n(39554),r=n(64148),o=n(71426),i=n(47794);const c=(0,n(47892).op)({erf_:function(t){let e=(0,r.YT)(t,"x","erf");o.vA("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=(0,i.w)(e,"float32"));const n={x:e};return a.T2.runKernel(s._s9,n)}})},25462:(t,e,n)=>{"use strict";n.d(e,{o:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({exp_:function(t){const e={x:(0,r.YT)(t,"x","exp")};return a.T2.runKernel(s.ox3,e)}})},74023:(t,e,n)=>{"use strict";n.d(e,{U:()=>i});var a=n(82164),s=n(39554),r=n(64148),o=n(71426);const i=(0,n(47892).op)({expandDims_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,r.YT)(t,"x","expandDims","string_or_numeric");o.vA(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const i={input:n},c={dim:e};return a.T2.runKernel(s.ybN,i,c)}})},24660:(t,e,n)=>{"use strict";n.d(e,{G:()=>o});var a=n(82164),s=n(39554),r=n(71426);function o(t,e,n){(0,r.SA)(t);const o={shape:t,value:e,dtype:n=n||(0,r.X$)(e)};return a.T2.runKernel(s.SQl,{},o)}},48587:(t,e,n)=>{"use strict";n.d(e,{R:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({floor_:function(t){const e={x:(0,r.YT)(t,"x","floor","float32")};return a.T2.runKernel(s.ZgB,e)}})},63612:(t,e,n)=>{"use strict";n.d(e,{w:()=>i});var a=n(82164),s=n(39554),r=n(68804),o=n(64148);const i=(0,n(47892).op)({floorDiv_:function(t,e){let n=(0,o.YT)(t,"a","floorDiv"),i=(0,o.YT)(e,"b","floorDiv");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(s.ElG,c)}})},56178:(t,e,n)=>{"use strict";n.d(e,{k:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({gather_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const i={x:(0,r.YT)(t,"x","gather"),indices:(0,r.YT)(e,"indices","gather","int32")},c={axis:n,batchDims:o};return a.T2.runKernel(s.mxL,i,c)}})},22759:(t,e,n)=>{"use strict";n.d(e,{r:()=>c});var a=n(82164),s=n(39554),r=n(68804),o=n(64148),i=n(48805);const c=(0,n(47892).op)({greater_:function(t,e){let n=(0,o.YT)(t,"a","greater","string_or_numeric"),c=(0,o.YT)(e,"b","greater","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(s.XhZ,l)}})},9996:(t,e,n)=>{"use strict";n.d(e,{D:()=>c});var a=n(82164),s=n(39554),r=n(68804),o=n(64148),i=n(48805);const c=(0,n(47892).op)({greaterEqual_:function(t,e){let n=(0,o.YT)(t,"a","greaterEqual","string_or_numeric"),c=(0,o.YT)(e,"b","greaterEqual","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(s.lLS,l)}})},21047:(t,e,n)=>{"use strict";n.d(e,{n:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({imag_:function(t){const e={input:(0,r.YT)(t,"input","imag")};return a.T2.runKernel(s.dv8,e)}})},22214:(t,e,n)=>{"use strict";n.d(e,{v:()=>l});var a=n(82164),s=n(39554),r=n(64148),o=n(71426),i=n(47892),c=n(45583);const l=(0,i.op)({resizeBilinear_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,r.YT)(t,"images","resizeBilinear");o.vA(3===l.rank||4===l.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,"."))),o.vA(2===e.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(e,"."))),o.vA(!1===i||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let u=l,h=!1;3===l.rank&&(h=!0,u=(0,c.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=e,d={images:u},p={alignCorners:n,halfPixelCenters:i,size:e},f=a.T2.runKernel(s.hgw,d,p);return h?(0,c.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},92823:(t,e,n)=>{"use strict";n.d(e,{b:()=>l});var a=n(82164),s=n(39554),r=n(64148),o=n(71426),i=n(47892),c=n(45583);const l=(0,i.op)({resizeNearestNeighbor_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,r.YT)(t,"images","resizeNearestNeighbor");o.vA(3===l.rank||4===l.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,"."))),o.vA(2===e.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(e,"."))),o.vA("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),o.vA(!1===i||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let u=l,h=!1;3===l.rank&&(h=!0,u=(0,c.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=e,d={images:u},p={alignCorners:n,halfPixelCenters:i,size:e},f=a.T2.runKernel(s.jOE,d,p);return h?(0,c.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},18076:(t,e,n)=>{"use strict";n.d(e,{H:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({leakyRelu_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:(0,r.YT)(t,"x","leakyRelu")},o={alpha:e};return a.T2.runKernel(s.X0$,n,o)}})},58320:(t,e,n)=>{"use strict";n.d(e,{M:()=>c});var a=n(82164),s=n(39554),r=n(68804),o=n(64148),i=n(48805);const c=(0,n(47892).op)({less_:function(t,e){let n=(0,o.YT)(t,"a","less","string_or_numeric"),c=(0,o.YT)(e,"b","less","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(s.mIA,l)}})},827:(t,e,n)=>{"use strict";n.d(e,{I:()=>c});var a=n(82164),s=n(39554),r=n(68804),o=n(64148),i=n(48805);const c=(0,n(47892).op)({lessEqual_:function(t,e){let n=(0,o.YT)(t,"a","lessEqual","string_or_numeric"),c=(0,o.YT)(e,"b","lessEqual","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(s.CwD,l)}})},75911:(t,e,n)=>{"use strict";n.d(e,{R:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({log_:function(t){const e={x:(0,r.YT)(t,"x","log","float32")};return a.T2.runKernel(s.tG8,e)}})},21386:(t,e,n)=>{"use strict";n.d(e,{K:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({log1p_:function(t){const e={x:(0,r.YT)(t,"x","log1p")};return a.T2.runKernel(s.Cg$,e)}})},71194:(t,e,n)=>{"use strict";n.d(e,{H:()=>p});var a=n(1839),s=n(64148),r=n(47794),o=n(25462),i=n(75911),c=n(60891),l=n(20803),u=n(47892),h=n(37951),d=n(47382);const p=(0,u.op)({logSoftmax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,s.YT)(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(e));return(0,a._X)(((t,n)=>{const a=(0,c.T)(t,e,!0),s=(0,h.j)(t,a),u=(0,h.j)((0,r.w)(s,"float32"),(0,i.R)((0,d.c)((0,o.o)(s),e,!0)));n([u]);return{value:u,gradFunc:(t,n)=>{const[a]=n,s=(0,o.o)(a);return(0,h.j)(t,(0,l.l)((0,d.c)(t,e,!0),s))}}}))(n)}})},42175:(t,e,n)=>{"use strict";n.d(e,{V:()=>f});var a=n(64148),s=n(71426),r=n(87242),o=n(19235),i=n(25462),c=n(75911),l=n(60891),u=n(47892),h=n(45583),d=n(37951),p=n(47382);const f=(0,u.op)({logSumExp_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const u=(0,a.YT)(t,"x","logSumExp"),f=(0,s.Y6)(e,u.shape),g=(0,l.T)(u,f,!0),m=(0,d.j)(u,g),b=(0,i.o)(m),x=(0,p.c)(b,f),y=(0,c.R)(x),v=(0,r.W)((0,h.t)(g,y.shape),y);if(n){const t=(0,o.SM)(v.shape,f);return(0,h.t)(v,t)}return v}})},45692:(t,e,n)=>{"use strict";n.d(e,{n:()=>i});var a=n(82164),s=n(39554),r=n(64148),o=n(48805);const i=(0,n(47892).op)({logicalAnd_:function(t,e){const n=(0,r.YT)(t,"a","logicalAnd","bool"),i=(0,r.YT)(e,"b","logicalAnd","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return a.T2.runKernel(s.RUm,c)}})},5162:(t,e,n)=>{"use strict";n.d(e,{N:()=>i});var a=n(82164),s=n(39554),r=n(68804),o=n(64148);const i=(0,n(47892).op)({matMul_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=(0,o.YT)(t,"a","matMul"),l=(0,o.YT)(e,"b","matMul");[c,l]=(0,r.makeTypesMatch)(c,l);const u={a:c,b:l},h={transposeA:n,transposeB:i};return a.T2.runKernel(s.jAQ,u,h)}})},60891:(t,e,n)=>{"use strict";n.d(e,{T:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({max_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,r.YT)(t,"x","max")},i={reductionIndices:e,keepDims:n};return a.T2.runKernel(s.VAI,o,i)}})},6044:(t,e,n)=>{"use strict";n.d(e,{j:()=>u});var a=n(82164),s=n(39554),r=n(64148),o=n(71426),i=n(17538),c=n(47892),l=n(45583);const u=(0,c.op)({maxPool_:function(t,e,n,c,u){const h=(0,r.YT)(t,"x","maxPool");let d=h,p=!1;3===h.rank&&(p=!0,d=(0,l.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.vA(4===d.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(d.rank,"."))),o.vA(i.G0(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),i.s_("maxPool",c,u);const f={x:d},g={filterSize:e,strides:n,pad:c,dimRoundingMode:u},m=a.T2.runKernel(s.t3d,f,g);return p?(0,l.t)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},82131:(t,e,n)=>{"use strict";n.d(e,{P:()=>l});var a=n(82164),s=n(39554),r=n(68804),o=n(64148),i=n(48805),c=n(47794);const l=(0,n(47892).op)({maximum_:function(t,e){let n=(0,o.YT)(t,"a","maximum"),l=(0,o.YT)(e,"b","maximum");[n,l]=(0,r.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.w)(n,"int32"),l=(0,c.w)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.T2.runKernel(s.LDN,u)}})},55396:(t,e,n)=>{"use strict";n.d(e,{i:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({mean_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,r.YT)(t,"x","mean")},i={axis:e,keepDims:n};return a.T2.runKernel(s.g5A,o,i)}})},21465:(t,e,n)=>{"use strict";n.d(e,{j:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({min_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,r.YT)(t,"x","min")},i={axis:e,keepDims:n};return a.T2.runKernel(s.lNG,o,i)}})},6561:(t,e,n)=>{"use strict";n.d(e,{B:()=>l});var a=n(82164),s=n(39554),r=n(68804),o=n(64148),i=n(48805),c=n(47794);const l=(0,n(47892).op)({minimum_:function(t,e){let n=(0,o.YT)(t,"a","minimum"),l=(0,o.YT)(e,"b","minimum");[n,l]=(0,r.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.w)(n,"int32"),l=(0,c.w)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.T2.runKernel(s.LG0,u)}})},20803:(t,e,n)=>{"use strict";n.d(e,{l:()=>i});var a=n(82164),s=n(39554),r=n(68804),o=n(64148);const i=(0,n(47892).op)({mul_:function(t,e){let n=(0,o.YT)(t,"a","mul"),i=(0,o.YT)(e,"b","mul");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(s.xu7,c)}})},1011:(t,e,n)=>{"use strict";n.d(e,{H:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({neg_:function(t){const e={x:(0,r.YT)(t,"x","neg")};return a.T2.runKernel(s.l0G,e)}})},92155:(t,e,n)=>{"use strict";n.d(e,{x:()=>b});var a=n(64148),s=n(71426),r=n(33753),o=n(19235),i=n(60891),c=n(21465),l=n(47892),u=n(77587),h=n(45583),d=n(51997),p=n(70191),f=n(7738),g=n(47382);function m(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===t.rank)return(0,r.t)(t);if(1!==t.rank&&null===n)return m((0,h.t)(t,[-1]),e,n);if(1===t.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===e)return(0,g.c)((0,r.t)(t),n);if(e===1/0)return(0,i.T)((0,r.t)(t),n);if(e===-1/0)return(0,c.j)((0,r.t)(t),n);if("euclidean"===e||2===e)return(0,p.R)((0,g.c)((0,u.n)((0,r.t)(t),(0,d.d)(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}if(Array.isArray(n)&&2===n.length){if(1===e)return(0,i.T)((0,g.c)((0,r.t)(t),n[0]),n[1]-1);if(e===1/0)return(0,i.T)((0,g.c)((0,r.t)(t),n[1]),n[0]);if(e===-1/0)return(0,c.j)((0,g.c)((0,r.t)(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return(0,p.R)((0,g.c)((0,f.E)(t),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}throw new Error("Error in norm: invalid axis: ".concat(n))}const b=(0,l.op)({norm_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=m(t=(0,a.YT)(t,"x","norm"),e,n);let c=i.shape;if(r){const e=(0,s.Y6)(n,t.shape);c=o.SM(i.shape,e)}return(0,h.t)(i,c)}})},50135:(t,e,n)=>{"use strict";n.d(e,{E:()=>c});var a=n(82164),s=n(39554),r=n(68804),o=n(64148),i=n(48805);const c=(0,n(47892).op)({notEqual_:function(t,e){let n=(0,o.YT)(t,"a","notEqual","string_or_numeric"),c=(0,o.YT)(e,"b","notEqual","string_or_numeric");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(s.ylV,l)}})},26865:(t,e,n)=>{"use strict";n.d(e,{M:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({oneHot_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(e));const c={indices:(0,r.YT)(t,"indices","oneHot","int32")},l={dtype:i,depth:e,onValue:n,offValue:o};return a.T2.runKernel(s.urI,c,l)}})},44616:(t,e,n)=>{"use strict";n.d(e,{S:()=>i});var a=n(82164),s=n(71426),r=n(86149),o=n(74218);function i(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,s.SA)(t),"complex64"===e){const e=i(t,"float32"),n=(0,o.U)(t,"float32");return(0,r.f)(e,n)}const n=(0,s.FZ)((0,s.Ze)(t),e);return a.T2.makeTensor(n,t,e)}},64100:(t,e,n)=>{"use strict";n.d(e,{P:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({onesLike_:function(t){const e={x:(0,r.YT)(t,"x","onesLike")};return a.T2.runKernel(s.LWX,e)}})},47892:(t,e,n)=>{"use strict";n.d(e,{op:()=>o});var a=n(82164),s=n(71426);const r="__op";function o(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(e.length," keys."));let n=e[0];const o=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=r;const i=function(){a.T2.startScope(n);try{const t=o(...arguments);return(0,s.yL)(t)&&console.error("Cannot return a Promise inside of tidy."),a.T2.endScope(t),t}catch(t){throw a.T2.endScope(null),t}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},85048:(t,e,n)=>{"use strict";n.d(e,{e:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({pad_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o=(0,r.YT)(t,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:e,constantValue:n},c={x:o};return a.T2.runKernel(s.ODT,c,i)}})},77587:(t,e,n)=>{"use strict";n.d(e,{n:()=>i});var a=n(82164),s=n(39554),r=n(68804),o=n(64148);const i=(0,n(47892).op)({pow_:function(t,e){let n=(0,o.YT)(t,"base","pow"),i=(0,o.YT)(e,"exp","pow");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(s.pyJ,c)}})},99855:(t,e,n)=>{"use strict";n.d(e,{N:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({prelu_:function(t,e){const n={x:(0,r.YT)(t,"x","prelu"),alpha:(0,r.YT)(e,"alpha","prelu")};return a.T2.runKernel(s.Ncv,n)}})},89477:(t,e,n)=>{"use strict";n.d(e,{x:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({real_:function(t){const e={input:(0,r.YT)(t,"input","real")};return a.T2.runKernel(s.LRy,e)}})},85251:(t,e,n)=>{"use strict";n.d(e,{V:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({relu_:function(t){const e={x:(0,r.YT)(t,"x","relu")};return a.T2.runKernel(s.fUj,e)}})},99721:(t,e,n)=>{"use strict";n.d(e,{j:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({relu6_:function(t){const e={x:(0,r.YT)(t,"x","relu6")};return a.T2.runKernel(s.P_L,e)}})},45583:(t,e,n)=>{"use strict";n.d(e,{t:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({reshape_:function(t,e){const n={x:(0,r.YT)(t,"x","reshape","string_or_numeric")},o={shape:e};return a.T2.runKernel(s.R23,n,o)}})},47419:(t,e,n)=>{"use strict";n.d(e,{B:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({reverse_:function(t,e){const n={x:(0,r.YT)(t,"x","reverse")},o={dims:e};return a.T2.runKernel(s.D7i,n,o)}})},96509:(t,e,n)=>{"use strict";n.d(e,{L:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({round_:function(t){const e={x:(0,r.YT)(t,"x","round")};return a.T2.runKernel(s.hVg,e)}})},51997:(t,e,n)=>{"use strict";n.d(e,{d:()=>r});var a=n(58977),s=n(79914);function r(t,e){if(((0,a.isTypedArray)(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&(0,a.isTypedArray)(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,s.Q)(t,[],[],e)}},42022:(t,e,n)=>{"use strict";n.d(e,{W:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({selu_:function(t){const e={x:(0,r.YT)(t,"x","selu")};return a.T2.runKernel(s.u$b,e)}})},3765:(t,e,n)=>{"use strict";n.d(e,{X:()=>s,j:()=>a});const a=1.7580993408473768,s=1.0507009873554805},63117:(t,e,n)=>{"use strict";n.d(e,{w:()=>l});var a=n(64148),s=n(71426),r=n(14969),o=n(49899),i=n(47892),c=n(45583);const l=(0,i.op)({separableConv2d_:function(t,e,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const d=(0,a.YT)(t,"x","separableConv2d"),p=(0,a.YT)(e,"depthwiseFilter","separableConv2d"),f=(0,a.YT)(n,"pointwiseFilter","separableConv2d");let g=d,m=!1;if(3===d.rank&&(m=!0,g=(0,c.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),"NCHW"===h)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");s.vA(4===g.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(g.rank,"."))),s.vA(4===p.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(p.rank,"."))),s.vA(4===f.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(p.rank,"."))),s.vA(1===f.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(f.shape[0],"."))),s.vA(1===f.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(f.shape[1],".")));const b=p.shape[2],x=p.shape[3];s.vA(f.shape[2]===b*x,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(b*x,", ")+"but got ".concat(f.shape[2],".")));const y=(0,o.G)(g,p,i,l,h,u),v=(0,r.X)(y,f,1,"valid",h);return m?(0,c.t)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},74213:(t,e,n)=>{"use strict";n.d(e,{r:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({sigmoid_:function(t){const e={x:(0,r.YT)(t,"x","sigmoid","float32")};return a.T2.runKernel(s.vI1,e)}})},10463:(t,e,n)=>{"use strict";n.d(e,{d:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({slice_:function(t,e,n){const o=(0,r.YT)(t,"x","slice","string_or_numeric");if(0===o.rank)throw new Error("Slicing scalar is not possible");const i={x:o},c={begin:e,size:n};return a.T2.runKernel(s.JiE,i,c)}})},34642:(t,e,n)=>{"use strict";n.r(e),n.d(e,{assertParamsValid:()=>o,computeFlatOffset:()=>y,computeOutShape:()=>c,getNormalizedAxes:()=>d,isSliceContinous:()=>x,maskToAxes:()=>i,parseSliceParams:()=>v,sliceInfo:()=>w,startForAxis:()=>m,startIndicesWithElidedDims:()=>p,stopForAxis:()=>b,stopIndicesWithElidedDims:()=>f,stridesForAxis:()=>g,stridesWithElidedDims:()=>l});var a=n(71426);const s=-2,r=-1;function o(t,e,n){const s=t.shape.length;a.vA(s===e.length,(()=>"Error in slice".concat(s,"D: Length of begin ").concat(e," must ")+"match the rank of the array (".concat(s,")."))),a.vA(s===n.length,(()=>"Error in slice".concat(s,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(s,").")));for(let r=0;r<s;++r)a.vA(e[r]+n[r]<=t.shape[r],(()=>"Error in slice".concat(s,"D: begin[").concat(r,"] + size[").concat(r,"] ")+"(".concat(e[r]+n[r],") would overflow input.shape[").concat(r,"] (").concat(t.shape[r],")")))}function i(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function c(t,e,n){const a=[];for(let s=0;s<t.length;s++)a[s]=Math.ceil((e[s]-t[s])/n[s]);return a}function l(t,e,n,a){const s=[...t];for(let r=s.length;r<a.length;r++)s.push(1);for(let r=0;r<n;r++)0===r?s[e]=1:(s.splice(e,0,1),s.pop());return s}function u(t,e,n){return n<=t?n:n-(e-1)}function h(t,e){const n=[];for(let a=0;a<t;a++)n.push(e+a);return n}function d(t,e,n,a,s,r,o,i,c){const u=t.length;let h=new Array(u),d=new Array(u),x=new Array(u);if(e.length&&n>0){const c=e[0],u=n+1;h=p(o,c,u,a,t),d=f(i,c,u,s,t),x=l(r,c,u,t)}else for(let l=0;l<u;l++)h[l]=m(o,a,r,t,l,c),d[l]=b(i,s,r,t,l,c),x[l]=g(r,l,c);return{begin:h,end:d,strides:x}}function p(t,e,n,a,s){const r=[...s],o=h(n,e);for(let i=0;i<r.length;i++)if(o.indexOf(i)>-1)r[i]=0;else{const s=u(e,n,i);let o=a[s];t&1<<s&&(o=0),r[i]=o}return r}function f(t,e,n,s,r){const o=[...r],i=h(n,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const r=u(e,n,a);let i=s[r];t&1<<r&&(i=Number.MAX_SAFE_INTEGER),o[a]=i}for(let c=0;c<o.length;c++){const t=r[c];o[c]<0&&(o[c]+=t),o[c]=a.qE(0,o[c],r[c])}return o}function g(t,e,n){let a=t[e];return(n&1<<e||null==a)&&(a=1),a}function m(t,e,n,s,r,o){let i=e[r];const c=n[r]||1;(t&1<<r||o&1<<r||null==i)&&(i=c>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=a.qE(0,i,l-1),i}function b(t,e,n,s,r,o){let i=e[r];const c=n[r]||1;(t&1<<r||o&1<<r||null==i)&&(i=c>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=c>0?a.qE(0,i,l):a.qE(-1,i,l-1),i}function x(t,e,n){let a=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){a=s;break}for(let s=a+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function y(t,e){let n=t.length>0?t[t.length-1]:1;for(let a=0;a<t.length-1;a++)n+=t[a]*e[a];return n}function v(t,e,n){let s;const r=t.shape.length;let o;return s="number"===typeof e?[e,...new Array(r-1).fill(0)]:e.length<r?e.concat(new Array(r-e.length).fill(0)):e.slice(),s.forEach((t=>{a.vA(-1!==t,(()=>"slice() does not support negative begin indexing."))})),o=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,o=o.map(((e,n)=>e>=0?e:(a.vA(-1===e,(()=>"Negative size values should be exactly -1 but got "+"".concat(e," for the slice() size at index ").concat(n,"."))),t.shape[n]-s[n]))),[s,o]}function w(t,e,n,a,o,i,c,l,u){let h;if(null==a?(h=new Array(e.length),h.fill(1)):h=a,null!=c&&0!==(c&c-1))throw new Error("Multiple ellipses in slice is not allowed.");let d=!1;const p={dims:h.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:h.slice(),beginMask:o,endMask:i,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:u};for(let s=0;s<p.dims;s++)d&&0!==(1<<s&l)&&p.numAddAxisAfterEllipsis++,1<<s&c&&(d=!0);d||(p.ellipsisMask|=1<<p.dims,p.dims++);const f={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=null!=t.begin,e.endValid=null!=t.end,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let a=0;a<t.dims;a++)if(1<<a&t.ellipsisMask){const s=Math.min(e.dims-(t.dims-a)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<s;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&t.newAxisMask)e.finalShapeGatherIndices.push(s),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(e.dims," dims, ").concat(e.begin.length,"."));null!=t.begin&&(e.begin[n]=t.begin[a]),null!=t.end&&(e.end[n]=t.end[a]),e.strides[n]=t.strides[a],t.beginMask&1<<a&&(e.beginMask|=1<<n),t.endMask&1<<a&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<a?(e.finalShapeGatherIndices.push(r),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(a)),e.inputShapeGatherIndicesSparse[n]=a,n++}}(p,f);let g=!0,m=!0,b=!0;const x=[],y=[];for(let s=0;s<t.length;++s){if(0===f.strides[s])throw Error("strides[".concat(s,"] must be non-zero"));const e=!!(f.shrinkAxisMask&1<<s),n=t[s];if(-1===n){x.push(e?1:-1);continue}const a=[f.beginMask&1<<s,f.endMask&1<<s],r=[f.strides[s]>0?0:-1,f.strides[s]>0?n:n-1];if(e&&f.strides[s]<=0)throw Error("only stride 1 allowed on non-range indexing.");b=b&&1===f.strides[s];const o=!!(f.beginMask&1<<s&&f.endMask&1<<s);if(f.beginValid&&f.endValid){if(e){const t=f.begin[s]<0?n+f.begin[s]:f.begin[s];if(f.begin[s]=t,f.end[s]=f.begin[s]+1,t<0||t>=n)throw Error("slice index ".concat(f.begin[s]," of dimension ").concat(s," out of bounds."))}else f.begin[s]=k(f.begin[s],0,f.strides[s],n,a,r),f.end[s]=k(f.end[s],1,f.strides[s],n,a,r);const t=1===f.strides[s]&&0===f.begin[s]&&f.end[s]===n;g=g&&t,m=m&&(0===s&&1===f.strides[s]||t)}else g=g&&1===f.strides[s]&&o,m=m&&(0===s&&1===f.strides[s]||o);let i,c=!1;if(f.beginValid&&f.endValid?(i=f.end[s]-f.begin[s],c=!0):e?(i=1,c=!0):o&&n>=0&&(i=f.strides[s]<0?-n:n,c=!0),c){let t;t=0===i||i<0!==f.strides[s]<0?0:Math.trunc(i/f.strides[s])+(i%f.strides[s]!==0?1:0),x.push(t)}else x.push(-1)}for(let r=0;r<f.finalShapeGatherIndices.length;++r){const t=f.finalShapeGatherIndices[r];t>=0?y.push(x[t]):t===s&&y.push(1)}return{finalShapeSparse:y.filter(((t,e)=>f.finalShapeGatherIndices[e]!==s)),finalShape:y,isIdentity:g,sliceDim0:m,isSimpleSlice:b,begin:f.begin,end:f.end,strides:f.strides}}function k(t,e,n,a,s,r){if(s[e])return n>0?r[e]:r[e+1&1];{const e=t<0?a+t:t;return e<r[0]?r[0]:e>r[1]?r[1]:e}}},86719:(t,e,n)=>{"use strict";n.d(e,{V:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({softmax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,r.YT)(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(e));const o={logits:n},i={dim:e};return a.T2.runKernel(s.rFG,o,i)}})},9973:(t,e,n)=>{"use strict";n.d(e,{l:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({softplus_:function(t){const e={x:(0,r.YT)(t,"x","softplus")};return a.T2.runKernel(s.Fin,e)}})},63062:(t,e,n)=>{"use strict";n.d(e,{h:()=>o});var a=n(82164),s=n(39554),r=n(71426);const o=(0,n(47892).op)({fft_:function(t){(0,r.vA)("complex64"===t.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(t.dtype,".")));const e={input:t};return a.T2.runKernel(s.rGP,e)}})},1405:(t,e,n)=>{"use strict";n.d(e,{K:()=>o});var a=n(82164),s=n(39554),r=n(71426);const o=(0,n(47892).op)({ifft_:function(t){(0,r.vA)("complex64"===t.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(t.dtype,".")));const e={input:t};return a.T2.runKernel(s.OAQ,e)}})},57307:(t,e,n)=>{"use strict";n.d(e,{g:()=>f});var a=n(86149),s=n(94429),r=n(21047),o=n(20803),i=n(47892),c=n(89477),l=n(45583),u=n(47419),h=n(51997),d=n(10463),p=n(1405);const f=(0,i.op)({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let i;if(e<=2){const a=(0,l.t)(t,[n,e]);i=(0,p.K)(a)}else{const f=[n,2*(e-1)],g=(0,l.t)((0,c.x)(t),[n,e]),m=(0,l.t)((0,r.n)(t),[n,e]),b=(0,u.B)((0,d.d)(g,[0,1],[n,e-2]),1),x=(0,o.l)((0,u.B)((0,d.d)(m,[0,1],[n,e-2]),1),(0,h.d)(-1)),y=(0,s.x)([g,b],1),v=(0,s.x)([m,x],1),w=(0,l.t)((0,a.f)(y,v),[f[0],f[1]]);i=(0,p.K)(w)}if(i=(0,c.x)(i),3===t.rank&&0!==t.shape[0]){const e=i,n=t.shape[0];i=(0,l.t)(i,[n,i.shape[0]/n,i.shape[1]]),e.dispose()}return i}})},49486:(t,e,n)=>{"use strict";n.d(e,{z:()=>g});var a=n(71426),s=n(86149),r=n(94429),o=n(21047),i=n(47892),c=n(89477),l=n(45583),u=n(10463),h=n(35181),d=n(74218),p=n(63290),f=n(63062);const g=(0,i.op)({rfft_:function(t,e){(0,a.vA)("float32"===t.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(t.dtype)));let n=t.shape[t.shape.length-1];const i=t.size/n;let g;if(null!=e&&e<n){const a=t.shape.map((t=>0)),s=t.shape.map((t=>t));s[t.shape.length-1]=e,g=(0,u.d)(t,a,s),n=e}else if(null!=e&&e>n){const a=t.shape.map((t=>t));a[t.shape.length-1]=e-n,g=(0,r.x)([t,(0,d.U)(a)],t.shape.length-1),n=e}else g=t;const m=(0,p.P)(g),b=(0,l.t)((0,s.f)(g,m),[i,n]),x=(0,f.h)(b),y=Math.floor(n/2)+1,v=(0,c.x)(x),w=(0,o.n)(x),k=(0,h.l)(v,[y,n-y],v.shape.length-1),S=(0,h.l)(w,[y,n-y],w.shape.length-1),T=g.shape.slice();return T[g.shape.length-1]=y,(0,l.t)((0,s.f)(k[0],S[0]),T)}})},35181:(t,e,n)=>{"use strict";n.d(e,{l:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({split_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o={x:(0,r.YT)(t,"x","split")},i={numOrSizeSplits:e,axis:n};return a.T2.runKernel(s.Blb,o,i)}})},70191:(t,e,n)=>{"use strict";n.d(e,{R:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({sqrt_:function(t){const e={x:(0,r.YT)(t,"x","sqrt","float32")};return a.T2.runKernel(s.dFH,e)}})},7738:(t,e,n)=>{"use strict";n.d(e,{E:()=>r});var a=n(82164),s=n(64148);const r=(0,n(47892).op)({square_:function(t){const e=(0,s.YT)(t,"x","square");return a.T2.runKernel("Square",{x:e},{})}})},30208:(t,e,n)=>{"use strict";n.d(e,{P:()=>c});var a=n(82164),s=n(39554),r=n(68804),o=n(64148),i=n(48805);const c=(0,n(47892).op)({squaredDifference_:function(t,e){let n=(0,o.YT)(t,"a","squaredDifference"),c=(0,o.YT)(e,"b","squaredDifference");[n,c]=(0,r.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(s.Ddj,l,{})}})},60613:(t,e,n)=>{"use strict";n.d(e,{r:()=>i});var a=n(64148),s=n(71426),r=n(47892),o=n(45583);const i=(0,r.op)({squeeze_:function(t,e){const n=(0,a.YT)(t,"x","squeeze","string_or_numeric");return(0,o.t)(n,(0,s.gx)(n.shape,e).newShape)}})},901:(t,e,n)=>{"use strict";n.d(e,{t:()=>i});var a=n(82164),s=n(39554),r=n(64148),o=n(71426);const i=(0,n(47892).op)({stack_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,r.j1)(t,"tensors","stack","string_or_numeric");o.vA(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&o.vA(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const i=n,c={axis:e};return a.T2.runKernel(s.mM$,i,c)}})},60319:(t,e,n)=>{"use strict";n.d(e,{P:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({step_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,r.YT)(t,"x","step")},o={alpha:e};return a.T2.runKernel(s.pnw,n,o)}})},37951:(t,e,n)=>{"use strict";n.d(e,{j:()=>i});var a=n(82164),s=n(39554),r=n(68804),o=n(64148);const i=(0,n(47892).op)({sub_:function(t,e){let n=(0,o.YT)(t,"a","sub"),i=(0,o.YT)(e,"b","sub");[n,i]=(0,r.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(s.PbM,c)}})},47382:(t,e,n)=>{"use strict";n.d(e,{c:()=>i});var a=n(82164),s=n(39554),r=n(64148),o=n(47794);const i=(0,n(47892).op)({sum_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,r.YT)(t,"x","sum");"bool"===i.dtype&&(i=(0,o.w)(i,"int32"));const c={x:i},l={axis:e,keepDims:n};return a.T2.runKernel(s.WuN,c,l)}})},66532:(t,e,n)=>{"use strict";n.d(e,{y:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({tanh_:function(t){const e={x:(0,r.YT)(t,"x","tanh","float32")};return a.T2.runKernel(s.iuW,e)}})},68032:(t,e,n)=>{"use strict";n.d(e,{O:()=>r});var a=n(64148),s=n(79914);function r(t,e,n){const r=(0,a.MZ)(t,n);return(0,s.Q)(t,e,r,n)}},79914:(t,e,n)=>{"use strict";n.d(e,{Q:()=>i});var a=n(82164),s=n(38075),r=n(71426),o=n(58977);function i(t,e,n,i){if(null==i)i=(0,r.X$)(t);else if("complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,s.Nw)(t)||(0,s.Oj)(t)){if("float32"!==i&&"int32"!==i)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(i,"."));return a.T2.backend.createTensorFromGPUData(t,e||n,i)}if(!(0,o.isTypedArray)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){(0,r.SA)(e);const t=(0,r.Ze)(e),a=(0,r.Ze)(n);(0,r.vA)(t===a,(()=>"Based on the provided shape, [".concat(e,"], the tensor should have ")+"".concat(t," values but has ").concat(a)));for(let s=0;s<n.length;++s){const t=n[s],a=s!==n.length-1||t!==(0,r.Ze)(e.slice(s));(0,r.vA)(n[s]===e[s]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(e,"). ")))}}return(0,o.isTypedArray)(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==i?(0,o.toTypedArray)(t,i):(0,o.flatten)(t,[],!0),a.T2.makeTensor(t,e,i)}},43017:(t,e,n)=>{"use strict";n.d(e,{V:()=>i});var a=n(82164),s=n(39554),r=n(64148),o=n(71426);const i=(0,n(47892).op)({tile_:function(t,e){const n=(0,r.YT)(t,"x","tile","string_or_numeric");o.vA(n.rank===e.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(e,".")));const i={x:n},c={reps:e};return a.T2.runKernel(s.FAs,i,c)}})},2154:(t,e,n)=>{"use strict";n.d(e,{m:()=>p});var a=n(82164),s=n(58046),r=n(39554),o=n(64148),i=n(71426),c=n(86149),l=n(21047),u=n(1011),h=n(47892),d=n(89477);const p=(0,h.op)({transpose_:function(t,e,n){const h=(0,o.YT)(t,"x","transpose");if(null==e&&(e=h.shape.map(((t,e)=>e)).reverse()),i.vA(h.rank===e.length,(()=>"Error in transpose: rank of input ".concat(h.rank," ")+"must match length of perm ".concat(e,"."))),e.forEach((t=>{i.vA(t>=0&&t<h.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(h.rank-1)+" but got ".concat(e)))})),h.rank<=1)return h.clone();const p={x:h},f={perm:e};return"complex64"===h.dtype?(0,s.DZ)((()=>{let t=(0,d.x)(h),e=(0,l.n)(h);return t=a.T2.runKernel(r.wx0,{x:t},f),e=a.T2.runKernel(r.wx0,{x:e},f),n&&(e=(0,u.H)(e)),(0,c.f)(t,e)})):a.T2.runKernel(r.wx0,p,f)}})},3984:(t,e,n)=>{"use strict";n.d(e,{K:()=>i});var a=n(82164),s=n(39554),r=n(64148),o=n(71426);const i=(0,n(47892).op)({unstack_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,r.YT)(t,"x","unstack","string_or_numeric");o.vA(e>=-n.shape.length&&e<n.shape.length,(()=>"Axis = ".concat(e," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const i={value:n},c={axis:e};return a.T2.runKernel(s.dXR,i,c)}})},93986:(t,e,n)=>{"use strict";n.d(e,{_:()=>c});var a=n(82164),s=n(39554),r=n(64148),o=n(4920),i=n(48805);const c=(0,n(47892).op)({where_:function(t,e,n){const c=(0,r.YT)(e,"a","where"),l=(0,r.YT)(n,"b","where"),u=(0,r.YT)(t,"condition","where","bool"),h=(0,i.assertAndGetBroadcastShape)((0,i.assertAndGetBroadcastShape)(u.shape,c.shape),l.shape),d={condition:(0,o.h)(u,h),t:(0,o.h)(c,h),e:(0,o.h)(l,h)};return a.T2.runKernel(s.l6P,d)}})},74218:(t,e,n)=>{"use strict";n.d(e,{U:()=>o});var a=n(82164),s=n(71426),r=n(86149);function o(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,s.SA)(t),"complex64"===e){const e=o(t,"float32"),n=o(t,"float32");return(0,r.f)(e,n)}const n=(0,s.Ty)((0,s.Ze)(t),e);return a.T2.makeTensor(n,t,e)}},63290:(t,e,n)=>{"use strict";n.d(e,{P:()=>o});var a=n(82164),s=n(39554),r=n(64148);const o=(0,n(47892).op)({zerosLike_:function(t){const e={x:(0,r.YT)(t,"x","zerosLike")};return a.T2.runKernel(s.xJ3,e)}})},55767:(t,e,n)=>{"use strict";function a(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}n.d(e,{Y:()=>a})},79494:(t,e,n)=>{"use strict";n.d(e,{qY:()=>x,yl:()=>h,rT:()=>v,tp:()=>y,B4:()=>b,Q5:()=>m,qP:()=>g});var a=n(97926),s=n(71426);function r(t,e,n,a){const r=(0,s.Ur)(e),i=function(t,e,n,a){const r=(0,s.Ze)(e),i=a[a.length-1],c=new Array(i).fill(0),u=e.length,h="complex64"===n?l(t):t;if(u>1)for(let s=0;s<r/i;s++){const t=s*i;for(let e=0;e<i;e++)c[e]=Math.max(c[e],o(h[t+e],0,n).length)}return c}(t,e,n,r),u=e.length,h=c(t,e,n,r,i),d=["Tensor"];return a&&(d.push("  dtype: ".concat(n)),d.push("  rank: ".concat(u)),d.push("  shape: [".concat(e,"]")),d.push("  values:")),d.push(h.map((t=>"    "+t)).join("\n")),d.join("\n")}function o(t,e,n){let a;return a=Array.isArray(t)?"".concat(parseFloat(t[0].toFixed(7))," + ")+"".concat(parseFloat(t[1].toFixed(7)),"j"):(0,s.Kg)(t)?"'".concat(t,"'"):"bool"===n?i(t):parseFloat(t.toFixed(7)).toString(),(0,s.av)(a,e)}function i(t){return 0===t?"false":"true"}function c(t,e,n,a,s){let r=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const u="complex64"===n?2:1,h=e[0],d=e.length;if(0===d){if("complex64"===n){return[o(l(t)[0],0,n)]}return"bool"===n?[i(t[0])]:[t[0].toString()]}if(1===d){if(h>20){const e=3*u;let a=Array.from(t.slice(0,e)),r=Array.from(t.slice((h-3)*u,h*u));return"complex64"===n&&(a=l(a),r=l(r)),["["+a.map(((t,e)=>o(t,s[e],n))).join(", ")+", ..., "+r.map(((t,e)=>o(t,s[h-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?l(t):Array.from(t)).map(((t,e)=>o(t,s[e],n))).join(", ")+"]"]}const p=e.slice(1),f=a.slice(1),g=a[0]*u,m=[];if(h>20){for(let e=0;e<3;e++){const a=e*g,r=a+g;m.push(...c(t.slice(a,r),p,n,f,s,!1))}m.push("...");for(let e=h-3;e<h;e++){const a=e*g,r=a+g;m.push(...c(t.slice(a,r),p,n,f,s,e===h-1))}}else for(let o=0;o<h;o++){const e=o*g,a=e+g;m.push(...c(t.slice(e,a),p,n,f,s,o===h-1))}const b=2===d?",":"";m[0]="["+(h>0?m[0]+b:"");for(let o=1;o<m.length-1;o++)m[o]=" "+m[o]+b;let x=",\n";for(let o=2;o<d;o++)x+="\n";return m[m.length-1]=" "+m[m.length-1]+"]"+(r?"":x),m}function l(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}var u=n(58977);class h{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=s.Ze(t),null!=n){const t=n.length;s.vA(t===this.size,(()=>"Length of values '".concat(t,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||s.Ab(e,this.size),this.strides=(0,s.Ur)(t)}set(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),a=1;a<e;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),s.vA(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const r=this.locToIndex(n);this.values[r]=t}get(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];0===e.length&&(e=[0]);let a=0;for(const r of e){if(r<0||r>=this.shape[a]){const t="Requested out of range element at ".concat(e,". ")+"  Buffer shape=".concat(this.shape);throw new Error(t)}a++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return d().makeTensor(this.values,this.shape,this.dtype)}}let d=null,p=null,f=null;function g(t){d=t}function m(t){p=t}function b(t){f=t}class x{constructor(t,e,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=s.Ze(t),this.strides=(0,s.Ur)(t),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return p.buffer(this.shape,this.dtype,t)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return(0,s.yw)(this.shape,t,"complex64"===this.dtype)}arraySync(){return(0,s.yw)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=d().read(this.dataId);if("string"===this.dtype){const n=await t;try{return n.map((t=>u.decodeString(t)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),d().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=d().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>u.decodeString(t)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await d().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),d().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return p.print(this,t)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return r(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),p.cast(this,t)}variable(){let t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),d().makeVariable(this,t,e,n)}}function y(){return(0,a.m)("Tensor",(()=>x))}Object.defineProperty(x,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),y();class v extends x{constructor(t,e,n,a){super(t.shape,t.dtype,t.dataId,a),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(t.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!s.r1(t.shape,this.shape))throw new Error("shape of the new value (".concat(t.shape,") and ")+"previous value (".concat(this.shape,") must match"));d().disposeTensor(this),this.dataId=t.dataId,d().incRef(this,null)}dispose(){d().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(v,Symbol.hasInstance,{value:t=>t instanceof x&&null!=t.assign&&t.assign instanceof Function})},68804:(t,e,n)=>{"use strict";n.r(e),n.d(e,{assertTypesMatch:()=>i,getTensorsInContainer:()=>l,isTensorInList:()=>c,makeTypesMatch:()=>o});var a=n(79494),s=n(38075),r=n(71426);function o(t,e){if(t.dtype===e.dtype)return[t,e];const n=(0,s.Tu)(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function i(t,e){(0,r.vA)(t.dtype===e.dtype,(()=>"The dtypes of the first(".concat(t.dtype,") and")+" second(".concat(e.dtype,") input must match")))}function c(t,e){return e.some((e=>e.id===t.id))}function l(t){const e=[];return u(t,e,new Set),e}function u(t,e,n){if(null==t)return;if(t instanceof a.qY)return void e.push(t);if(s=t,!Array.isArray(s)&&"object"!==typeof s)return;var s;const r=t;for(const a in r){const t=r[a];n.has(t)||(n.add(t),u(t,e,n))}}},64148:(t,e,n)=>{"use strict";n.d(e,{MZ:()=>l,YT:()=>d,j1:()=>p});var a=n(82164),s=n(55399),r=n(79494),o=n(38075),i=n(58977),c=n(71426);function l(t,e){let n=t;if((0,i.isTypedArray)(t))return"string"===e?[]:[t.length];if((0,o.Oj)(t)){const e=t.channels||"RGBA";return[t.height,t.width*e.length]}if((0,o.Nw)(t))return[t.buffer.size/(null==e?4:(0,c.jv)(e))];if(!Array.isArray(t))return[];const a=[];for(;Array.isArray(n)||(0,i.isTypedArray)(n)&&"string"!==e;)a.push(n.length),n=n[0];return Array.isArray(t)&&(0,s._K)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&u(t,a,[]),a}function u(t,e,n){if(n=n||[],!Array.isArray(t)&&!(0,i.isTypedArray)(t))return void(0,c.vA)(0===e.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(e[0]," elements")));(0,c.vA)(e.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(t.length," elements"))),(0,c.vA)(t.length===e[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(e[0]," ")+"elements, but has ".concat(t.length," elements")));const a=e.slice(1);for(let s=0;s<t.length;++s)u(t[s],a,n.concat(s))}function h(t,e,n,a){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(t," tensor, but got ").concat(e," tensor"))}}function d(t,e,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(t instanceof(0,r.tp)())return h(s,t.dtype,e,n),t;let o=(0,c.X$)(t);if("string"!==o&&["bool","int32","float32"].indexOf(s)>=0&&(o=s),h(s,o,e,n),null==t||!(0,i.isTypedArray)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t){const a=null==t?"null":t.constructor.name;throw new Error("Argument '".concat(e,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const u=l(t,o);(0,i.isTypedArray)(t)||Array.isArray(t)||(t=[t]);const d="string"!==o?(0,i.toTypedArray)(t,o):(0,i.flatten)(t,[],!0);return a.T2.makeTensor(d,u,o)}function p(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(t))throw new Error("Argument ".concat(e," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return t.map(((t,s)=>d(t,"".concat(e,"[").concat(s,"]"),n,a)))}},38075:(t,e,n)=>{"use strict";var a,s,r,o,i;n.d(e,{Nw:()=>d,Oj:()=>h,Tu:()=>l,ch:()=>u}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(a||(a={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(s||(s={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(r||(r={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(o||(o={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(i||(i={}));const c={float32:o,int32:s,bool:r,complex64:i};function l(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error("Can not upcast ".concat(t," with ").concat(e))}return c[t][e]}function u(t){return l(t,"int32")}function h(t){return null!=t&&"object"===typeof t&&"texture"in t&&t.texture instanceof WebGLTexture}function d(t){return"undefined"!==typeof GPUBuffer&&null!=t&&"object"===typeof t&&"buffer"in t&&t.buffer instanceof GPUBuffer}},58977:(t,e,n)=>{"use strict";n.r(e),n.d(e,{arraysEqual:()=>r.r1,arraysEqualWithNull:()=>r.e_,assert:()=>r.vA,assertNonNegativeIntegerDimensions:()=>r.SA,assertNonNull:()=>r.HO,assertShapesMatch:()=>r.O3,bytesFromStringArray:()=>r.SL,bytesPerElement:()=>r.jv,checkConversionForErrors:()=>r.nd,clamp:()=>r.qE,computeStrides:()=>r.Ur,convertBackendValuesAndArrayBuffer:()=>r.o2,createScalarValue:()=>v,createShuffledIndices:()=>r.P8,decodeString:()=>I,distSquared:()=>r.oO,encodeString:()=>T,fetch:()=>S,fingerPrint64:()=>y,flatten:()=>N,getArrayFromDType:()=>r.Ab,getTypedArrayFromDType:()=>r.ce,hasEncodingLoss:()=>r.BE,hexToLong:()=>c,indexToLoc:()=>r._k,inferDtype:()=>r.X$,inferFromImplicitShape:()=>r.XT,isBoolean:()=>r.Lm,isFunction:()=>r.Tn,isInt:()=>r.E6,isNumber:()=>r.Et,isPromise:()=>r.yL,isScalarShape:()=>r.Sf,isString:()=>r.Kg,isTypedArray:()=>C,isValidDtype:()=>r.xn,locToIndex:()=>r.sX,makeOnesTypedArray:()=>r.FZ,makeZerosNestedTypedArray:()=>r.c7,makeZerosTypedArray:()=>r.Ty,nearestDivisor:()=>r.lK,nearestLargerEven:()=>r.eV,now:()=>k,parseAxisParam:()=>r.Y6,randUniform:()=>r.so,repeatedTry:()=>r._q,rightPad:()=>r.av,shuffle:()=>r.k4,shuffleCombo:()=>r.a0,sizeFromShape:()=>r.Ze,sizeToSquarishShape:()=>r.gS,squeezeShape:()=>r.gx,sum:()=>r.cz,swap:()=>r.wg,tanh:()=>r.ym,toNestedArray:()=>r.yw,toTypedArray:()=>w});var a=n(55399),s=n(55767),r=n(71426),o=n(77353);const i=n.n(o)()||o;function c(t){return i.fromString(t,!0,16)}const l=c("c3a5c85c97cb3127"),u=c("b492b66fbe98f273"),h=c("9ae16a3b2f90404f");function d(t){return t.xor(t.shru(47))}function p(t,e,n){const a=t.slice(e,e+n);return i.fromBytes(Array.from(a),!0,!0)}function f(t,e){return p(t,e,8)}function g(t,e){return p(t,e,4)}function m(t,e){return 0===e?t:t.shru(e).or(t.shl(64-e))}function b(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:c("9ddfea08eb382d69"),a=t.xor(e).mul(n);a=a.xor(a.shru(47));let s=e.xor(a).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function x(t,e,n,a){return function(t,e,n,a,s,r){s=s.add(t),r=m(r.add(s).add(a),21);const o=s;return s=(s=s.add(e)).add(n),r=r.add(m(s,44)),[s.add(a),r.add(o)]}(f(t,e),f(t,e+8),f(t,e+16),f(t,e+24),n,a)}function y(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;const n=i.fromNumber(81,!0);if(e<=32)return e<=16?function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;if(e>=8){const n=h.add(2*e),a=f(t,0).add(h),s=f(t,e-8);return b(m(s,37).mul(n).add(a),m(a,25).add(s).mul(n),n)}if(e>=4){const n=h.add(2*e);return b(g(t,0).shl(3).add(e),g(t,e-4),n)}if(e>0){const n=t[0]+(t[e>>1]<<8),a=e+(t[e-1]<<2);return d(h.mul(n).xor(l.mul(a))).mul(h)}return h}(t,e):function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;const n=h.add(2*e),a=f(t,0).mul(u),s=f(t,8),r=f(t,e-8).mul(n),o=f(t,e-16).mul(h);return b(m(a.add(s),43).add(m(r,30)).add(o),a.add(m(s.add(h),18)).add(r),n)}(t,e);if(e<=64)return function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;const n=h.add(2*e),a=f(t,0).mul(h),s=f(t,8),r=f(t,e-8).mul(n),o=f(t,e-16).mul(h),i=m(a.add(s),43).add(m(r,30)).add(o),c=b(i,a.add(m(s.add(h),18)).add(r),n),l=f(t,16).mul(n),u=f(t,24),d=i.add(f(t,e-32)).mul(n),p=c.add(f(t,e-24)).mul(n);return b(m(l.add(u),43).add(m(d,30)).add(p),l.add(m(u.add(a),18)).add(d),n)}(t,e);let a=n,s=n.mul(u).add(113),r=d(s.mul(h).add(113)).mul(h),o=[i.UZERO,i.UZERO],c=[i.UZERO,i.UZERO];a=a.mul(h).add(f(t,0));let p=0;const y=64*(e-1>>6),v=y+(e-1&63)-63;do{a=m(a.add(s).add(o[0]).add(f(t,p+8)),37).mul(u),s=m(s.add(o[1]).add(f(t,p+48)),42).mul(u),a=a.xor(c[1]),s=s.add(o[0]).add(f(t,p+40)),r=m(r.add(c[0]),33).mul(u),o=x(t,p,o[1].mul(u),a.add(c[0])),c=x(t,p+32,r.add(c[1]),s.add(f(t,p+16))),[r,a]=[a,r],p+=64}while(p!==y);const w=u.add(r.and(255).shl(1));return p=v,c[0]=c[0].add(e-1&63),o[0]=o[0].add(c[0]),c[0]=c[0].add(o[0]),a=m(a.add(s).add(o[0]).add(f(t,p+8)),37).mul(w),s=m(s.add(o[1]).add(f(t,p+48)),42).mul(w),a=a.xor(c[1].mul(9)),s=s.add(o[0].mul(9).add(f(t,p+40))),r=m(r.add(c[0]),33).mul(w),o=x(t,p,o[1].mul(w),a.add(c[0])),c=x(t,p+32,r.add(c[1]),s.add(f(t,p+16))),[r,a]=[a,r],b(b(o[0],c[0],w).add(d(s).mul(l)).add(r),b(o[1],c[1],w).add(a),w)}function v(t,e){return"string"===e?T(t):w([t],e)}function w(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=N(t)),(0,a._K)().getBool("DEBUG")&&r.nd(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type ".concat(e))}function k(){return(0,a._K)().platform.now()}function S(t,e){return(0,a._K)().platform.fetch(t,e)}function T(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",(0,a._K)().platform.encode(t,e)}function I(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",(0,a._K)().platform.decode(t,e)}function C(t){return null!=(0,a._K)().platform.isTypedArray?(0,a._K)().platform.isTypedArray(t):(0,s.Y)(t)}function N(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e&&(e=[]),"boolean"===typeof t||"number"===typeof t||"string"===typeof t||r.yL(t)||null==t||C(t)&&n)e.push(t);else if(Array.isArray(t)||C(t))for(let a=0;a<t.length;++a)N(t[a],e,n);else{let a=-1;for(const e of Object.keys(t))/^([1-9]+[0-9]*|0)$/.test(e)&&(a=Math.max(a,Number(e)));for(let s=0;s<=a;s++)N(t[s],e,n)}return e}},71426:(t,e,n)=>{"use strict";function a(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,i(t,e,n)}function s(t,e){if(t.length!==e.length)throw new Error("Array sizes must match to be shuffled together "+"First array length was ".concat(t.length)+"Second array length was ".concat(e.length));let n=t.length,a=0;for(;n>0;)a=Math.random()*n|0,n--,i(t,n,a),i(e,n,a)}function r(t,e,n){return Math.max(t,Math.min(e,n))}function o(t){return t%2===0?t:t+1}function i(t,e,n){const a=t[e];t[e]=t[n],t[n]=a}function c(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function l(t,e){const n=Math.random();return e*n+(1-n)*t}function u(t,e){let n=0;for(let a=0;a<t.length;a++){const s=Number(t[a])-Number(e[a]);n+=s*s}return n}function h(t,e){if(!t)throw new Error("string"===typeof e?e:e())}function d(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";h(b(t,e),(()=>n+" Shapes ".concat(t," and ").concat(e," must match")))}function p(t){h(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function f(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function g(t){return 0===t.length}function m(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(null!==t[n]&&null!==e[n]&&t[n]!==e[n])return!1;return!0}function b(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function x(t){return t%1===0}function y(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function v(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function w(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return a(e),e}function k(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function S(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise(((s,r)=>{let o=0;const i=()=>{if(t())return void s();o++;const c=e(o);null!=n&&o>=n?r():null!=a?a(i,c):setTimeout(i,c)};i()}))}function T(t,e){let n=1,a=-1;for(let r=0;r<t.length;++r)if(t[r]>=0)n*=t[r];else if(-1===t[r]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(r));a=r}else if(t[r]<0)throw Error("Shapes can not be < 0. Found ".concat(t[r]," at dim ").concat(r));if(-1===a){if(e>0&&e!==n)throw Error("Size(".concat(e,") must match the product of shape ").concat(t));return t}if(0===n)throw Error("Cannot infer the missing size in [".concat(t,"] when ")+"there are 0 elements");if(e%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(e," / ").concat(n));const s=t.slice();return s[a]=e/n,s}function I(t,e){const n=e.length;return h((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(t))),h(t.every((t=>x(t))),(()=>"All values in axis param must be integers but "+"got axis ".concat(t))),t.map((t=>t<0?n+t:t))}function C(t,e){const n=[],a=[],s=null!=e&&Array.isArray(e)&&0===e.length,r=null==e||s?null:I(e,t).sort();let o=0;for(let i=0;i<t.length;++i){if(null!=r){if(r[o]===i&&1!==t[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(t[i],"' is not 1"));(null==r[o]||r[o]>i)&&1===t[i]&&(n.push(t[i]),a.push(i)),r[o]<=i&&o++}1!==t[i]&&(n.push(t[i]),a.push(i))}return{newShape:n,keptDims:a}}function N(t,e){return A(t,e)}function A(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type ".concat(t));n=new Array(e)}return n}function E(t,e){for(let n=0;n<t.length;n++){const a=t[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(e," being uploaded contains ").concat(a,"."))}}function R(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function F(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function D(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype ".concat(t))}function _(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}function L(t){return"string"===typeof t||t instanceof String}function O(t){return"boolean"===typeof t}function M(t){return"number"===typeof t}function z(t){return Array.isArray(t)?z(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":M(t)?"float32":L(t)?"string":O(t)?"bool":"float32"}function P(t){return!!(t&&t.constructor&&t.call&&t.apply)}function B(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function W(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let a=e-3;a>=0;--a)n[a]=n[a+1]*t[a+1];return n}function U(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=new Array;if(1===e.length){const r=e[0]*(a?2:1);for(let e=0;e<r;e++)s[e]=n[t+e]}else{const r=e[0],o=e.slice(1),i=o.reduce(((t,e)=>t*e))*(a?2:1);for(let e=0;e<r;e++)s[e]=U(t+e*i,o,n,a)}return s}function V(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===t.length)return e[0];const a=t.reduce(((t,e)=>t*e))*(n?2:1);if(0===a)return[];if(a!==e.length)throw new Error("[".concat(t,"] does not match the input size ").concat(e.length).concat(n?" for a complex tensor":"","."));return U(0,t,e,n)}function G(t,e){if(Array.isArray(t))return t;if("float32"===e)return t instanceof Float32Array?t:new Float32Array(t);if("int32"===e)return t instanceof Int32Array?t:new Int32Array(t);if("bool"===e||"string"===e)return Uint8Array.from(new Int32Array(t));throw new Error("Unknown dtype ".concat(e))}function Z(t,e){const n=K(t,e);for(let a=0;a<n.length;a++)n[a]=1;return n}function K(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type ".concat(e))}function H(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return V(t,new Float32Array(n));if("int32"===e)return V(t,new Int32Array(n));if("bool"===e)return V(t,new Uint8Array(n));throw new Error("Unknown data type ".concat(e))}function j(t){t.forEach((e=>{h(Number.isInteger(e)&&e>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(t,"].")))}))}function q(t,e,n){if(0===e)return 0;if(1===e)return t[0];let a=t[t.length-1];for(let s=0;s<t.length-1;++s)a+=n[s]*t[s];return a}function Y(t,e,n){if(0===e)return[];if(1===e)return[t];const a=new Array(e);for(let s=0;s<a.length-1;++s)a[s]=Math.floor(t/n[s]),t-=a[s]*n[s];return a[a.length-1]=t,a}function Q(t){return t&&t.then&&"function"===typeof t.then}n.d(e,{Ab:()=>A,BE:()=>F,E6:()=>x,Et:()=>M,FZ:()=>Z,HO:()=>p,Kg:()=>L,Lm:()=>O,O3:()=>d,P8:()=>w,SA:()=>j,SL:()=>_,Sf:()=>g,Tn:()=>P,Ty:()=>K,Ur:()=>W,X$:()=>z,XT:()=>T,Y6:()=>I,Ze:()=>f,_k:()=>Y,_q:()=>S,a0:()=>s,av:()=>k,c7:()=>H,ce:()=>N,cz:()=>c,eV:()=>o,e_:()=>m,gS:()=>v,gx:()=>C,jv:()=>D,k4:()=>a,lK:()=>B,nd:()=>E,o2:()=>G,oO:()=>u,qE:()=>r,r1:()=>b,sX:()=>q,so:()=>l,vA:()=>h,wg:()=>i,xn:()=>R,yL:()=>Q,ym:()=>y,yw:()=>V})},40011:(t,e,n)=>{"use strict";var a=n(73882),s=n(39554),r=n(47794),o=n(20803),i=n(60319);const c={kernelName:s.ljI,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,o.l)(t,(0,i.P)((0,r.w)(n,"float32"),-1))}}};var l=n(24974),u=n(1011),h=n(51997),d=n(70191),p=n(7738),f=n(37951);const g={kernelName:s.Vvy,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=(0,p.E)((0,r.w)(n,"float32")),a=(0,d.R)((0,f.j)((0,h.d)(1),e));return(0,u.H)((0,l.y)(t,a))}}}},m={kernelName:s.PH8,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=(0,d.R)((0,f.j)((0,p.E)((0,r.w)(n,"float32")),1));return(0,l.y)(t,e)}}}};var b=n(48805),x=n(45583),y=n(47382);const v={kernelName:s.OMN,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=b.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{let e=t;const a=b.getReductionAxes(n.shape,s);return a.length>0&&(e=(0,y.c)(e,a)),(0,x.t)(e,n.shape)},b:()=>{let e=t;const n=b.getReductionAxes(a.shape,s);return n.length>0&&(e=(0,y.c)(e,n)),(0,x.t)(e,a.shape)}}}},w={kernelName:s.EkD,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,a)=>{n[a]=()=>t.clone()})),n}};var k=n(63290);const S={kernelName:s.Jp_,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,k.P)(n)}}},T={kernelName:s.p_m,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,k.P)(n)}}},I={kernelName:s.QKF,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,l.y)(t,(0,d.R)((0,f.j)((0,h.d)(1),(0,p.E)((0,r.w)(n,"float32")))))}}};var C=n(87242);const N={kernelName:s.epO,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=(0,d.R)((0,C.W)((0,h.d)(1),(0,p.E)((0,r.w)(n,"float32"))));return(0,l.y)(t,e)}}}},A={kernelName:s.lxb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=(0,b.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const e=(0,C.W)((0,p.E)(n),(0,p.E)(a));let r=(0,o.l)(t,(0,l.y)(a,e));const i=(0,b.getReductionAxes)(n.shape,s);return i.length>0&&(r=(0,y.c)(r,i)),(0,x.t)(r,n.shape)},b:()=>{const e=(0,C.W)((0,p.E)(n),(0,p.E)(a));let r=(0,u.H)((0,o.l)(t,(0,l.y)(n,e)));const i=(0,b.getReductionAxes)(a.shape,s);return i.length>0&&(r=(0,y.c)(r,i)),(0,x.t)(r,a.shape)}}}},E={kernelName:s.TyE,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,l.y)(t,(0,C.W)((0,p.E)((0,r.w)(n,"float32")),1))}}},R={kernelName:s.zP9,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,l.y)(t,(0,f.j)((0,h.d)(1),(0,p.E)((0,r.w)(n,"float32"))))}}};var F=n(82164),D=n(64148),_=n(71426),L=n(17538),O=n(47892);const M=(0,O.op)({avgPool3dGrad_:function(t,e,n,a,r,o){const i=(0,D.YT)(t,"dy","avgPool3dGrad"),c=(0,D.YT)(e,"input","avgPool3dGrad");let l=i,u=c,h=!1;4===c.rank&&(h=!0,l=(0,x.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=(0,x.t)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),_.vA(5===l.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(l.rank,"."))),_.vA(5===u.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(u.rank,"."))),(0,L.s_)("avgPool3dGrad",r,o);const d={dy:l,input:u},p={filterSize:n,strides:a,pad:r,dimRoundingMode:o},f=F.T2.runKernel(s.wwC,d,p);return h?(0,x.t)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),z={kernelName:s.cS,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{filterSize:s,strides:r,pad:o,dimRoundingMode:i}=n;return{x:()=>M(t,a,s,r,o,i)}}};const P=(0,O.op)({avgPoolGrad_:function(t,e,n,a,r){const o=(0,D.YT)(t,"dy","avgPoolGrad"),i=(0,D.YT)(e,"input","avgPoolGrad");_.vA(i.rank===o.rank,(()=>"Rank of input (".concat(i.rank,") does not match rank of dy (").concat(o.rank,")")));let c=i,l=o,u=!1;3===i.rank&&(u=!0,c=(0,x.t)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=(0,x.t)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),_.vA(4===l.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(l.rank,"."))),_.vA(4===c.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,".")));const h={dy:l,input:c},d={filterSize:n,strides:a,pad:r},p=F.T2.runKernel(s.VCH,h,d);return u?(0,x.t)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),B={kernelName:s.ho8,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{filterSize:s,strides:r,pad:o}=n;return{x:()=>P(t,a,s,r,o)}}};var W=n(5162);const U={kernelName:s.jAQ,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[a,s]=e,{transposeA:r,transposeB:o}=n;return r||o?!r&&o?{a:()=>(0,W.N)(t,s,!1,!1),b:()=>(0,W.N)(t,a,!0,!1)}:r&&!o?{a:()=>(0,W.N)(s,t,!1,!0),b:()=>(0,W.N)(a,t,!1,!1)}:{a:()=>(0,W.N)(s,t,!0,!0),b:()=>(0,W.N)(t,a,!0,!0)}:{a:()=>(0,W.N)(t,s,!1,!0),b:()=>(0,W.N)(a,t,!0,!1)}}};const V=(0,O.op)({spaceToBatchND_:function(t,e,n){const a=(0,D.YT)(t,"x","spaceToBatchND");_.vA(a.rank>=1+e.length,(()=>"input rank ".concat(a.rank," should be > than [blockShape] ").concat(e.length))),_.vA(n.length===e.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(e.length))),_.vA(a.shape.reduce(((t,a,s)=>s>0&&s<=e.length?t&&(a+n[s-1][0]+n[s-1][1])%e[s-1]===0:t),!0),(()=>"input spatial dimensions ".concat(a.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(e.toString())));const r={x:a},o={blockShape:e,paddings:n};return F.T2.runKernel(s.A8B,r,o)}}),G={kernelName:s.Ik2,gradFunc:(t,e,n)=>{const{blockShape:a,crops:s}=n;return{x:()=>V(t,a,s)}}},Z={kernelName:s.LB5,gradFunc:(t,e,n)=>{const a=n,s=a.inputShape,r=a.shape,o=Array.from(r);for(let c=s.length-1;c>=0;c--)if(s[c]===r[c])o[c]=1;else if(1!==s[c])throw new Error("broadcastTo(): [".concat(s,"] cannot be broadcast to [").concat(r,"]."));const i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>(0,y.c)(t,i,!0)}}},K={kernelName:s.KXH,gradFunc:t=>({x:()=>t.clone()})},H={kernelName:s.QDP,gradFunc:t=>({x:()=>(0,k.P)(t)})};var j=n(9996),q=n(827),Y=n(45692),Q=n(93986);const X={kernelName:s.vaV,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{clipValueMin:s,clipValueMax:r}=n;return{x:()=>(0,Q._)((0,Y.n)((0,j.D)(a,s),(0,q.I)(a,r)),t,(0,k.P)(t))}}},J={kernelName:s.$zE,inputsToSave:["x"],gradFunc:c.gradFunc};var $=n(35181);const tt={kernelName:s.$dB,saveAllInputs:!0,gradFunc:(t,e,n)=>{const a=e.map((t=>t.shape)),{axis:s}=n,r=(0,_.Y6)(s,e[0].shape)[0],o=a.map((t=>t[r]));return(0,$.l)(t,o,r).map((t=>()=>t))}};var et=n(56927),nt=n(91565);const at={kernelName:s.p2J,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[a,s]=e,{dilations:r,strides:o,pad:i,dataFormat:c}=n;return _.vA(L.Dh(r),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(r,"'"))),{x:()=>(0,nt.v)(a.shape,t,s,o,i,c),filter:()=>(0,et.H)(a,t,s.shape,o,i,c)}}};var st=n(14969);const rt={kernelName:s.jfg,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[a,s]=e,{strides:r,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>(0,st.X)(t,s,r,o,i,1,c),filter:()=>(0,et.H)(t,a,s.shape,r,o,i,c)}}};const ot=(0,O.op)({conv3DBackpropFilter_:function(t,e,n,a,r){let o=t;4===t.rank&&(o=(0,x.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;4===i.rank&&(i=(0,x.t)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),_.vA(5===o.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(o.shape,"."))),_.vA(5===i.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(i.shape,"."))),_.vA(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),_.vA(o.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(o.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),_.vA(i.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(i.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const c={x:o,dy:i},l={strides:a,pad:r,filterShape:n};return F.T2.runKernel(s.iGz,c,l)}});var it=n(46410);const ct={kernelName:s.A1h,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:a,strides:s,pad:r}=n;_.vA((0,L.Dh)(a),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'")));const[o,i]=e;return{x:()=>(0,it.c)(o.shape,t,i,s,r),filter:()=>ot(o,t,i.shape,s,r)}}};const lt=(0,O.op)({sin_:function(t){const e={x:(0,D.YT)(t,"x","sin","float32")};return F.T2.runKernel(s.hql,e)}}),ut={kernelName:s.Mn0,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,o.l)((0,u.H)(lt((0,r.w)(n,"float32"))),t)}}};const ht=(0,O.op)({sinh_:function(t){const e={x:(0,D.YT)(t,"x","sinh")};return F.T2.runKernel(s.J3C,e)}}),dt={kernelName:s.MnK,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,o.l)(ht((0,r.w)(n,"float32")),t)}}};var pt=n(19235);const ft=(0,O.op)({cumsum_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:(0,D.YT)(t,"x","cumsum")},o={axis:e,exclusive:n,reverse:a};return F.T2.runKernel(s.nY8,r,o)}});var gt=n(2154);const mt={kernelName:s.nY8,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:s,exclusive:r,reverse:o}=n;return{x:()=>{const e=(0,pt.Em)([s],a.rank);let n=ft(t,s,r,!o);return null!=e&&(n=(0,gt.m)(n,e)),n}}}};var bt=n(17399),xt=n(10261);const yt={kernelName:s.tGH,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:a,strides:s,pad:r,dimRoundingMode:o}=n,i=null==a?[1,1]:a;_.vA(L.Dh(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[c,l]=e;return _.vA(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,"."))),_.vA(4===l.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(l.rank,"."))),_.vA(c.shape[3]===l.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(l.shape[2],"."))),_.vA(L.G0(s,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(s," and dilations ")+"'".concat(i,"'."))),L.s_("depthwiseConv2d",r,o),{x:()=>(0,xt.l)(c.shape,t,l,s,r,i,o),filter:()=>(0,bt.x)(c,t,l.shape,s,r,i,o)}}},vt={kernelName:s.jxD,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[a,r]=e,o={x:a,filter:r,dy:t},i={x:a,filter:r,dy:t};return{x:()=>F.T2.runKernel(s.bP9,o,n),filter:()=>F.T2.runKernel(s.pk0,i,n)}}},wt={kernelName:s.Pah,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,a={dy:t,y:n};return{x:()=>F.T2.runKernel(s.rsH,a)}}};var kt=n(25462);const St={kernelName:s._s9,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,a=(0,o.l)((0,kt.o)((0,u.H)((0,p.E)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,o.l)(t,a)}}},Tt={kernelName:s.ox3,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,o.l)(t,n)}}},It={kernelName:s.ybN,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>(0,x.t)(t,n.shape)}}},Ct={kernelName:s.ybj,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,o.l)(t,(0,kt.o)(n))}}},Nt={kernelName:s.ZgB,gradFunc:t=>({x:()=>(0,k.P)(t)})},At={kernelName:s.ElG,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=(0,b.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const e=(0,l.y)(t,(0,r.w)(a,"float32")),o=(0,b.getReductionAxes)(n.shape,s);return o.length>0?(0,x.t)((0,y.c)(e,o),n.shape):e},b:()=>{let e=(0,o.l)(t,(0,r.w)(n,"float32"));const i=(0,b.getReductionAxes)(a.shape,s);i.length>0&&(e=(0,x.t)((0,y.c)(e,i),a.shape));const c=(0,p.E)(a);return(0,u.H)((0,l.y)(e,(0,r.w)(c,"float32")))}}}};const Et=(0,O.op)({rsqrt_:function(t){const e={x:(0,D.YT)(t,"x","rsqrt","float32")};return F.T2.runKernel(s.TOR,e)}});var Rt=n(43017);const Ft={kernelName:s.i5R,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:a}=n,[s,r,i,c]=e,l=null==c?(0,h.d)(1):c,u=(0,b.getReductionAxes)(r.shape,s.shape),d=[];if(1===r.rank){for(let t=0;t<s.shape.length-1;++t)d.push(s.shape[t]);d.push(1)}const p=(0,f.j)(s,r),g=(0,o.l)(t,l),m=Et((0,C.W)(i,(0,h.d)(a))),v=(0,o.l)((0,o.l)((0,o.l)(m,m),m),(0,h.d)(-.5));return{x:()=>1===r.rank?(0,x.t)((0,o.l)((0,o.l)(t,(0,Rt.V)((0,x.t)(m,[1,1,1,r.shape[0]]),d)),l),s.shape):(0,x.t)((0,o.l)((0,o.l)(t,m),l),s.shape),mean:()=>{let t=(0,o.l)((0,o.l)(m,(0,h.d)(-1)),g);return 1===r.rank&&(t=(0,y.c)(t,u)),(0,x.t)(t,r.shape)},variance:()=>{let t=(0,o.l)((0,o.l)(v,p),g);return 1===r.rank&&(t=(0,y.c)(t,u)),(0,x.t)(t,r.shape)},scale:()=>{const e=(0,o.l)(p,m);let n=(0,o.l)(t,e);return 1===r.rank&&(n=(0,y.c)(n,u)),(0,x.t)(n,r.shape)},offset:()=>{let e=t;return 1===r.rank&&(e=(0,y.c)(e,u)),(0,x.t)(e,r.shape)}}}};var Dt=n(901);const _t=(0,O.op)({unsortedSegmentSum_:function(t,e,n){const a=(0,D.YT)(t,"x","unsortedSegmentSum"),r=(0,D.YT)(e,"segmentIds","unsortedSegmentSum","int32");(0,_.vA)((0,_.E6)(n),(()=>"numSegments must be of dtype int"));const o={x:a,segmentIds:r},i={numSegments:n};return F.T2.runKernel(s.pPe,o,i)}}),Lt={kernelName:s.mxL,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[a,s]=e,{axis:r,batchDims:o}=n,i=(0,_.Y6)(r,a.shape)[0],c=(t,e,n)=>()=>{const a=t.shape,s=e.size,o=a.slice(0,i),c=o.length,l=a.slice(r,a.length).slice(1),u=l.length,h=Ot(0,c),d=Ot(c+1,c+1+u),p=Mt([o,[s],l]),f=(0,x.t)(n,p),g=(0,x.t)(e,[s]),m=Mt([[c],h,d]),b=(0,gt.m)(f,m);let y=_t(b,g,t.shape[i]);const v=(0,pt.gx)(m);return y=(0,gt.m)(y,v),y};if(1===o){const e=a.shape[0],n=a.split(e,0);return{x:()=>{const e=(0,Dt.t)(n.map(((e,n)=>c(e,s.slice(n,1),t.slice(n,1))())));return e.reshape(a.shape)},indices:()=>s}}return{x:c(a,s,t),indices:()=>s}}};function Ot(t,e){const n=[];for(let a=t;a<e;++a)n.push(a);return n}function Mt(t){const e=[];for(let n=0;n<t.length;++n)for(let a=0;a<t[n].length;++a)e.push(t[n][a]);return e}const zt={kernelName:s.lLS,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>(0,k.P)(n),b:()=>(0,k.P)(a)}}},Pt={kernelName:s.lzr,gradFunc:t=>({x:()=>(0,r.w)(t,"float32")})},Bt={kernelName:s.gIW,gradFunc:t=>({x:()=>(0,k.P)(t)})},Wt={kernelName:s.E3$,gradFunc:t=>({x:()=>(0,k.P)(t)})},Ut={kernelName:s.iPs,gradFunc:t=>({x:()=>(0,k.P)(t)})};var Vt=n(22759);const Gt={kernelName:s.X0$,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{alpha:s}=n,r=(0,Vt.r)(a,0);return{x:()=>(0,Q._)(r,t,(0,o.l)(t,s))}}},Zt={kernelName:s.Cg$,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,l.y)(t,(0,C.W)(n,1))}}},Kt={kernelName:s.tG8,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,l.y)(t,(0,r.w)(n,"float32"))}}},Ht={kernelName:s.zfU,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a]=e,{axis:s}=n;return{logits:()=>{const e=(0,kt.o)(a);return(0,f.j)(t,(0,o.l)((0,y.c)(t,s,!0),e))}}}};const jt=(0,O.op)({localResponseNormalizationBackprop_:function(t,e,n){const a={x:t,y:e,dy:n},r={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return F.T2.runKernel(s.ToN,a,r)}}),qt={kernelName:s.jM4,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,s]=e,{depthRadius:r,bias:o,alpha:i,beta:c}=n;return{x:()=>jt(a,s,t,r,o,i,c)}}};var Yt=n(37457);function Qt(t,e,n,a){return e.rank<n.rank&&(e=(0,x.t)(e,pt.SM(e.shape,a))),t.rank<n.rank&&(t=(0,x.t)(t,pt.SM(t.shape,a))),{x:()=>(0,o.l)(t,(0,r.w)((0,Yt.L)(n,e),t.dtype))}}const Xt={kernelName:s.VAI,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const a=n,{reductionIndices:s}=a,r=e[0],o=Qt(t,e[1],r,_.Y6(s,r.shape));return{x:()=>o.x()}}};var Jt=n(58320);const $t={kernelName:s.LDN,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>(0,o.l)(t,(0,r.w)((0,j.D)(n,a),"float32")),b:()=>(0,o.l)(t,(0,r.w)((0,Jt.M)(n,a),"float32"))}}};const te=(0,O.op)({maxPool3dGrad_:function(t,e,n,a,r,o,i){const c=(0,D.YT)(t,"dy","maxPool3dGrad"),l=(0,D.YT)(e,"input","maxPool3dGrad"),u=(0,D.YT)(n,"output","maxPool3dGrad");let h=c,d=l,p=u,f=!1;4===l.rank&&(f=!0,h=(0,x.t)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),d=(0,x.t)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=(0,x.t)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),_.vA(5===h.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(h.rank,"."))),_.vA(5===d.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(d.rank,"."))),_.vA(5===p.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(p.rank,"."))),(0,L.s_)("maxPool3dGrad",o,i);const g={dy:h,input:d,output:p},m={filterSize:a,strides:r,pad:o,dimRoundingMode:i},b=F.T2.runKernel(s.cHb,g,m);return f?(0,x.t)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),ee={kernelName:s.ySp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,s]=e,{filterSize:r,strides:o,pad:i,dimRoundingMode:c}=n;return{x:()=>te(t,a,s,r,o,i,c)}}};const ne=(0,O.op)({maxPoolGrad_:function(t,e,n,a,r,o,i){const c=(0,D.YT)(t,"dy","maxPoolGrad"),l=(0,D.YT)(e,"input","maxPoolGrad"),u=(0,D.YT)(n,"output","maxPoolGrad");_.vA(l.rank===c.rank,(()=>"Rank of input (".concat(l.rank,") does not match rank of dy ")+"(".concat(c.rank,")"))),_.vA(4===c.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,"."))),_.vA(4===l.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(l.rank,"."))),L.s_("maxPoolGrad",o,i);const h={dy:c,input:l,output:u},d={filterSize:a,strides:r,pad:o,dimRoundingMode:i};return F.T2.runKernel(s.RXX,h,d)}}),ae={kernelName:s.t3d,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,s]=e,{filterSize:r,strides:o,pad:i}=n;return{x:()=>ne(t,a,s,r,o,i)}}};var se=n(44616);const re={kernelName:s.g5A,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:s}=n,r=_.Y6(s,a.shape),i=(0,pt.lb)(a.shape,r)[1],c=_.Ze(i);return{x:()=>{const e=a.shape.slice();r.forEach((t=>{e[t]=1}));const n=(0,x.t)(t,e);return(0,l.y)((0,o.l)(n,(0,se.S)(a.shape,"float32")),c)}}}},oe={kernelName:s.lNG,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const a=n,{axis:s}=a,[r,o]=e,i=Qt(t,o,r,_.Y6(s,r.shape));return{x:()=>i.x()}}},ie={kernelName:s.LG0,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>(0,o.l)(t,(0,r.w)((0,q.I)(n,a),"float32")),b:()=>(0,o.l)(t,(0,r.w)((0,Vt.r)(n,a),"float32"))}}};var ce=n(10463);const le={kernelName:s.x7F,inputsToSave:["x"],gradFunc:(t,e,n)=>{const a=e[0],{paddings:s}=n,r=s.map((t=>t[0]));return{x:()=>(0,ce.d)(t,r,a.shape)}}};var ue=n(48587);const he={kernelName:s.BLA,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=(0,b.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const e=(0,b.getReductionAxes)(n.shape,s);return e.length>0?(0,x.t)((0,y.c)(t,e),n.shape):t},b:()=>{const e=(0,o.l)(t,(0,u.H)((0,ue.R)((0,l.y)(n,a)))),r=(0,b.getReductionAxes)(a.shape,s);return r.length>0?(0,x.t)((0,y.c)(e,r),a.shape):e}}}},de={kernelName:s.xu7,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=(0,b.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const e=(0,o.l)(t,(0,r.w)(a,"float32")),i=(0,b.getReductionAxes)(n.shape,s);return i.length>0?(0,x.t)((0,y.c)(e,i),n.shape):e},b:()=>{const e=(0,o.l)(t,(0,r.w)(n,"float32")),i=(0,b.getReductionAxes)(a.shape,s);return i.length>0?(0,x.t)((0,y.c)(e,i),a.shape):e}}}},pe={kernelName:s.l0G,gradFunc:t=>({x:()=>(0,u.H)(t)})};var fe=n(74218);const ge={kernelName:s.urI,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>(0,fe.U)(n.shape,"float32")}}},me={kernelName:s.LWX,gradFunc:t=>({x:()=>(0,k.P)(t)})};var be=n(3984);const xe={kernelName:s.mM$,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:a}=n;return(0,be.K)(t,a).map((t=>()=>t))}},ye={kernelName:s.ODT,inputsToSave:["x"],gradFunc:(t,e,n)=>{const a=e[0],{paddings:s}=n,r=s.map((t=>t[0]));return{x:()=>(0,ce.d)(t,r,a.shape)}}};var ve=n(75911),we=n(77587);const ke={kernelName:s.pyJ,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,a,s]=e,i=n,c=a,l=b.assertAndGetBroadcastShape(i.shape,c.shape);return{a:()=>{const e=(0,r.w)(c,"float32");let n=(0,o.l)(t,(0,o.l)(e,(0,we.n)(i,(0,f.j)(e,(0,h.d)(1)))));const a=b.getReductionAxes(i.shape,l);return a.length>0&&(n=(0,y.c)(n,a)),(0,x.t)(n,i.shape)},b:()=>{const e=(0,Vt.r)(i,0),n=(0,Q._)(e,(0,ve.R)(i),(0,k.P)(i));let a=(0,o.l)(t,(0,o.l)(s,n));const r=b.getReductionAxes(c.shape,l);return r.length>0&&(a=(0,y.c)(a,r)),(0,x.t)(a,c.shape)}}}},Se={kernelName:s.Ncv,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,a]=e,s=(0,Vt.r)(n,0);return{x:()=>(0,Q._)(s,t,(0,o.l)(t,a)),alpha:()=>{let e=(0,Q._)(s,(0,k.P)(t),(0,o.l)(t,n));const r=(0,b.getReductionAxes)(a.shape,t.shape);return r.length>0&&(e=(0,y.c)(e,r)),(0,x.t)(e,a.shape)}}}};const Te=(0,O.op)({cumprod_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:(0,D.YT)(t,"x","cumprod")},o={axis:e,exclusive:n,reverse:a};return F.T2.runKernel(s.jj_,r,o)}});function Ie(t,e,n){const a=t.shape.length,s=a-n.length,r=pt.Em(n,a);let i=t;null!=r&&(i=(0,gt.m)(t,r));const c=i.shape.slice(),l=c.splice(a-n.length,n.length).reduce(((t,e)=>t*e),1);c.push(l);let u=function(t,e,n){const a=t.shape.slice();a[n]=1;const s=(0,x.t)(e,a),r=Te(t,n,!0,!1),i=Te(t,n,!0,!0),c=(0,o.l)(r,i);return(0,o.l)(s,c)}(i.reshape(c),e,s);if(u=u.reshape(i.shape),null!=r){const t=pt.gx(r);u=(0,gt.m)(u,t)}return u}const Ce={kernelName:s.kdj,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:s}=n;let r=[];return r=void 0===s||null===s?a.shape.map(((t,e)=>e)):"number"===typeof s?[s]:s,{x:()=>Ie(a,t,r)}}},Ne={kernelName:s.sDr,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=b.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{const e=(0,l.y)(t,(0,r.w)(a,"float32")),o=b.getReductionAxes(n.shape,s);return o.length>0?(0,x.t)((0,y.c)(e,o),n.shape):e},b:()=>{let e=(0,o.l)(t,(0,r.w)(n,"float32"));const i=b.getReductionAxes(a.shape,s);i.length>0&&(e=(0,x.t)((0,y.c)(e,i),a.shape));const c=(0,p.E)(a);return(0,u.H)((0,l.y)(e,(0,r.w)(c,"float32")))}}}},Ae={kernelName:s.huO,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,l.y)(t,(0,u.H)((0,p.E)(n)))}}},Ee={kernelName:s.P_L,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,a=(0,o.l)((0,q.I)(n,6),(0,i.P)(n));return{x:()=>(0,o.l)(t,(0,r.w)(a,"float32"))}}},Re={kernelName:s.fUj,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,o.l)(t,(0,r.w)((0,i.P)(n),"float32"))}}},Fe={kernelName:s.R23,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,x.t)(t,n.shape)}}},De={kernelName:s.hgw,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[a]=e,r={dy:t,images:a};return{images:()=>F.T2.runKernel(s.FCQ,r,n)}}},_e={kernelName:s.jOE,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[a]=e,r={dy:t,images:a};return{images:()=>F.T2.runKernel(s.XQy,r,n)}}};var Le=n(47419);const Oe={kernelName:s.D7i,gradFunc:(t,e,n)=>{const{dims:a}=n,s=(0,_.Y6)(a,t.shape);return{x:()=>(0,Le.B)(t,s)}}},Me={kernelName:s.hVg,gradFunc:t=>({x:()=>(0,k.P)(t)})},ze={kernelName:s.TOR,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,u.H)((0,l.y)(t,(0,o.l)((0,we.n)(n,1.5),2)))}}};const Pe=(0,O.op)({logicalNot_:function(t){const e={x:(0,D.YT)(t,"x","logicalNot","bool")};return F.T2.runKernel(s.nZd,e)}}),Be={kernelName:s.l6P,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>(0,r.w)((0,k.P)(n),"float32"),t:()=>(0,o.l)(t,(0,r.w)(n,t.dtype)),e:()=>(0,o.l)(t,(0,r.w)(Pe(n),t.dtype))}}};var We=n(3765);const Ue={kernelName:s.u$b,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=(0,Vt.r)(n,(0,h.d)(0)),a=(0,h.d)(We.j),s=(0,h.d)(We.X),i=(0,o.l)(t,s),c=(0,o.l)((0,o.l)(t,a),(0,kt.o)((0,r.w)(n,"float32")));return(0,Q._)(e,i,c)}}}},Ve={kernelName:s.vI1,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,o.l)(t,(0,o.l)(n,(0,f.j)((0,h.d)(1),n)))}}},Ge={kernelName:s.YVe,gradFunc:t=>({x:()=>(0,k.P)(t)})};const Ze=(0,O.op)({cos_:function(t){const e={x:(0,D.YT)(t,"x","cos","float32")};return F.T2.runKernel(s.Mn0,e)}}),Ke={kernelName:s.hql,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,o.l)(Ze((0,r.w)(n,"float32")),t)}}};const He=(0,O.op)({cosh_:function(t){const e={x:(0,D.YT)(t,"x","cosh","float32")};return F.T2.runKernel(s.MnK,e)}}),je={kernelName:s.J3C,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,o.l)(He((0,r.w)(n,"float32")),t)}}};var qe=n(85048),Ye=n(34642);const Qe={kernelName:s.JiE,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{begin:s,size:r}=n,o=a.shape,[i,c]=(0,Ye.parseSliceParams)(a,s,r),l=[];for(let u=0;u<t.rank;u++)l.push([i[u],o[u]-i[u]-c[u]]);return{x:()=>(0,qe.e)(t,l)}}},Xe={kernelName:s.rFG,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a]=e,{dim:s}=n,r=(0,o.l)(t,a);return{logits:()=>(0,f.j)(r,(0,o.l)((0,y.c)(r,[s],true),a))}}};var Je=n(74213);const $e={kernelName:s.Fin,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,o.l)(t,(0,Je.r)(n))}}};const tn=(0,O.op)({batchToSpaceND_:function(t,e,n){const a=(0,D.YT)(t,"x","batchToSpaceND"),r=e.reduce(((t,e)=>t*e));_.vA(a.rank>=1+e.length,(()=>"input rank is ".concat(a.rank," but should be > than blockShape.length ").concat(e.length))),_.vA(n.length===e.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(e.length))),_.vA(a.shape[0]%r===0,(()=>"input tensor batch is ".concat(a.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(e.join(" * ")," === ").concat(r)));const o={x:a},i={blockShape:e,crops:n};return F.T2.runKernel(s.Ik2,o,i)}}),en={kernelName:s.A8B,gradFunc:(t,e,n)=>{const{blockShape:a,paddings:s}=n;return{x:()=>tn(t,a,s)}}};var nn=n(94429);const an={kernelName:s.Blb,gradFunc:(t,e,n)=>{const{axis:a}=n;return{x:()=>(0,nn.x)(t,a)}}},sn={kernelName:s.dFH,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,l.y)(t,(0,o.l)((0,d.R)((0,r.w)(n,"float32")),2))}}},rn={kernelName:s.M6A,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,o.l)(t,(0,o.l)((0,r.w)(n,"float32"),2))}}},on={kernelName:s.Ddj,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=(0,h.d)(2);return{a:()=>(0,o.l)(t,(0,o.l)(s,(0,f.j)(n,a))),b:()=>(0,o.l)(t,(0,o.l)(s,(0,f.j)(a,n)))}}},cn={kernelName:s.pnw,gradFunc:t=>({x:()=>(0,k.P)(t)})},ln={kernelName:s.PbM,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,s=b.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{let e=t;const a=b.getReductionAxes(n.shape,s);return a.length>0&&(e=(0,y.c)(e,a)),(0,x.t)(e,n.shape)},b:()=>{let e=t;const n=b.getReductionAxes(a.shape,s);return n.length>0&&(e=(0,y.c)(e,n)),(0,x.t)((0,u.H)(e),a.shape)}}}},un={kernelName:s.WuN,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,s=a.shape.slice(),{axis:r}=n;(0,_.Y6)(r,a.shape).forEach((t=>{s[t]=1}));const i=(0,x.t)(t,s),c=(0,o.l)(i,(0,se.S)(a.shape,"float32"));return{x:()=>c}}},hn={kernelName:s.oFs,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,l.y)(t,(0,p.E)(Ze(n)))}}},dn={kernelName:s.iuW,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,o.l)((0,f.j)((0,h.d)(1),(0,p.E)(n)),t)}}},pn={kernelName:s.FAs,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{reps:s}=n;return{x:()=>{let e=(0,k.P)(a);if(1===a.rank)for(let n=0;n<s[0];++n)e=(0,C.W)(e,(0,ce.d)(t,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<s[0];++n)for(let r=0;r<s[1];++r)e=(0,C.W)(e,(0,ce.d)(t,[n*a.shape[0],r*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<s[0];++n)for(let r=0;r<s[1];++r)for(let o=0;o<s[2];++o)e=(0,C.W)(e,(0,ce.d)(t,[n*a.shape[0],r*a.shape[1],o*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<s[0];++n)for(let r=0;r<s[1];++r)for(let o=0;o<s[2];++o)for(let i=0;i<s[3];++i)e=(0,C.W)(e,(0,ce.d)(t,[n*a.shape[0],r*a.shape[1],o*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return e}}}},fn={kernelName:s.wx0,gradFunc:(t,e,n)=>{const a=n,{perm:s}=a,r=pt.gx(s);return{x:()=>(0,gt.m)(t,r)}}},gn={kernelName:s.dXR,gradFunc:(t,e,n)=>{const a=n,{axis:s}=a;return{value:()=>(0,Dt.t)(t,s)}}};var mn=n(74023),bn=n(56178),xn=n(82131);const yn={kernelName:s.pPe,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=(0,xn.P)(e,(0,k.P)(e)),a=(0,bn.k)(t,n);let s=(0,j.D)(e,(0,h.d)(0,"int32"));const r=a.rank-s.rank;for(let i=0;i<r;++i)s=(0,mn.U)(s,i+1);s=(0,Y.n)(s,(0,se.S)(a.shape,"bool"));const o=(0,k.P)(a);return(0,Q._)(s,a,o)}(t,n)}}};const vn={kernelName:s.xJ3,gradFunc:t=>({x:()=>(0,k.P)(t)})};var wn=n(10843);const kn=[c,g,m,v,w,S,T,I,N,A,E,R,z,B,U,G,Z,K,H,X,J,tt,rt,at,ct,ut,dt,mt,yt,vt,Ne,wt,St,Tt,It,Ct,At,Nt,Ft,Lt,zt,Pt,Bt,Wt,Ut,Gt,Zt,Kt,Ht,qt,Xt,Xt,$t,ee,ae,re,oe,ie,le,he,de,pe,ge,me,xe,ye,ye,ke,Se,Ce,Ae,Ee,Re,Fe,De,_e,Oe,Me,ze,Be,Ue,Ve,Ge,Ke,je,Qe,Xe,$e,en,en,an,an,sn,on,rn,cn,ln,un,hn,dn,pn,fn,gn,yn,vn];for(const Wg of kn)(0,wn.kr)(Wg);var Sn=n(33753),Tn=n(79494);(0,Tn.tp)().prototype.abs=function(){return this.throwIfDisposed(),(0,Sn.t)(this)};const In=(0,O.op)({acos_:function(t){const e={x:(0,D.YT)(t,"x","acos")};return F.T2.runKernel(s.Vvy,e)}});(0,Tn.tp)().prototype.acos=function(){return this.throwIfDisposed(),In(this)};const Cn=(0,O.op)({acosh_:function(t){const e={x:(0,D.YT)(t,"x","acosh")};return F.T2.runKernel(s.PH8,e)}});(0,Tn.tp)().prototype.acosh=function(){return this.throwIfDisposed(),Cn(this)},(0,Tn.tp)().prototype.add=function(t){return this.throwIfDisposed(),(0,C.W)(this,t)};var Nn=n(51802);(0,Tn.tp)().prototype.all=function(t,e){return this.throwIfDisposed(),(0,Nn.Q)(this,t,e)};var An=n(41819);(0,Tn.tp)().prototype.any=function(t,e){return this.throwIfDisposed(),(0,An.b)(this,t,e)};var En=n(23068);(0,Tn.tp)().prototype.argMax=function(t){return this.throwIfDisposed(),(0,En.F)(this,t)};const Rn=(0,O.op)({argMin_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,D.YT)(t,"x","argMin")},a={axis:e};return F.T2.runKernel(s.p_m,n,a)}});(0,Tn.tp)().prototype.argMin=function(t){return this.throwIfDisposed(),Rn(this,t)},(0,Tn.tp)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,_.vA)(1===this.size,(()=>"The array must have only 1 element.")),(0,x.t)(this,[])},(0,Tn.tp)().prototype.asType=function(t){return this.throwIfDisposed(),(0,r.w)(this,t)},(0,Tn.tp)().prototype.as1D=function(){return this.throwIfDisposed(),(0,x.t)(this,[this.size])},(0,Tn.tp)().prototype.as2D=function(t,e){return this.throwIfDisposed(),(0,x.t)(this,[t,e])},(0,Tn.tp)().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),(0,x.t)(this,[t,e,n])},(0,Tn.tp)().prototype.as4D=function(t,e,n,a){return this.throwIfDisposed(),(0,x.t)(this,[t,e,n,a])},(0,Tn.tp)().prototype.as5D=function(t,e,n,a,s){return this.throwIfDisposed(),(0,x.t)(this,[t,e,n,a,s])};const Fn=(0,O.op)({asin_:function(t){const e={x:(0,D.YT)(t,"x","asin")};return F.T2.runKernel(s.QKF,e)}});(0,Tn.tp)().prototype.asin=function(){return this.throwIfDisposed(),Fn(this)};const Dn=(0,O.op)({asinh_:function(t){const e={x:(0,D.YT)(t,"x","asinh")};return F.T2.runKernel(s.epO,e)}});(0,Tn.tp)().prototype.asinh=function(){return this.throwIfDisposed(),Dn(this)};const _n=(0,O.op)({atan_:function(t){const e={x:(0,D.YT)(t,"x","atan")};return F.T2.runKernel(s.TyE,e)}});(0,Tn.tp)().prototype.atan=function(){return this.throwIfDisposed(),_n(this)};var Ln=n(68804);const On=(0,O.op)({atan2_:function(t,e){let n=(0,D.YT)(t,"a","atan2"),a=(0,D.YT)(e,"b","atan2");[n,a]=(0,Ln.makeTypesMatch)(n,a);const r={a:n,b:a};return F.T2.runKernel(s.lxb,r)}});(0,Tn.tp)().prototype.atan2=function(t){return this.throwIfDisposed(),On(this,t)};const Mn=(0,O.op)({atanh_:function(t){const e={x:(0,D.YT)(t,"x","atanh")};return F.T2.runKernel(s.zP9,e)}});(0,Tn.tp)().prototype.atanh=function(){return this.throwIfDisposed(),Mn(this)};var zn=n(28650);(0,Tn.tp)().prototype.avgPool=function(t,e,n,a){return this.throwIfDisposed(),(0,zn.$)(this,t,e,n,a)},(0,Tn.tp)().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),tn(this,t,e)};var Pn=n(27237);(0,Tn.tp)().prototype.batchNorm=function(t,e,n,a,s){return this.throwIfDisposed(),(0,Pn.$)(this,t,e,n,a,s)};var Bn=n(4920);(0,Tn.tp)().prototype.broadcastTo=function(t){return this.throwIfDisposed(),(0,Bn.h)(this,t)},(0,Tn.tp)().prototype.cast=function(t){return this.throwIfDisposed(),(0,r.w)(this,t)};const Wn=(0,O.op)({ceil_:function(t){const e={x:(0,D.YT)(t,"x","ceil","float32")};return F.T2.runKernel(s.QDP,e)}});(0,Tn.tp)().prototype.ceil=function(){return this.throwIfDisposed(),Wn(this)};var Un=n(53829);(0,Tn.tp)().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),(0,Un.z)(this,t,e)},(0,Tn.tp)().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Tn.qY&&(t=[t]),(0,nn.x)([this,...t],e)};var Vn=n(89870);(0,Tn.tp)().prototype.conv1d=function(t,e,n,a,s,r){return this.throwIfDisposed(),(0,Vn.k)(this,t,e,n,a,s,r)};var Gn=n(1137);(0,Tn.tp)().prototype.conv2dTranspose=function(t,e,n,a,s){return this.throwIfDisposed(),(0,Gn.w)(this,t,e,n,a,s)},(0,Tn.tp)().prototype.conv2d=function(t,e,n,a,s,r){return this.throwIfDisposed(),(0,st.X)(this,t,e,n,a,s,r)},(0,Tn.tp)().prototype.cos=function(){return this.throwIfDisposed(),Ze(this)},(0,Tn.tp)().prototype.cosh=function(){return this.throwIfDisposed(),He(this)},(0,Tn.tp)().prototype.cumprod=function(t,e,n){return this.throwIfDisposed(),Te(this,t,e,n)},(0,Tn.tp)().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),ft(this,t,e,n)};const Zn=(0,O.op)({depthToSpace_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const a=(0,D.YT)(t,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],o="NHWC"===n?a.shape[2]:a.shape[3],i="NHWC"===n?a.shape[3]:a.shape[1];_.vA(e>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(e))),_.vA(r*e>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(r," and ").concat(e,"  for depthToSpace with input shape\n    ").concat(a.shape))),_.vA(o*e>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(o," and ").concat(e," for depthToSpace with input shape\n        ").concat(a.shape))),_.vA(i%(e*e)===0,(()=>"Dimension size must be evenly divisible by ".concat(e*e," but is ").concat(i," for depthToSpace with input shape ").concat(a.shape)));const c={x:a},l={blockSize:e,dataFormat:n};return F.T2.runKernel(s.TMz,c,l)}});(0,Tn.tp)().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Zn(this,t,e)};var Kn=n(49899);(0,Tn.tp)().prototype.depthwiseConv2d=function(t,e,n,a,s,r){return this.throwIfDisposed(),(0,Kn.G)(this,t,e,n,a,s,r)};const Hn=(0,O.op)({dilation2d_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const i=(0,D.YT)(t,"x","dilation2d"),c=(0,D.YT)(e,"filter","dilation2d");_.vA(3===i.rank||4===i.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(i.rank,"."))),_.vA(3===c.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(c.rank,"."))),_.vA("NHWC"===o,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(o)));let l=i,u=!1;3===i.rank&&(l=(0,x.t)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),_.vA(l.shape[3]===c.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(l.shape[3]," vs ").concat(c.shape[2])));const h={x:l,filter:c},d={strides:n,pad:a,dilations:r},p=F.T2.runKernel(s.jxD,h,d);return u?(0,x.t)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});(0,Tn.tp)().prototype.dilation2d=function(t,e,n,a,s){return this.throwIfDisposed(),Hn(this,t,e,n,a,s)};const jn=(0,O.op)({divNoNan_:function(t,e){let n=(0,D.YT)(t,"a","div"),a=(0,D.YT)(e,"b","div");[n,a]=(0,Ln.makeTypesMatch)(n,a);const s=(0,l.y)(n,a),r=(0,k.P)(s),o=(0,Yt.L)(a,r);return(0,Q._)(o,r,s)}});(0,Tn.tp)().prototype.divNoNan=function(t){return this.throwIfDisposed(),jn(this,t)},(0,Tn.tp)().prototype.div=function(t){return this.throwIfDisposed(),(0,l.y)(this,t)};const qn=(0,O.op)({dot_:function(t,e){const n=(0,D.YT)(t,"t1","dot"),a=(0,D.YT)(e,"t2","dot");_.vA((1===n.rank||2===n.rank)&&(1===a.rank||2===a.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const s=1===n.rank?n.size:n.shape[1],r=1===a.rank?a.size:a.shape[0];if(_.vA(s===r,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(s," and ").concat(r,"."))),1===n.rank&&1===a.rank){const t=(0,x.t)(n,[1,-1]),e=(0,x.t)(a,[-1,1]),s=(0,W.N)(t,e);return(0,x.t)(s,[])}if(1===n.rank&&2===a.rank){const t=(0,x.t)(n,[1,-1]),e=(0,x.t)(a,[a.shape[0],a.shape[1]]),s=(0,W.N)(t,e);return(0,x.t)(s,[s.size])}if(2===n.rank&&1===a.rank){const t=(0,x.t)(a,[-1,1]),e=(0,W.N)(n,t);return(0,x.t)(e,[e.size])}{const t=(0,x.t)(a,[a.shape[0],a.shape[1]]);return(0,W.N)(n,t)}}});(0,Tn.tp)().prototype.dot=function(t){return this.throwIfDisposed(),qn(this,t)};var Yn=n(83645);(0,Tn.tp)().prototype.elu=function(){return this.throwIfDisposed(),(0,Yn.P)(this)},(0,Tn.tp)().prototype.equal=function(t){return this.throwIfDisposed(),(0,Yt.L)(this,t)};var Qn=n(48810);(0,Tn.tp)().prototype.erf=function(){return this.throwIfDisposed(),(0,Qn.Y)(this)};var Xn=n(92155);const Jn=(0,O.op)({euclideanNorm_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,Xn.x)(t,"euclidean",e,n)}});(0,Tn.tp)().prototype.euclideanNorm=function(t,e){return this.throwIfDisposed(),Jn(this,t,e)},(0,Tn.tp)().prototype.exp=function(){return this.throwIfDisposed(),(0,kt.o)(this)},(0,Tn.tp)().prototype.expandDims=function(t){return this.throwIfDisposed(),(0,mn.U)(this,t)};const $n=(0,O.op)({expm1_:function(t){const e={x:(0,D.YT)(t,"x","expm1")};return F.T2.runKernel(s.ybj,e)}});(0,Tn.tp)().prototype.expm1=function(){return this.throwIfDisposed(),$n(this)};var ta=n(63062);(0,Tn.tp)().prototype.fft=function(){return this.throwIfDisposed(),(0,ta.h)(this)},(0,Tn.tp)().prototype.flatten=function(){return this.throwIfDisposed(),(0,x.t)(this,[this.size])},(0,Tn.tp)().prototype.floor=function(){return this.throwIfDisposed(),(0,ue.R)(this)};var ea=n(63612);(0,Tn.tp)().prototype.floorDiv=function(t){return this.throwIfDisposed(),(0,ea.w)(this,t)},(0,Tn.tp)().prototype.gather=function(t,e,n){return this.throwIfDisposed(),(0,bn.k)(this,t,e,n)},(0,Tn.tp)().prototype.greaterEqual=function(t){return this.throwIfDisposed(),(0,j.D)(this,t)},(0,Tn.tp)().prototype.greater=function(t){return this.throwIfDisposed(),(0,Vt.r)(this,t)};var na=n(1405);(0,Tn.tp)().prototype.ifft=function(){return this.throwIfDisposed(),(0,na.K)(this)};var aa=n(57307);(0,Tn.tp)().prototype.irfft=function(){return this.throwIfDisposed(),(0,aa.g)(this)};const sa=(0,O.op)({isFinite_:function(t){const e={x:(0,D.YT)(t,"x","isFinite")};return F.T2.runKernel(s.gIW,e)}});(0,Tn.tp)().prototype.isFinite=function(){return this.throwIfDisposed(),sa(this)};const ra=(0,O.op)({isInf_:function(t){const e={x:(0,D.YT)(t,"x","isInf")};return F.T2.runKernel(s.E3$,e)}});(0,Tn.tp)().prototype.isInf=function(){return this.throwIfDisposed(),ra(this)};const oa=(0,O.op)({isNaN_:function(t){const e={x:(0,D.YT)(t,"x","isNaN")};return F.T2.runKernel(s.iPs,e)}});(0,Tn.tp)().prototype.isNaN=function(){return this.throwIfDisposed(),oa(this)};var ia=n(18076);(0,Tn.tp)().prototype.leakyRelu=function(t){return this.throwIfDisposed(),(0,ia.H)(this,t)},(0,Tn.tp)().prototype.lessEqual=function(t){return this.throwIfDisposed(),(0,q.I)(this,t)},(0,Tn.tp)().prototype.less=function(t){return this.throwIfDisposed(),(0,Jt.M)(this,t)};const ca=(0,O.op)({localResponseNormalization_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const o=(0,D.YT)(t,"x","localResponseNormalization");_.vA(4===o.rank||3===o.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(o.rank,"."))),_.vA(_.E6(e),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(e,".")));let i=o,c=!1;3===o.rank&&(c=!0,i=(0,x.t)(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const l={x:i},u={depthRadius:e,bias:n,alpha:a,beta:r},h=F.T2.runKernel(s.jM4,l,u);return c?(0,x.t)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});(0,Tn.tp)().prototype.localResponseNormalization=function(t,e,n,a){return this.throwIfDisposed(),ca(this,t,e,n,a)};var la=n(1839),ua=n(9973);const ha=(0,O.op)({logSigmoid_:function(t){const e=(0,D.YT)(t,"x","logSigmoid");return(0,la._X)((t=>({value:(0,u.H)((0,ua.l)((0,u.H)(t))),gradFunc:e=>(0,o.l)(e,(0,Je.r)((0,u.H)(t)))})))(e)}});(0,Tn.tp)().prototype.logSigmoid=function(){return this.throwIfDisposed(),ha(this)};var da=n(71194);(0,Tn.tp)().prototype.logSoftmax=function(t){return this.throwIfDisposed(),(0,da.H)(this,t)};var pa=n(42175);(0,Tn.tp)().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),(0,pa.V)(this,t,e)},(0,Tn.tp)().prototype.log=function(){return this.throwIfDisposed(),(0,ve.R)(this)};var fa=n(21386);(0,Tn.tp)().prototype.log1p=function(){return this.throwIfDisposed(),(0,fa.K)(this)},(0,Tn.tp)().prototype.logicalAnd=function(t){return this.throwIfDisposed(),(0,Y.n)(this,t)},(0,Tn.tp)().prototype.logicalNot=function(){return this.throwIfDisposed(),Pe(this)};const ga=(0,O.op)({logicalOr_:function(t,e){const n=(0,D.YT)(t,"a","logicalOr","bool"),a=(0,D.YT)(e,"b","logicalOr","bool");(0,b.assertAndGetBroadcastShape)(n.shape,a.shape);const r={a:n,b:a};return F.T2.runKernel(s.LXA,r)}});(0,Tn.tp)().prototype.logicalOr=function(t){return this.throwIfDisposed(),ga(this,t)};const ma=(0,O.op)({logicalXor_:function(t,e){const n=(0,D.YT)(t,"a","logicalXor","bool"),a=(0,D.YT)(e,"b","logicalXor","bool");return(0,b.assertAndGetBroadcastShape)(n.shape,a.shape),(0,Y.n)(ga(t,e),Pe((0,Y.n)(t,e)))}});(0,Tn.tp)().prototype.logicalXor=function(t){return this.throwIfDisposed(),ma(this,t)},(0,Tn.tp)().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),(0,W.N)(this,t,e,n)};var ba=n(6044);(0,Tn.tp)().prototype.maxPool=function(t,e,n,a){return this.throwIfDisposed(),(0,ba.j)(this,t,e,n,a)};var xa=n(60891);(0,Tn.tp)().prototype.max=function(t,e){return this.throwIfDisposed(),(0,xa.T)(this,t,e)},(0,Tn.tp)().prototype.maximum=function(t){return this.throwIfDisposed(),(0,xn.P)(this,t)};var ya=n(55396);(0,Tn.tp)().prototype.mean=function(t,e){return this.throwIfDisposed(),(0,ya.i)(this,t,e)};var va=n(21465);(0,Tn.tp)().prototype.min=function(t,e){return this.throwIfDisposed(),(0,va.j)(this,t,e)};var wa=n(6561);(0,Tn.tp)().prototype.minimum=function(t){return this.throwIfDisposed(),(0,wa.B)(this,t)};const ka=(0,O.op)({mirrorPad_:function(t,e,n){_.vA("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const a=(0,D.YT)(t,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");_.vA(e.length===a.rank,(()=>"Padding doesn't match input. Must be ".concat(a.rank,". ")+"Got ".concat(e.length,".")));const r="reflect"===n?1:0;for(let s=0;s<a.rank;s++)_.vA(2===e[s].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),_.vA(e[s][0]>=0&&e[s][0]<=a.shape[s]-r&&e[s][1]>=0&&e[s][1]<=a.shape[s]-r,(()=>"Padding in dimension ".concat(s," cannot be greater than or equal ")+"to ".concat(a.shape[s]-r," or less than 0 for input of ")+"shape ".concat(a.shape)));const o={paddings:e,mode:n},i={x:a};return F.T2.runKernel(s.x7F,i,o)}});(0,Tn.tp)().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),ka(this,t,e)};const Sa=(0,O.op)({mod_:function(t,e){let n=(0,D.YT)(t,"a","mod"),a=(0,D.YT)(e,"b","mod");[n,a]=(0,Ln.makeTypesMatch)(n,a);const r={a:n,b:a};return F.T2.runKernel(s.BLA,r)}});(0,Tn.tp)().prototype.mod=function(t){return this.throwIfDisposed(),Sa(this,t)},(0,Tn.tp)().prototype.mul=function(t){return this.throwIfDisposed(),(0,o.l)(this,t)},(0,Tn.tp)().prototype.neg=function(){return this.throwIfDisposed(),(0,u.H)(this)},(0,Tn.tp)().prototype.norm=function(t,e,n){return this.throwIfDisposed(),(0,Xn.x)(this,t,e,n)};var Ta=n(50135);(0,Tn.tp)().prototype.notEqual=function(t){return this.throwIfDisposed(),(0,Ta.E)(this,t)};var Ia=n(26865);(0,Tn.tp)().prototype.oneHot=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),(0,Ia.M)(this,t,e,n)};var Ca=n(64100);(0,Tn.tp)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,Ca.P)(this)},(0,Tn.tp)().prototype.pad=function(t,e){return this.throwIfDisposed(),(0,qe.e)(this,t,e)};const Na=(0,O.op)({pool_:function(t,e,n,a,s,r,o){null==s&&(s=[1,1]),null==r&&(r=1),0===a&&(a="valid");const i=(0,D.YT)(t,"x","maxPool");let c=i,l=!1;3===i.rank&&(l=!0,c=(0,x.t)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),_.vA(L.G0(r,s),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(r," and dilations '").concat(s,"'")));const u=L.E6(c.shape,e,r,s,a),h=[u.dilationHeight,u.dilationWidth];let d;d="same"===a?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))),a=n.map((t=>t-1)),s=a.map((t=>Math.floor(t/2))),r=a.map(((t,e)=>t-s[e]));return a.map(((t,e)=>[s[e],r[e]]))}([u.filterHeight,u.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,g]=function(t,e,n){const a=n.map((t=>t[0])),s=n.map((t=>t[1])),r=t.concat(a,s),o=e.map(((t,e)=>(t-r[e]%t)%t)),i=s.map(((t,e)=>t+o[e])),c=e.map(((t,e)=>[a[e],i[e]])),l=e.map(((t,e)=>[0,o[e]]));return[c,l]}([u.inHeight,u.inWidth],h,d),m=p?a:"valid",b=p?c:V(c,h,f),y=("avg"===n?()=>(0,zn.$)(b,e,r,m,o):()=>(0,ba.j)(b,e,r,m,o))(),v=p?y:tn(y,h,g);return l?(0,x.t)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}});(0,Tn.tp)().prototype.pool=function(t,e,n,a,s,r){return this.throwIfDisposed(),Na(this,t,e,n,a,s,r)},(0,Tn.tp)().prototype.pow=function(t){return this.throwIfDisposed(),(0,we.n)(this,t)};var Aa=n(99855);(0,Tn.tp)().prototype.prelu=function(t){return this.throwIfDisposed(),(0,Aa.N)(this,t)};const Ea=(0,O.op)({prod_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=(0,D.YT)(t,"x","prod");"bool"===a.dtype&&(a=(0,r.w)(a,"int32"));const o={x:a},i={axis:e,keepDims:n};return F.T2.runKernel(s.kdj,o,i)}});(0,Tn.tp)().prototype.prod=function(t,e){return this.throwIfDisposed(),Ea(this,t,e)};const Ra=(0,O.op)({reciprocal_:function(t){const e={x:(0,D.YT)(t,"x","reciprocal")};return F.T2.runKernel(s.huO,e)}});(0,Tn.tp)().prototype.reciprocal=function(){return this.throwIfDisposed(),Ra(this)};var Fa=n(85251);(0,Tn.tp)().prototype.relu=function(){return this.throwIfDisposed(),(0,Fa.V)(this)};var Da=n(99721);(0,Tn.tp)().prototype.relu6=function(){return this.throwIfDisposed(),(0,Da.j)(this)},(0,Tn.tp)().prototype.reshapeAs=function(t){return this.throwIfDisposed(),(0,x.t)(this,t.shape)},(0,Tn.tp)().prototype.reshape=function(t){return this.throwIfDisposed(),(0,x.t)(this,t)};var _a=n(22214);(0,Tn.tp)().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),(0,_a.v)(this,t,e,n)};var La=n(92823);(0,Tn.tp)().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),(0,La.b)(this,t,e,n)},(0,Tn.tp)().prototype.reverse=function(t){return this.throwIfDisposed(),(0,Le.B)(this,t)};var Oa=n(49486);(0,Tn.tp)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Oa.z)(this)};var Ma=n(96509);(0,Tn.tp)().prototype.round=function(){return this.throwIfDisposed(),(0,Ma.L)(this)},(0,Tn.tp)().prototype.rsqrt=function(){return this.throwIfDisposed(),Et(this)};var za=n(42022);(0,Tn.tp)().prototype.selu=function(){return this.throwIfDisposed(),(0,za.W)(this)};var Pa=n(63117);(0,Tn.tp)().prototype.separableConv2d=function(t,e,n,a,s,r){return this.throwIfDisposed(),(0,Pa.w)(this,t,e,n,a,s,r)},(0,Tn.tp)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,Je.r)(this)};const Ba=(0,O.op)({sign_:function(t){const e={x:(0,D.YT)(t,"x","sign")};return F.T2.runKernel(s.YVe,e)}});(0,Tn.tp)().prototype.sign=function(){return this.throwIfDisposed(),Ba(this)},(0,Tn.tp)().prototype.sin=function(){return this.throwIfDisposed(),lt(this)},(0,Tn.tp)().prototype.sinh=function(){return this.throwIfDisposed(),ht(this)},(0,Tn.tp)().prototype.slice=function(t,e){return this.throwIfDisposed(),(0,ce.d)(this,t,e)};var Wa=n(86719);(0,Tn.tp)().prototype.softmax=function(t){return this.throwIfDisposed(),(0,Wa.V)(this,t)},(0,Tn.tp)().prototype.softplus=function(){return this.throwIfDisposed(),(0,ua.l)(this)},(0,Tn.tp)().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),V(this,t,e)},(0,Tn.tp)().prototype.split=function(t,e){return this.throwIfDisposed(),(0,$.l)(this,t,e)},(0,Tn.tp)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,d.R)(this)},(0,Tn.tp)().prototype.square=function(){return this.throwIfDisposed(),(0,p.E)(this)};var Ua=n(30208);(0,Tn.tp)().prototype.squaredDifference=function(t){return this.throwIfDisposed(),(0,Ua.P)(this,t)};var Va=n(60613);(0,Tn.tp)().prototype.squeeze=function(t){return this.throwIfDisposed(),(0,Va.r)(this,t)},(0,Tn.tp)().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Tn.qY?[this,t]:[this,...t];return(0,Dt.t)(n,e)},(0,Tn.tp)().prototype.step=function(t){return this.throwIfDisposed(),(0,i.P)(this,t)};const Ga=(0,O.op)({stridedSlice_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,l=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const u={x:(0,D.YT)(t,"x","stridedSlice","string_or_numeric")},h={begin:e,end:n,strides:a,beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:c,shrinkAxisMask:l};return F.T2.runKernel(s.UcO,u,h)}});(0,Tn.tp)().prototype.stridedSlice=function(t,e,n,a,s,r,o,i){return this.throwIfDisposed(),Ga(this,t,e,n,a,s,r,o,i)},(0,Tn.tp)().prototype.sub=function(t){return this.throwIfDisposed(),(0,f.j)(this,t)},(0,Tn.tp)().prototype.sum=function(t,e){return this.throwIfDisposed(),(0,y.c)(this,t,e)};const Za=(0,O.op)({tan_:function(t){const e={x:(0,D.YT)(t,"x","tan","float32")};return F.T2.runKernel(s.oFs,e)}});(0,Tn.tp)().prototype.tan=function(){return this.throwIfDisposed(),Za(this)};var Ka=n(66532);(0,Tn.tp)().prototype.tanh=function(){return this.throwIfDisposed(),(0,Ka.y)(this)},(0,Tn.tp)().prototype.tile=function(t){return this.throwIfDisposed(),(0,Rt.V)(this,t)},(0,Tn.tp)().prototype.toBool=function(){return this.throwIfDisposed(),(0,r.w)(this,"bool")},(0,Tn.tp)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,r.w)(this,"float32")},(0,Tn.tp)().prototype.toInt=function(){return this.throwIfDisposed(),(0,r.w)(this,"int32")};const Ha=(0,O.op)({topk_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=(0,D.YT)(t,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=a.shape[a.shape.length-1];if(e<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(e));if(e>r)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(r,") ")+"but got ".concat(e));const o={x:a},i={k:e,sorted:n},[c,l]=F.T2.runKernel(s.TBb,o,i);return{values:c,indices:l}}});(0,Tn.tp)().prototype.topk=function(t,e){return this.throwIfDisposed(),Ha(this,t,e)},(0,Tn.tp)().prototype.transpose=function(t){return this.throwIfDisposed(),(0,gt.m)(this,t)};const ja=(0,O.op)({unique_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,D.YT)(t,"x","unique","string_or_numeric");(0,_.vA)(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},r={axis:e},[o,i]=F.T2.runKernel(s.EwU,a,r);return{values:o,indices:i}}});(0,Tn.tp)().prototype.unique=function(t){return this.throwIfDisposed(),ja(this,t)},(0,Tn.tp)().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),_t(this,t,e)},(0,Tn.tp)().prototype.unstack=function(t){return this.throwIfDisposed(),(0,be.K)(this,t)},(0,Tn.tp)().prototype.where=function(t,e){return this.throwIfDisposed(),(0,Q._)(t,this,e)},(0,Tn.tp)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,k.P)(this)};class qa extends Error{constructor(t){super(t),Object.setPrototypeOf(this,qa.prototype)}}class Ya extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ya.prototype)}}class Qa extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Qa.prototype)}}class Xa extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Xa.prototype)}}class Ja extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ja.prototype)}}Error;class $a{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const t=this.cache.keys().next().value;this.cache.delete(t)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(t,"."));if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const t=this.cache.keys().next().value;this.cache.delete(t)}this.maxEntries=t}}function ts(t,e){if(Array.isArray(t)){let n=[];for(let a=0;a<e;a++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function es(t,e){if(!t)throw new Ja(e)}function ns(t,e){let n=0;for(const a of t)a===e&&n++;return n}function as(t){return 1===t.length?t[0]:t}function ss(t){return Array.isArray(t)?t:[t]}function rs(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function os(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let is={};function cs(t){if(null===t||void 0===t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function ls(t){if(null!=t&&"object"===typeof t)if(Array.isArray(t))t.forEach((t=>ls(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"===typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!==typeof e.value?ls(e):t[n]=e.value)}}}function us(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof t){const s=t;let r;if(s in n)r=n[s];else if(s in is)r=is[s];else if(r=e[s],null==r)throw new Qa("Unknown ".concat(a,": ").concat(t,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return r}{const r=t;if(null==r.className||null==r.config)throw new Qa("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(r),".\n")+"'className' and 'config' must set.");const o=r.className;let i,c;if(o in n?[i,c]=n[o]:o in is?[i,c]=is.className:o in e&&([i,c]=e[o]),null==i)throw new Qa("Unknown ".concat(a,": ").concat(o,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const t={};for(const n of Object.keys(is))t[n]=is[n];for(const s of Object.keys(n))t[s]=n[s];r.config.customObjects=t;const e=Object.assign({},is);for(const s of Object.keys(n))is[s]=n[s];ls(r.config);const a=c(i,r.config,n,s);return is=Object.assign({},e),a}{const t=Object.assign({},is);for(const a of Object.keys(n))is[a]=n[a];const e=new i(r.config);return is=Object.assign({},t),e}}}function hs(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function ds(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function ps(t){if(null==t)throw new Qa("Invalid value in obj: ".concat(JSON.stringify(t)));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function fs(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new Qa("".concat(n," is not a valid ").concat(e,".  Valid values are ").concat(t," or null/undefined."))}function gs(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return es(n>=0),es(a>=n),Array.isArray(t)&&t.length>=n&&t.length<=a&&t.every((t=>typeof t===e))}function ms(t,e){Array.isArray(t)?(a.ZSL.assert(t.length>0,(()=>"".concat(e," is unexpectedly an empty array."))),t.forEach(((t,n)=>ms(t,"element ".concat(n+1," of ").concat(e))))):a.ZSL.assert(Number.isInteger(t)&&t>0,(()=>"Expected ".concat(e," to be a positive integer, but got ")+"".concat(bs(t),".")))}function bs(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>bs(t))).join(",")+"]":"string"===typeof t?'"'.concat(t,'"'):"".concat(t)}function xs(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}let ys=0;function vs(){return ys++}const ws={};function ks(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return t in ws||(ws[t]=0),ws[t]+=1,t+ws[t].toString()}const Ss=["channelsFirst","channelsLast"],Ts=["nearest","bilinear"],Is=["valid","same","causal"],Cs=["max","avg"],Ns=["sum","mul","concat","ave"],As=new Map;function Es(t){fs(Ss,"DataFormat",t)}function Rs(t){fs(Is,"PaddingMode",t)}function Fs(t){fs(Cs,"PoolMode",t)}const Ds=[];function _s(t,e){Ds.push(t);try{const t=e();return Ds.pop(),t}catch(n){throw Ds.pop(),n}}function Ls(t){if(!zs(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Ds.length?"":Ds.join("/")+"/")+t}function Os(t){if(!zs(t))throw new Error("Not a valid tensor name: '"+t+"'");As.has(t)||As.set(t,0);const e=As.get(t);if(As.set(t,As.get(t)+1),e>0){const n="".concat(t,"_").concat(e);return As.set(n,1),n}return t}const Ms=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function zs(t){return!!t.match(Ms)}function Ps(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let a=1;for(let s=e;s<n;++s)a*=t[s];return a}function Bs(t){if(0===t.length)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const a=t[n];a<e&&(e=a)}return e}function Ws(t){if(0===t.length)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const a=t[n];a>e&&(e=a)}return e}function Us(t,e){if(e<t)throw new Qa("end (".concat(e,") < begin (").concat(t,") is forbidden."));const n=[];for(let a=t;a<e;++a)n.push(a);return n}let Vs;function Gs(){return null==Vs&&(Vs=(0,a.Hs)().epsilon()),Vs}function Zs(t,e){return a.wgE(t,e)}function Ks(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),a.tQQ(t,n)}function Hs(t,e,n){return(0,a.DZQ)((()=>{switch(t.rank){case 1:return a.Q$M(t,e,n);case 2:return a.zAd(t,[e,0],[n,t.shape[1]]);case 3:return a.wck(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return a.R0O(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return a.dik(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return a.dik(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new Qa("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(t.rank))}}))}function js(t,e,n){return(0,a.DZQ)((()=>{switch(t.rank){case 1:return a.Q$M(t,e,n);case 2:return a.zAd(t,[0,e],[t.shape[0],n]);case 3:return a.wck(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return a.R0O(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new Qa("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(t.rank))}}))}function qs(t,e,n,s){return(0,a.DZQ)((()=>{switch(t.rank){case 1:return a.Q$M(t,e,n);case 2:switch(s){case 1:return Hs(t,e,n);case 2:return js(t,e,n);default:throw new Qa("The axis is not within the rank of the tensor "+"".concat(s))}case 3:switch(s){case 1:return Hs(t,e,n);case 2:return a.wck(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return js(t,e,n);default:throw new Qa("The axis is not within the rank of the tensor "+"".concat(s))}case 4:switch(s){case 1:return Hs(t,e,n);case 2:return a.R0O(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return a.R0O(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return js(t,e,n);default:throw new Qa("The axis is not within the rank of the tensor "+"".concat(s))}default:throw new Qa("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(t.rank))}}))}function Ys(t){let e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(e=t[0].rank,n=0!==e?e:0),n===t[0].rank&&(n=-1),a.xWs(t,n)}function Qs(t,e){switch(t.rank){case 1:return a.I1m([t,e]);case 2:return a.RPU([t,e],0);case 3:return a.O5O([t,e],0);case 4:return a.P1l([t,e],0);default:throw new Qa("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(t.rank))}}function Xs(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new Qa("The length of input n (".concat(e.length,") does not match ")+"the number of dimensions in input x (".concat(t.rank,")"));return a.Vsq(t,e)}function Js(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;return a.FE$(t,e,n,s,r)}function $s(t,e,n,s){if(t.rank<2||e.rank<2)throw new Xa("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(t.shape," and y shape = ").concat(e.shape));if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Xa("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(t.shape," and ")+" y shape = ".concat(e.shape))}if(2===t.rank&&2===e.rank){const r=!1,o=!1;return a.cZk.matMul({a:t,b:e,transposeA:r,transposeB:o,bias:s?nr(t.rank,s,"channelsLast"):null,activation:n})}{const r=t.shape.slice(),o=r.pop();t=a.tQQ(t,[-1,o]);const i=e.shape.slice(),c=i.pop(),l=i.pop(),u=[...i,c],h=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=a.tQQ(a.mgz(e,h),[l,-1]);const d=[...r,...u],p=!1,f=!1;return a.tQQ(a.cZk.matMul({a:t,b:e,transposeA:p,transposeB:f,bias:s?nr(t.rank,s,"channelsLast"):null,activation:n}),d)}}function tr(t,e,n){return(0,a.DZQ)((()=>(e=Array.isArray(e)?(0,a.tGX)(e,"int32"):a.wgE(e,"int32"),a.kgh(t,e,n))))}function er(t){return a.lKK(t,t)}function nr(t,e,n){const s=e.shape;if(1!==e.rank&&e.rank!==t)throw new Qa("Unexpected bias dimensions: ".concat(e.rank)+"; expected it to be 1 or ".concat(t));if(5===t){if("channelsFirst"===n)return 1===s.length?a.tQQ(e,[1,s[0],1,1,1]):a.tQQ(e,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?a.tQQ(e,[1,1,1,1,s[0]]):a.tQQ(e,[1].concat(s))}else if(4===t){if("channelsFirst"===n)return 1===s.length?a.tQQ(e,[1,s[0],1,1]):a.tQQ(e,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?a.tQQ(e,[1,1,1,s[0]]):a.tQQ(e,[1].concat(s))}else if(3===t){if("channelsFirst"===n)return 1===s.length?a.tQQ(e,[1,s[0],1]):a.tQQ(e,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?a.tQQ(e,[1,1,s[0]]):a.tQQ(e,[1].concat(s))}else if(t<3)return e;throw new Qa("Unsupported input rank by biasAdd: ".concat(e.rank))}function ar(t,e,n){return(0,a.DZQ)((()=>(null==n&&(n="channelsLast"),Es(n),a.WQq(t,nr(t.rank,e,n)))))}function sr(t,e,n,s){return(0,a.DZQ)((()=>a.EZY(t,e,n,s)))}function rr(t,e){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?t():e()}const or=["fanIn","fanOut","fanAvg"],ir=["normal","uniform","truncatedNormal"];class cr extends a.JFn.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class lr extends cr{apply(t,e){return(0,a.Ul9)(t,e)}}lr.className="Zeros",a.JFn.registerClass(lr);class ur extends cr{apply(t,e){return(0,a.SaS)(t,e)}}ur.className="Ones",a.JFn.registerClass(ur);class hr extends cr{constructor(t){if(super(),"object"!==typeof t)throw new Qa("Expected argument of type ConstantConfig but got ".concat(t));if(void 0===t.value)throw new Qa("config must have value set but got ".concat(t));this.value=t.value}apply(t,e){return(0,a.DZQ)((()=>(0,a.lKK)((0,a.d_2)(this.value),(0,a.SaS)(t,e))))}getConfig(){return{value:this.value}}}hr.className="Constant",a.JFn.registerClass(hr);class dr extends cr{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return(0,a.YeY)(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}dr.className="RandomUniform",a.JFn.registerClass(dr);class pr extends cr{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Xa("randomNormal does not support dType ".concat(e,"."));return Js(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}pr.className="RandomNormal",a.JFn.registerClass(pr);class fr extends cr{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Xa("truncatedNormal does not support dType ".concat(e,"."));return(0,a.efE)(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}fr.className="TruncatedNormal",a.JFn.registerClass(fr);class gr extends cr{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return(0,a.DZQ)((()=>{if(2!==t.length||t[0]!==t[1])throw new Qa("Identity matrix initializer can only be used for 2D square matrices.");return(0,a.lKK)(this.gain,(0,a.y5U)(t[0]))}))}getConfig(){return{gain:this.gain}}}gr.className="Identity",a.JFn.registerClass(gr);class mr extends cr{constructor(t){if(super(),t.scale<0)throw new Qa("scale must be a positive float. Got: ".concat(t.scale));var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,fs(or,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){fs(ir,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t){let e,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(Es(a),2===t.length)e=t[0],n=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===a){const a=Ps(t,2);e=t[1]*a,n=t[0]*a}else if("channelsLast"===a){const a=Ps(t,0,t.length-2);e=t[t.length-2]*a,n=t[t.length-1]*a}}else{const a=Ps(t);e=Math.sqrt(a),n=Math.sqrt(a)}return[e,n]}(t),s=n[0],r=n[1];let o=this.scale;if("fanIn"===this.mode?o/=Math.max(1,s):"fanOut"===this.mode?o/=Math.max(1,r):o/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(o);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Xa("".concat(this.getClassName()," does not support dType ").concat(e,"."));return(0,a.efE)(t,0,n,e,this.seed)}{const n=Math.sqrt(3*o);return(0,a.YeY)(t,-n,n,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}mr.className="VarianceScaling",a.JFn.registerClass(mr);class br extends mr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return mr.className}}br.className="GlorotUniform",a.JFn.registerClass(br);class xr extends mr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return mr.className}}xr.className="GlorotNormal",a.JFn.registerClass(xr);class yr extends mr{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return mr.className}}yr.className="HeNormal",a.JFn.registerClass(yr);class vr extends mr{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return mr.className}}vr.className="HeUniform",a.JFn.registerClass(vr);class wr extends mr{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return mr.className}}wr.className="LeCunNormal",a.JFn.registerClass(wr);class kr extends mr{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return mr.className}}kr.className="LeCunUniform",a.JFn.registerClass(kr);class Sr extends cr{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,e){return(0,a.DZQ)((()=>{if(t.length<2)throw new Xa("Shape must be at least 2D.");if("int32"!==e&&"float32"!==e&&void 0!==e)throw new TypeError("Unsupported data type ".concat(e,"."));const n=a.ZSL.sizeFromShape(t.slice(0,-1)),s=t[t.length-1],r=n*s;r>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(r,") elements: ")+"Slowness may result.");const o=Js([Math.max(s,n),Math.min(s,n)],0,1,e,this.seed),i=a.mPL.qr(o,!1);let c=i[0];const l=i[1].flatten().stridedSlice([0],[Math.min(s,n)*Math.min(s,n)],[Math.min(s,n)+1]);return c=(0,a.lKK)(c,l.sign()),n<s&&(c=c.transpose()),(0,a.lKK)((0,a.d_2)(this.gain),c.reshape(t))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Sr.className="Orthogonal",a.JFn.registerClass(Sr);const Tr={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ir(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return us(t,a.JFn.SerializationMap.getMap().classNameMap,e,"initializer")}function Cr(t){return cs(t)}function Nr(t){if("string"===typeof t){const e=t in Tr?Tr[t]:t;if("GlorotNormal"===e)return new xr;if("GlorotUniform"===e)return new br;if("HeNormal"===e)return new yr;if("HeUniform"===e)return new vr;if("LeCunNormal"===e)return new wr;if("LeCunUniform"===e)return new kr;{const t={};return t.className=e,t.config={},Ir(t)}}return t instanceof cr?t:Ir(t)}function Ar(t){return Array.isArray(t)&&Array.isArray(t[0])}function Er(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Rr(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new Qa("Expected Tensor length to be 1; got ".concat(t.length));e=t[0]}else e=t;return e}function Fr(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new Qa("Expected exactly 1 Shape; got ".concat(t.length))}return t}function Dr(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}const _r="Variable";class Lr{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:_r,s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=vs(),n=null==n?_r:n,this.originalName=Ls(n),this.name=Os(this.originalName),this.trainable_=s,this.constraint=r,this.val=a.bvq(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Or(t){return t.map((t=>t.read()))}function Mr(t){t.forEach((t=>{t[0].write(t[1])}))}class zr{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Pr{constructor(t,e,n,a,s,r,o){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=a,this.callArgs=s,this.outputTensorIndex=o,this.id=vs(),null!=r&&(this.originalName=Ls(r),this.name=Os(this.originalName)),this.rank=e.length}}let Br=0;class Wr{constructor(t,e){this.callArgs=e,this.id=Br++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Ur=0;class Vr extends a.JFn.Serializable{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Ur++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=rs(t)+"_"+ks(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Ya("The layer has never been called "+"and thus has no defined ".concat(e,"."));if(this.inboundNodes.length<=t)throw new Qa("Asked to get ".concat(e," at node ").concat(t,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[t]}getInputAt(t){return as(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return as(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new qa("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new qa("Layer ".concat(this.name)+" is not connected, no input to return.");return as(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new qa("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new qa("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return as(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){const e=ss(t);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=ss(this.inputSpec);if(e.length!==n.length)throw new Qa("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(e.length," input tensors. ")+"Input received: ".concat(t));for(let a=0;a<e.length;a++){const t=e[a],s=n[a];if(null==s)continue;const r=t.rank;if(null!=s.ndim&&r!==s.ndim)throw new Qa("Input ".concat(a," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(s.ndim,", found ndim=").concat(r));if(null!=s.maxNDim&&r>s.maxNDim)throw new Qa("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(s.maxNDim,", found ndim=").concat(r));if(null!=s.minNDim&&r<s.minNDim)throw new Qa("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(s.minNDim,", found ndim=").concat(r,"."));if(null!=s.dtype&&t.dtype!==s.dtype)throw new Qa("Input ".concat(a," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(s.dtype,", found dtype=").concat(t.dtype,"."));if(s.axes){const e=t.shape;for(const t in s.axes){const n=Number(t),r=s.axes[t],o=n>=0?e[n]:e[e.length+n];if(null!=r&&-1===[r,null].indexOf(o))throw new Qa("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(r," but got shape ").concat(e,"."))}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const n=s.shape[e],r=t.shape[e];if(null!=n&&null!=r&&n!==r)throw new Qa("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(s.shape,", ")+"found shape=".concat(t.shape,"."))}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=ss(t),a=function(t){let e=!0;for(const n of ss(t))if(!(n instanceof Pr)){e=!1;break}return e}(t),s=function(t){let e=!0;for(const n of ss(t))if(n instanceof Pr){e=!1;break}return e}(t);if(a===s)throw new Qa("Arguments to apply() must be all SymbolicTensors or all Tensors");return _s(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of ss(t))e.push(n.shape);this.build(as(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let a=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,a);const s=ss(a),r=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),r.push(t);if(a=as(r),null!=this.activityRegularizer)throw new Xa("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(t){t=ss(t);const e=[];for(const n of t)e.push(n.shape);return as(e)}(t),a=this.computeOutputShape(n);let s;const r="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new Pr(r,n,this,ss(t),e,this.name,a))):new Pr(r,a,this,ss(t),e,this.name),this.addInboundNode(t,s,null,null,n,a,e),this._refCount++,null!=this.activityRegularizer)throw new Xa("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(t),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let e=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=t[a]&&t[a]!==n&&(e=!0)})),e&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(t),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new qa("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new qa("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new Ya("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return Dr(this.weights)}build(t){this.built=!0}getWeights(){return Or(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(t){(0,a.DZQ)((()=>{const e=this.weights;if(e.length!==t.length)throw new Qa('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(t.length,", ")+"but the layer was expecting ".concat(e.length," weights. ")+"Provided weights: ".concat(t,"..."));if(0===e.length)return;const n=[],s=Or(e);for(let r=0;r<s.length;++r){const o=s[r],i=e[r],c=t[r];if(!a.ZSL.arraysEqual(o.shape,c.shape))throw new Qa("Layer weight shape ".concat(o.shape," ")+"not compatible with provided weight shape ".concat(c.shape));n.push([i,c])}Mr(n)}))}addWeight(t,e,n,a,s,r,o,i){if(-1!==this._addedWeightNames.indexOf(t))throw new Qa("Duplicate weight name ".concat(t," for layer ").concat(this.name));this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=i?i():Nr("zeros"));const c=a.apply(e,n),l=new Lr(c,n,t,r,o);return c.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==r&&(r=!0),r?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=ss(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");e.forEach((t=>{if(null!=t)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")}))}return null}return e}setMaskMetadata(t,e,n){if(!this.supportsMasking)return;const a=this.computeMask(t,n),s=ss(e),r=ss(a);if(s.length!==r.length)throw new Error("".concat(this.name," outputs ").concat(s.length," tensors ")+"but ".concat(s.length," masks for those tensors"));for(let o=0;o<s.length;o++)s[o].kerasMask=r[o]}addInboundNode(t,e,n,a,s,r){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=ss(t);e=ss(e),n=ss(n),a=ss(a),s=Er(s),r=Er(r);const c=[],l=[],u=[];for(const h of i)c.push(h.sourceLayer),l.push(h.nodeIndex),u.push(h.tensorIndex);new Wr({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:u,inputTensors:i,outputTensors:e,inputMasks:n,outputMasks:a,inputShapes:s,outputShapes:r},o);for(let h=0;h<e.length;h++)e[h].sourceLayer=this,e[h].nodeIndex=this.inboundNodes.length-1,e[h].tensorIndex=h}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let t=0;return 0===--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function Gr(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const a=Gr(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of a)-1===e.indexOf(t)&&e.push(t)}return e}}}class Zr extends Vr{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:ks("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new Qa("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new Qa("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new Qa("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const a=new Pr(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Wr({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Qa("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Zr.className="InputLayer",a.JFn.registerClass(Zr);class Kr{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Kr)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new Qa("Duplicate key: name=".concat(t.name,", id=").concat(t.id));return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return(0,a.wgE)(e,t.dtype)}catch(n){throw new Qa("The dtype of the feed (".concat(e.dtype,") can not be cast to the dtype ")+"of the key '".concat(t.name,"' (").concat(t.dtype,")."))}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Pr){if(null==this.id2Value[t.id])throw new Qa("Nonexistent key: ".concat(t.name));return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new Qa("Feed dict has no SymbolicTensor name: ".concat(t));return this.id2Value[e]}}getMask(t){if(t instanceof Pr){if(null==this.id2Value[t.id])throw new Qa("Nonexistent key: ".concat(t.name));return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new Qa("Feed dict has no SymbolicTensor name: ".concat(t));return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&(0,a.ASo)(this.id2Mask)}}const Hr=new $a,jr=new $a;function qr(t,e,n,s){const r=null!=n&&n.training,o=Array.isArray(t),i=o?t:[t],c=i.map((t=>t.name)),l=[],u=e.names();for(const a of c)-1!==u.indexOf(a)?l.push(e.getValue(a)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const h=c.join(",")+"|"+e.names().sort().join(",");let d,p=Hr.get(h);if(null==p){const t=function(t,e){a.ZSL.assert(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===t.length){const a=Qr(t[0],e);n=a.sorted,s=a.recipientMap}else{const a=new Set;for(const r of t){const{sorted:t,recipientMap:o}=Qr(r,e);for(const e of t)a.has(e.name)||(n.push(e),a.add(e.name));for(const e in o)null==s[e]&&(s[e]=new Set),o[e].forEach((t=>s[e].add(t)))}}return{sorted:n,recipientCounts:Yr(s)}}(i,e);p=t.sorted,d=t.recipientCounts,Hr.put(h,p),jr.put(h,d)}d={},r||Object.assign(d,jr.get(h));const f=new Kr(e);for(let g=0;g<p.length;++g){if(null!=s){const t=(0,a.m1Z)().numTensors;t>s.maxNumTensors&&(s.maxNumTensors=t),t<s.minNumTensors&&(s.minNumTensors=t)}const t=p[g],o=t.sourceLayer;if(o instanceof Zr)continue;const i=[],u=[],h=[];let m=!1;for(const n of t.inputs){const t=f.getValue(n),a=f.getMask(n);i.push(t),u.push(a),null!=a&&(m=!0),r||(d[n.name]--,0!==d[n.name]||e.hasKey(n)||-1!==c.indexOf(n.name)||t.isDisposed||!0===n.sourceLayer.stateful||h.push(t))}m&&((n=n||{}).mask=u[0]);const b=ss(o.apply(i,n));let x=null;o.supportsMasking&&(x=o.computeMask(i,u));const y=Xr(t),v=Array.isArray(y)?y:[y];for(let e=0;e<v.length;++e){f.hasKey(v[e])||f.add(v[e],b[e],Array.isArray(x)?x[0]:x);const t=c.indexOf(v[e].name);-1!==t&&(l[t]=b[e])}r||(0,a.ASo)(h)}return f.disposeMasks(),o?l:l[0]}function Yr(t){const e={};for(const n in t)e[n]=t[n].size;return e}function Qr(t,e){const n=new Set,a=[],s={};for(const i of e.names())n.add(i);const r=[],o=[];for(r.push(t);r.length>0;){const t=r[r.length-1];if(n.has(t.name)){r.pop();continue}const e=o[o.length-1]===r.length-1;if(0===t.inputs.length||e)r.pop(),a.push(t),n.add(t.name),e&&o.pop();else{o.push(r.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||r.push(e)}}return{sorted:a,recipientMap:s}}function Xr(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const a of t.sourceLayer.inboundNodes[e].outputTensors)if(a.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}function Jr(t,e){return(0,a.DZQ)((()=>a.RZD(a.czq(a.lKK(t,t),e,!0))))}(0,a._K2)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(t){null!=Hr&&Hr.setMaxEntries(t),null!=jr&&jr.setMaxEntries(t)}));class $r extends a.JFn.Serializable{getConfig(){return{}}}class to extends $r{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return(0,a.DZQ)((()=>{const e=Jr(t,this.axis),n=a.zQh(e,0,this.maxValue);return a.lKK(t,a.y4m(n,a.WQq(Gs(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}to.className="MaxNorm",a.JFn.registerClass(to);class eo extends $r{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return(0,a.DZQ)((()=>a.y4m(t,a.WQq(Gs(),Jr(t,this.axis)))))}getConfig(){return{axis:this.axis}}}eo.className="UnitNorm",a.JFn.registerClass(eo);class no extends $r{apply(t){return a.VVh(t)}}no.className="NonNeg",a.JFn.registerClass(no);class ao extends $r{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return(0,a.DZQ)((()=>{const e=Jr(t,this.axis),n=a.WQq(a.lKK(this.rate,a.zQh(e,this.minValue,this.maxValue)),a.lKK(1-this.rate,e));return a.lKK(t,a.y4m(n,a.WQq(Gs(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ao.className="MinMaxNorm",a.JFn.registerClass(ao);const so={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ro(t){return cs(t)}function oo(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return us(t,a.JFn.SerializationMap.getMap().classNameMap,e,"constraint")}function io(t){if(null==t)return null;if("string"===typeof t){return oo({className:t in so?so[t]:t,config:{}})}return t instanceof $r?t:oo(t)}async function co(t){if(null==t)return;const e=[],n=[],s=[];for(const a in t){const r=t[a];if("number"!==typeof r){const t=r;e.push(t.data()),n.push(a),s.push(t)}}if(e.length>0){const r=await Promise.all(e);for(let e=0;e<r.length;++e)t[n[e]]=r[e][0];(0,a.ASo)(s)}}function lo(t){if(null!=t)for(const e in t){const n=t[e];"number"!==typeof n&&n.dispose()}}var uo;!function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(uo||(uo={}));class ho{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class po{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class fo extends ho{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const s in e){const t=e[s];if("number"===typeof t)this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+t*n;else{let e;s in this.totals?e=this.totals[s]:this.totals[s]=0;const r=(0,a.DZQ)((()=>(0,a.WQq)(this.totals[s],(0,a.lKK)(t,n))));this.totals[s]=r,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?e[n]=this.totals[n]/this.seen:(0,a.DZQ)((()=>{const t=(0,a.lKK)((0,a.y4m)(1,this.seen),this.totals[n]);e[n]=t,this.totals[n].dispose(),(0,a.aCs)(e[n])})))}}class go extends ho{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const n in e)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const s in this.history){const a=this.history[s];for(let r=0;r<a.length;++r)if("number"!==typeof a[r]){const o=a[r];t.push(o.data()),e.push(s),n.push(r)}}const a=await Promise.all(t);for(let s=0;s<a.length;++s){this.history[e[s]][n[s]].dispose(),this.history[e[s]][n[s]]=a[s][0]}}}class mo extends ho{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||a.dA1,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");a.ZSL.isNumber(this.yieldEvery)&&(this.maybeWait=function(t,e,n){let s,r=null!=n?n():a.ZSL.now();return function(){const o=null!=n?n():a.ZSL.now();return o-r<e||(r=o,s=t(...arguments)),s}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const a=[];null!=this.yield&&(await co(n),a.push(this.yield(t,e,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await co(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await co(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await co(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await co(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):a.ZSL.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await co(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await co(t),await this.trainEnd(t))}}function bo(t,e){if(null==t&&(t={}),t instanceof ho)return[t];if(Array.isArray(t)&&t[0]instanceof ho)return t;return ss(t).map((t=>new mo(t,e)))}class xo{constructor(){}static registerCallbackConstructor(t,e){a.ZSL.assert(t>=0&&Number.isInteger(t),(()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(t))),xo.checkForDuplicate(e),null==xo.constructors[t]&&(xo.constructors[t]=[]),xo.constructors[t].push(e)}static checkForDuplicate(t){for(const e in xo.constructors){xo.constructors[+e].forEach((e=>{if(e===t)throw new Qa("Duplicate callback constructor.")}))}}static clear(){xo.constructors={}}static createCallbacks(t){const e=[];for(const n in xo.constructors){const a=+n;t>=a&&e.push(...xo.constructors[a])}return e.map((t=>new t))}}function yo(t,e,n,a,s,r,o,i,c){const l=new go,u=[new fo,...xo.createCallbacks(e)];null!=t&&u.push(...t),u.push(l);const h=new po(u);return h.setParams({epochs:n,initialEpoch:a,samples:s,steps:r,batchSize:o,verbose:e,doValidation:i,metrics:c}),{callbackList:h,history:l}}function vo(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return us(t,a.JFn.SerializationMap.getMap().classNameMap,e,"layer",n)}function wo(t,e){return(0,a.DZQ)((()=>{"float32"!==t.dtype&&(t=a.wgE(t,"float32"));const n=a.czq(er(t),e,!0),s=a.GSj(n.shape,Gs()),r=a.RZD(a.PhQ(n,s));return a.y4m(t,r)}))}function ko(t,e){return(0,a.DZQ)((()=>a.i2o(er(a.jbE(e,t)),-1)))}function So(t,e){return(0,a.DZQ)((()=>a.i2o(a.tnl(a.jbE(e,t)),-1)))}function To(t,e){return(0,a.DZQ)((()=>{const n=a.jbE(t,e),s=a.zQh(a.tnl(t),Gs(),Number.MAX_VALUE),r=a.tnl(a.y4m(n,s));return a.lKK(100,a.i2o(r,-1))}))}function Io(t,e){return(0,a.DZQ)((()=>{const n=a.zQh(e,Gs(),Number.MAX_VALUE),s=a.Rm2(a.WQq(1,n)),r=a.zQh(t,Gs(),Number.MAX_VALUE),o=a.Rm2(a.WQq(1,r));return a.i2o(er(a.jbE(s,o)),-1)}))}function Co(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,a.DZQ)((()=>{if(n)e=a.Vs9(e);else{const t=a.czq(e,e.shape.length-1,!0);e=a.y4m(e,t)}return e=a.zQh(e,Gs(),1-Gs()),a.HZy(a.czq(a.lKK(a.wgE(t,"float32"),a.Rm2(e)),e.shape.length-1))}))}function No(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,a.DZQ)((()=>{const s=a.wgE(a.RIf(function(t){const e=[Ps(t.shape)];return a.tQQ(t,e)}(t)),"int32"),r=(e=a.zQh(e,Gs(),1-Gs())).shape;return Co(a.tQQ(a.Mw0(s,r[r.length-1]),r),e,n)}))}function Ao(t,e){return(0,a.DZQ)((()=>{let n;return n=a.zQh(e,Gs(),1-Gs()),n=a.Rm2(a.y4m(n,a.jbE(1,n))),a.i2o(function(t,e){if(!a.ZSL.arraysEqual(t.shape,e.shape))throw new Qa("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(t.shape)," and ").concat(JSON.stringify(e.shape)));return(0,a.DZQ)((()=>{const n=a.VVh(e),s=a.HZy(a.tnl(e));return a.WQq(a.jbE(n,a.lKK(e,t)),a.Kko(a.oNF(s)))}))}(t,n),-1)}))}function Eo(t,e){return(0,a.DZQ)((()=>{const n=a.zQh(t,Gs(),1),s=a.zQh(e,Gs(),1);return a.czq(a.lKK(t,a.Rm2(a.y4m(n,s))),-1)}))}function Ro(t,e){return(0,a.DZQ)((()=>{const n=wo(t,-1),s=wo(e,-1),r=a.lKK(n,s);return a.HZy(a.czq(r,-1))}))}xo.constructors={};const Fo={meanSquaredError:ko,meanAbsoluteError:So,meanAbsolutePercentageError:To,meanSquaredLogarithmicError:Io,squaredHinge:function(t,e){return(0,a.DZQ)((()=>{const n=a.PhQ(0,a.jbE(1,a.lKK(t,e)));return a.i2o(er(n),-1)}))},hinge:function(t,e){return(0,a.DZQ)((()=>{const n=a.PhQ(0,a.jbE(1,a.lKK(t,e)));return a.i2o(n,-1)}))},categoricalHinge:function(t,e){return(0,a.DZQ)((()=>{const n=a.czq(a.lKK(t,e),-1),s=a.T9B(a.lKK(a.jbE(1,t),e),-1);return a.PhQ(0,a.WQq(1,a.jbE(s,n)))}))},logcosh:function(t,e){return(0,a.DZQ)((()=>{const n=Math.log(2),s=a.jbE(e,t),r=a.jbE(a.WQq(s,a.lw0(a.lKK(-2,s))),n);return a.i2o(r,-1)}))},categoricalCrossentropy:Co,sparseCategoricalCrossentropy:No,binaryCrossentropy:Ao,kullbackLeiblerDivergence:Eo,poisson:function(t,e){return(0,a.DZQ)((()=>{const n=a.Rm2(a.WQq(Gs(),e));return a.i2o(a.jbE(e,a.lKK(t,n)),-1)}))},cosineProximity:Ro};function Do(t){if("string"===typeof t){if(t in Fo)return Fo[t];let e="Unknown loss ".concat(t);throw t.toLowerCase().includes("softmaxcrossentropy")&&(e="Unknown loss ".concat(t,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new Qa(e)}return t}function _o(t,e){return(0,a.DZQ)((()=>{const n=a.lKK(.5,a.P61(e)),s=Zs(a.rhj(e,n),t.dtype);return a.i2o(a.LCg(t,s),-1)}))}function Lo(t,e){return(0,a.DZQ)((()=>Zs(a.LCg(a.FLi(t,-1),a.FLi(e,-1)),"float32")))}function Oo(t,e){return(0,a.DZQ)((()=>a.wgE(a.czq(a.n76(a.LCg(t,1),a.LCg(e,1))),"float32")))}function Mo(t,e){return Ao(t,e)}function zo(t,e){return t.rank===e.rank&&(t=a.r2V(t,[t.rank-1])),(e=a.FLi(e,-1)).dtype!==t.dtype&&(e=a.wgE(e,t.dtype)),a.wgE(a.LCg(t,e),"float32")}const Po=Co,Bo=No,Wo={binaryAccuracy:_o,categoricalAccuracy:Lo,precision:function(t,e){return(0,a.DZQ)((()=>{const n=Oo(t,e),s=function(t,e){return(0,a.DZQ)((()=>a.wgE(a.czq(a.n76(a.LCg(t,0),a.LCg(e,1))),"float32")))}(t,e),r=a.WQq(n,s);return a.wgE(a._M9(a.rhj(r,0),a.y4m(n,r),0),"float32")}))},categoricalCrossentropy:Po,sparseCategoricalCrossentropy:Bo,mse:ko,MSE:ko,mae:So,MAE:So,mape:To,MAPE:To,cosine:Ro};function Uo(t){if("string"===typeof t&&t in Wo)return Wo[t];if("string"!==typeof t&&null!=t)return t;throw new Qa("Unknown metric ".concat(t))}function Vo(t){if(es(null!==t,"Unknown LossOrMetricFn ".concat(t)),"string"===typeof t)return t;{let e;for(const n of Object.keys(Fo))if(Fo[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Wo))if(Wo[n]===t){e=n;break}return void 0!==e?e:t.name}}const Go=1048576;function Zo(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t||"object"!==typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Ko(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>Go&&console.warn('User-defined metadata of model "'.concat(e,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(Go,"."))}}function Ko(t){if(null===t)return!0;if("object"===typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!==typeof n)return!1;if(!Ko(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Ko(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Ho(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const s=function(t){let e=!0;const n=[],a=[];for(const s in t.nodesByDepth)n.push(t.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){e=!1;break}a.push(...s)}if(e)for(const s of t.layers){let t=!1;for(const n of s.inboundNodes)if(-1!==a.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),r=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(s?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!s){r.push("Receives inputs"),o=[];for(const e in t.nodesByDepth)o.push(...t.nodesByDepth[e])}a("_".repeat(e)),jo(r,n,a),a("=".repeat(e));const i=t.layers;for(let u=0;u<i.length;++u)s?qo(i[u],n,a):Yo(i[u],n,o,a),a((u===i.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const c=function(t){let e;e=null!=t.collectedTrainableWeights?Dr(t.collectedTrainableWeights):Dr(t.trainableWeights);return e}(t),l=Dr(t.nonTrainableWeights);a("Total params: ".concat(c+l)),a("Trainable params: ".concat(c)),a("Non-trainable params: ".concat(l)),a("_".repeat(e))}function jo(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a="";for(let s=0;s<t.length;++s)s>0&&(a=a.slice(0,a.length-1)+" "),a+=t[s],a=a.slice(0,e[s]),a+=" ".repeat(e[s]-a.length);n(a)}function qo(t,e,n){let a,s;try{s=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(i){s="multiple"}try{a=JSON.stringify(t.outputShape)}catch(i){a="multiple"}const r=t.name,o=t.getClassName();jo(["".concat(r," (").concat(o,")"),s,a,t.countParams().toString()],e,n)}function Yo(t,e,n,a){let s,r;try{r=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(u){r="multiple"}try{s=JSON.stringify(t.outputShape)}catch(u){s="multiple"}const o=[];for(const h of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(h)))for(let t=0;t<h.inboundLayers.length;++t){const e=h.inboundLayers[t].name,n=h.nodeIndices[t],a=h.tensorIndices[t];o.push("".concat(e,"[").concat(n,"][").concat(a,"]"))}const i=t.name,c=t.getClassName(),l=0===o.length?"":o[0];jo(["".concat(i," (").concat(c,")"),r,s,t.countParams().toString(),l],e,a);for(let h=1;h<o.length;++h)jo(["","","","",o[h]],e,a)}function Qo(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"===typeof n}function Xo(t,e){if(null===t)return null;if("string"===typeof t)return os(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],a=t.length;for(let s=0;s<a;++s){const a=t[s];Qo(e,s,a)?n.push(a):n.push(Xo(a,e))}return n}{const e={};for(const n of Object.keys(t)){const a=t[n];if("name"===n&&"string"===typeof a)e[n]=a;else{const t=os(n);e[t]=Xo(a,t)}}return e}}function Jo(t,e){if(null===t||void 0===t)return null;if("string"===typeof t)return rs(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],a=t.length;for(let s=0;s<a;++s){const a=t[s];Qo(e,s,a)?n.push(a):n.push(Jo(a,e))}return n}{const e={};for(const n of Object.keys(t)){const a=t[n],s=rs(n);e[s]="name"!==n&&"className"!==n||"string"!==typeof a?Jo(a,n):a}return e}}const $o="4.22.0";class ti extends Vr{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=ks(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],ds(this.inputs).length!==this.inputs.length)throw new Qa("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map((t=>t.name))));ds(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map((t=>t.name)))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const t=b.sourceLayer,e=b.nodeIndex,n=b.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(n)}for(const b of this.inputs){const t=b.sourceLayer,e=b.nodeIndex,n=b.tensorIndex;es(0===e,"input layer has >1 nodes"),es(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const e=this.inputLayers[b];if(!(e instanceof Zr))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(t.inputs,". ")+"Input ".concat(b," (0-based) originates ")+"from layer type ".concat(e.getClassName(),"."));this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},a={},s={},r={},o=[],i=(t,e,n,a,s,c)=>{null!=a&&null!=s&&null!=c||(a=t.sourceLayer,s=t.nodeIndex,c=t.tensorIndex);const l=a.inboundNodes[s];if(-1!==n.indexOf(l))throw new Ya("The tensor ".concat(t.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==e.indexOf(l))return;this.containerNodes.add(ti.nodeKey(a,s)),a.id in r||(r[a.id]=Object.keys(r).length),-1===n.indexOf(l)&&n.push(l);const u=l.inboundLayers.length;for(let r=0;r<u;r++){const t=l.inputTensors[r],a=l.inboundLayers[r],s=l.nodeIndices[r],o=l.tensorIndices[r];i(t,e,n,a,s,o)}for(e.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);o.push(l)},c=[],l=[];for(const b of this.outputs)i(b,c,l);const u=o.slice().reverse();for(const b of u){n[b.id]=b,b.id in e||(e[b.id]=0);let t=e[b.id];const r=null==a[b.outboundLayer.id]?0:a[b.outboundLayer.id];t=Math.max(t,r),a[b.outboundLayer.id]=t,s[b.outboundLayer.id]=b.outboundLayer,e[b.id]=t;for(let a=0;a<b.inboundLayers.length;a++){const s=b.inboundLayers[a],r=b.nodeIndices[a],o=s.inboundNodes[r],i=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(t+1,i),n[o.id]=o}}const h={};for(const b in e){const t=e[b];t in h||(h[t]=[]),h[t].push(n[b])}const d={};for(const b in a){const t=a[b];t in d||(d[t]=[]),d[t].push(s[b])}let p=Object.keys(d).map((t=>parseInt(t,10))).sort(hs);this.layers=[];for(const b of p){const t=d[b];t.sort(((t,e)=>{const n=r[t.id],a=r[e.id];return n<a?-1:n>a?1:0}));for(const e of t)e instanceof ti&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((t=>parseInt(t,10))).sort(hs);const f=this.inputs.slice(),g=[];for(const b of p)for(const t of h[b]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Ya("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(e.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(g));for(const e of t.outputTensors)f.push(e);g.push(e.name)}}this.nodesByDepth=h;const m=this.layers.map((t=>t.name));for(const b of m){const t=m.filter((t=>t===b)).length;if(1!==t)throw new Ya('The name "'.concat(b,'" is used ').concat(t," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new Wr({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Qa("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let a=0;const s=(t=>{const e=Object.keys(t);if(0===e.length)return!1;const n=e[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(t);s&&this.parseWeights(t);for(const o of this.layers)for(const[t,e]of o.weights.entries()){const r=s?"".concat(e.name.split("/").slice(0,-1).join("/")+"/").concat(t):e.originalName;if(null!=n[r])throw new Qa("Duplicate weight name: ".concat(r));n[r]=e,a++}const r=[];for(const o in t){let a=o;if(null==n[o]){const t=o.split("/");a=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[a])r.push([n[a],t[o]]);else if(e)throw new Qa("Provided weight data has no target variable: ".concat(o));delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new Qa("".concat(t.length," of ").concat(a," weights are not set: ")+"".concat(t))}Mr(r)}parseWeights(t){for(const e in Object.keys(t)){const n=e.split("/"),a=["vars","layer_checkpoint_dependencies"],s=n.map((t=>t.startsWith("_")?t.slice(1):t)).filter((t=>!a.includes(t))).join("/");s!==e&&(t[s]=t[e],delete t[e])}}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers ".concat($o),e.backend="TensorFlow.js",e}toJSON(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=Jo(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return(0,a.DZQ)((()=>{t=ss(t);const n=new Kr;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return qr(this.outputs,n,e)}))}computeMask(t,e){return(0,a.DZQ)((()=>{let n;return t=ss(t),n=null==e?ts(null,t.length):ss(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=Er(t);if(e.length!==this.inputLayers.length)throw new Qa("Invalid inputShape argument ".concat(t,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let o=0;o<e.length;o++){const t=this.inputLayers[o],a=e[o];n[t.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(hs);if(a.length>1)for(const o of a){const t=this.nodesByDepth[o];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(t.id))continue;const a=[];for(let o=0;o<e.inboundLayers.length;o++){const t=e.inboundLayers[o],s=e.nodeIndices[o],r=e.tensorIndices[o],i=n["".concat(t.name,"_").concat(s,"_").concat(r)];a.push(i)}const s=Er(t.computeOutputShape(as(a))),r=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++){n["".concat(t.name,"_").concat(r,"_").concat(e)]=s[e]}}}const s=[],r=[];for(let o=0;o<this.outputLayers.length;o++){const t=this.outputLayers[o],e=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],a="".concat(t.name,"_").concat(e,"_").concat(n);r.push(a)}for(let o=0;o<r.length;o++){const t=r[o];es(t in n),s.push(n[t])}return as(s)}runInternalGraph(t,e){null==e&&(e=ts(null,t.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],s=t[i],r=e[i];n[a.id]=[s,r]}const a=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(hs);for(const i of a){const t=this.nodesByDepth[i];for(const e of t){const t=e.outboundLayer,a=e.inputTensors,s=e.outputTensors,r=new Array;for(const e of a)e.id in n&&r.push(n[e.id]);if(r.length===a.length){let a,o,i,c,l={};if(null!=e.callArgs&&(l=e.callArgs),1===r.length){const[e,n]=r[0];null==l.mask&&(l.mask=n),i=ss(t.call(e,l)),c=ss(t.computeMask(e,n)),a=[e],o=[n]}else a=r.map((t=>t[0])),o=r.map((t=>t[1])),null==l.mask&&(l.mask=o),i=ss(t.call(a,l)),c=ss(t.computeMask(a,o));if(t.activityRegularizer)throw new Xa("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],a=i[t],r=c[t];n[e.id]=[a,r]}}}}const s=[],r=[],o=[];for(const i of this.outputs){es(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[t,e]=n[i.id];o.push(t.shape),s.push(t),r.push(e)}return[s,r,o]}buildNodeConversionMap(t){const e={};let n;for(const a of this.layers){n=a instanceof ti?1:0;for(let t=0;t<a.inboundNodes.length;t++){const s=ti.nodeKey(a,t);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e)return this.findLayer(e);if(null==t)throw new Qa("Provide either a layer name or layer index");if("number"===typeof t)return this.findLayer(t);for(const n of this.layers)if(n.name===t)return n;throw new Qa("No such layer: ".concat(t))}findLayer(t){if(this.layers.length<=t)throw new Qa("Was asked to retrieve layer at index ".concat(t,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[t]}calculateLosses(){return(0,a.DZQ)((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const a=ti.nodeKey(e,n);this.containerNodes.has(a)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const t=o.getClassName(),a=o.getConfig(),s=[];for(let n=0;n<o.inboundNodes.length;n++){const t=o.inboundNodes[n],a=ti.nodeKey(o,n);let i={};if(this.containerNodes.has(a)){if(t.callArgs)try{JSON.stringify(t.callArgs),i=t.callArgs}catch(r){console.warn("Layer ".concat(o.name," was passed ")+"non-serializable keyword arguments: "+"".concat(t.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),i={}}if(t.inboundLayers.length>0){const n=[];for(let a=0;a<t.inboundLayers.length;a++){const s=t.inboundLayers[a],r=t.nodeIndices[a],o=t.tensorIndices[a];let c=e[ti.nodeKey(s,r)];null==c&&(c=0),n.push([s.name,c,o,i])}s.push(n)}}}const i={};i.name=o.name,i.className=t,i.config=a,i.inboundNodes=s,n.push(i)}t.layers=n;const a=[];for(let o=0;o<this.inputLayers.length;o++){const t=this.inputLayers[o],n=this.inputLayersNodeIndices[o],s=ti.nodeKey(t,n);if(!this.containerNodes.has(s))continue;let r=e[s];null!==r&&void 0!==r||(r=0);const i=this.inputLayersTensorIndices[o];a.push([t.name,r,i])}t.inputLayers=a;const s=[];for(let o=0;o<this.outputLayers.length;o++){const t=this.outputLayers[o],n=this.outputLayersNodeIndices[o],a=ti.nodeKey(t,n);if(!this.containerNodes.has(a))continue;let r=e[a];null!==r&&void 0!==r||(r=0);const i=this.outputLayersTensorIndices[o];s.push([t.name,r,i])}return t.outputLayers=s,t}static fromConfig(t,e){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={},s={};function r(t,e){t.name in s?s[t.name].push(e):s[t.name]=[e]}function o(t,e){const n=[];let s;for(const o of e){const i=o[0],c=o[1],l=o[2];if(s=null==o[3]?{}:o[3],!(i in a))return void r(t,e);const u=a[i];if(u.inboundNodes.length<=c)return void r(t,e);const h=u.inboundNodes[c];n.push(h.outputTensors[l])}n.length>0&&t.apply(as(n),s)}function i(t){const s=t.name,o=vo(t,null!=e.customObjects?e.customObjects:{});o.setFastWeightInitDuringBuild(n),a[s]=o;t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new Qa("Corrupted configuration, expected array for nodeData: ".concat(t));r(o,t)}))}const c=e.name,l=e.layers;for(const f of l)i(f);for(;!ps(s);)for(const t of l){const e=a[t.name];if(e.name in s){const t=s[e.name];delete s[e.name];for(const n of t)o(e,n)}}const u=[],h=[],d=e.inputLayers;for(const f of d){const t=f[0],e=f[1],n=f[2];es(t in a);const s=a[t].inboundNodes[e].outputTensors;u.push(s[n])}const p=e.outputLayers;for(const f of p){const t=f[0],e=f[1],n=f[2];es(t in a);const s=a[t].inboundNodes[e].outputTensors;h.push(s[n])}return new t({inputs:u,outputs:h,name:c})}get stateful(){if(this._stateful)throw new Qa("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){(0,a.DZQ)((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function ei(t,e,n){const a=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===a)return Array.isArray(t)&&1===t.length?t:"object"===typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(t.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return t}if("object"===typeof t&&Object.keys(t).length>0&&"object"===typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(e," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(t)))}function ni(t,e){return ei(t,e,"classWeight")}async function ai(t,e,n,s){if(null!=e||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=(0,a.DZQ)((()=>{if(1===t.shape.length)return(0,a.o8B)(t);if(2===t.shape.length){if(t.shape[1]>1){const e=1;return(0,a.FLi)(t,e)}if(1===t.shape[1])return(0,a.tQQ)(t,[t.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(t.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(t.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")})),s=Array.from(await e.data());(0,a.ASo)(e);const r=[];return s.forEach((t=>{if(null==n[t])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(t," exists in the data but not in ")+"classWeight");r.push(n[t])})),(0,a.tGX)(r,"float32")}return null}function si(t,e){return(0,a.lKK)(t,e)}function ri(t,e){let n,s;const r=e;n=r.xs,s=r.ys,a.ZSL.assert(null!=n&&null!=s,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(e)));const o=oi("input",t.inputNames,n),i=oi("output",t.outputNames,s),c=o[0].shape[0];a.ZSL.assert(o.length===t.inputs.length,(()=>"LayersModel has ".concat(t.inputs.length," inputs, but the dataset ")+"provides ".concat(o.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(t.inputNames),")"))),a.ZSL.assert(i.length===t.outputs.length,(()=>"LayersModel has ".concat(t.outputs.length," outputs, but the dataset ")+"provides ".concat(i.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(t.outputNames),")")));for(let l=0;l<o.length;l++)a.ZSL.assert(o[l].shape[0]===c,(()=>"Batch size mismatch: input "+"".concat(t.inputNames[l]," has ").concat(o[l].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(t.inputNames[0],".")));for(let l=0;l<i.length;l++)a.ZSL.assert(i[l].shape[0]===c,(()=>"Batch size mismatch: output "+"".concat(t.outputNames[l]," has ").concat(i[l].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(t.inputNames[0],".")));return{xs:o,ys:i}}function oi(t,e,n){if(n instanceof a.qYS)return[n];if(Array.isArray(n))return a.ZSL.assert(n.length===e.length,(()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(e.length," to match the ").concat(t," keys ").concat(e,"."))),n;{const a=[];for(const s of e){if(null==n[s])throw new Qa("The feature data generated by the dataset lacks the required "+"".concat(t," key '").concat(s,"'."));a.push(n[s])}return a}}async function ii(t,e,n){const s=null!=n.batchesPerEpoch;if(a.ZSL.assert(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),a.ZSL.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),a.ZSL.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs))),a.ZSL.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch))),a.ZSL.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const r=null!=n.validationData;let o,i;if(r)if(ci(n.validationData))a.ZSL.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches)));else{const t=function(t){if(3===t.length)throw new Xa("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);o=t.xs,i=t.ys}const c=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const h=bo(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=yo(h,d,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,r,u);p.setModel(t),t.history=f,await p.onTrainBegin(),t.stopTraining_=!1;let g=null==n.initialEpoch?0:n.initialEpoch,m=await e.iterator();for(;g<n.epochs;){const u={};await p.onEpochBegin(g);let h=0,d=0;for(s||(m=await e.iterator());!s||h<n.batchesPerEpoch;){const e=await m.next();if(s&&e.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(h," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:s,ys:r}=ri(t,e.value),o={};o.batch=d,o.size=s[0].shape[0],await p.onBatchBegin(d,o);const i=[];if(null!=n.classWeight){const e=ni(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)i.push(await ai(r[t],null,e[t]))}const u=s.concat(r).concat(i),f=c(u);a.ASo(u);for(let t=0;t<l.length;++t){const e=l[t],n=f[t];o[e]=n,a.aCs(n)}await p.onBatchEnd(d,o),lo(o),d++,h++}if(s?h>=n.batchesPerEpoch:e.done){if(r){let e;e=ci(n.validationData)?ss(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):ss(t.evaluate(o,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u["val_".concat(t.metricsNames[n])]=e[n]}break}if(t.stopTraining_)break}if(await p.onEpochEnd(g,u),g++,t.stopTraining_)break}return await p.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function ci(t){return"function"===typeof t.iterator}function li(t){a.ZSL.assert(t>0&&Number.isInteger(t),(()=>"batchSize is required to be a positive integer, but got ".concat(t)))}function ui(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>Hs(t,e,n-e))):Hs(t,e,n-e)}function hi(t,e){return a.DZQ((()=>null==t?null:Array.isArray(t)?t.map((t=>hi(t,e))):tr(t,"int32"===e.dtype?e:a.wgE(e,"int32"))))}function di(t,e){const n=[];let a=0,s=null;for(;a<t;)s=a+e,s>=t&&(s=t),n.push([a,s]),a=s;return n}function pi(t){const e=[];t instanceof a.qYS&&(t=[t]);for(let n=0;n<t.length;++n){const a=t[n];if(1===a.rank)e.push(Ks(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(a)}}return e}function fi(t,e){if(null==t)return;const n=[];if(e instanceof a.qYS)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const a in e){const t=e[a];n.push(t.id)}const s=[];if(t instanceof a.qYS)-1===n.indexOf(t.id)&&s.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&s.push(t)}));else if(null!=t)for(const a in t){const e=t[a];-1===n.indexOf(e.id)&&s.push(e)}s.forEach((t=>{t.isDisposed||t.dispose()}))}function gi(t){return Array.isArray(t)}function mi(t){return!function(t){return t instanceof a.qYS}(t)&&!gi(t)}function bi(t,e,n){let a,s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==e||0===e.length){if(null!=t){let e=!1;if(gi(t)&&t.length>0)e=!0;else if(mi(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new Qa("Error when checking model ".concat(r," expected no data, ")+"but got ".concat(t))}return[]}if(null==t)return e.map((t=>null));if(mi(t)){a=[];for(const n of e){if(null==t[n])throw new Qa('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(e));a.push(t[n])}}else if(gi(t)){if(t.length!==e.length)throw new Qa("Error when checking model ".concat(r,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(e.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(t));a=t}else{if(e.length>1)throw new Qa("The model ".concat(r," expects ").concat(e.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(t.shape));a=[t]}if(a=pi(a),null!=n)for(let o=0;o<e.length;++o){if(null==n[o])continue;const t=a[o];if(t.shape.length!==n[o].length)throw new Qa("Error when checking ".concat(r,": expected ").concat(e[o]," ")+"to have ".concat(n[o].length," dimension(s). but got array with ")+"shape ".concat(t.shape));for(let e=0;e<n[o].length;++e){if(0===e&&!s)continue;const a=t.shape[e],i=n[o][e];if(null!=i&&i>=0&&a!==i)throw new Qa("".concat(r," expected a batch of elements where each ")+"example has shape [".concat(n[o].slice(1,n[o].length),"] ")+"(i.e.,tensor shape [*,".concat(n[o].slice(1,n[o].length),"])")+" but the ".concat(r," received an input with ").concat(t.shape[0])+" examples, each with shape [".concat(t.shape.slice(1,t.shape.length),"]")+" (tensor shape [".concat(t.shape,"])"))}}return a}function xi(t,e,n){let a,s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(t)){if(t.length!==e.length)throw new Qa("Error when checking model ".concat(r,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(e.length," Tensor(s),")+" but instead got ".concat(t.length," Tensors(s)."));a=t}else{if(e.length>1)throw new Qa("The model expects ".concat(e.length," ").concat(r," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(t.shape),"."));a=[t]}if(null!=n)for(let o=0;o<e.length;++o){if(null==n[o])continue;const t=a[o];if(t.shape.length!==n[o].length)throw new Qa("Error when checking ".concat(r,": expected ").concat(e[o]," ")+"to have ".concat(n[o].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(t.shape)));for(let a=0;a<n[o].length;++a){if(0===a&&!s)continue;const i=t.shape[a],c=n[o][a];if(null!=c&&c!==i)throw new Qa("Error when checking ".concat(r,": expected ")+"".concat(e[o]," to have shape ").concat(JSON.stringify(n[o])," but ")+"got array with shape ".concat(JSON.stringify(t.shape),"."))}}}class yi extends ti{constructor(t){super(t),this.isTraining=!1}summary(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new Qa("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Ho(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"===typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>a.BaG.adagrad(.01),Adadelta:()=>a.BaG.adadelta(1,.95,Gs()),Adam:()=>a.BaG.adam(.001,.9,.999,Gs()),Adamax:()=>a.BaG.adamax(.002,.9,.999,Gs(),0),RMSProp:()=>a.BaG.rmsprop(.001,.9,0,Gs()),SGD:()=>a.BaG.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new Qa("Unknown Optimizer ".concat(t))}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof a.ELo))throw new Qa("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"===typeof t.loss||"function"===typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Qa("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(t.loss,"."));const n=t.loss;e=n.map((t=>Do(t)))}else{const n=Do(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new Qa('Unknown entry in loss dictionary: "'.concat(e,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==t.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),e.push(Do(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const t=this.internalOutputShapes[a],e=this.outputNames[a];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],_s("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const s=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"===typeof t||"function"===typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!==typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(t));n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const a of e){let e=n.hasOwnProperty(a)?n[a]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),r=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};_s("metric",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,a,s;for(const o of e){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const e=this.internalOutputShapes[t];let r;1===e[e.length-1]||this.lossFunctions[t]===Ao?-1!==["accuracy","acc"].indexOf(o)?a=_o:-1!==["crossentropy","ce"].indexOf(o)&&(a=Mo):this.lossFunctions[t]===No?-1!==["accuracy","acc"].indexOf(o)?a=zo:-1!==["crossentropy","ce"].indexOf(o)&&(a=Bo):-1!==["accuracy","acc"].indexOf(o)?a=Lo:-1!==["crossentropy","ce"].indexOf(o)&&(a=Po),-1!==["accuracy","acc"].indexOf(o)?r="acc":-1!==["crossentropy","ce"].indexOf(o)&&(r="ce"),s=a,n=""+r}else{const t=Uo(o);s=t,n=""+Vo(o)}let e;_s(n,(()=>{e=s})),r(t,n,e)}})(s[t])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=null==n.batchSize?32:n.batchSize;li(a);const s=this.standardizeUserDataXY(t,e,!0,a);try{const t=s[0].concat(s[1]);this.makeTestFunction();const e=this.testFunction;return as(this.testLoop(e,t,a,n.verbose,n.steps))}finally{fi(s[0],t),fi(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const s=null!=(n=n||{}).batches,r=t.testFunction;let o=[];if(n.verbose>0)throw new Xa("Verbose mode is not implemented yet.");a.ZSL.assert(!s||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches))));const i="function"===typeof e.next?e:await e.iterator();let c=0,l=0;for(;!s||l<n.batches;){const e=await i.next();if(o=a.DZQ((()=>{if(e.value){const{xs:n,ys:s}=ri(t,e.value),i=n.concat(s),u=a.DZQ((()=>r(i)));if(a.ASo(i),0===l)for(let t=0;t<u.length;++t)o.push((0,a.d_2)(0));const h=i[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=o[t];o[t]=a.DZQ((()=>a.WQq(o[t],a.lKK(h,e)))),l>0&&a.ASo(n)}a.ASo(u),c+=h,++l}return o})),e.done){s&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let u=0;u<o.length;++u){const t=o[u];o[u]=a.y4m(o[u],c),a.ASo(t)}return as(o)}(this,t,e)}checkNumSamples(t,e,n){let a,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(a=null,null!=e)throw new Qa("If ".concat(s," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(e))}else{if(null==t)throw new Qa("Either the input data should have a defined shape, or "+"".concat(s," shoud be specified."));a=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return a}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new Qa("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),s=n?e:[e],r=this.retrieveSymbolicTensors(s),o=new Kr;if(t instanceof a.qYS&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Qa("The number of inputs provided (".concat(t.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let e=0;e<this.inputs.length;++e)o.add(this.inputs[e],t[e])}else for(const a of this.inputs){const e=t[a.name];if(null==e)throw new Qa("No value is provided for the model's input ".concat(a.name));o.add(a,e)}const i=qr(r,o);return n?i:i[0]}retrieveSymbolicTensors(t){const e=ts(null,t.length);let n=t.length;for(const a of this.layers){const s=Array.isArray(a.output)?a.output:[a.output],r=s.map((t=>t.name));for(let a=0;a<t.length;++a){const o=r.indexOf(t[a]);if(-1!==o&&(e[a]=s[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,a)=>{null==e&&n.push(t[a])})),new Qa("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return e}predictLoop(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return a.DZQ((()=>{const s=this.checkNumSamples(t);if(n)throw new Xa("Verbose predictLoop() is not implemented yet.");const r=di(s,e),o=this.outputs.map((t=>[]));for(let e=0;e<r.length;++e){a.DZQ((()=>{const n=r[e][0],a=r[e][1],s=ui(t,n,a),o=[];if(Array.isArray(s))for(let t=0;t<s.length;++t)o.push({key:this.inputs[t],value:s[t]});else o.push({key:this.inputs[0],value:s});const i=new Kr(o);return qr(this.outputs,i)})).forEach(((t,e)=>o[e].push(t)))}return as(o.map((t=>a.xWs(t,0))))}))}predict(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=pi(t);xi(n,this.inputNames,this.feedInputShapes,!1);try{const t=null==e.batchSize?32:e.batchSize;return li(t),this.predictLoop(n,t)}finally{fi(n,t)}}predictOnBatch(t){xi(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new Ya("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let a=0;a<this.feedOutputShapes.length;++a){const t=this.feedOutputShapes[a];this.feedLossFns[a]===No?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(t,e){const n=ds(t.map((t=>t.shape[0])));n.sort();const s=ds(e.map((t=>t.shape[0])));if(s.sort(),n.length>1)throw new Qa("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map((t=>t.shape)))));if(s.length>1)throw new Qa("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map((t=>t.shape)))));if(n.length>0&&s.length>0&&!a.ZSL.arraysEqual(n,s))throw new Qa("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(n[0]," input sample(s) and ").concat(s[0]," target ")+"sample(s).")}(t=bi(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=bi(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const a=[ko,Ao,Co];for(let s=0;s<t.length;++s){const r=t[s],o=e[s],i=n[s];if(null!=o){if(o===Co&&1===r.shape[r.shape.length-1])throw new Qa("You are passing a target array of shape ".concat(r.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(o)){const t=r.shape.slice(1),e=i.slice(1);for(let n=0;n<t.length;++n){const a=t[n],s=e[n];if(null!=s&&a!==s)throw new Qa("A target Tensor with shape ".concat(r.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&t[0].shape[0]%n!==0)throw new Qa("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(t[0].shape[0]," sample(s)."));return[t,e]}async standardizeUserData(t,e,n,a){let s=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],r=arguments.length>5?arguments[5]:void 0;const[o,i]=this.standardizeUserDataXY(t,e,s,r);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=a){const t=ni(a,this.outputNames);c=[];for(let e=0;e<t.length;++e)c.push(await ai(i[e],null,t[e]))}return[o,i,c]}testLoop(t,e,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4?arguments[4]:void 0;return a.DZQ((()=>{const o=this.checkNumSamples(e,n,r,"steps"),i=[];if(s>0)throw new Xa("Verbose mode is not implemented yet.");if(null!=r)throw new Xa("steps mode in testLoop() is not implemented yet");{const s=di(o,n),r=(0,a.tGX)(Us(0,o));for(let n=0;n<s.length;++n){const o=s[n][0],c=s[n][1],l=Hs(r,o,c-o),u=hi(e,l),h=t(u);if(0===n)for(let t=0;t<h.length;++t)i.push((0,a.d_2)(0));for(let t=0;t<h.length;++t){const e=h[t];i[t]=a.WQq(i[t],a.lKK(c-o,e))}}for(let t=0;t<i.length;++t)i[t]=a.y4m(i[t],o)}return i}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const a=t[n];let s=a;if(ns(t,a)>1){const e=ns(t.slice(0,n),a);s+="_".concat(e)}e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),o=[],i=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const i=new Kr(t),c=qr(this.outputs,i,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){let t=(0,this.lossFunctions[n])(s[n],c[n]);null!=r[n]&&(t=si(t,r[n]));const o=a.i2o(t);e.push(o),l=0===n?t:a.WQq(l,t)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][0],r=this.metricsTensors[n][1];t=a.i2o(e(s[r],c[r]))}a.aCs(t),o.push(t)}return l=a.i2o(l),this.calculateLosses().forEach((t=>{l=a.WQq(l,t)})),l}),!0,i)].concat(o)}}makeTestFunction(){this.testFunction=t=>a.DZQ((()=>{const e=[];let n;const s=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let t=0;t<this.inputs.length;++t)o.push({key:this.inputs[t],value:s[t]});const i=new Kr(o),c=qr(this.outputs,i);for(let t=0;t<this.lossFunctions.length;++t){const s=this.lossFunctions[t],o=a.i2o(s(r[t],c[t]));n=0===t?o:a.WQq(n,o),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],s=this.metricsTensors[t][1],o=a.i2o(n(r[s],c[s]));e.push(o)}return e}))}async fit(t,e){let n,s,r,o,i,c,l,u,h,d=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const a=null==d.batchSize?32:d.batchSize;li(a);const p=!1,f=await this.standardizeUserData(t,e,d.sampleWeight,d.classWeight,p,a);n=f[0],s=f[1],h=f[2];let g,m=!1;if(null!=d.validationData&&d.validationData.length>0){if(m=!0,2!==d.validationData.length)throw 3===d.validationData.length?new Xa("validationData including sample weights is not supported yet."):new Qa("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(d.validationData," is invalid."));i=d.validationData[0],c=d.validationData[1];const t=!0,e=await this.standardizeUserData(i,c,null,null,t,a);l=e[0],u=e[1],g=l.concat(u)}else if(null!=d.validationSplit&&d.validationSplit>0&&d.validationSplit<1){m=!0;const t=Math.floor(n[0].shape[0]*(1-d.validationSplit)),e=n[0].shape[0];l=ui(n,t,e),r=n,n=ui(n,0,t),u=ui(s,t,e),o=s,s=ui(s,0,t),g=l.concat(u)}else null!=d.validationSteps&&(m=!0);const b=n.concat(s).concat(h);this.checkTrainableWeightsConsistency();const x=this.makeTrainFunction(),y=this.getDedupedMetricsNames();let v,w;m?(this.makeTestFunction(),v=this.testFunction,w=y.slice().concat(y.map((t=>"val_"+t)))):(v=null,g=[],w=y.slice());const k=bo(d.callbacks,d.yieldEvery);return await this.fitLoop(x,b,y,a,d.epochs,d.verbose,k,v,g,d.shuffle,w,d.initialEpoch,null,null)}finally{this.isTraining=!1,fi(n,t),fi(s,e),fi(r,t),fi(o,e),fi(l,i),fi(u,c),null!=h&&a.ASo(h)}}async fitLoop(t,e,n,s,r,o,i,c,l,u,h,d,p,f){null==s&&(s=32),null==r&&(r=1),null==u&&(u=!0),null==d&&(d=0);let g=!1;if(null!=c&&null!=l&&(g=!0),null!=f&&(g=!0,null==p))throw new Qa("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(e,s,p,"steps_per_epoch");let b;null!=m&&(b=Us(0,m)),null==o&&(o=1);const{callbackList:x,history:y}=yo(i,o,r,d,m,p,s,g,h);x.setModel(this),this.history=y,await x.onTrainBegin(),this.stopTraining_=!1;for(let v=d;v<r;++v){await x.onEpochBegin(v);const r={};if(null!=p)throw new Xa("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new Xa("batch shuffling is not implemneted yet");u&&a.ZSL.shuffle(b);const o=(0,a.tGX)(b),i=di(m,s);for(let u=0;u<i.length;++u){const h={};if(await x.onBatchBegin(u,h),a.DZQ((()=>{const d=i[u][0],p=i[u][1],f=Hs(o,d,p-d);h.batch=u,h.size=p-d;const m=hi(e,f),b=t(m);for(let t=0;t<n.length;++t){const e=n[t],s=b[t];h[e]=s,a.aCs(s)}if(u===i.length-1&&g){const t=this.testLoop(c,l,s);for(let e=0;e<n.length;++e){const s=n[e],o=t[e];a.aCs(o),r["val_"+s]=o}}})),await x.onBatchEnd(u,h),lo(h),this.stopTraining_)break}o.dispose()}if(await x.onEpochEnd(v,r),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return ii(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),s=n[0],r=n[1],o=this.makeTrainFunction()(s.concat(r)),i=[];for(const a of o){const t=await a.data();i.push(t[0])}return a.ASo(o),fi(n[0],t),fi(n[1],e),as(i)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,a=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let r=0;r<a.length;++r)n&&!a[r].trainable||e.push({name:a[r].originalName,tensor:s[r]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=a.m1Z().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-a.m1Z().numTensors}return t}getLossIdentifiers(){let t;if("string"===typeof this.loss)t=rs(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!==typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>rs(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const a of e){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");t[a]=rs(n[a])}}return t}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[rs(Vo(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>rs(Vo(t))));{const t={};for(const e in this.metrics)t[e]=rs(Vo(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=vo(Xo(t.optimizer_config));let n,a;if("string"===typeof t.loss)n=os(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>os(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=os(t.loss[e])}if(Array.isArray(t.metrics))a=t.metrics.map((t=>os(t)));else if(null!=t.metrics){a={};for(const e in t.metrics)a[e]=os(t.metrics[e])}this.compile({loss:n,metrics:a,optimizer:e})}async save(t,e){if("string"===typeof t){const e=a.io.getSaveHandlers(t);if(0===e.length)throw new Qa("Cannot find any save handlers for URL '".concat(t,"'"));if(e.length>1)throw new Qa("Found more than one (".concat(e.length,") save handlers for ")+"URL '".concat(t,"'"));t=e[0]}if(null==t.save)throw new Qa("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await a.io.encodeWeights(this.getNamedWeights(e)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat($o),convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:r}=await a.io.encodeWeights(await this.optimizer.getWeights(),t);n.specs.push(...r),n.data=a.io.concatenateArrayBuffers([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Zo(this.userDefinedMetadata,this.name,t),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,t.save(s)}setUserDefinedMetadata(t){Zo(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}yi.className="Model",a.JFn.registerClass(yi);class vi extends yi{}vi.className="Functional",a.JFn.registerClass(vi);class wi extends yi{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:ks("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new Qa("Negative dimension size caused by adding layer "+"".concat(t.name," with input shape [")+"".concat(t.inboundNodes[0].inputTensors[0].shape,"]"))}add(t){const e=t instanceof wi||t instanceof yi;let n;if(e){if(n=t,1!==n.outputs.length)throw new Qa("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Qa("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new Qa("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new Qa("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new Zr({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new Qa("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(t.name," ")+"which has ".concat(t.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==t.inboundNodes[0].outputTensors.length)throw new Qa("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Gr(this.outputs[0])}this.inboundNodes=[],new Wr({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ts(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Fr(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new yi({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Ya("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Ya("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Ya("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Ya("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e){let n,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new Qa("Legacy serialization format not supported yet.");n=e}else a.ZSL.assert(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=e.layers,delete e.layers,r=e;const o=new t(r);if(!(o instanceof wi))throw new Xa("Sequential.fromConfig called on non-Sequential input: ".concat(o));for(const a of n){const t=vo(a,void 0,s);s&&t.setFastWeightInitDuringBuild(!0),o.add(t)}return o}set stopTraining(t){if(null==this.model)throw new Qa("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new Qa("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}wi.className="Sequential",a.JFn.registerClass(wi);class ki extends a.JFn.Serializable{getConfig(){return{}}}class Si extends ki{apply(t){return function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==e)throw new Xa("Support for alpha values other than 1 (".concat(e,") is not implemented ")+"yet.");return a.Pqc(t)}(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}Si.className="elu",a.JFn.registerClass(Si);class Ti extends ki{apply(t){return a.WfX(t)}}Ti.className="selu",a.JFn.registerClass(Ti);class Ii extends ki{apply(t){return a.VVh(t)}}Ii.className="relu",a.JFn.registerClass(Ii);class Ci extends ki{apply(t){return(0,a.DZQ)((()=>a.BpO(6,a.VVh(t))))}}Ci.className="relu6",a.JFn.registerClass(Ci);class Ni extends ki{apply(t){return t}}Ni.className="linear",a.JFn.registerClass(Ni);class Ai extends ki{apply(t){return a.ry7(t)}}Ai.className="sigmoid",a.JFn.registerClass(Ai);class Ei extends ki{apply(t){return function(t){return(0,a.DZQ)((()=>{const e=a.WQq(.5,a.lKK(.2,t));return a.zQh(e,0,1)}))}(t)}}Ei.className="hardSigmoid",a.JFn.registerClass(Ei);class Ri extends ki{apply(t){return a.lw0(t)}}Ri.className="softplus",a.JFn.registerClass(Ri);class Fi extends ki{apply(t){return function(t){return(0,a.DZQ)((()=>a.y4m(t,a.WQq(a.tnl(t),1))))}(t)}}Fi.className="softsign",a.JFn.registerClass(Fi);class Di extends ki{apply(t){return a.ymU(t)}}Di.className="tanh",a.JFn.registerClass(Di);class _i extends ki{apply(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return a.Vs9(t,e)}}_i.className="softmax",a.JFn.registerClass(_i);class Li extends ki{apply(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return a.HPB(t,e)}}Li.className="logSoftmax",a.JFn.registerClass(Li);class Oi extends ki{apply(t){return(0,a.DZQ)((()=>a.DZQ((()=>{const e=Math.sqrt(2),n=a.lKK(.5,a.WQq(1,a.Y12(a.y4m(t,e))));return a.lKK(t,n)}))))}}Oi.className="gelu",a.JFn.registerClass(Oi);class Mi extends ki{apply(t){return(0,a.DZQ)((()=>a.lKK(.5,a.lKK(t,a.WQq(1,a.ymU(a.lKK(a.RZD(a.y4m(2,Math.PI)),a.WQq(t,a.lKK(.044715,a.n7C(t,3))))))))))}}Mi.className="gelu_new",a.JFn.registerClass(Mi);class zi extends ki{apply(t){return(0,a.DZQ)((()=>a.lKK(t,a.ymU(a.lw0(t)))))}}zi.className="mish",a.JFn.registerClass(zi);class Pi extends ki{apply(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return(0,a.DZQ)((()=>a.lKK(a.ry7(a.lKK(t,e)),t)))}}function Bi(t){return t.getClassName()}function Wi(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return us(t,a.JFn.SerializationMap.getMap().classNameMap,e,"activation")}function Ui(t){if(null==t){const t={className:"linear",config:{}};return Wi(t)}if("string"===typeof t){const e={};return e.className=t,e.config={},Wi(e)}return t instanceof ki?t:Wi(t)}function Vi(t){if(null!=t&&"object"!==typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(t))}Pi.className="swish",a.JFn.registerClass(Pi);class Gi extends a.JFn.Serializable{}class Zi extends Gi{constructor(t){super(),Vi(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return(0,a.DZQ)((()=>{let e=(0,a.Ul9)([1]);return this.hasL1&&(e=(0,a.WQq)(e,(0,a.czq)(a.lKK(this.l1,(0,a.tnl)(t))))),this.hasL2&&(e=(0,a.WQq)(e,(0,a.czq)(a.lKK(this.l2,er(t))))),a.tQQ(e,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Zi.className="L1L2",a.JFn.registerClass(Zi);const Ki={l1l2:"L1L2"};function Hi(t){return cs(t)}function ji(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return us(t,a.JFn.SerializationMap.getMap().classNameMap,e,"regularizer")}function qi(t){if(null==t)return null;if("string"===typeof t){return ji({className:t in Ki?Ki[t]:t,config:{}})}return t instanceof Gi?t:ji(t)}class Yi extends Vr{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Rr(t);let n=(0,a.VVh)(t);return null!=this.maxValue&&(n=(0,a.zQh)(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Yi.className="ReLU",a.JFn.registerClass(Yi);class Qi extends Vr{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Rr(t);return(0,a.H8d)(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Qi.className="LeakyReLU",a.JFn.registerClass(Qi);class Xi extends Vr{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Nr(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=qi(t.alphaRegularizer),this.alphaConstraint=io(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!==typeof t.sharedAxes)throw new Qa("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(t.sharedAxes));this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Fr(t)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)e[a-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<t.length;++a)n[a]=t[a];this.inputSpec=[new zr({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Rr(t),(0,a.NsG)(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Cr(this.alphaInitializer),alphaRegularizer:Hi(this.alphaRegularizer),alphaConstraint:ro(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Xi.className="PReLU",a.JFn.registerClass(Xi);class Ji extends Vr{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Xa("Non-default alpha value (".concat(t.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Rr(t);return(0,a.Pqc)(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Ji.className="ELU",a.JFn.registerClass(Ji);class $i extends Vr{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Rr(t);return(0,a.lKK)(n,(0,a.wgE)((0,a.rhj)(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}$i.className="ThresholdedReLU",a.JFn.registerClass($i);class tc extends Vr{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new _i).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){return(0,a.DZQ)((()=>{let n=Rr(t);const s=e.mask;if(null!=s){const t=(0,a.lKK)((0,a.jbE)((0,a.SaS)(n.shape),(0,a.wgE)(s,n.dtype)),(0,a.d_2)(-1e9));n=(0,a.WQq)(n,t)}return this.axis instanceof Array?this.axis.length>1?(0,a.oNF)((0,a.jbE)(n,(0,a.VZ)(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function ec(t,e,n){if("number"===typeof t)return ts(t,e);if(t.length!==e)throw new Qa("The ".concat(n," argument must be an integer or tuple of ").concat(e," integers.")+" Received: ".concat(t.length," elements."));for(let s=0;s<e;++s){const r=t[s];if((a=r)!==parseInt(a.toString(),10))throw new Qa("The ".concat(n," argument must be an integer or tuple of ").concat(e)+" integers. Received: ".concat(JSON.stringify(t)," including a")+" non-integer number ".concat(r))}return t;var a}function nc(t,e,n,a){if(null==t)return t;let s;return s="same"===n?t:t-(e+(e-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((s+a-1)/a)}function ac(t,e,n,a){if(null==t)return null;if("valid"===a)t=t*e+Ws([n-e,0]);else{if("same"!==a)throw new Qa("Unsupport padding mode: ".concat(a,"."));t*=e}return t}function sc(t,e){return(0,a.DZQ)((()=>(Es(e),"channelsFirst"===e?a.mgz(t,[0,2,3,1]):t)))}function rc(t,e){return(0,a.DZQ)((()=>(Es(e),"channelsFirst"===e?a.mgz(t,[0,2,3,4,1]):t)))}function oc(t,e,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return(0,a.DZQ)((()=>{if(null==o&&(o="channelsLast"),Es(o),3!==t.shape.length)throw new Qa("The input of a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead."));if(3!==e.shape.length)throw new Qa("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new Qa("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(n.shape.length," instead"));if("channelsFirst"===o&&(t=a.mgz(t,[0,2,1])),"causal"===r)throw new Xa("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let c=a.kA9(t,e,s,"same"===r?"same":"valid","NWC",i);return null!=n&&(c=ar(c,n)),c}))}function ic(t,e,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return(0,a.DZQ)((()=>{if(null==o&&(o="channelsLast"),Es(o),3!==t.rank&&4!==t.rank)throw new Qa("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(t.rank,"."));if(3!==e.rank&&4!==e.rank)throw new Qa("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(t.rank,"."));let l=sc(t,o);if("causal"===r)throw new Xa("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=a.cZk.conv2d({x:l,filter:e,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:c}),"channelsFirst"===o&&(l=a.mgz(l,[0,3,1,2])),l}))}function cc(t,e,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;return(0,a.DZQ)((()=>{if(null==o&&(o="channelsLast"),Es(o),4!==t.rank&&5!==t.rank)throw new Qa("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(t.rank,"."));if(4!==e.rank&&5!==e.rank)throw new Qa("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(t.rank,"."));let c=rc(t,o);if("causal"===r)throw new Xa("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return c=a.IPL(c,e,s,"same"===r?"same":"valid","NDHWC",i),null!=n&&(c=ar(c,n)),"channelsFirst"===o&&(c=a.mgz(c,[0,4,1,2,3])),c}))}tc.className="Softmax",a.JFn.registerClass(tc);class lc extends Vr{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",lc.verifyArgs(e),this.rank=t,ms(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Xa("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=ec(e.kernelSize,t,"kernelSize"),this.strides=ec(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Rs(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Es(this.dataFormat),this.activation=Ui(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Nr(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=io(e.biasConstraint),this.biasRegularizer=qi(e.biasRegularizer),this.activityRegularizer=qi(e.activityRegularizer),this.dilationRate=ec(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Qa("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Qa("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Qa("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(t){if(es("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!==typeof t.kernelSize&&!gs(t.kernelSize,"number",1,3))throw new Qa("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(t.kernelSize),"."))}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Bi(this.activation),useBias:this.useBias,biasInitializer:Cr(this.biasInitializer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),biasConstraint:ro(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class uc extends lc{constructor(t,e){super(t,e),this.kernel=null,uc.verifyArgs(e),this.filters=e.filters,ms(this.filters,"filters"),this.kernelInitializer=Nr(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=io(e.kernelConstraint),this.kernelRegularizer=qi(e.kernelRegularizer)}build(t){t=Fr(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Qa("The channel dimension of the input should be defined. "+"Found ".concat(t[e]));const n=t[e],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return(0,a.DZQ)((()=>{let e;t=Rr(t);const n=null==this.bias?null:this.bias.read(),a=xs(this.activation.getClassName());if(null!=a&&2===this.rank)e=ic(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)e=oc(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=ic(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Xa("convolutions greater than 3D are not implemented yet.");e=cc(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=Fr(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<n.length;++s){const t=nc(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);e.push(t)}let a=[t[0]];return"channelsLast"===this.dataFormat?(a=a.concat(e),a.push(this.filters)):(a.push(this.filters),a=a.concat(e)),a}getConfig(){const t={filters:this.filters,kernelInitializer:Cr(this.kernelInitializer),kernelRegularizer:Hi(this.kernelRegularizer),kernelConstraint:ro(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!==typeof t.filters||t.filters<1)throw new Qa("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(t.filters)))}}class hc extends uc{constructor(t){super(2,t),hc.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!gs(t.kernelSize,"number",1,2))throw new Qa("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(t.kernelSize),"."))}}hc.className="Conv2D",a.JFn.registerClass(hc);class dc extends uc{constructor(t){super(3,t),dc.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new Qa("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(t.kernelSize),"."))}}dc.className="Conv3D",a.JFn.registerClass(dc);class pc extends hc{constructor(t){if(super(t),this.inputSpec=[new zr({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Qa("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(t){if(4!==(t=Fr(t)).length)throw new Qa("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Qa("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new zr({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return a.DZQ((()=>{let e=Rr(t);if(4!==e.shape.length)throw new Qa("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(e.shape.length));const n=e.shape,s=n[0];let r,o;"channelsFirst"===this.dataFormat?(r=2,o=3):(r=1,o=2);const i=n[r],c=n[o],l=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],d=this.strides[1],p=[s,ac(i,h,l,this.padding),ac(c,d,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=a.mgz(e,[0,2,3,1]));let f=a.wX9(e,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=a.mgz(f,[0,3,1,2])),null!=this.bias&&(f=ar(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f}))}computeOutputShape(t){const e=(t=Fr(t)).slice();let n,a,s;"channelsFirst"===this.dataFormat?(n=1,a=2,s=3):(n=3,a=1,s=2);const r=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return e[n]=this.filters,e[a]=ac(e[a],i,r,this.padding),e[s]=ac(e[s],c,o,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}pc.className="Conv2DTranspose",a.JFn.registerClass(pc);class fc extends dc{constructor(t){if(super(t),this.inputSpec=[new zr({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Qa("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(t){if(5!==(t=Fr(t)).length)throw new Qa("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Qa("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new zr({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return a.DZQ((()=>{let e=Rr(t);if(5!==e.shape.length)throw new Qa("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(e.shape.length));const n=e.shape,s=n[0];let r,o,i;"channelsFirst"===this.dataFormat?(i=2,r=3,o=4):(i=1,r=2,o=3);const c=n[i],l=n[r],u=n[o],h=this.kernelSize[0],d=this.kernelSize[1],p=this.kernelSize[2],f=this.strides[0],g=this.strides[1],m=this.strides[2],b=[s,ac(c,f,h,this.padding),ac(l,g,d,this.padding),ac(u,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=a.mgz(e,[0,2,3,4,1]));let x=a.jIJ(e,this.kernel.read(),b,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(x=a.mgz(x,[0,4,1,2,3])),null!==this.bias&&(x=ar(x,this.bias.read(),this.dataFormat)),null!==this.activation&&(x=this.activation.apply(x)),x}))}computeOutputShape(t){const e=(t=Fr(t)).slice();let n,a,s,r;"channelsFirst"===this.dataFormat?(n=1,a=2,s=3,r=4):(n=4,a=1,s=2,r=3);const o=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],u=this.strides[1],h=this.strides[2];return e[n]=this.filters,e[a]=ac(e[a],l,o,this.padding),e[s]=ac(e[s],u,i,this.padding),e[r]=ac(e[r],h,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}fc.className="Conv3DTranspose",a.JFn.registerClass(fc);class gc extends uc{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new Qa("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new Qa("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new Qa("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(e.padding)));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Nr(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=qi(e.depthwiseRegularizer),this.depthwiseConstraint=io(e.depthwiseConstraint),this.pointwiseInitializer=Nr(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=qi(e.pointwiseRegularizer),this.pointwiseConstraint=io(e.pointwiseConstraint)}build(t){if((t=Fr(t)).length<this.rank+2)throw new Qa("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(t)));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new Qa("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(t[e])));const n=t[e],a=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let o=0;o<this.rank;++o)s.push(1);s.push(n*this.depthMultiplier,this.filters);const r=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,r,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,r,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,r,this.biasConstraint):this.bias=null,this.inputSpec=[new zr({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return(0,a.DZQ)((()=>{let e;if(t=Rr(t),1===this.rank)throw new Xa("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=a.mgz(t,[0,2,3,1])),e=a.wdz(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=ar(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=a.mgz(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Cr(this.depthwiseInitializer),t.pointwiseInitializer=Cr(this.pointwiseInitializer),t.depthwiseRegularizer=Hi(this.depthwiseRegularizer),t.pointwiseRegularizer=Hi(this.pointwiseRegularizer),t.depthwiseConstraint=ro(this.depthwiseConstraint),t.pointwiseConstraint=ro(this.pointwiseConstraint),t}}gc.className="SeparableConv";class mc extends gc{constructor(t){super(2,t)}}mc.className="SeparableConv2D",a.JFn.registerClass(mc);class bc extends uc{constructor(t){super(1,t),bc.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!gs(t.kernelSize,"number",1,1))throw new Qa("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(t.kernelSize),"."))}}bc.className="Conv1D",a.JFn.registerClass(bc);class xc extends Vr{constructor(t){super(t),"number"===typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"===typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return(0,a.DZQ)((()=>{if(t=Rr(t),"channelsLast"===this.dataFormat){const e=qs(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return qs(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=qs(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return qs(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}xc.className="Cropping2D",a.JFn.registerClass(xc);class yc extends Vr{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Es(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,fs(Ts,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return a.DZQ((()=>{let e=Rr(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=a.mgz(e,[0,2,3,1]);const t=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?a.Slp.resizeNearestNeighbor(e,[t,s]):a.Slp.resizeBilinear(e,[t,s]);return a.mgz(r,[0,3,1,2])}{const t=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?a.Slp.resizeNearestNeighbor(e,[t,s]):a.Slp.resizeBilinear(e,[t,s])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}yc.className="UpSampling2D",a.JFn.registerClass(yc);class vc extends lc{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Nr(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=io(t.depthwiseConstraint),this.depthwiseRegularizer=qi(t.depthwiseRegularizer)}build(t){if((t=Fr(t)).length<4)throw new Qa("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(t),"."));const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new Qa("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(t[e],")."));const n=t[e],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return(0,a.DZQ)((()=>{let e=function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",r=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0;return(0,a.DZQ)((()=>{null==r&&(r="channelsLast"),Es(r);let i=sc(t,r);if(4!==t.rank)throw new Qa("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));if(4!==e.rank)throw new Qa("depthwiseKernel is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));return i=a.Gl3(i,e,n,"same"===s?"same":"valid","NHWC",o),"channelsFirst"===r&&(i=a.mgz(i,[0,3,1,2])),i}))}(t=Rr(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=ar(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=Fr(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],a="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=nc(e,this.kernelSize[0],this.padding,this.strides[0]),r=nc(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],a,s,r]:[t[0],s,r,a]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Cr(this.depthwiseInitializer),t.depthwiseRegularizer=Hi(this.depthwiseRegularizer),t.depthwiseConstraint=ro(this.depthwiseRegularizer),t}}function wc(t,e,n,a){if(Array.isArray(t)){if(null!=e||null!=n)throw new Qa("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=t.slice(t.length-a,t.length),t=t.slice(0,t.length-a)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function kc(t,e,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return a.DZQ((()=>{const l=e.shape.length;if(l<3)throw new Qa("Input should be at least 3D, but is ".concat(l,"D."));const u=[1,0].concat(Us(2,l));if(e=a.mgz(e,u),null!=o)throw new Xa("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=a.wgE(a.wgE(r,"bool"),"float32"),r.rank===l-1&&(r=a.UG6(r,-1)),r=a.mgz(r,u)),s&&(e=a.BEg(e,0),null!=r&&(r=a.BEg(r,0)));const h=[];let d,p=n;const f=e.shape[0],g=a.K$i(e);let m,b;null!=r&&(m=a.K$i(r));for(let e=0;e<f;++e){const n=g[e],s=a.DZQ((()=>t(n,p)));if(null==r)d=s[0],p=s[1];else{const t=a.DZQ((()=>{const t=m[e],n=a.jbE(a.P61(t),t);return{output:a.WQq(a.lKK(s[0],t),a.lKK(p[0],n)),newStates:p.map(((e,r)=>a.WQq(a.lKK(s[1][r],t),a.lKK(e,n))))}}));d=t.output,p=t.newStates}c&&h.push(d)}if(c){const t=1;b=a.t$z(h,t)}return[d,b,p]}))}vc.className="DepthwiseConv2D",a.JFn.registerClass(vc);class Sc extends Vr{constructor(t){let e;if(super(t),null==t.cell)throw new Qa("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Fc({cells:t.cell}):t.cell,null==e.stateSize)throw new Qa("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new zr({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Us(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null))}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Ar(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let a;if(a=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const a of e)n.push([t[0],a]);return[a].concat(n)}return a}computeMask(t,e){return a.DZQ((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Xa("Constants support is not implemented in RNN yet.");Ar(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new zr({shape:[e,null,...n]});const s=[t[0]].concat(t.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!a.ZSL.arraysEqual(this.stateSpec.map((t=>t.shape[t.shape.length-1])),r))throw new Qa("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=r.map((t=>new zr({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];(0,a.DZQ)((()=>{if(!this.stateful)throw new qa("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Qa("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>a.Ul9([n,t]))):this.states_=[a.Ul9([n,this.cell.stateSize])];else if(null==t)a.ASo(this.states_),null!=this.keptStates&&(a.ASo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>a.Ul9([n,t]))):this.states_[0]=a.Ul9([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Qa("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(t.length," state value(s). Input ")+"received: ".concat(t));!0===e?this.keptStates.push(this.states_.slice()):a.ASo(this.states_);for(let e=0;e<this.states_.length;++e){const s=t[e],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,o=[n,r];if(!a.ZSL.arraysEqual(s.shape,o))throw new Qa("State ".concat(e," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(o,", received shape=").concat(s.shape));this.states_[e]=s}}this.states_=this.states_.map((t=>a.aCs(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,a=null==e?null:e.constants;null==e&&(e={});const s=wc(t,n,a,this.numConstants);t=s.inputs,n=s.initialState,a=s.constants;let r=[],o=[];if(null!=n){e.initialState=n,r=r.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new zr({shape:t.shape}));o=o.concat(this.stateSpec)}null!=a&&(e.constants=a,r=r.concat(a),this.numConstants=a.length);if(r[0]instanceof Pr){const n=[t].concat(r),a=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=a;const i=super.apply(n,e);return this.inputSpec=s,i}return super.apply(t,e)}call(t,e){return(0,a.DZQ)((()=>{const n=null==e?null:e.mask,a=null==e?null:e.training;let s=null==e?null:e.initialState;t=Rr(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const r=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==r)throw new Qa("RNN Layer has ".concat(r," state(s) but was passed ")+"".concat(s.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},i=kc(((t,e)=>{const n=this.cell.call([t].concat(e),o);return[n[0],n.slice(1)]}),t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],u=i[2];this.stateful&&this.resetStates(u,a);const h=this.returnSequences?l:c;return this.returnState?[h].concat(u):h}))}getInitialState(t){return(0,a.DZQ)((()=>{let e=a.Ul9(t.shape);return e=a.czq(e,[1,2]),e=Ks(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?Xs(e,[1,t]):e)):this.cell.stateSize>1?[Xs(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Sc.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),t),e)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=vo(e.cell,n);return new t(Object.assign(e,{cell:a}))}}Sc.className="RNN",a.JFn.registerClass(Sc);class Tc extends Vr{}class Ic extends Tc{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,ms(this.units,"units"),this.activation=Ui(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Nr(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Nr(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Nr(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=qi(t.kernelRegularizer),this.recurrentRegularizer=qi(t.recurrentRegularizer),this.biasRegularizer=qi(t.biasRegularizer),this.kernelConstraint=io(t.kernelConstraint),this.recurrentConstraint=io(t.recurrentConstraint),this.biasConstraint=io(t.biasConstraint),this.dropout=Bs([1,Ws([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Bs([1,Ws([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Fr(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return(0,a.DZQ)((()=>{if(2!==t.length)throw new Qa("SimpleRNNCell expects 2 input Tensors, got ".concat(t.length,"."));let n=t[1];t=t[0];const s=null!=e.training&&e.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Dc({ones:()=>a.P61(t),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Dc({ones:()=>a.P61(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;r=$s(null!=o?a.lKK(t,o):t,this.kernel.read()),null!=this.bias&&(r=ar(r,this.bias.read())),null!=i&&(n=a.lKK(n,i));let c=a.WQq(r,$s(n,this.recurrentKernel.read()));return null!=this.activation&&(c=this.activation.apply(c)),[c,c]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Bi(this.activation),useBias:this.useBias,kernelInitializer:Cr(this.kernelInitializer),recurrentInitializer:Cr(this.recurrentInitializer),biasInitializer:Cr(this.biasInitializer),kernelRegularizer:Hi(this.kernelRegularizer),recurrentRegularizer:Hi(this.recurrentRegularizer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),kernelConstraint:ro(this.kernelConstraint),recurrentConstraint:ro(this.recurrentConstraint),biasConstraint:ro(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}Ic.className="SimpleRNNCell",a.JFn.registerClass(Ic);class Cc extends Sc{constructor(t){t.cell=new Ic(t),super(t)}call(t,e){return(0,a.DZQ)((()=>{null!=this.cell.dropoutMask&&(a.ASo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.ASo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return new t(e)}}Cc.className="SimpleRNN",a.JFn.registerClass(Cc);class Nc extends Tc{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Qa("GRUCell does not support reset_after parameter set to true.");this.units=t.units,ms(this.units,"units"),this.activation=Ui(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Ui(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Nr(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Nr(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Nr(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=qi(t.kernelRegularizer),this.recurrentRegularizer=qi(t.recurrentRegularizer),this.biasRegularizer=qi(t.biasRegularizer),this.kernelConstraint=io(t.kernelConstraint),this.recurrentConstraint=io(t.recurrentConstraint),this.biasConstraint=io(t.biasConstraint),this.dropout=Bs([1,Ws([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Bs([1,Ws([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Fr(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return(0,a.DZQ)((()=>{if(2!==t.length)throw new Qa("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));const n=null!=e.training&&e.training;let s=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Dc({ones:()=>a.P61(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Dc({ones:()=>a.P61(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,o=this.recurrentDropoutMask;let i,c,l;0<this.dropout&&this.dropout<1&&(t=a.lKK(t,r[0]));let u=$s(t,this.kernel.read());this.useBias&&(u=ar(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=a.lKK(s,o[0]));const h=this.recurrentKernel.read(),[d,p]=a.lDo(h,[2*this.units,this.units],h.rank-1),f=$s(s,d),[g,m,b]=a.lDo(u,3,u.rank-1),[x,y]=a.lDo(f,2,f.rank-1);i=this.recurrentActivation.apply(a.WQq(g,x)),c=this.recurrentActivation.apply(a.WQq(m,y));const v=$s(a.lKK(c,s),p);l=this.activation.apply(a.WQq(b,v));const w=a.WQq(a.lKK(i,s),a.lKK(a.WQq(1,a.HZy(i)),l));return[w,w]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Bi(this.activation),recurrentActivation:Bi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Cr(this.kernelInitializer),recurrentInitializer:Cr(this.recurrentInitializer),biasInitializer:Cr(this.biasInitializer),kernelRegularizer:Hi(this.kernelRegularizer),recurrentRegularizer:Hi(this.recurrentRegularizer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),kernelConstraint:ro(this.kernelConstraint),recurrentConstraint:ro(this.recurrentConstraint),biasConstraint:ro(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}Nc.className="GRUCell",a.JFn.registerClass(Nc);class Ac extends Sc{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Nc(t),super(t)}call(t,e){return(0,a.DZQ)((()=>{null!=this.cell.dropoutMask&&(a.ASo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.ASo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Ac.className="GRU",a.JFn.registerClass(Ac);class Ec extends Tc{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,ms(this.units,"units"),this.activation=Ui(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Ui(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Nr(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Nr(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Nr(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=qi(t.kernelRegularizer),this.recurrentRegularizer=qi(t.recurrentRegularizer),this.biasRegularizer=qi(t.biasRegularizer),this.kernelConstraint=io(t.kernelConstraint),this.recurrentConstraint=io(t.recurrentConstraint),this.biasConstraint=io(t.biasConstraint),this.dropout=Bs([1,Ws([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Bs([1,Ws([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Fr(t))[t.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;a=new((e=class extends cr{apply(e,a){const s=t.apply([n]),r=(new ur).apply([n]),o=t.apply([2*n]);return Qs(Qs(s,r),o)}}).className="CustomInit",e)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return(0,a.DZQ)((()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new Qa("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));let s=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Dc({ones:()=>a.P61(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Dc({ones:()=>a.P61(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;let c,l,u,h;0<this.dropout&&this.dropout<1&&(t=a.lKK(t,o[0]));let d=$s(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=a.lKK(s,i[0])),d=a.WQq(d,$s(s,this.recurrentKernel.read())),this.useBias&&(d=ar(d,this.bias.read()));const[p,f,g,m]=a.lDo(d,4,d.rank-1);c=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(f),u=a.WQq(a.lKK(l,r),a.lKK(c,this.activation.apply(g))),h=this.recurrentActivation.apply(m);const b=a.lKK(h,this.activation.apply(u));return[b,b,u]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Bi(this.activation),recurrentActivation:Bi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Cr(this.kernelInitializer),recurrentInitializer:Cr(this.recurrentInitializer),biasInitializer:Cr(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Hi(this.kernelRegularizer),recurrentRegularizer:Hi(this.recurrentRegularizer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),kernelConstraint:ro(this.kernelConstraint),recurrentConstraint:ro(this.recurrentConstraint),biasConstraint:ro(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}Ec.className="LSTMCell",a.JFn.registerClass(Ec);class Rc extends Sc{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Ec(t),super(t)}call(t,e){return(0,a.DZQ)((()=>{null!=this.cell.dropoutMask&&(a.ASo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.ASo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Rc.className="LSTM",a.JFn.registerClass(Rc);class Fc extends Tc{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return(0,a.DZQ)((()=>{let n=t.slice(1);const a=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?a.push(n.splice(0,t.stateSize.length)):a.push(n.splice(0,1));a.reverse();const s=[];let r;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=a[o],r=0===o?[t[0]].concat(n):[r[0]].concat(n),r=i.call(r,e),s.push(r.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[r[0]].concat(n)}))}build(t){let e;Ar(t)&&(t=t[0]),this.cells.forEach(((n,a)=>{_s("RNNCell_".concat(a),(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign(Object.assign({},t),e)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[];for(const s of e.cells)a.push(vo(s,n));return new t({cells:a})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Or(t)}setWeights(t){const e=[];for(const n of this.cells){const a=n.weights.length,s=t.splice(a);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}Mr(e)}}function Dc(t){const{ones:e,rate:n,training:s=!1,count:r=1,dropoutFunc:o}=t,i=()=>null!=o?o(e(),n):sr(e(),n),c=()=>rr(i,e,s);if(!r||r<=1)return a.aCs(c().clone());return Array(r).fill(void 0).map(c).map((t=>a.aCs(t.clone())))}Fc.className="StackedRNNCells",a.JFn.registerClass(Fc);var _c=function(t,e){var n={};for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&e.indexOf(a)<0&&(n[a]=t[a]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var s=0;for(a=Object.getOwnPropertySymbols(t);s<a.length;s++)e.indexOf(a[s])<0&&Object.prototype.propertyIsEnumerable.call(t,a[s])&&(n[a[s]]=t[a[s]])}return n};class Lc extends Sc{constructor(t){if(t.unroll)throw new Xa("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Xa("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new zr({ndim:5})]}call(t,e){return a.DZQ((()=>{if(null!=this.cell.dropoutMask&&(a.ASo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.ASo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new Qa("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return a.DZQ((()=>{const{stateSize:e}=this.cell,n=t.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],o=a.Ul9(r);return Array.isArray(e)?Array(e.length).fill(o):[o]}))}resetStates(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];a.DZQ((()=>{if(!this.stateful)throw new qa("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new Qa("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>a.Ul9(r))):this.states_=[a.Ul9(r)];else if(null==t)a.ASo(this.states_),null!=this.keptStates&&(a.ASo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>a.Ul9(r))):this.states_[0]=a.Ul9(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Qa("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(t.length," state value(s). Input ")+"received: ".concat(t));e?this.keptStates.push(this.states_.slice()):a.ASo(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],s=r;if(!a.ZSL.arraysEqual(n.shape,s))throw new Qa("State ".concat(e," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(s,", received shape=").concat(n.shape));this.states_[e]=n}}this.states_=this.states_.map((t=>a.aCs(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:a,padding:s,strides:r,dilationRate:o}=this.cell,i="channelsFirst"===e,c=t[i?3:2],l=t[i?4:3],u=nc(c,a[0],s,r[0],o[0]),h=nc(l,a[1],s,r[1],o[1]);return[...t.slice(0,2),...i?[n,u,h]:[u,h,n]]}}Lc.className="ConvRNN2D";class Oc extends Ec{constructor(t){const{filters:e,kernelSize:n,strides:a,padding:s,dataFormat:r,dilationRate:o}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,ms(this.filters,"filters"),this.kernelSize=ec(n,2,"kernelSize"),this.kernelSize.forEach((t=>ms(t,"kernelSize"))),this.strides=ec(a||1,2,"strides"),this.strides.forEach((t=>ms(t,"strides"))),this.padding=s||"valid",Rs(this.padding),this.dataFormat=r||"channelsLast",Es(this.dataFormat),this.dilationRate=ec(o||1,2,"dilationRate"),this.dilationRate.forEach((t=>ms(t,"dilationRate")))}build(t){var e;t=Fr(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new Qa("The channel dimension of the input should be defined. "+"Found ".concat(t[n]));const s=t[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;t=new((e=class extends cr{apply(t,e){return Ys([n.apply([s]),a.SaS([s]),n.apply([2*s])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return a.DZQ((()=>{if(3!==t.length)throw new Qa("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));const n=e.training||!1,s=t[0],r=t[1],o=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Dc({ones:()=>a.P61(s),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,c=(t,e,n)=>e&&e[n]?a.lKK(e[n],t):t;let l=c(s,i,0),u=c(s,i,1),h=c(s,i,2),d=c(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Dc({ones:()=>a.P61(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let f=c(r,p,0),g=c(r,p,1),m=c(r,p,2),b=c(r,p,3);const[x,y,v,w]=a.lDo(this.kernel.read(),4,3),[k,S,T,I]=this.useBias?a.lDo(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,x,k,this.padding),u=this.inputConv(u,y,S,this.padding),h=this.inputConv(h,v,T,this.padding),d=this.inputConv(d,w,I,this.padding);const[C,N,A,E]=a.lDo(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,C),g=this.recurrentConv(g,N),m=this.recurrentConv(m,A),b=this.recurrentConv(b,E);const R=this.recurrentActivation.apply(a.WQq(l,f)),F=this.recurrentActivation.apply(a.WQq(u,g)),D=a.WQq(a.lKK(F,o),a.lKK(R,this.activation.apply(a.WQq(h,m)))),_=a.lKK(this.recurrentActivation.apply(a.WQq(d,b)),this.activation.apply(D));return[_,_,D]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=_c(t,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(t,e,n,s){const r=a.Xtf(t,e,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?ar(r,n,this.dataFormat):r}recurrentConv(t,e){return a.Xtf(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Oc.className="ConvLSTM2DCell",a.JFn.registerClass(Oc);class Mc extends Lc{constructor(t){const e=new Oc(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}Mc.className="ConvLSTM2D",a.JFn.registerClass(Mc);class zc extends Vr{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?e[a]:this.noiseShape[a]);return n}call(t,e){return(0,a.DZQ)((()=>{this.invokeCallHook(t,e);const n=Rr(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,a=this.getNoiseShape(n);return rr((()=>sr(n,this.rate,a,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}zc.className="Dropout",a.JFn.registerClass(zc);class Pc extends zc{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Pc.className="SpatialDropout1D",a.JFn.registerClass(Pc);class Bc extends Vr{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,ms(this.units,"units"),this.activation=Ui(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Nr(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Nr(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=io(t.kernelConstraint),this.biasConstraint=io(t.biasConstraint),this.kernelRegularizer=qi(t.kernelRegularizer),this.biasRegularizer=qi(t.biasRegularizer),this.activityRegularizer=qi(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Fr(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Fr(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return(0,a.DZQ)((()=>{this.invokeCallHook(t,e);const n=Rr(t),a=xs(this.activation.getClassName());let s;return null!=a?s=$s(n,this.kernel.read(),a,this.bias?this.bias.read():null):(s=$s(n,this.kernel.read()),null!=this.bias&&(s=ar(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const t={units:this.units,activation:Bi(this.activation),useBias:this.useBias,kernelInitializer:Cr(this.kernelInitializer),biasInitializer:Cr(this.biasInitializer),kernelRegularizer:Hi(this.kernelRegularizer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),kernelConstraint:ro(this.kernelConstraint),biasConstraint:ro(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Bc.className="Dense",a.JFn.registerClass(Bc);class Wc extends Vr{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Fr(t);for(const e of t.slice(1))if(null==e)throw new Qa('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(t.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[t[0],Ps(t,1)]}call(t,e){return(0,a.DZQ)((()=>{this.invokeCallHook(t,e);let n=Rr(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=(0,a.mgz)(n,t)}return function(t){if(t.rank<=1)throw new Qa("batchFlatten requires a minimum rank of 2. Got rank: ".concat(t.rank,"."));const e=[t.shape[0],Ps(t.shape,1)];return a.tQQ(t,e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Wc.className="Flatten",a.JFn.registerClass(Wc);class Uc extends Vr{constructor(t){super(t),this.supportsMasking=!0,this.activation=Ui(t.activation)}call(t,e){return(0,a.DZQ)((()=>{this.invokeCallHook(t,e);const n=Rr(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Bi(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Uc.className="Activation",a.JFn.registerClass(Uc);class Vc extends Vr{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return(0,a.DZQ)((()=>{return t=Rr(t),e=t,n=this.n,(0,a.DZQ)((()=>{if(2!==e.shape.length)throw new Qa("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(e.shape.length," tensor."));return Xs(Ks(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Vc.className="RepeatVector",a.JFn.registerClass(Vc);class Gc extends Vr{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",a=e.slice();let s=1,r=null;for(let i=0;i<a.length;++i){const t=a[i];if(this.isUnknown(t)){if(null!==r)throw new Qa("Can only specifiy one unknown dimension.");r=i}else s*=t}const o=Ps(t);if(null!==r){if(0===s||o%s!==0)throw new Qa(n);a[r]=o/s}else if(o!==s)throw new Qa(n);return a}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return(0,a.DZQ)((()=>{this.invokeCallHook(t,e);const n=Rr(t),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return(0,a.tQQ)(n,r)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Gc.className="Reshape",a.JFn.registerClass(Gc);class Zc extends Vr{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(t.dims," instead."));const e=Us(1,t.dims.length+1);if(!a.ZSL.arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new zr({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Fr(t)).slice();return this.dims.forEach(((n,a)=>{e[a+1]=t[n]})),e}call(t,e){return(0,a.mgz)(Rr(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Zc.className="Permute",a.JFn.registerClass(Zc);class Kc extends Vr{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Rr(t);return(0,a.bzn)((0,a.Ec)(n,this.maskValue),-1)}call(t,e){return(0,a.DZQ)((()=>{this.invokeCallHook(t,e);const n=Rr(t),s=(0,a.bzn)((0,a.Ec)(n,this.maskValue),-1,!0);return(0,a.lKK)(n,(0,a.wgE)(s,n.dtype))}))}}Kc.className="Masking",a.JFn.registerClass(Kc);class Hc extends Vr{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(ss(t.inputLength))}this.inputDim=t.inputDim,ms(this.inputDim,"inputDim"),this.outputDim=t.outputDim,ms(this.outputDim,"outputDim"),this.embeddingsInitializer=Nr(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=qi(t.embeddingsRegularizer),this.activityRegularizer=qi(t.activityRegularizer),this.embeddingsConstraint=io(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return(0,a.DZQ)((()=>this.maskZero?(t=Rr(t),(0,a.Ec)(t,(0,a.POl)(t))):null))}computeOutputShape(t){if(t=Fr(t),null==this.inputLength)return[...t,this.outputDim];const e=ss(this.inputLength);if(e.length!==t.length-1)throw new Qa('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(t));{let n=0;for(let a=0;a<e.length;++a){const s=e[a],r=t[a+1];if(null!=s&&null!=r&&s!==r)throw new Qa('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(t));null==s&&(e[n]=r),n++}}return[t[0],...e,this.outputDim]}call(t,e){return(0,a.DZQ)((()=>{this.invokeCallHook(t,e);let n=Rr(t);"int32"!==n.dtype&&(n=Zs(n,"int32"));const s=tr(this.embeddings.read(),(0,a.tQQ)(n,[n.size]));return(0,a.tQQ)(s,Fr(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Cr(this.embeddingsInitializer),embeddingsRegularizer:Hi(this.embeddingsRegularizer),activityRegularizer:Hi(this.activityRegularizer),embeddingsConstraint:ro(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Hc.className="Embedding",a.JFn.registerClass(Hc);class jc extends Vr{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Xa}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let a=0;a<e.length;++a){const s=t[t.length-e.length+a],r=e[a];if(null==s||null==r||s<0||r<0)n.push(null);else if(1===s)n.push(r);else if(1===r)n.push(s);else{if(s!==r)throw new Qa("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Fr(t)]),t.length<2)throw new Qa("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(t.length," input(s)."));let e=[];for(const s of t)null!=s&&null!==s[0]&&e.push(s[0]);if(e=ds(e),e.length>1)throw new Qa("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(t),"."));let n=null==t[0]?null:t[0].slice(1);for(let s=1;s<t.length;++s){const e=null==t[s]?null:t[s].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const a=t.map((t=>t.length));-1===t.indexOf(null)&&1===ds(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return(0,a.DZQ)((()=>{if(this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const a=Ws(n);for(let n of t){const t=n.rank;for(let e=0;e<a-t;++e)n=Ks(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const o of t){const t=o.rank;if(null==t){const t=o.shape,s=t[0],r=t.slice(1).concat([s]);let i=a.tQQ(o,[s].concat(Ps(t.slice(1))));i=a.mgz(i,[1,0]),i=a.tQQ(i,r),e.push(i),n=!0}else if(t>1){const s=Us(1,t).concat([0]);e.push(a.mgz(o,s)),n=!0}else e.push(o)}let s=this.mergeFunction(e);const r=s.rank;if(n)if(null==r){const t=s.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));s=a.tQQ(a.mgz(a.tQQ(s,[-1,e]),[1,0]),n)}else if(r>1){const t=[r-1].concat(Us(0,r-1));s=a.mgz(s,t)}return s}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let a=1;a<t.length;++a){const n=null==t[a]?null:t[a].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const a of t)null!=a&&null!==a[0]&&n.push(a[0]);return n=ds(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return a.DZQ((()=>{if(null==e)return null;if(!Array.isArray(e))throw new Qa("`mask` should be an Array");if(!Array.isArray(t))throw new Qa("`inputs` should be an Array");if(e.length!==t.length)throw new Qa("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(t.length," vs ").concat(e.length,")"));if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:a.UG6(t,0))))[0];for(let t=1;t<e.length-1;++t)n=a.n76(n,e[t]);return n}))}}class qc extends jc{constructor(t){super(t)}mergeFunction(t){return(0,a.DZQ)((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=a.WQq(e,t[n]);return e}))}}qc.className="Add",a.JFn.registerClass(qc);class Yc extends jc{constructor(t){super(t)}mergeFunction(t){return(0,a.DZQ)((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=a.lKK(e,t[n]);return e}))}}Yc.className="Multiply",a.JFn.registerClass(Yc);class Qc extends jc{constructor(t){super(t)}mergeFunction(t){return(0,a.DZQ)((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=a.WQq(e,t[n]);return a.lKK(1/t.length,e)}))}}Qc.className="Average",a.JFn.registerClass(Qc);class Xc extends jc{constructor(t){super(t)}mergeFunction(t){return(0,a.DZQ)((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=a.PhQ(e,t[n]);return e}))}}Xc.className="Maximum",a.JFn.registerClass(Xc);class Jc extends jc{constructor(t){super(t)}mergeFunction(t){return(0,a.DZQ)((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=a.BpO(e,t[n]);return e}))}}Jc.className="Minimum",a.JFn.registerClass(Jc);class $c extends jc{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new Qa("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const a of t)if(null!=a){e=!1;break}if(e)return;const n=[];for(let s=0;s<t.length;++s){const e=t[s].slice();e.splice(this.axis,1);let r=!1;for(const t of n)if(a.ZSL.arraysEqual(t,e)){r=!0;break}r||n.push(e)}if(n.length>1)throw new Qa("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return(0,a.DZQ)((()=>Ys(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Qa("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const s of e.slice(1)){if(null==n[a]||null==s[a]){n[a]=null;break}n[a]+=s[a]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new Qa("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Qa("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Qa("Mismatch in the length of mask (".concat(e.length,") ")+"and the legnth of inputs (".concat(t.length,")"));return a.DZQ((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const s=[];for(let o=0;o<t.length;++o)null==e[o]?s.push(a.wgE(a.P61(t[o]),"bool")):e[o].rank<t[o].rank?s.push(a.UG6(e[o],-1)):s.push(e[o]);const r=a.xWs(s,this.axis);return a.Q7R(r,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function tl(t,e){for(;t<0;)t+=e;return t}$c.className="Concatenate",a.JFn.registerClass($c);class el extends jc{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){a.ZSL.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Xa("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);if(e[s[0]]!==n[s[1]])throw new Qa("Dimension incompatibility: "+"".concat(e[s[0]]," !== ").concat(n[s[1]]))}mergeFunction(t){if(2!==t.length)throw new Qa("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(t.length," input(s)."));let e,n=t[0],s=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>tl(e,t[n].shape.length))):[tl(this.axes,n.shape.length),tl(this.axes,s.shape.length)],this.normalize&&(n=wo(n,e[0]),s=wo(s,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Xa("batchDot is not implemented for tensors of 4D or higher rank yet");if(a.ZSL.assert(t.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(t.shape.length))),a.ZSL.assert(t.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(e.shape.length))),"number"===typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Xa("batchDot is not implemented for complex64-type Tensors yet.");const s=t.shape.length,r=e.shape.length;null==n&&(n=[s-1,r-2]);const o=n;return a.DZQ((()=>{let n,i;if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=a.tQQ(e,e.shape.concat(t))}else if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=a.tQQ(t,t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)i=o[0]===o[1]?a.czq(a.lKK(t,e),o[0]):a.czq(a.lKK(a.mgz(t,[1,0]),e),o[1]);else{const n=o[0]!==t.shape.length-1,s=o[1]===e.shape.length-1;i=a.NoW(t,e,n,s)}if(n>0){let t;t=s>r?s+r-3:s-1;const e=[];for(let a=t;a<t+n;++a)e.push(a);i=a.r2V(i,e)}return 1===i.shape.length&&(i=a.UG6(i,1)),i}))}(n,s,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[tl(this.axes,t.length),tl(this.axes,e.length)],n}computeOutputShape(t){a.ZSL.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Xa("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);e.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=e.concat(n);return 1===r.length&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}el.className="Dot",a.JFn.registerClass(el);class nl extends Vr{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return(0,a.DZQ)((()=>{this.invokeCallHook(t,e);const n=Rr(t);return rr((()=>(0,a.WQq)(Js(n.shape,0,this.stddev),n)),(()=>n),e.training||!1)}))}}nl.className="GaussianNoise",a.JFn.registerClass(nl);class al extends Vr{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return(0,a.DZQ)((()=>{this.invokeCallHook(t,e);const n=Rr(t);if(this.rate>0&&this.rate<1){return rr((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return(0,a.lKK)(n,Js(n.shape,1,t))}),(()=>n),e.training||!1)}return n}))}}al.className="GaussianDropout",a.JFn.registerClass(al);class sl extends Vr{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Rr(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return(0,a.DZQ)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t),s=()=>{const e=Rr(t),s=-1.7580993408473766;let r=(0,a.DQN)((0,a.YeY)(n),this.rate);r=Zs(r,"float32");const o=((1-this.rate)*(1+this.rate*s**2))**-.5,i=-o*s*this.rate,c=(0,a.WQq)((0,a.lKK)(e,r),(0,a.lKK)((0,a.WQq)(r,-1),s));return(0,a.WQq)((0,a.lKK)(c,o),i)};return rr(s,(()=>Rr(t)),e.training||!1)}return t}))}}function rl(t,e,n,s,r){let o,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===t.rank)o=a.BFc(t,e,n,s,r,i);else if(3===t.rank)o=a.kSi(t,e,n,s,r,i);else{if(4!==t.rank)throw new Xa("batchNormalization is not implemented for array of rank ".concat(t.rank," ")+"yet");o=a.T5N(t,e,n,s,r,i)}return o}function ol(t,e,n,s){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return a.ZSL.arraysEqual(s.slice().sort(),Us(0,t.rank-1))?function(t,e,n,s){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,a.DZQ)((()=>{const o=a.Clk(t,s),i=o.mean,c=o.variance;return[rl(t,i,c,n,e,r),i,c]}))}(t,e,n,s,r):function(t,e,n,s){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,a.DZQ)((()=>{const o=a.Clk(t,s),i=o.mean,c=o.variance,l=[];for(const e of Us(0,t.rank))-1!==s.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=(0,a.tQQ)(i,l),h=(0,a.tQQ)(c,l),d=null==e?null:(0,a.tQQ)(e,l),p=null==n?null:(0,a.tQQ)(n,l);return[rl(t,u,h,p,d,r),i,c]}))}(t,e,n,s,r)}sl.className="AlphaDropout",a.JFn.registerClass(sl);class il extends Vr{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Nr(t.betaInitializer||"zeros"),this.gammaInitializer=Nr(t.gammaInitializer||"ones"),this.movingMeanInitializer=Nr(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Nr(t.movingVarianceInitializer||"ones"),this.betaConstraint=io(t.betaConstraint),this.gammaConstraint=io(t.gammaConstraint),this.betaRegularizer=qi(t.betaRegularizer),this.gammaRegularizer=qi(t.gammaRegularizer)}build(t){t=Fr(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new Qa("Axis ".concat(e," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(t),"."));this.inputSpec=[new zr({ndim:t.length,axes:{[e]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return(0,a.DZQ)((()=>{const n=null!=e.training&&e.training,s=Rr(t),r=s.shape,o=r.length,i=Us(0,o),c=this.axis>=0?this.axis:this.axis+o;i.splice(c,1);const l=ts(1,o);l[c]=r[c];const u=i.slice();u.sort();const h=!a.ZSL.arraysEqual(u,Us(0,o).slice(0,o-1));if(!n)return(()=>{if(h){const t=(0,a.tQQ)(this.movingMean.read(),l),e=(0,a.tQQ)(this.movingVariance.read(),l),n=this.center?(0,a.tQQ)(this.beta.read(),l):null,r=this.scale?(0,a.tQQ)(this.gamma.read(),l):null;return rl(s,t,e,n,r,this.epsilon)}return rl(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,p,f]=ol(s,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(t,e,n)=>{a.DZQ((()=>{const s=1-n,r=t.read(),o=a.lKK(a.jbE(r,e),s);t.write(a.jbE(r,o))}))};return(()=>{g(this.movingMean,p,this.momentum),g(this.movingVariance,f,this.momentum)})(),d}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Cr(this.betaInitializer),gammaInitializer:Cr(this.gammaInitializer),movingMeanInitializer:Cr(this.movingMeanInitializer),movingVarianceInitializer:Cr(this.movingVarianceInitializer),betaRegularizer:Hi(this.betaRegularizer),gammaRegularizer:Hi(this.gammaRegularizer),betaConstraint:ro(this.betaConstraint),gammaConstraint:ro(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}il.className="BatchNormalization",a.JFn.registerClass(il);class cl extends Vr{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Nr(t.betaInitializer||"zeros"),this.gammaInitializer=Nr(t.gammaInitializer||"ones"),this.betaRegularizer=qi(t.betaRegularizer),this.gammaRegularizer=qi(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Fr(t)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=e);for(const s of this.axis)if(s<0||s>=e)throw new Error("Invalid axis: ".concat(s));if(this.axis.length!==ds(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map((e=>t[e])),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(t,e){const n=Rr(t),s=n.shape,r=s.length;return(0,a.DZQ)((()=>{let{mean:t,variance:e}=(0,a.Clk)(n,this.axis,!0);const o=ts(1,r);for(const n of this.axis)o[n]=s[n];const i=t=>null!=t&&t.shape.length!==r?a.tQQ(t,o):t;let c=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],h=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(u.push(s[n]),h.push(1)):(u.push(1),h.push(s[n]));return t=a.Vsq(t,u),e=a.Vsq(e,u),null!=c&&(c=a.Vsq(c,h)),null!=l&&(l=a.Vsq(l,h)),rl(n,t,e,l,c,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Cr(this.betaInitializer),gammaInitializer:Cr(this.gammaInitializer),betaRegularizer:Hi(this.betaRegularizer),gammaRegularizer:Hi(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}cl.className="LayerNormalization",a.JFn.registerClass(cl);class ll extends Vr{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new Qa("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(t.padding.length," array."));let e,n;if("number"===typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new Qa("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(t.padding[0].length," array."));if(e=t.padding[0],2!==t.padding[1].length)throw new Qa("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(t.padding[1].length," array."));n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new zr({ndim:4})]}computeOutputShape(t){let e,n;return t=Fr(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return(0,a.DZQ)((()=>{return e=Rr(t),n=this.padding,s=this.dataFormat,(0,a.DZQ)((()=>{if(4!==e.rank)throw new Qa("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(e.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Qa("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new Qa("Unknown data format: ".concat(s,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let t;return t="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],a.eVF(e,t)}));var e,n,s}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function ul(t,e,n,s,r,o){return(0,a.DZQ)((()=>{let i;Es(r),Fs(o),Rs(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==o&&(o="max"),t=sc(t,r);const c="same"===s?"same":"valid";return i="max"===o?a.jgi(t,e,n,c):a.$jT(t,e,n,c),"channelsFirst"===r&&(i=a.mgz(i,[0,3,1,2])),i}))}function hl(t,e,n,s,r,o){return(0,a.DZQ)((()=>{let i;Es(r),Fs(o),Rs(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==o&&(o="max"),t=rc(t,r);const c="same"===s?"same":"valid";return i="max"===o?a.NYV(t,e,n,c):a.sub(t,e,n,c),"channelsFirst"===r&&(i=a.mgz(i,[0,4,1,2,3])),i}))}ll.className="ZeroPadding2D",a.JFn.registerClass(ll);class dl extends Vr{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"===typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!==typeof t.poolSize[0])throw new Qa("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(t.poolSize)));this.poolSize=t.poolSize}if(ms(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"===typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!==typeof t.strides[0])throw new Qa("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(t.strides)));this.strides=t.strides}ms(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Rs(this.padding),this.inputSpec=[new zr({ndim:3})]}computeOutputShape(t){const e=nc((t=Fr(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return(0,a.DZQ)((()=>{this.invokeCallHook(t,e),t=Ks(Rr(t),2);const n=this.poolingFunction(Rr(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return a.r2V(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class pl extends dl{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Es(s),Rs(a),ul(t,e,n,a,s,"max")}}pl.className="MaxPooling1D",a.JFn.registerClass(pl);class fl extends dl{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Es(s),Rs(a),ul(t,e,n,a,s,"avg")}}fl.className="AveragePooling1D",a.JFn.registerClass(fl);class gl extends Vr{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new Qa("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(t.strides.length,"."));this.strides=t.strides}else this.strides=[t.strides,t.strides];ms(this.poolSize,"poolSize"),ms(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Es(this.dataFormat),Rs(this.padding),this.inputSpec=[new zr({ndim:4})]}computeOutputShape(t){t=Fr(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=nc(e,this.poolSize[0],this.padding,this.strides[0]),n=nc(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return(0,a.DZQ)((()=>(this.invokeCallHook(t,e),this.poolingFunction(Rr(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ml extends gl{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Es(s),Rs(a),ul(t,e,n,a,s,"max")}}ml.className="MaxPooling2D",a.JFn.registerClass(ml);class bl extends gl{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Es(s),Rs(a),ul(t,e,n,a,s,"avg")}}bl.className="AveragePooling2D",a.JFn.registerClass(bl);class xl extends Vr{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new Qa("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(t.strides.length,"."));this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];ms(this.poolSize,"poolSize"),ms(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Es(this.dataFormat),Rs(this.padding),this.inputSpec=[new zr({ndim:5})]}computeOutputShape(t){t=Fr(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],a="channelsFirst"===this.dataFormat?t[4]:t[3];return e=nc(e,this.poolSize[0],this.padding,this.strides[0]),n=nc(n,this.poolSize[1],this.padding,this.strides[1]),a=nc(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,a]:[t[0],e,n,a,t[4]]}call(t,e){return(0,a.DZQ)((()=>(this.invokeCallHook(t,e),this.poolingFunction(Rr(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class yl extends xl{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Es(s),Rs(a),hl(t,e,n,a,s,"max")}}yl.className="MaxPooling3D",a.JFn.registerClass(yl);class vl extends xl{constructor(t){super(t)}poolingFunction(t,e,n,a,s){return Es(s),Rs(a),hl(t,e,n,a,s,"avg")}}vl.className="AveragePooling3D",a.JFn.registerClass(vl);class wl extends Vr{constructor(t){super(t),this.inputSpec=[new zr({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Xa}}class kl extends wl{constructor(t){super(t||{})}call(t,e){return(0,a.DZQ)((()=>{const e=Rr(t);return a.i2o(e,1)}))}}kl.className="GlobalAveragePooling1D",a.JFn.registerClass(kl);class Sl extends wl{constructor(t){super(t||{})}call(t,e){return(0,a.DZQ)((()=>{const e=Rr(t);return a.T9B(e,1)}))}}Sl.className="GlobalMaxPooling1D",a.JFn.registerClass(Sl);class Tl extends Vr{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Es(this.dataFormat),this.inputSpec=[new zr({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Xa}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Il extends Tl{call(t,e){return(0,a.DZQ)((()=>{const e=Rr(t);return"channelsLast"===this.dataFormat?a.i2o(e,[1,2]):a.i2o(e,[2,3])}))}}Il.className="GlobalAveragePooling2D",a.JFn.registerClass(Il);class Cl extends Tl{call(t,e){return(0,a.DZQ)((()=>{const e=Rr(t);return"channelsLast"===this.dataFormat?a.T9B(e,[1,2]):a.T9B(e,[2,3])}))}}Cl.className="GlobalMaxPooling2D",a.JFn.registerClass(Cl);class Nl extends Vr{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=vo(e.layer,n);delete e.layer;const s={layer:a};return Object.assign(s,e),new t(s)}}class Al extends Nl{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Fr(t)).length<3)throw new Qa("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(t)));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Fr(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),a=t[1];return[n[0],a].concat(n.slice(1))}call(t,e){return(0,a.DZQ)((()=>kc(((t,n)=>[Rr(this.layer.call(t,e)),[]]),t=Rr(t),[],!1,null,null,!1,!0)[1]))}}Al.className="TimeDistributed",a.JFn.registerClass(Al);class El extends Nl{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=vo(n),e.goBackwards=!0!==e.goBackwards;const a={};var s;if(a.className=t.layer.getClassName(),a.config=e,this.backwardLayer=vo(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,fs(Ns,"BidirectionalMergeMode",s),t.weights)throw new Xa("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,a,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(a=s.slice(1),e=s[0]):e=s[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[e].concat(a).concat(a.slice()):as(n)}apply(t,e){let n=null==e?null:e.initialState,a=null==e?null:e.constants;null==e&&(e={});const s=wc(t,n,a,this.numConstants);if(t=s.inputs,n=s.initialState,a=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==a)return super.apply(t,e);const r=[],o=[];if(null!=n){const t=n.length;if(t%2>0)throw new Qa("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,r.push(...n);const a=n.map((t=>new zr({shape:t.shape})));this.forwardLayer.stateSpec=a.slice(0,t/2),this.backwardLayer.stateSpec=a.slice(t/2),o.push(...a)}if(null!=a)throw new Xa("Support for constants in Bidirectional layers is not implemented yet.");const i=r[0]instanceof Pr;for(const c of r)if(c instanceof Pr!==i)throw new Qa("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[t].concat(r),a=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=a;const i=super.apply(n,e);return this.inputSpec=s,i}return super.apply(t,e)}call(t,e){return(0,a.DZQ)((()=>{const n=e.initialState;let s,r,o,i;if(null==n)s=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const a=n.slice(0,n.length/2),o=n.slice(n.length/2);s=this.forwardLayer.call(t,Object.assign(e,{initialState:a})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:o}))}return this.returnState&&(Array.isArray(s)&&(o=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=a.BEg(r,1)),"concat"===this.mergeMode?i=Ys([s,r]):"sum"===this.mergeMode?i=a.WQq(s,r):"ave"===this.mergeMode?i=a.lKK(.5,a.WQq(s,r)):"mul"===this.mergeMode?i=a.lKK(s,r):null==this.mergeMode&&(i=[s,r]),this.returnState?null==this.mergeMode?i.concat(o):[i].concat(o):i}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){_s(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),_s(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=vo(e.layer);if(delete e.layer,null!=e.numConstants)throw new Xa("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=e;return a.layer=n,new t(a)}}El.className="Bidirectional",a.JFn.registerClass(El);class Rl extends Vr{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return(0,a.DZQ)((()=>("float32"!==(t=Rr(t)).dtype&&(t=Zs(t,"float32")),(0,a.WQq)((0,a.lKK)(t,this.scale),this.offset))))}}Rl.className="Rescaling",a.JFn.registerClass(Rl);const{resizeBilinear:Fl,cropAndResize:Dl}=a.Slp;class _l extends Vr{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,n,s,r,o,i,c){return(0,a.DZQ)((()=>{let l,u=!1;const h=[e/o,n/i,(s+e)/o,(r+n)/i],d=[];3===t.rank?(u=!0,l=(0,a.t$z)([t])):l=t;for(let t=0;t<l.shape[0];t++)d.push(h);const p=(0,a.OEK)(d,[d.length,4]),f=(0,a.y17)(0,d.length,1,"int32"),g=Dl(l,p,f,[s,r],"nearest");return Zs(u?Rr((0,a.K$i)(g)):g,c)}))}upsize(t,e,n,s){return(0,a.DZQ)((()=>Zs(Fl(t,[e,n]),s)))}call(t,e){return(0,a.DZQ)((()=>{const e=Rr(t),n=e.dtype,a=e.shape,s=a[a.length-3],r=a[a.length-2];let o=0;s!==this.height&&(o=Math.floor((s-this.height)/2));let i=0;return r!==this.width&&(i=Math.floor((r-this.width)/2),0===i&&(i=1)),o>=0&&i>=0?this.centerCrop(e,o,i,this.height,this.width,s,r,n):this.upsize(t,this.height,this.width,n)}))}getConfig(){const t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){const e=(t=Fr(t)).length-3,n=t.length-2;return t[e]=this.height,t[n]=this.width,t}}_l.className="CenterCrop",a.JFn.registerClass(_l);class Ll extends Vr{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return null==(t=Fr(t))?[this.numTokens]:"oneHot"===this.outputMode&&1!==t[t.length-1]?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return(0,a.DZQ)((()=>{let n;if("int32"!==(t=Rr(t)).dtype&&(t=Zs(t,"int32")),"undefined"!==typeof e.countWeights){if("count"!==this.outputMode)throw new Qa("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(e.countWeights));n=Rr(e.countWeights)}const s=(0,a.T9B)(t),r=(0,a.jkA)(t),o=(0,a.rhj)(this.numTokens,s).bufferSync().get(0),i=(0,a.DQN)(r,0).bufferSync().get(0);if(!o||!i)throw new Qa("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));return function(t,e,n,s){let r=Rr(t);if("int32"!==r.dtype&&(r=Zs(r,"int32")),"int"===e)return r;const o=r.shape;if(0===r.rank&&(r=(0,a.UG6)(r,-1)),"oneHot"===e&&1!==r.shape[r.shape.length-1]&&(r=(0,a.UG6)(r,-1)),r.rank>2)throw new Qa("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(e," and input shape ").concat(o)+" which would result in output rank ".concat(r.rank,"."));const i=["multiHot","oneHot"].includes(e),c=r;let l;if(l="undefined"!==typeof s&&"count"===e?(0,a.aOp)(c,s,n,i):(0,a.aOp)(c,[],n,i),"tfIdf"!==e)return l;if(s)return(0,a.lKK)(l,s);throw new Qa("When outputMode is 'tfIdf', weights must be provided.")}(t,this.outputMode,this.numTokens,n)}))}}Ll.className="CategoryEncoding",a.JFn.registerClass(Ll);const Ol=new Set(["bilinear","nearest"]);class Ml extends Vr{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation){if(!Ol.has(t.interpolation))throw new Qa("Invalid interpolation parameter: ".concat(t.interpolation," is not implemented"));this.interpolation=t.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(t.cropToAspectRatio)}computeOutputShape(t){const e=(t=Fr(t))[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return(0,a.DZQ)((()=>{const e=[this.height,this.width];if("bilinear"===this.interpolation)return a.Slp.resizeBilinear(t,e,!this.cropToAspectRatio);if("nearest"===this.interpolation)return a.Slp.resizeNearestNeighbor(t,e,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...Ol]," are supported"))}))}}Ml.className="Resizing",a.JFn.registerClass(Ml);class zl{constructor(t){this.seed=t}next(){if(void 0!==this.seed)return this.seed++}}zl.className="RandomSeed";class Pl extends Vr{constructor(t){super(t),this.randomGenerator=new zl(t.seed)}getConfig(){const t={seed:this.randomGenerator.seed},e=super.getConfig();return Object.assign(t,e),t}}Pl.className="BaseRandomLayer";const Bl=new Set(["bilinear","nearest"]);class Wl extends Pl{constructor(t){super(t);const{factor:e,interpolation:n="bilinear"}=t;if(this.factor=e,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Qa("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Qa("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new Qa("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!Bl.has(n))throw new Qa("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const t={factor:this.factor,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){const e=(t=Fr(t))[2];return[this.imgHeight,-1,e]}call(t,e){return(0,a.DZQ)((()=>{const e=Rr(t);this.imgHeight=e.shape[e.shape.length-3];const n=e.shape[e.shape.length-2];this.widthFactor=(0,a.YeY)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let s=this.widthFactor.dataSync()[0]*n;s=Math.round(s);const r=[this.imgHeight,s];switch(this.interpolation){case"bilinear":return a.Slp.resizeBilinear(t,r);case"nearest":return a.Slp.resizeNearestNeighbor(t,r);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([...Bl]," are supported"))}}))}}Wl.className="RandomWidth",a.JFn.registerClass(Wl);var Ul,Vl;(0,a._K2)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"}(Ul||(Ul={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(Vl||(Vl={}));Error;new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);n(70285);var Gl,Zl=n(34334);function Kl(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==t)return null;if("function"===typeof Blob&&t instanceof Blob)return t.slice();if(a.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(Yl(t)){const s=Array.isArray(t)?[]:{};a.add(t);for(const r in t){const o=Kl(t[r],e,n,a);s[r]=o}return a.delete(t),t.__proto__&&(s.__proto__=t.__proto__),s}throw new Error("Can't recurse into non-iterable type: ".concat(t))}return n.set(t,s.value),s.value}function Hl(t){return jl(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:ql)}function jl(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const a=t[0];if(n.has(a))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(Yl(a)){const s=Array.isArray(a)?[]:{};n.add(a);for(const r in a){const a=jl(t.map((t=>t[r])),e,n);s[r]=a}return n.delete(a),s}throw new Error("Can't recurse into non-iterable type: ".concat(a))}return s.value}function ql(t){return null===t?null:Yl(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function Yl(t){let e=!1;if(a._K2().get("IS_BROWSER"))e=t instanceof TextDecoder;else{const{StringDecoder:a}=n(80551);e=t instanceof a}return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"===typeof t&&!(t instanceof a.qYS)&&!(t instanceof Promise)&&!e)}function Ql(t){return function(t,e){return Kl(t,e)}(t,Xl)}function Xl(t){return t instanceof a.qYS?{value:t.clone(),recurse:!1}:Yl(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class Jl{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class $l extends Jl{constructor(){super($l.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let a=0;a<n;a++)e[a]=this.get(this.wrap(this.begin+a));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function tu(t){return new su(t)}function eu(t,e){return new gu(t,e)}$l.INITIAL_CAPACITY=32;class nu{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new hu(this,t)}filter(t){return new lu(this,t)}map(t){return new uu(this,t)}mapAsync(t){return new du(this,t)}serialMapAsync(t){return new du(this,t).serial()}flatmap(t){return new fu(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t){return new cu(this,t,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ql;return this.rowMajorBatch(t,e).map((t=>Hl(t,n)))}concatenate(t,e){return new gu(new au([this,t]),e)}take(t){return t<0||null==t?this:new iu(this,t)}skip(t){return t<0||null==t?this:new ou(this,t)}prefetch(t){return new mu(this,t)}shuffle(t,e){return new bu(this,t,e)}serial(){return new ru(this)}}class au extends nu{constructor(t){super(),this.items=t,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:Ql(t),done:!1}}}class su extends nu{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message="Error thrown while iterating through a dataset: ".concat(t.message),t}}}class ru extends nu{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class ou extends nu{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;a.ASo(t.value)}return this.upstream.next()}}class iu extends nu{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class cu extends nu{constructor(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class lu extends nu{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;a.ASo(t.value)}}}class uu extends nu{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=a.d_S.getTensorsInContainer(t.value),n=this.transform(t.value),s=a.d_S.getTensorsInContainer(n);for(const r of e)a.d_S.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}}class hu extends nu{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class du extends nu{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=a.d_S.getTensorsInContainer(t.value),n=await this.transform(t.value),s=a.d_S.getTensorsInContainer(n);for(const r of e)a.d_S.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}}class pu extends nu{constructor(){super(),this.outputQueue=new $l,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class fu extends pu{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=a.d_S.getTensorsInContainer(t.value),n=this.transform(t.value),s=a.d_S.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const r of e)a.d_S.isTensorInList(r,s)||r.dispose();return!0}}class gu extends nu{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(Gl||(Gl={}));class mu extends nu{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Jl(e)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class bu extends mu{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Zl.alea(n||a.ZSL.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class xu{constructor(){this.size=null}batch(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let s;return a.ZSL.assert(t>0,(()=>"batchSize needs to be positive, but it is\n      ".concat(t))),s=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),yu((async()=>(await n.iterator()).columnMajorBatch(t,e,vu)),s)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,yu((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,yu((async()=>(await e.iterator()).filter((e=>a.DZQ((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return yu((async()=>(await e.iterator()).map((e=>a.DZQ((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return yu((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return yu((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,yu((async()=>eu(tu((async()=>({value:await e.iterator(),done:!1}))).take(t))),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,yu((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const s=this,r=Zl.alea(e||a.ZSL.now().toString());return yu((async()=>{let e=r.int32();return n&&(e+=r.int32()),(await s.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,yu((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function yu(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends xu{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function vu(t){if(null===t)return null;if(function(t){return null==t||null===(e=t)||"object"!==typeof e&&"function"!==typeof e||Array.isArray(t)||"object"===typeof t&&t instanceof a.qYS||a.ZSL.isTypedArray(t);var e}(t[0])){return{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof a.qYS?a.t$z(t):a.OEK(t)}(t),recurse:!1}}return{value:null,recurse:!0}}xu.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");var wu=n(3143);const ku=a.kpo.YO;class Su extends a.uI_{nextDataId(){return Su.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new a.GJx(this,(0,a.Hi9)())}write(t,e,n){this.firstUse&&(this.firstUse=!1,(0,a._K2)().get("IS_NODE")&&a.C0T.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:t,dtype:n,refCount:1}),s}makeTensorInfo(t,e,n){let s;if("string"===e&&null!=n&&n.length>0&&a.ZSL.isString(n[0])){const r=n.map((t=>a.ZSL.encodeString(t)));s=this.write(r,t,e)}else s=this.write(n,t,e);return{dataId:s,shape:t,dtype:e}}refCount(t){if(this.data.has(t)){return this.data.get(t).refCount}return 0}incRef(t){this.data.get(t).refCount++}decRef(t){if(this.data.has(t)){this.data.get(t).refCount--}}move(t,e,n,a,s){this.data.set(t,{values:e,dtype:a,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){const t=this.readSync(n.real.dataId),e=this.readSync(n.imag.dataId);return a.C0T.mergeRealAndImagArrays(t,e)}return a.ZSL.convertBackendValuesAndArrayBuffer(this.data.get(t).values,e)}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map((t=>a.ZSL.decodeString(t)));return(0,a.ra8)(t.shape,t.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,a.ra8)(t.shape,t.dtype,e)}makeOutput(t,e,n){return(0,a.Hi9)().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,t),this)}disposeData(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=a.ZSL.now();t();return{kernelMs:a.ZSL.now()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){(0,wu.C)([t],"where");const e=this.readSync(t.dataId);return ku(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Su.nextDataId=0;(0,a.gJX)("cpu",(()=>new Su),1);var Tu=n(34729);const Iu=(0,Tu.v)(a.Pah,(t=>t>=0?t:Math.exp(t)-1)),Cu={kernelName:a.Pah,backendName:"cpu",kernelFunc:Iu};var Nu=n(3701);function Au(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{alpha:o}=s;(0,wu.C)([r],"leakyRelu");const i=a.ZSL.sizeFromShape(r.shape),c=n.data.get(r.dataId).values,l=a.ZSL.getTypedArrayFromDType("float32",i);for(let a=0;a<c.length;a++)l[a]=c[a]<0?o*c[a]:c[a];return n.makeTensorInfo(r.shape,"float32",l)}const Eu={kernelName:a.X0$,backendName:"cpu",kernelFunc:Au};var Ru=n(82312);const Fu=(0,Ru.Z)(((t,e)=>t<0?e*t:t));function Du(t){const{inputs:e,backend:n}=t,{x:a,alpha:s}=e;(0,wu.C)([a,s],"prelu");const r=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values,[i,c]=Fu(a.shape,s.shape,r,o,"float32");return n.makeTensorInfo(c,"float32",i)}const _u={kernelName:a.Ncv,backendName:"cpu",kernelFunc:Du},Lu=(0,Tu.v)(a.fUj,(t=>Math.max(0,t))),Ou={kernelName:a.fUj,backendName:"cpu",kernelFunc:Lu},Mu=(0,Tu.v)(a.P_L,(t=>Math.min(Math.max(0,t),6))),zu={kernelName:a.P_L,backendName:"cpu",kernelFunc:Mu};var Pu=n(42511);function Bu(t,e,n,a,s){if("linear"===n)return(0,Nu.D)({inputs:{x:e},backend:t});if("relu"===n)return Lu({inputs:{x:e},backend:t});if("elu"===n)return Iu({inputs:{x:e},backend:t});if("relu6"===n)return Mu({inputs:{x:e},backend:t});if("prelu"===n)return Du({inputs:{x:e,alpha:a},backend:t});if("leakyrelu"===n)return Au({inputs:{x:e},backend:t,attrs:{alpha:s}});if("sigmoid"===n)return(0,Pu.ry)({inputs:{x:e},backend:t});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}var Wu=n(49864);function Uu(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:o}=s,i=a.ZSL.sizeFromShape(r.shape),c=a.ZSL.inferFromImplicitShape(o,i),l=a.ZSL.sizeFromShape(c);a.ZSL.assert(i===l,(()=>"The new shape (".concat(c,") has ").concat(l," elements and the old ")+"shape (".concat(r.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements.")),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const t=u.complexTensorInfos.real,e=u.complexTensorInfos.imag;t.shape=c,e.shape=c}return{dataId:r.dataId,shape:c,dtype:r.dtype}}const Vu={kernelName:a.R23,backendName:"cpu",kernelFunc:Uu};function Gu(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:o}=e,{transposeA:i,transposeB:c}=s;(0,wu.C)([r,o],"matMul");const l=r.shape.length,u=o.shape.length,h=i?r.shape[l-2]:r.shape[l-1],d=c?o.shape[u-1]:o.shape[u-2],p=i?r.shape[l-1]:r.shape[l-2],f=c?o.shape[u-2]:o.shape[u-1],g=r.shape.slice(0,-2),m=o.shape.slice(0,-2),b=a.ZSL.sizeFromShape(g),x=a.ZSL.sizeFromShape(m),y=a.ZEY.assertAndGetBroadcastShape(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([p,f]);a.ZSL.assert(h===d,(()=>"Error in matMul: inner shapes (".concat(h,") and (")+"".concat(d,") of Tensors with shapes ").concat(r.shape," and ")+"".concat(o.shape," and transposeA=").concat(i)+" and transposeB=".concat(c," must match.")));const v=c?[x,f,d]:[x,d,f],w=Uu({inputs:{x:r},backend:n,attrs:{shape:i?[b,h,p]:[b,p,h]}}),k=Uu({inputs:{x:o},backend:n,attrs:{shape:v}}),S=i?w.shape[1]:w.shape[2],T=i?w.shape[2]:w.shape[1],I=c?k.shape[1]:k.shape[2],C=Math.max(b,x),N=n.data.get(w.dataId).values,A=n.data.get(k.dataId).values,E=a.ZSL.computeStrides(w.shape),R=a.ZSL.computeStrides(k.shape),[F,D,_]=i?[E[0],1,E[1]]:[E[0],E[1],1],[L,O,M]=c?[1,R[1],R[0]]:[R[1],1,R[0]],z=T*I,P=(0,a.ra8)([C,T,I],w.dtype),B=P.values,W=n.blockSize;for(let a=0;a<C;a++){const t=a%b,e=a%x;for(let n=0;n<T;n+=W){const s=Math.min(n+W,T);for(let r=0;r<I;r+=W){const o=Math.min(r+W,I);for(let i=0;i<S;i+=W){const c=Math.min(i+W,S);for(let l=n;l<s;l++)for(let n=r;n<o;n++){let s=0;for(let a=i;a<c;a++){s+=N[t*F+l*D+a*_]*A[a*L+n*O+e*M]}B[a*z+(l*I+n)]+=s}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(y,P.dtype,P.values)}const Zu={kernelName:a.jAQ,backendName:"cpu",kernelFunc:Gu};const Ku={kernelName:a.Dr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:s,b:r,bias:o,preluActivationWeights:i}=e,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;let d,p,f;const g=[];d=Gu({inputs:{a:s,b:r},attrs:{transposeA:c,transposeB:l},backend:n}),o&&(p=(0,Wu.WQ)({inputs:{a:d,b:o},backend:n}),g.push(d),d=p),u&&(f=Bu(n,d,u,i,h),g.push(d),d=f);for(const m of g)n.disposeIntermediateTensorInfo(m);return d}};var Hu=n(85903);const ju=(0,Tu.v)(a.Vvy,(t=>Math.acos(t))),qu={kernelName:a.Vvy,backendName:"cpu",kernelFunc:ju},Yu=(0,Tu.v)(a.PH8,(t=>Math.acosh(t))),Qu={kernelName:a.PH8,backendName:"cpu",kernelFunc:Yu};const Xu={kernelName:a.EkD,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,s=e;(0,wu.C)(e,"addN");const r=s.map((t=>n.data.get(t.dataId).values)),o=(0,a.ra8)(s[0].shape,s[0].dtype),i=o.values;for(let a=0;a<s.length;a++){const t=r[a];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};var Ju=n(89868);const $u={kernelName:a.u8Z,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:i}=s;(0,wu.C)(r,"all");const c=a.ZSL.parseAxisParam(o,r.shape);let l=c;const u=a.C0T.getAxesPermutation(l,r.shape.length);let h=r;null!=u&&(h=(0,Ju.m)({inputs:{x:r},backend:n,attrs:{perm:u}}),l=a.C0T.getInnerMostAxes(l.length,r.shape.length)),a.C0T.assertAxesAreInnerMostDims("all",l,h.shape.length);const[d,p]=a.C0T.computeOutAndReduceShapes(h.shape,l),f=a.ZSL.sizeFromShape(p),g=a.ZSL.makeZerosTypedArray(a.ZSL.sizeFromShape(d),h.dtype),m=n.data.get(h.dataId).values;for(let a=0;a<g.length;++a){const t=a*f;let e=m[t];for(let n=0;n<f;++n){const a=m[t+n];e=e&&a}g[a]=e}null!=u&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(d,h.dtype,g);if(i){const t=Uu({inputs:{x:b},backend:n,attrs:{shape:a.C0T.expandShapeToKeepDim(d,c)}});return n.disposeIntermediateTensorInfo(b),t}return b}};const th={kernelName:a.FSt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:i}=s;(0,wu.C)(r,"any");const c=a.ZSL.parseAxisParam(o,r.shape);let l=c;const u=a.C0T.getAxesPermutation(l,r.shape.length);let h=r;null!=u&&(h=(0,Ju.m)({inputs:{x:r},backend:n,attrs:{perm:u}}),l=a.C0T.getInnerMostAxes(l.length,r.shape.length)),a.C0T.assertAxesAreInnerMostDims("any",l,h.shape.length);const[d,p]=a.C0T.computeOutAndReduceShapes(h.shape,l),f=a.ZSL.sizeFromShape(p),g=a.ZSL.makeZerosTypedArray(a.ZSL.sizeFromShape(d),h.dtype),m=n.data.get(h.dataId).values;for(let a=0;a<g.length;++a){const t=a*f;let e=m[t];for(let n=0;n<f;++n){const a=m[t+n];e=e||a}g[a]=e}null!=u&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(d,h.dtype,g);if(i){const t=Uu({inputs:{x:b},backend:n,attrs:{shape:a.C0T.expandShapeToKeepDim(d,c)}});return n.disposeIntermediateTensorInfo(b),t}return b}};const eh={kernelName:a.Jp_,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o}=s;(0,wu.C)(r,"argMax");let i=a.ZSL.parseAxisParam(o,r.shape);const c=a.C0T.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=(0,Ju.m)({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=a.C0T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],a.C0T.assertAxesAreInnerMostDims("argMax",i,l.shape.length);const[h,d]=a.C0T.computeOutAndReduceShapes(l.shape,i),p=a.ZSL.sizeFromShape(h),f=a.ZSL.makeZerosTypedArray(p,"int32"),g=a.ZSL.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let a=0;a<f.length;++a){const t=a*g;let e=m[t],n=0;for(let a=0;a<g;++a){const s=m[t+a];s>e&&(e=s,n=a)}f[a]=n}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(h,"int32",f)}};const nh={kernelName:a.p_m,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o}=s;(0,wu.C)(r,"argMin");let i=a.ZSL.parseAxisParam(o,r.shape);const c=a.C0T.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=(0,Ju.m)({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=a.C0T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],a.C0T.assertAxesAreInnerMostDims("argMin",i,l.shape.length);const[h,d]=a.C0T.computeOutAndReduceShapes(l.shape,i),p=a.ZSL.sizeFromShape(h),f=a.ZSL.makeZerosTypedArray(p,"int32"),g=a.ZSL.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let a=0;a<f.length;++a){const t=a*g;let e=m[t],n=0;for(let a=0;a<g;++a){const s=m[t+a];s<e&&(e=s,n=a)}f[a]=n}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(h,"int32",f)}},ah=(0,Tu.v)(a.QKF,(t=>Math.asin(t))),sh={kernelName:a.QKF,backendName:"cpu",kernelFunc:ah},rh=(0,Tu.v)(a.epO,(t=>Math.asinh(t))),oh={kernelName:a.epO,backendName:"cpu",kernelFunc:rh},ih=(0,Tu.v)(a.TyE,(t=>Math.atan(t))),ch={kernelName:a.TyE,backendName:"cpu",kernelFunc:ih};var lh=n(85101);const uh=(0,Ru.Z)(((t,e)=>Math.atan2(t,e))),hh=(0,lh.j)(a.lxb,uh),dh={kernelName:a.lxb,backendName:"cpu",kernelFunc:hh},ph=(0,Tu.v)(a.zP9,(t=>Math.atanh(t))),fh={kernelName:a.zP9,backendName:"cpu",kernelFunc:ph};function gh(t,e,n,s,r,o){const i=r.strideHeight,c=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,g="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=(0,a.ra8)(r.outShape,n),b=m.values,x=r.outShape[1]*r.outShape[2]*r.outShape[3],y=r.outShape[2]*r.outShape[3],v=r.outShape[3];for(let a=0;a<r.batchSize;++a){const e=a*x,n=a*s[0];for(let a=0;a<r.inChannels;++a)for(let m=0;m<r.outHeight;++m){const x=m*i-p,w=Math.max(0,x),k=Math.min(r.inHeight,h+x),S=e+m*y;for(let e=0;e<r.outWidth;++e){const i=e*c-f,h=Math.max(0,i),p=Math.min(r.inWidth,d+i);let m=g,x=0,y=0;for(let e=w;e<k;e+=l){const r=n+e*s[1];for(let e=h;e<p;e+=u){const n=t[r+e*s[2]+a];"max"===o&&n>m?m=n:"avg"===o&&(x+=n,y++)}if(isNaN(m))break}b[S+e*v+a]="avg"===o?x/y:m}}}return m}function mh(t,e,n,s){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=(0,a.ra8)(s.outShape,"int32"),c=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,f=s.padInfo.top,g=s.padInfo.left,m=(0,a.ra8)(e,n,t);for(let a=0;a<s.batchSize;++a)for(let t=0;t<s.inChannels;++t)for(let e=0;e<s.outHeight;++e){const n=e*c-f;let b=n;for(;b<0;)b+=u;const x=Math.min(s.inHeight,d+n);for(let c=0;c<s.outWidth;++c){const d=c*l-g;let f=d;for(;f<0;)f+=h;const y=Math.min(s.inWidth,p+d);let v=Number.NEGATIVE_INFINITY,w=-1;for(let e=b;e<x;e+=u){const i=e-n;for(let n=f;n<y;n+=h){const c=n-d,l=m.get(a,e,n,t);l>v&&(v=l,w=r?o?((a*s.inHeight+e)*s.inWidth+n)*s.inChannels+t:(e*s.inWidth+n)*s.inChannels+t:i*p+c)}}i.set(w,a,e,c,t)}}return i}function bh(t,e,n,s,r,o){const i=r.strideDepth,c=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,h=r.dilationHeight,d=r.dilationWidth,p=r.effectiveFilterDepth,f=r.effectiveFilterHeight,g=r.effectiveFilterWidth,m=r.padInfo.front,b=r.padInfo.top,x=r.padInfo.left,y="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=(0,a.ra8)(r.outShape,n),w=v.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[2]*r.outShape[3]*r.outShape[4],T=r.outShape[3]*r.outShape[4],I=r.outShape[4];for(let a=0;a<r.batchSize;++a){const e=a*k,n=a*s[0];for(let a=0;a<r.inChannels;++a)for(let v=0;v<r.outDepth;++v){const k=v*i-m;let C=k;for(;C<0;)C+=u;const N=Math.min(r.inDepth,p+k),A=e+v*S;for(let e=0;e<r.outHeight;++e){const i=e*c-b;let p=i;for(;p<0;)p+=h;const m=Math.min(r.inHeight,f+i),v=A+e*T;for(let e=0;e<r.outWidth;++e){const i=e*l-x;let c=i;for(;c<0;)c+=d;const f=Math.min(r.inWidth,g+i),b=v+e*I;let k=y,S=0,T=0;for(let e=C;e<N;e+=u){const r=n+e*s[1];for(let e=p;e<m;e+=h){const n=r+e*s[2];for(let e=c;e<f;e+=d){const r=t[n+e*s[3]+a];if("max"===o&&r>k?k=r:"avg"===o&&(S+=r,T++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[b+a]="avg"===o?S/Math.max(T,1):k}}}}return v}const xh={kernelName:a.ho8,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;(0,wu.C)(r,"avgPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=s;a.ZSL.assert(a.C0T.eitherStridesOrDilationsAreOne(i,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'")));const u=a.C0T.computePool2DInfo(r.shape,o,i,1,c,l);let h;if(1===u.filterWidth&&1===u.filterHeight&&a.ZSL.arraysEqual(u.inShape,u.outShape))h=(0,Nu.D)({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=a.ZSL.computeStrides(r.shape),s=gh(t,r.shape,r.dtype,e,u,"avg");h=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return h}};const yh={kernelName:a.cS,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:o,strides:i,pad:c,dimRoundingMode:l,dataFormat:u}=s;(0,wu.C)(r,"avgPool3d");const h=a.C0T.computePool3DInfo(r.shape,o,i,1,c,l,u),d=bh(n.data.get(r.dataId).values,r.shape,r.dtype,a.ZSL.computeStrides(r.shape),h,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}};const vh={kernelName:a.wwC,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o}=e,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=s;(0,wu.C)([r,o],"avgPool3DGrad");const h=a.C0T.computePool3DInfo(o.shape,i,c,1,l,u),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,b=h.filterWidth,x=h.dilationDepth,y=h.dilationHeight,v=h.dilationWidth,w=h.effectiveFilterDepth,k=h.effectiveFilterHeight,S=h.effectiveFilterWidth,T=w-1-h.padInfo.front,I=S-1-h.padInfo.left,C=k-1-h.padInfo.top,N=(0,a.ra8)(o.shape,"float32"),A=1/(g*m*b),E=n.bufferSync(r);for(let a=0;a<h.batchSize;++a)for(let t=0;t<h.inChannels;++t)for(let e=0;e<h.inDepth;++e)for(let n=0;n<h.inHeight;++n)for(let s=0;s<h.inWidth;++s){const r=e-T,o=n-C,i=s-I;let c=0;for(let e=0;e<w;e+=x){const n=(r+e)/d;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let e=0;e<k;e+=y){const s=(o+e)/p;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let e=0;e<S;e+=v){const r=(i+e)/f;if(r<0||r>=h.outWidth||Math.floor(r)!==r)continue;c+=E.get(a,n,s,r,t)}}}N.set(c*A,a,e,n,s,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const wh={kernelName:a.VCH,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o}=e,i=o;(0,wu.C)([r,o],"avgPoolGrad");const{filterSize:c,strides:l,pad:u}=s,h=a.C0T.computePool2DInfo(i.shape,c,l,1,u),d=h.strideHeight,p=h.strideWidth,f=h.filterHeight,g=h.filterWidth,m=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterHeight,y=h.effectiveFilterWidth,v=y-1-h.padInfo.left,w=x-1-h.padInfo.top,k=(0,a.ra8)(i.shape,"float32"),S=1/(f*g),T=n.data.get(r.dataId).values,I=(0,a.ra8)(r.shape,"float32",T);for(let a=0;a<h.batchSize;++a)for(let t=0;t<h.inChannels;++t)for(let e=0;e<h.inHeight;++e)for(let n=0;n<h.inWidth;++n){const s=e-w,r=n-v;let o=0;for(let e=0;e<x;e+=m){const n=(s+e)/d;if(!(n<0||n>=h.outHeight||Math.floor(n)!==n))for(let e=0;e<y;e+=b){const s=(r+e)/p;if(s<0||s>=h.outWidth||Math.floor(s)!==s)continue;o+=I.get(a,n,s,t)}}k.set(o*S,a,e,n,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const kh={kernelName:a.i5R,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,scale:o,offset:i,mean:c,variance:l}=e;a.ZSL.assert(c.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),a.ZSL.assert(null==i||c.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),a.ZSL.assert(null==o||c.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),(0,wu.C)([r,c,l,o,i],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const h=n.data.get(r.dataId).values,d=n.data.get(c.dataId).values,p=n.data.get(l.dataId).values,f=o?n.data.get(o.dataId).values:new Float32Array([1]),g=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(h.length),b=g.length,x=f.length,y=p.length,v=d.length;let w=0,k=0,S=0,T=0;for(let a=0;a<h.length;++a)m[a]=g[w++]+(h[a]-d[k++])*f[S++]/Math.sqrt(p[T++]+u),w>=b&&(w=0),k>=v&&(k=0),S>=x&&(S=0),T>=y&&(T=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};var Sh=n(34357);const Th={kernelName:a.Ik2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:o,crops:i}=s;(0,wu.C)([r],"batchToSpaceND");const c=o.reduce(((t,e)=>t*e)),l=a.C0T.getReshaped(r.shape,o,c),u=a.C0T.getPermuted(l.length,o.length),h=a.C0T.getReshapedPermuted(r.shape,o,c),d=a.C0T.getSliceBeginCoords(i,o.length),p=a.C0T.getSliceSize(h,i,o.length),f=Uu({inputs:{x:r},backend:n,attrs:{shape:l}}),g=(0,Ju.m)({inputs:{x:f},backend:n,attrs:{perm:u}}),m=Uu({inputs:{x:g},backend:n,attrs:{shape:h}}),b=(0,Sh.di)({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),b}};var Ih=n(92412);const Ch={kernelName:a.N4F,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,weights:r}=e,{size:o}=a,i=n.data.get(s.dataId).values,c=n.data.get(r.dataId).values,l=(0,Ih.X)(i,c,r.dtype,r.shape,o);return n.makeTensorInfo([o],r.dtype,l)}};var Nh=n(89475);const Ah={kernelName:a.vj7,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:s,s1:r}=e,o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,c=a.C0T.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return n.makeTensorInfo([c.length],"int32",Int32Array.from(c))}};var Eh=n(668),Rh=n(74034);const Fh=(0,Tu.v)(a.vaV,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),Dh={kernelName:a.vaV,backendName:"cpu",kernelFunc:Fh};var _h=n(73075);const Lh={kernelName:a.$zE,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,s=new Float32Array(a.ZSL.sizeFromShape(e.shape)),r=n.data.get(e.dataId),o=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,c=n.data.get(o.dataId).values,l=n.data.get(i.dataId).values;for(let a=0;a<c.length;a++){const t=c[a],e=l[a];s[a]=Math.hypot(t,e)}return n.makeOutput(s,e.shape,"float32")}};var Oh=n(9044);function Mh(t){const{inputs:e,backend:n}=t,{input:a}=e,s=n.data.get(a.dataId).complexTensorInfos.imag,r=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,r)}const zh={kernelName:a.dv8,backendName:"cpu",kernelFunc:Mh};var Ph=n(35995);function Bh(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s,o=a.ZSL.parseAxisParam(r,e[0].shape)[0],i=e.map((t=>t.shape));a.C0T.assertParamsConsistent(i,o);let c=a.C0T.computeOutShape(e.map((t=>t.shape)),o);if(0===a.ZSL.sizeFromShape(c))return n.makeTensorInfo(c,e[0].dtype,[]);const l=e.filter((t=>a.ZSL.sizeFromShape(t.shape)>0));if(1===l.length)return(0,Nu.D)({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){const t=l.map((t=>(0,Ph.x)({inputs:{input:t},backend:n}))),e=l.map((t=>Mh({inputs:{input:t},backend:n}))),a=Bh({inputs:t,backend:n,attrs:{axis:o}}),s=Bh({inputs:e,backend:n,attrs:{axis:o}}),r=(0,_h.f)({inputs:{real:a,imag:s},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),r}const u=l.map((t=>{const e=a.ZSL.sizeFromShape(t.shape.slice(o));return Uu({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),h=u.map((t=>({vals:n.data.get(t.dataId).values,shape:t.shape})));c=a.C0T.computeOutShape(u.map((t=>t.shape)),1);const d=1===u[0].shape[0],p=(0,Oh.h)(h,c,e[0].dtype,d),f=a.C0T.computeOutShape(l.map((t=>t.shape)),o),g=n.makeTensorInfo(f,e[0].dtype,p);return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}const Wh={kernelName:a.$dB,backendName:"cpu",kernelFunc:Bh};function Uh(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o}=e,{strides:i,pad:c,dataFormat:l,dilations:u,dimRoundingMode:h}=s;(0,wu.C)([r,o],"conv2d");const d=a.C0T.convertConv2DDataFormat(l),p=a.C0T.computeConv2DInfo(r.shape,o.shape,i,u,c,h,!1,d),f=p.filterHeight,g=p.filterWidth,m=p.dilationHeight,b=p.dilationWidth,x=p.padInfo.left,y=p.padInfo.top,v="channelsLast"===p.dataFormat,w=new a.ylz(p.outShape,r.dtype),k=a.ZSL.computeStrides(r.shape),S=a.ZSL.computeStrides(o.shape),T=k[0],I=v?k[1]:k[2],C=v?k[2]:1,N=v?1:k[1],A=w.strides[0],E=v?w.strides[1]:w.strides[2],R=v?w.strides[2]:1,F=v?1:w.strides[1],D=n.data.get(r.dataId).values,_=n.data.get(o.dataId).values,L=w.values;for(let a=0;a<p.batchSize;++a){const t=a*T,e=a*A;for(let n=0;n<p.outHeight;++n){const a=e+n*E,s=n*p.strideHeight-y;for(let e=0;e<f;++e){const n=s+e*m;if(n<0||n>=p.inHeight)continue;const r=e*S[0],o=t+n*I;for(let t=0;t<p.outWidth;++t){const e=a+t*R,n=t*p.strideWidth-x;for(let t=0;t<g;++t){const a=n+t*b;if(a<0||a>=p.inWidth)continue;const s=o+a*C;let i=r+t*S[1];for(let t=0;t<p.inChannels;++t){const n=D[s+t*N];for(let t=0;t<p.outChannels;++t)L[e+t*F]+=n*_[i+t];i+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,L)}const Vh={kernelName:a.p2J,backendName:"cpu",kernelFunc:Uh};const Gh={kernelName:a.rFm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:o}=e,{strides:i,pad:c,dataFormat:l,dimRoundingMode:u,filterShape:h}=s;(0,wu.C)([r,o],"conv2dBackpropFilter");const d=a.C0T.convertConv2DDataFormat(l),p=a.C0T.computeConv2DInfo(r.shape,h,i,1,c,u,!1,d),{strideHeight:f,strideWidth:g,filterHeight:m,filterWidth:b}=p,x="channelsLast"===p.dataFormat,y=new a.ylz(p.filterShape,"float32"),v=p.padInfo.left,w=p.padInfo.top,k=n.data.get(r.dataId).values,S=n.data.get(o.dataId).values,T=new a.ylz(r.shape,r.dtype,k),I=new a.ylz(o.shape,o.dtype,S);for(let a=0;a<m;++a){const t=Math.max(0,Math.ceil((w-a)/f)),e=Math.min(p.outHeight,(p.inHeight+w-a)/f);for(let n=0;n<b;++n){const s=Math.max(0,Math.ceil((v-n)/g)),r=Math.min(p.outWidth,(p.inWidth+v-n)/g);for(let o=0;o<p.inChannels;++o)for(let i=0;i<p.outChannels;++i){let c=0;for(let l=0;l<p.batchSize;++l)for(let u=t;u<e;++u){const t=a+u*f-w;for(let e=s;e<r;++e){const a=n+e*g-v;c+=x?T.get(l,t,a,o)*I.get(l,u,e,i):T.get(l,o,t,a)*I.get(l,i,u,e)}}y.set(c,a,n,o,i)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Zh={kernelName:a.jfg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:o}=e,{inputShape:i,strides:c,pad:l,dataFormat:u,dimRoundingMode:h}=s;(0,wu.C)([r,o],"conv2dBackpropInput");const d=a.ZSL.computeStrides(o.shape),p=a.ZSL.computeStrides(r.shape);let f=a.C0T.convertConv2DDataFormat(u);const g=a.C0T.computeConv2DInfo(i,o.shape,c,1,l,h,!1,f),m=new a.ylz(g.inShape,"float32"),b=m.values,x=n.data.get(r.dataId).values,y=n.data.get(o.dataId).values,[v,w,k]=d,{batchSize:S,filterHeight:T,filterWidth:I,inChannels:C,inHeight:N,inWidth:A,outChannels:E,outHeight:R,outWidth:F,strideHeight:D,strideWidth:_}=g;f=g.dataFormat;const L=T-1-g.padInfo.top,O=I-1-g.padInfo.left,M="channelsLast"===f,z=m.strides[0],P=M?m.strides[1]:m.strides[2],B=M?m.strides[2]:1,W=M?1:m.strides[1],U=p[0],V=M?p[1]:p[2],G=M?p[2]:1,Z=M?1:p[1];for(let a=0;a<S;++a)for(let t=0;t<C;++t)for(let e=0;e<N;++e){const n=e-L,s=Math.max(0,Math.ceil(n/D)),r=Math.min(R,(T+n)/D);for(let o=0;o<A;++o){const i=o-O,c=Math.max(0,Math.ceil(i/_)),l=Math.min(F,(I+i)/_);let u=0;for(let e=s;e<r;++e){const s=e*D-n;for(let n=c;n<l;++n){const r=U*a+V*e+G*n,o=v*(T-1-s)+w*(I-1-(n*_-i))+k*t;for(let t=0;t<E;++t){u+=x[r+Z*t]*y[o+t]}}}b[z*a+P*e+B*o+W*t]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const Kh={kernelName:a.A1h,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o}=e,{strides:i,pad:c,dilations:l}=s;(0,wu.C)([r,o],"conv3d");const u=a.C0T.computeConv3DInfo(r.shape,o.shape,i,l,c),{filterDepth:h,filterHeight:d,filterWidth:p,dilationDepth:f,dilationHeight:g,dilationWidth:m,padInfo:b}=u,x=b.front,y=b.left,v=b.top,w=new a.ylz(u.outShape,r.dtype),k=n.data.get(r.dataId).values,S=n.data.get(o.dataId).values,T=w.values,I=a.ZSL.computeStrides(r.shape),C=a.ZSL.computeStrides(o.shape);for(let a=0;a<u.batchSize;++a){const t=a*I[0],e=a*w.strides[0];for(let n=0;n<u.outDepth;++n){const a=e+n*w.strides[1],s=n*u.strideDepth-x;for(let e=0;e<h;++e){const n=s+e*f;if(n<0||n>=u.inDepth)continue;const r=e*C[0],o=t+n*I[1];for(let t=0;t<u.outHeight;++t){const e=a+t*w.strides[2],n=t*u.strideHeight-v;for(let t=0;t<d;++t){const a=n+t*g;if(a<0||a>=u.inHeight)continue;const s=r+t*C[1],i=o+a*I[2];for(let t=0;t<u.outWidth;++t){const n=e+t*u.outChannels,a=t*u.strideWidth-y;for(let t=0;t<p;++t){const e=a+t*m;if(e<0||e>=u.inWidth)continue;const r=s+t*C[2],o=i+e*u.inChannels;let c=r;for(let t=0;t<u.inChannels;++t){const e=k[o+t];for(let t=0;t<u.outChannels;++t)T[n+t]+=e*S[c+t];c+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Hh={kernelName:a.iGz,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:o}=e,{strides:i,pad:c,filterShape:l}=s;(0,wu.C)([r,o],"conv3dBackpropFilterV2");const u=a.ZSL.computeStrides(r.shape),h=a.ZSL.computeStrides(o.shape),d=a.C0T.computeConv3DInfo(r.shape,l,i,1,c),p=d.strideDepth,f=d.strideHeight,g=d.strideWidth,m=d.filterDepth,b=d.filterHeight,x=d.filterWidth,y=new a.ylz(d.filterShape,"float32"),v=y.values,[w,k,S,T]=y.strides,I=n.data.get(o.dataId).values,[C,N,A,E]=h,R=n.data.get(r.dataId).values,[F,D,_,L]=u,O=d.padInfo.front,M=d.padInfo.left,z=d.padInfo.top;for(let a=0;a<m;++a){const t=Math.max(0,Math.ceil((O-a)/p)),e=Math.min(d.outDepth,(d.inDepth+O-a)/p),n=a*w;for(let s=0;s<b;++s){const r=Math.max(0,Math.ceil((z-s)/f)),o=Math.min(d.outHeight,(d.inHeight+z-s)/f),i=s*k+n;for(let n=0;n<x;++n){const c=Math.max(0,Math.ceil((M-n)/g)),l=Math.min(d.outWidth,(d.inWidth+M-n)/g),u=n*S+i;for(let i=0;i<d.inChannels;++i){const h=i*T+u;for(let u=0;u<d.outChannels;++u){let m=0;for(let h=0;h<d.batchSize;++h){const d=h*F,b=h*C;for(let h=t;h<e;++h){const t=(a+h*p-O)*D+d,e=h*N+b;for(let a=r;a<o;++a){const r=(s+a*f-z)*_+t,o=a*A+e;for(let t=c;t<l;++t){const e=t*E+o;m+=R[(n+t*g-M)*L+r+i]*I[e+u]}}}}v[h+u]=m}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const jh={kernelName:a.gC7,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:o}=e,{pad:i,strides:c,inputShape:l}=s;(0,wu.C)([r],"conv3dBackpropInputV2");const u=a.ZSL.computeStrides(r.shape),h=a.ZSL.computeStrides(o.shape),d=a.C0T.computeConv3DInfo(l,o.shape,c,1,i),p=new a.ylz(d.inShape,"float32"),f=p.values,[g,m,b,x]=p.strides,y=n.data.get(r.dataId).values,[v,w,k,S]=u,T=n.data.get(o.dataId).values,[I,C,N,A]=h,{batchSize:E,filterDepth:R,filterHeight:F,filterWidth:D,inChannels:_,inDepth:L,inHeight:O,inWidth:M,outChannels:z,outDepth:P,outHeight:B,outWidth:W,strideDepth:U,strideHeight:V,strideWidth:G}=d,Z=R-1-d.padInfo.front,K=F-1-d.padInfo.top,H=D-1-d.padInfo.left;for(let a=0;a<E;++a)for(let t=0;t<_;++t)for(let e=0;e<L;++e){const n=e-Z,s=Math.max(0,Math.ceil(n/U)),r=Math.min(P,(R+n)/U);for(let o=0;o<O;++o){const i=o-K,c=Math.max(0,Math.ceil(i/V)),l=Math.min(B,(F+i)/V);for(let u=0;u<M;++u){const h=u-H,d=Math.max(0,Math.ceil(h/G)),p=Math.min(W,(D+h)/G);let E=0;for(let e=s;e<r;++e){const s=e*U-n;for(let n=c;n<l;++n){const r=n*V-i;for(let o=d;o<p;++o){const i=v*a+w*e+k*n+S*o,c=I*(R-1-s)+C*(F-1-r)+N*(D-1-(o*G-h))+A*t;for(let t=0;t<z;++t){E+=y[i+t]*T[c+t]}}}}f[g*a+m*e+b*o+x*u+t]=E}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},qh=(0,Tu.v)(a.Mn0,(t=>Math.cos(t))),Yh={kernelName:a.Mn0,backendName:"cpu",kernelFunc:qh},Qh=(0,Tu.v)(a.MnK,(t=>Math.cosh(t))),Xh={kernelName:a.MnK,backendName:"cpu",kernelFunc:Qh};const Jh={kernelName:a.MRQ,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{image:r,boxes:o,boxInd:i}=e,{cropSize:c,method:l,extrapolationValue:u}=s,[h,d,p,f]=r.shape,g=o.shape[0],[m,b]=c,x=(0,a.ra8)([g,m,b,f],"float32"),y=n.data.get(o.dataId).values,v=n.data.get(i.dataId).values,w=n.data.get(r.dataId).values,k=a.ZSL.computeStrides(r.shape),S=a.ZSL.computeStrides(x.shape);for(let a=0;a<g;a++){const t=4*a,e=y[t],n=y[t+1],s=y[t+2],r=y[t+3],o=v[a];if(o>=h)continue;const i=m>1?(s-e)*(d-1)/(m-1):0,c=b>1?(r-n)*(p-1)/(b-1):0;for(let h=0;h<m;h++){const t=m>1?e*(d-1)+h*i:.5*(e+s)*(d-1);if(t<0||t>d-1)for(let e=0;e<b;e++)for(let t=0;t<f;t++){const n=t+e*S[2]+h*S[1]+a*S[0];x.values[n]=u}else if("bilinear"===l){const e=Math.floor(t),s=Math.ceil(t),i=t-e;for(let t=0;t<b;t++){const l=b>1?n*(p-1)+t*c:.5*(n+r)*(p-1);if(l<0||l>p-1){for(let e=0;e<f;e++){const n=e+t*S[2]+h*S[1]+a*S[0];x.values[n]=u}continue}const d=Math.floor(l),g=Math.ceil(l),m=l-d;for(let n=0;n<f;n++){let r=n+d*k[2]+e*k[1]+o*k[0];const c=w[r];r=n+g*k[2]+e*k[1]+o*k[0];const l=w[r];r=n+d*k[2]+s*k[1]+o*k[0];const u=w[r];r=n+g*k[2]+s*k[1]+o*k[0];const p=c+(l-c)*m,f=u+(w[r]-u)*m;r=n+t*S[2]+h*S[1]+a*S[0],x.values[r]=p+(f-p)*i}}}else for(let e=0;e<b;++e){const s=b>1?n*(p-1)+e*c:.5*(n+r)*(p-1);if(s<0||s>p-1){for(let t=0;t<f;t++){const n=t+e*S[2]+h*S[1]+a*S[0];x.values[n]=u}continue}const i=Math.round(s),l=Math.round(t);for(let t=0;t<f;t++){const n=t+i*k[2]+l*k[1]+o*k[0],s=t+e*S[2]+h*S[1]+a*S[0];x.values[s]=w[n]}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const $h={kernelName:a.jj_,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,exclusive:i,reverse:c}=s;(0,wu.C)(r,"cumprod");const l=a.C0T.getAxesPermutation([o],r.shape.length);let u=r;null!=l&&(u=(0,Ju.m)({inputs:{x:r},backend:n,attrs:{perm:l}}));const h=a.C0T.getInnerMostAxes(1,r.shape.length)[0];if(h!==u.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(u.shape.length-1," but got axis=").concat(h));const d=(0,a.TuY)(u.dtype,"int32"),p=a.ZSL.makeOnesTypedArray(a.ZSL.sizeFromShape(u.shape),d),f=n.data.get(u.dataId).values,g=u.shape[u.shape.length-1],m=c?(t,e)=>t+g-e-1:(t,e)=>t+e;for(let a=0;a<f.length;a+=g)for(let t=0;t<g;t++){const e=m(a,t);if(0===t)p[e]=i?1:f[e];else{const n=m(a,t-1);p[e]=i?f[n]*p[n]:f[e]*p[n]}}const b=n.makeTensorInfo(u.shape,d,p);if(null!=l){const t=a.C0T.getUndoAxesPermutation(l),e=(0,Ju.m)({inputs:{x:b},backend:n,attrs:{perm:t}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(u),e}return b}};const td={kernelName:a.nY8,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,exclusive:i,reverse:c}=s;(0,wu.C)(r,"cumsum");const l=a.C0T.getAxesPermutation([o],r.shape.length);let u=r;null!=l&&(u=(0,Ju.m)({inputs:{x:r},backend:n,attrs:{perm:l}}));const h=a.C0T.getInnerMostAxes(1,r.shape.length)[0];if(h!==u.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(u.shape.length-1," but got axis=").concat(h));const d=(0,a.TuY)(u.dtype,"int32"),p=a.ZSL.makeZerosTypedArray(a.ZSL.sizeFromShape(u.shape),d),f=n.data.get(u.dataId).values,g=u.shape[u.shape.length-1],m=c?(t,e)=>t+g-e-1:(t,e)=>t+e;for(let a=0;a<f.length;a+=g)for(let t=0;t<g;t++){const e=m(a,t);if(0===t)p[e]=i?0:f[e];else{const n=m(a,t-1);p[e]=i?f[n]+p[n]:f[e]+p[n]}}const b=n.makeTensorInfo(u.shape,d,p);if(null!=l){const t=a.C0T.getUndoAxesPermutation(l),e=(0,Ju.m)({inputs:{x:b},backend:n,attrs:{perm:t}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(u),e}return b}};const ed={kernelName:a.wNW,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,weights:r}=e,{size:o,binaryOutput:i}=a;if(1===s.shape.length){const t=n.data.get(s.dataId).values,e=n.data.get(r.dataId).values,a=(0,Ih.X)(t,e,r.dtype,r.shape,o);return n.makeTensorInfo([o],r.dtype,a)}if(2===s.shape.length){const t=n.bufferSync(s),e=n.bufferSync(r),a=(0,Ih.N)(t,e,o,i);return n.makeTensorInfo(a.shape,r.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(s.shape.length,"."))}};const nd={kernelName:a.TMz,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockSize:o,dataFormat:i}=s;a.ZSL.assert("NHWC"===i,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(i)));const c=r.shape[0],l=r.shape[1],u=r.shape[2],h=r.shape[3],d=l*o,p=u*o,f=h/(o*o),g=n.data.get(r.dataId).values,m=new Float32Array(c*d*p*f);let b=0;for(let a=0;a<c;++a)for(let t=0;t<d;++t){const e=Math.floor(t/o),n=t%o;for(let t=0;t<p;++t){const s=Math.floor(t/o),r=(n*o+t%o)*f;for(let t=0;t<f;++t){const n=t+r+h*(s+u*(e+l*a));m[b++]=g[n]}}}return n.makeTensorInfo([c,d,p,f],r.dtype,m)}};function ad(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:o}=e,{strides:i,pad:c,dilations:l,dimRoundingMode:u}=s;(0,wu.C)([r,o],"depthwiseConv2DNative");const h=a.ZSL.computeStrides(r.shape),d=a.ZSL.computeStrides(o.shape);let p=l;null==p&&(p=[1,1]),a.ZSL.assert(a.C0T.eitherStridesOrDilationsAreOne(i,p),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(p,"'")));const f=a.C0T.computeConv2DInfo(r.shape,o.shape,i,p,c,u,!0),{filterHeight:g,filterWidth:m,dilationHeight:b,dilationWidth:x,padInfo:y}=f,v=y.left,w=y.top,k=f.outChannels/f.inChannels,S=new a.ylz(f.outShape,r.dtype),T=n.data.get(r.dataId).values,I=n.data.get(o.dataId).values,C=S.values;for(let a=0;a<f.batchSize;++a){const t=a*h[0],e=a*S.strides[0];for(let n=0;n<f.outHeight;++n){const a=e+n*S.strides[1],s=n*f.strideHeight-w;for(let e=0;e<g;++e){const n=s+e*b;if(n<0||n>=f.inHeight)continue;const r=e*d[0],o=t+n*h[1];for(let t=0;t<f.outWidth;++t){const e=a+t*S.strides[2],n=t*f.strideWidth-v;for(let t=0;t<m;++t){const a=n+t*x;if(a<0||a>=f.inWidth)continue;const s=r+t*d[1],i=o+a*f.inChannels;let c=e,l=s;for(let t=0;t<f.inChannels;++t){const e=T[i+t];for(let t=0;t<k;++t)C[c+t]+=e*I[l+t];c+=k,l+=k}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const sd={kernelName:a.tGH,backendName:"cpu",kernelFunc:ad};const rd={kernelName:a.X$8,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:o}=e,{strides:i,dilations:c,pad:l,dimRoundingMode:u,filterShape:h}=s;(0,wu.C)([r,o],"depthwiseConv2dNativeBackpropFilter");const d=a.C0T.computeConv2DInfo(r.shape,h,i,c,l,u,!0),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,b=new a.ylz(d.filterShape,"float32"),x=d.padInfo.left,y=d.padInfo.top,v=d.outChannels/d.inChannels,w=n.data.get(r.dataId).values,k=new a.ylz(r.shape,r.dtype,w),S=n.data.get(o.dataId).values,T=new a.ylz(o.shape,o.dtype,S);for(let a=0;a<g;++a){const t=Math.max(0,Math.ceil((y-a)/p)),e=Math.min(d.outHeight,(d.inHeight+y-a)/p);for(let n=0;n<m;++n){const s=Math.max(0,Math.ceil((x-n)/f)),r=Math.min(d.outWidth,(d.inWidth+x-n)/f);for(let o=0;o<d.outChannels;++o){const i=Math.trunc(o/v),c=o%v;let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<e;++c){const t=a+c*p-y;for(let e=s;e<r;++e){const a=n+e*f-x;l+=k.get(u,t,a,i)*T.get(u,c,e,o)}}b.set(l,a,n,i,c)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const od={kernelName:a.nVu,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:o}=e,{strides:i,dilations:c,pad:l,dimRoundingMode:u,inputShape:h}=s;(0,wu.C)([r,o],"depthwiseConv2DNativeBackpropInput");const d=a.ZSL.computeStrides(r.shape),p=a.ZSL.computeStrides(o.shape),f=a.C0T.computeConv2DInfo(h,o.shape,i,c,l,u,!0),g=new a.ylz(f.inShape,"float32"),m=g.values,[b,x,y]=g.strides,v=n.data.get(r.dataId).values,[w,k,S]=d,T=n.data.get(o.dataId).values,[I,C,N]=p,{batchSize:A,filterHeight:E,filterWidth:R,inChannels:F,inHeight:D,inWidth:_,outChannels:L,outHeight:O,outWidth:M,strideHeight:z,strideWidth:P}=f,B=E-1-f.padInfo.top,W=R-1-f.padInfo.left,U=L/F;for(let a=0;a<A;++a)for(let t=0;t<F;++t)for(let e=0;e<D;++e){const n=e-B,s=Math.max(0,Math.ceil(n/z)),r=Math.min(O,(E+n)/z);for(let o=0;o<_;++o){const i=o-W,c=Math.max(0,Math.ceil(i/P)),l=Math.min(M,(R+i)/P);let u=0;for(let e=s;e<r;++e){const s=e*z-n;for(let n=c;n<l;++n){const r=w*a+k*e+S*n,o=I*(E-1-s)+C*(R-1-(n*P-i))+N*t;for(let e=0;e<U;++e){u+=v[r+(t*U+e)]*T[o+e]}}}m[b*a+x*e+y*o+t]=u}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const id={kernelName:a.ORI,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e,r=a.ZSL.sizeFromShape(s.shape),o=n.data.get(s.dataId).values,i=(0,a.ra8)([r,r],s.dtype),c=i.values;for(let a=0;a<o.length;a++)c[a*r+a]=o[a];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},cd={kernelName:a.jxD,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:s}=t;const{x:r,filter:o}=e,{strides:i,pad:c,dilations:l}=s,u=n,h=u.data.get(r.dataId).values,d=r.shape.length,p=u.data.get(o.dataId).values,f=o.shape.length,{batchSize:g,inHeight:m,inWidth:b,inChannels:x,outHeight:y,outWidth:v,padInfo:w,strideHeight:k,strideWidth:S,filterHeight:T,filterWidth:I,dilationHeight:C,dilationWidth:N,outShape:A}=a.C0T.computeDilation2DInfo(r.shape,o.shape,i,c,"NHWC",l),E=a.ZSL.sizeFromShape(A),R=A.length,F=a.ZSL.getArrayFromDType(r.dtype,E);for(let D=0;D<g;++D)for(let t=0;t<y;++t){const e=t*k-w.top;for(let n=0;n<v;++n){const s=n*S-w.left;for(let i=0;i<x;++i){let c=Number.MIN_SAFE_INTEGER;for(let t=0;t<T;++t){const n=e+t*C;if(n>=0&&n<m)for(let e=0;e<I;++e){const l=s+e*N;if(l>=0&&l<b){const s=a.ZSL.locToIndex([D,n,l,i],d,a.ZSL.computeStrides(r.shape)),u=a.ZSL.locToIndex([t,e,i],f,a.ZSL.computeStrides(o.shape)),g=h[s]+p[u];g>c&&(c=g)}}}F[a.ZSL.locToIndex([D,t,n,i],R,a.ZSL.computeStrides(A))]=c}}}return{dataId:u.write(a.ZSL.toTypedArray(F,r.dtype),A,r.dtype),shape:A,dtype:r.dtype}}},ld={kernelName:a.pk0,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:s}=t;const{x:r,filter:o,dy:i}=e,{strides:c,pad:l,dilations:u}=s,h=n,d=a.ZSL.toNestedArray(r.shape,h.data.get(r.dataId).values),p=a.ZSL.toNestedArray(o.shape,h.data.get(o.dataId).values),{batchSize:f,inHeight:g,inWidth:m,inChannels:b,outHeight:x,outWidth:y,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:T,dilationHeight:I,dilationWidth:C,outShape:N}=a.C0T.computeDilation2DInfo(r.shape,o.shape,c,l,"NHWC",u);a.ZSL.assert(i.rank===N.length,(()=>"Error in ".concat(a.pk0,", dy ")+"must have the same rank as output ".concat(N.length,", but got ")+"".concat(i.rank)));const A=a.ZSL.toNestedArray(N,h.data.get(i.dataId).values),E=a.ZSL.makeZerosNestedTypedArray(o.shape,o.dtype);for(let a=0;a<f;++a)for(let t=0;t<x;++t){const e=t*w-v.top;for(let n=0;n<y;++n){const s=n*k-v.left;for(let r=0;r<b;++r){let o=Number.MIN_SAFE_INTEGER,i=0,c=0;for(let t=0;t<S;++t){const n=e+t*I;if(n>=0&&n<g)for(let e=0;e<T;++e){const l=s+e*C;if(l>=0&&l<m){const s=d[a][n][l][r]+p[t][e][r];s>o&&(o=s,i=t,c=e)}}}E[i][c][r]+=A[a][t][n][r]}}}return{dataId:h.write(a.ZSL.toTypedArray(E,r.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}},ud={kernelName:a.bP9,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:s}=t;const{x:r,filter:o,dy:i}=e,{strides:c,pad:l,dilations:u}=s,h=n,d=a.ZSL.toNestedArray(r.shape,h.data.get(r.dataId).values),p=a.ZSL.toNestedArray(o.shape,h.data.get(o.dataId).values),{batchSize:f,inHeight:g,inWidth:m,inChannels:b,outHeight:x,outWidth:y,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:T,dilationHeight:I,dilationWidth:C,outShape:N}=a.C0T.computeDilation2DInfo(r.shape,o.shape,c,l,"NHWC",u);a.ZSL.assert(i.rank===N.length,(()=>"Error in ".concat(a.bP9,", dy ")+"must have the same rank as output ".concat(N.length,", but got ")+"".concat(i.rank)));const A=a.ZSL.toNestedArray(N,h.data.get(i.dataId).values),E=a.ZSL.makeZerosNestedTypedArray(r.shape,r.dtype);for(let a=0;a<f;++a)for(let t=0;t<x;++t){const e=t*w-v.top;for(let n=0;n<y;++n){const s=n*k-v.left;for(let r=0;r<b;++r){let o=Number.MIN_SAFE_INTEGER,i=e<0?0:e,c=s<0?0:s;for(let t=0;t<S;++t){const n=e+t*I;if(n>=0&&n<g)for(let e=0;e<T;++e){const l=s+e*C;if(l>=0&&l<m){const s=d[a][n][l][r]+p[t][e][r];s>o&&(o=s,i=n,c=l)}}}E[a][i][c][r]+=A[a][t][n][r]}}}return{dataId:h.write(a.ZSL.toTypedArray(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const hd={kernelName:a.XmO,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{image:s}=e,{canvas:r,options:o}=a,{contextOptions:i,imageOptions:c}=o||{},l=(null===c||void 0===c?void 0:c.alpha)||1,u=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==u)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const h=r.getContext(u,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==h)throw new Error("Could not get the context with ".concat(u," type."));const[d,p]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],g=n.data.get(s.dataId).values,m="float32"===s.dtype?255:1,b=new Uint8ClampedArray(p*d*4);for(let y=0;y<d*p;++y){const t=[0,0,0,255*l];for(let n=0;n<f;n++){const e=g[y*f+n];if("float32"===s.dtype){if(e<0||e>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(e,"."))}else if("int32"===s.dtype&&(e<0||e>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(e,"."));1===f?(t[0]=e*m,t[1]=e*m,t[2]=e*m):t[n]=e*m}const e=4*y;b[e+0]=Math.round(t[0]),b[e+1]=Math.round(t[1]),b[e+2]=Math.round(t[2]),b[e+3]=Math.round(t[3])}r.width=p,r.height=d;const x=new ImageData(b,p,d);return h.putImageData(x,0,0),s}};var dd=n(50063),pd=n(51908);function fd(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:i}=s;let c;(0,wu.C)(r,"sum"),c="bool"===r.dtype?(0,Eh.wg)({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):(0,Nu.D)({inputs:{x:r},backend:n});const l=c.shape.length,u=a.ZSL.parseAxisParam(o,c.shape),h=a.C0T.getAxesPermutation(u,l);let d=u,p=c;null!=h&&(p=(0,Ju.m)({inputs:{x:c},backend:n,attrs:{perm:h}}),d=a.C0T.getInnerMostAxes(d.length,l)),a.C0T.assertAxesAreInnerMostDims("sum",d,p.shape.length);const[f,g]=a.C0T.computeOutAndReduceShapes(p.shape,d),m=a.C0T.upcastType(p.dtype,"int32");let b=(0,pd.U)(n,f,m);const x=a.ZSL.sizeFromShape(g),y=n.data.get(b.dataId).values,v=n.data.get(p.dataId).values;for(let a=0;a<y.length;++a){const t=a*x;let e=0;for(let n=0;n<x;++n)e+=v[t+n];y[a]=e}if(i){const t=b;b=Uu({inputs:{x:b},backend:n,attrs:{shape:a.C0T.expandShapeToKeepDim(b.shape,u)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(c),null!=h&&n.disposeIntermediateTensorInfo(p),b}const gd={kernelName:a.WuN,backendName:"cpu",kernelFunc:fd};const md={kernelName:a.Qgm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{equation:r}=s,o=e,{allDims:i,summedDims:c,idDims:l}=a.C0T.decodeEinsumEquation(r,o.length);a.C0T.checkEinsumDimSizes(i.length,l,o);const{path:u,steps:h}=a.C0T.getEinsumComputePath(c,l),d=h.length;let p=null,f=i.length;const g=[];for(let m=0;m<d;++m){for(const t of h[m]){const{permutationIndices:e,expandDims:s}=a.C0T.getEinsumPermutation(f,l[t]);let r;a.C0T.isIdentityPermutation(e)?r=o[t]:(r=(0,Ju.m)({inputs:{x:o[t]},backend:n,attrs:{perm:e}}),g.push(r));const i=r.shape.slice();for(let t=0;t<s.length;++t)i.splice(s[t],0,1);a.ZSL.arraysEqual(r.shape,i)||(r=Uu({inputs:{x:r},backend:n,attrs:{shape:i}}),g.push(r)),null===p?p=r:(p=(0,dd.lw)({inputs:{a:r,b:p},backend:n}),g.push(p))}m<d-1&&(u[m]>=0&&(p=fd({inputs:{x:p},backend:n,attrs:{axis:u[m]-(i.length-f),keepDims:!1}}),g.push(p)),f--)}for(const a of g)a!==p&&n.disposeIntermediateTensorInfo(a);return p}};const bd={kernelName:a.rsH,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:s,y:r}=e;(0,wu.C)([s,r],"eluGrad");const o=new Float32Array(a.ZSL.sizeFromShape(r.shape)),i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values;for(let a=0;a<i.length;++a){const t=i[a];o[a]=t>=0?c[a]:c[a]*(t+1)}return n.makeTensorInfo(r.shape,"float32",o)}};var xd=n(3439);const yd=a.C0T.ERF_P,vd=a.C0T.ERF_A1,wd=a.C0T.ERF_A2,kd=a.C0T.ERF_A3,Sd=a.C0T.ERF_A4,Td=a.C0T.ERF_A5,Id=(0,Tu.v)(a._s9,(t=>{const e=Math.sign(t),n=Math.abs(t),a=1/(1+yd*n);return e*(1-((((Td*a+Sd)*a+kd)*a+wd)*a+vd)*a*Math.exp(-n*n))})),Cd={kernelName:a._s9,backendName:"cpu",kernelFunc:Id};var Nd=n(84308);function Ad(t){const{inputs:e,backend:n,attrs:s}=t,{input:r}=e,{dim:o}=s,i=r.shape.length,c=r.shape.slice();let l=o;return o<0&&(a.ZSL.assert(-(i+1)<=o,(()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]"))),l=i+o+1),c.splice(l,0,1),Uu({inputs:{x:r},backend:n,attrs:{shape:c}})}const Ed={kernelName:a.ybN,backendName:"cpu",kernelFunc:Ad};var Rd=n(17046);const Fd=(0,Ru.Z)(((t,e)=>t/e)),Dd=(0,lh.j)(a.sDr,Fd),_d={kernelName:a.sDr,backendName:"cpu",kernelFunc:Dd};var Ld=n(24413);function Od(t,e,n){const s=t.shape,r=s[0],o=s[1],i=n.data.get(t.dataId),c=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,o],h=a.ZSL.sizeFromShape(u),d=a.ZSL.getTypedArrayFromDType("float32",h),p=a.ZSL.getTypedArrayFromDType("float32",h);for(let b=0;b<r;b++){const t=(0,Sh.di)({inputs:{x:c},backend:n,attrs:{begin:[b,0],size:[1,o]}}),s=(0,Sh.di)({inputs:{x:l},backend:n,attrs:{begin:[b,0],size:[1,o]}}),r=(0,_h.f)({inputs:{real:t,imag:s},backend:n}),{real:i,imag:u}=Md(r,e,n),h=a.C0T.mergeRealAndImagArrays(i,u);for(let e=0;e<o;e++){const t=a.C0T.getComplexWithIndex(h,e);d[b*o+e]=t.real,p[b*o+e]=t.imag}n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r)}const f=n.makeTensorInfo(u,"float32",d),g=n.makeTensorInfo(u,"float32",p),m=(0,_h.f)({inputs:{real:f,imag:g},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}function Md(t,e,n){const s=a.ZSL.sizeFromShape(t.shape),r=n.data.get(t.dataId),o=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((c=s)&c-1)){const r=zd(o,i,s,e,n),c=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(c,"float32",r.real),e=n.makeTensorInfo(c,"float32",r.imag),o=n.makeTensorInfo([],"float32",a.ZSL.createScalarValue(s,"float32")),i=(0,Nu.D)({inputs:{x:o},backend:n}),l=_d.kernelFunc({inputs:{a:t,b:o},backend:n}),u=_d.kernelFunc({inputs:{a:e,b:i},backend:n}),h=n.data.get(l.dataId).values,d=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:h,imag:d}}return r}{const t=function(t,e,n){const s=new Float32Array(2*e);for(let r=0;r<e;r++){let o=0,i=0;for(let s=0;s<e;s++){const c=a.C0T.exponent(r*s,e,n),l=a.C0T.getComplexWithIndex(t,s);o+=l.real*c.real-l.imag*c.imag,i+=l.real*c.imag+l.imag*c.real}n&&(o/=e,i/=e),a.C0T.assignToTypedArray(s,o,i,r)}return s}(a.C0T.mergeRealAndImagArrays(o,i),s,e);return a.C0T.splitRealAndImagArrays(t)}var c}function zd(t,e,n,s,r){if(1===n)return{real:t,imag:e};const o=a.C0T.mergeRealAndImagArrays(t,e),i=n/2,c=a.C0T.complexWithEvenIndex(o),l=c.real,u=c.imag,h=[l.length],d=r.makeTensorInfo(h,"float32",l),p=r.makeTensorInfo(h,"float32",u),f=(0,_h.f)({inputs:{real:d,imag:p},backend:r}),g=a.C0T.complexWithOddIndex(o),m=g.real,b=g.imag,x=[m.length],y=r.makeTensorInfo(x,"float32",m),v=r.makeTensorInfo(x,"float32",b),w=(0,_h.f)({inputs:{real:y,imag:v},backend:r}),k=zd(l,u,i,s,r),S=k.real,T=k.imag,I=[S.length],C=r.makeTensorInfo(I,"float32",S),N=r.makeTensorInfo(I,"float32",T),A=(0,_h.f)({inputs:{real:C,imag:N},backend:r}),E=zd(m,b,i,s,r),R=E.real,F=E.imag,D=[R.length],_=r.makeTensorInfo(D,"float32",R),L=r.makeTensorInfo(D,"float32",F),O=(0,_h.f)({inputs:{real:_,imag:L},backend:r}),M=a.C0T.exponents(n,s),z=[M.real.length],P=r.makeTensorInfo(z,"float32",M.real),B=r.makeTensorInfo(z,"float32",M.imag),W=(0,_h.f)({inputs:{real:P,imag:B},backend:r}),U=(0,dd.lw)({inputs:{a:W,b:O},backend:r}),V=(0,Wu.WQ)({inputs:{a:A,b:U},backend:r}),G=(0,Ld.jb)({inputs:{a:A,b:U},backend:r}),Z=(0,Ph.x)({inputs:{input:V},backend:r}),K=(0,Ph.x)({inputs:{input:G},backend:r}),H=Mh({inputs:{input:V},backend:r}),j=Mh({inputs:{input:G},backend:r}),q=Bh({inputs:[Z,K],backend:r,attrs:{axis:0}}),Y=Bh({inputs:[H,j],backend:r,attrs:{axis:0}}),Q=r.data.get(q.dataId).values,X=r.data.get(Y.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(Y),{real:Q,imag:X}}const Pd={kernelName:a.rGP,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e,r=a.ZSL.sizeFromShape(s.shape),o=s.shape[s.shape.length-1],i=Uu({inputs:{x:s},backend:n,attrs:{shape:[r/o,o]}}),c=Od(i,!1,n),l=Uu({inputs:{x:c},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),l}};function Bd(t){const{backend:e,attrs:n}=t,{shape:s,value:r,dtype:o}=n,i=o||a.ZSL.inferDtype(r),c=a.ZSL.getArrayFromDType(i,a.ZSL.sizeFromShape(s));return function(t,e){t.fill(e)}(c,r),e.makeTensorInfo(s,i,c)}const Wd={kernelName:a.SQl,backendName:"cpu",kernelFunc:Bd};const Ud={kernelName:a.BxF,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:s}=t;const{image:r}=e,o=s,i=a.ZSL.getTypedArrayFromDType(r.dtype,a.ZSL.sizeFromShape(r.shape)),[c,l,u,h]=r.shape,d=o.data.get(r.dataId).values;for(let a=0;a<c;a++){const t=a*u*l*h;for(let e=0;e<l;e++){const n=e*(u*h);for(let e=0;e<u;e++){const a=e*h;for(let s=0;s<h;s++){const r=Math.round(u-e-1),o=t+n+a+s;let c=d[o];if(r>=0&&r<u){c=d[t+n+r*h+s]}i[o]=c}}}}return{dataId:o.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};var Vd=n(7742);const Gd=(0,Ru.Z)(((t,e)=>Math.floor(t/e))),Zd=(0,lh.j)(a.ElG,Gd,null,"int32"),Kd={kernelName:a.ElG,backendName:"cpu",kernelFunc:Zd};const Hd={kernelName:a.aAr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:r,bias:o,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let g=Uh({inputs:{x:s,filter:r},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const t=g;if("NCHW"===u&&1===o.shape.length&&1!==o.shape[0]){const t=Uu({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});g=(0,Wu.WQ)({inputs:{a:g,b:t},backend:n}),n.disposeIntermediateTensorInfo(t)}else g=(0,Wu.WQ)({inputs:{a:g,b:o},backend:n});n.disposeIntermediateTensorInfo(t)}if(p){const t=g;if("NCHW"===u&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const t=Uu({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});g=Bu(n,g,p,t,f),n.disposeIntermediateTensorInfo(t)}else g=Bu(n,g,p,i,f);n.disposeIntermediateTensorInfo(t)}return g}};const jd={kernelName:a.T7M,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s,filter:r,bias:o,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let g=ad({inputs:{x:s,filter:r},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const t=g;g=(0,Wu.WQ)({inputs:{a:g,b:o},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=g;g=Bu(n,g,p,i,f),n.disposeIntermediateTensorInfo(t)}return g}};var qd=n(15003);const Yd={kernelName:a.O4G,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:s,indices:r}=e,o=a.ZSL.sizeFromShape(s.shape),i=r.shape,c=i[i.length-1],[l,u,h,d]=a.C0T.prepareAndValidate(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const p=n.data.get(r.dataId).values,f=n.bufferSync(s),g=(0,qd.q)(p,f,s.dtype,u,c,h,d,s.shape,o);return n.makeTensorInfo(l,s.dtype,g.values)}};var Qd=n(92525);const Xd={kernelName:a.mxL,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,indices:o}=e,{axis:i,batchDims:c}=s;(0,wu.C)([r,o],"gatherV2");const l=a.ZSL.parseAxisParam(i,r.shape)[0],u=n.data.get(o.dataId).values,h=r.shape[l];for(let w=0;w<u.length;++w){const t=u[w];a.ZSL.assert(t<=h-1&&t>=0,(()=>"GatherV2: the index value ".concat(t," is not in [0, ").concat(h-1,"]")))}let d=c;null==c&&(d=0);const p=a.ZSL.sizeFromShape(o.shape),f=a.C0T.segment_util.collectGatherOpShapeInfo(r,o,l,d),g=Uu({inputs:{x:r},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),m=Uu({inputs:{x:o},backend:n,attrs:{shape:[f.batchSize,p/f.batchSize]}}),b=[f.batchSize,f.outerSize,p/f.batchSize,f.sliceSize],x=n.bufferSync(m),y=n.bufferSync(g),v=(0,Qd.G)(y,x,b);return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(f.outputShape,v.dtype,v.values)}};var Jd=n(11217),$d=n(98829);const tp={kernelName:a.OAQ,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e,r=a.ZSL.sizeFromShape(s.shape),o=s.shape[s.shape.length-1],i=Uu({inputs:{x:s},backend:n,attrs:{shape:[r/o,o]}}),c=Od(i,!0,n),l=Uu({inputs:{x:c},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),l}},ep=(0,Tu.v)(a.gIW,(t=>Number.isFinite(t)?1:0),"bool"),np={kernelName:a.gIW,backendName:"cpu",kernelFunc:ep},ap=(0,Tu.v)(a.E3$,(t=>Math.abs(t)===1/0?1:0),"bool"),sp={kernelName:a.E3$,backendName:"cpu",kernelFunc:ap},rp=(0,Tu.v)(a.iPs,(t=>Number.isNaN(t)?1:0),"bool"),op={kernelName:a.iPs,backendName:"cpu",kernelFunc:rp};var ip=n(47242),cp=n(32784),lp=n(23633);const up={kernelName:a.mnI,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:a,stop:s,num:r}=n,o=(0,lp.G)(a,s,r);return e.makeTensorInfo([o.length],"float32",o)}};var hp=n(70477);const dp=(0,Tu.v)(a.Cg$,(t=>Math.log1p(t))),pp={kernelName:a.Cg$,backendName:"cpu",kernelFunc:dp},fp=(0,Ru.Z)(((t,e)=>t&&e)),gp=(0,lh.j)(a.RUm,fp,null,"bool"),mp={kernelName:a.RUm,backendName:"cpu",kernelFunc:gp},bp=(0,Tu.v)(a.nZd,(t=>t?0:1),"bool"),xp={kernelName:a.nZd,backendName:"cpu",kernelFunc:bp},yp=(0,Ru.Z)(((t,e)=>t||e)),vp=(0,lh.j)(a.LXA,yp,null,"bool"),wp={kernelName:a.LXA,backendName:"cpu",kernelFunc:vp};const kp={kernelName:a.jM4,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{depthRadius:o,bias:i,alpha:c,beta:l}=s;(0,wu.C)(r,"LRN");const u=r.shape[3],h=u-1,d=n.data.get(r.dataId).values,p=a.ZSL.sizeFromShape(r.shape),f=new Float32Array(p);function g(t){const e=t%u;let n=t-e+Math.max(0,e-o);const a=t-e+Math.min(e+o,h);let s=0;for(;n<=a;n++){const t=d[n];s+=t*t}return s}for(let a=0;a<p;a++){const t=g(a),e=d[a]*Math.pow(i+c*t,-l);f[a]=e}return n.makeTensorInfo(r.shape,r.dtype,f)}};const Sp={kernelName:a.ToN,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,y:o,dy:i}=e,{depthRadius:c,bias:l,alpha:u,beta:h}=s;(0,wu.C)(i,"LRNGrad");const d=a.ZSL.sizeFromShape(i.shape),p=i.shape[3],f=n.data.get(i.dataId).values,g=n.data.get(r.dataId).values,m=n.data.get(o.dataId).values,b=new Float32Array(d),x=d;for(let a=0;a<x;a++){const t=a%p,e=a-t+Math.max(0,t-c),n=a-t+Math.min(p,t+c+1);let s=0;for(let a=e;a<n;a++)s+=Math.pow(g[a],2);s=u*s+l;for(let r=e;r<n;r++){let t=-2*u*h*g[r]*m[a]/s;a===r&&(t+=Math.pow(s,-h)),t*=f[a],b[r]+=t}}return n.makeTensorInfo(i.shape,r.dtype,b)}};var Tp=n(56238),Ip=n(82137);function Cp(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reductionIndices:o,keepDims:i}=s,c=n;let l=r.shape;const u=l.length,h=a.ZSL.parseAxisParam(o,l);let d=h;const p=a.C0T.getAxesPermutation(d,u);let f=c.data.get(r.dataId).values;if(null!=p){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=l[p[e]];f=(0,Ip._)(f,l,r.dtype,p,t),d=a.C0T.getInnerMostAxes(d.length,u),l=t}(0,wu.C)(r,"max"),a.C0T.assertAxesAreInnerMostDims("max",d,u);const[g,m]=a.C0T.computeOutAndReduceShapes(l,d),b=a.ZSL.sizeFromShape(m),x=(0,Tp.j)(f,b,g,r.dtype),y=c.write(x,g,r.dtype);let v=g;if(i){v=a.C0T.expandShapeToKeepDim(g,h)}return{dataId:y,shape:v,dtype:r.dtype}}const Np={kernelName:a.VAI,backendName:"cpu",kernelFunc:Cp};var Ap=n(58617);const Ep={kernelName:a.t3d,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;(0,wu.C)(r,"maxPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=s;a.ZSL.assert(a.C0T.eitherStridesOrDilationsAreOne(i,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'")));const u=a.C0T.computePool2DInfo(r.shape,o,i,1,c,l);let h;if(1===u.filterWidth&&1===u.filterHeight&&a.ZSL.arraysEqual(u.inShape,u.outShape))h=(0,Nu.D)({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=a.ZSL.computeStrides(r.shape),s=gh(t,r.shape,r.dtype,e,u,"max");h=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return h}};const Rp={kernelName:a.ySp,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:o,strides:i,pad:c,dimRoundingMode:l,dataFormat:u}=s;(0,wu.C)(r,"maxPool3d");const h=a.C0T.computePool3DInfo(r.shape,o,i,1,c,l,u),d=bh(n.data.get(r.dataId).values,r.shape,r.dtype,a.ZSL.computeStrides(r.shape),h,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}};const Fp={kernelName:a.cHb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o}=e,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=s;(0,wu.C)([r,o],"maxPool3DGrad");const h=a.C0T.computePool3DInfo(o.shape,i,c,1,l,u),d=function(t,e){const n=(0,a.ra8)(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,g=e.padInfo.left;for(let a=0;a<e.batchSize;++a)for(let m=0;m<e.inChannels;++m)for(let b=0;b<e.outDepth;++b){const x=b*s-p;let y=x;for(;y<0;)y+=i;const v=Math.min(e.inDepth,u+x);for(let s=0;s<e.outHeight;++s){const u=s*r-f;let p=u;for(;p<0;)p+=c;const w=Math.min(e.inHeight,h+u);for(let r=0;r<e.outWidth;++r){const f=r*o-g;let k=f;for(;k<0;)k+=l;const S=Math.min(e.inWidth,d+f);let T=Number.NEGATIVE_INFINITY,I=-1;for(let e=y;e<v;e+=i){const n=e-x;for(let s=p;s<w;s+=c){const r=s-u;for(let o=k;o<S;o+=l){const i=o-f,c=t.get(a,e,s,o,m);c>=T&&(T=c,I=n*h*d+r*h+i)}}}n.set(I,a,b,s,r,m)}}}return n}(n.bufferSync(o),h),p=h.strideDepth,f=h.strideHeight,g=h.strideWidth,m=h.dilationDepth,b=h.dilationHeight,x=h.dilationWidth,y=h.effectiveFilterDepth,v=h.effectiveFilterHeight,w=h.effectiveFilterWidth,k=y-1-h.padInfo.front,S=w-1-h.padInfo.left,T=v-1-h.padInfo.top,I=(0,a.ra8)(o.shape,"float32"),C=n.bufferSync(r);for(let a=0;a<h.batchSize;++a)for(let t=0;t<h.inChannels;++t)for(let e=0;e<h.inDepth;++e)for(let n=0;n<h.inHeight;++n)for(let s=0;s<h.inWidth;++s){const r=e-k,o=n-T,i=s-S;let c=0;for(let e=0;e<y;e+=m){const n=(r+e)/p;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let s=0;s<v;s+=b){const r=(o+s)/f;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let o=0;o<w;o+=x){const l=(i+o)/g;if(l<0||l>=h.outWidth||Math.floor(l)!==l)continue;const u=y*v*w-1-d.get(a,n,r,l,t)===e*v*w+s*w+o?1:0;if(0===u)continue;c+=C.get(a,n,r,l,t)*u}}}I.set(c,a,e,n,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const Dp={kernelName:a.RXX,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:o,output:i}=e,c=o;(0,wu.C)([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:h,dimRoundingMode:d}=s,p=a.C0T.computePool2DInfo(c.shape,l,u,1,h,d),f=n.data.get(c.dataId).values,g=(0,a.ra8)(p.outShape,c.dtype,mh(f,c.shape,c.dtype,p).values),m=p.strideHeight,b=p.strideWidth,x=p.dilationHeight,y=p.dilationWidth,v=p.effectiveFilterHeight,w=p.effectiveFilterWidth,k=w-1-p.padInfo.left,S=v-1-p.padInfo.top,T=(0,a.ra8)(c.shape,"float32"),I=n.data.get(r.dataId).values,C=(0,a.ra8)(r.shape,"float32",I);for(let a=0;a<p.batchSize;++a)for(let t=0;t<p.inChannels;++t)for(let e=0;e<p.inHeight;++e)for(let n=0;n<p.inWidth;++n){const s=e-S,r=n-k;let o=0;for(let e=0;e<v;e+=x){const n=(s+e)/m;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let s=0;s<w;s+=y){const i=(r+s)/b;if(i<0||i>=p.outWidth||Math.floor(i)!==i)continue;const c=v*w-1-g.get(a,n,i,t)===e*w+s?1:0;if(0===c)continue;o+=C.get(a,n,i,t)*c}}T.set(o,a,e,n,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const _p={kernelName:a.TL8,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:s}=t;const{x:r}=e,{filterSize:o,strides:i,pad:c,includeBatchInIndex:l}=n,u=s;(0,wu.C)(r,"MaxPoolWithArgmax");const h=u.data.get(r.dataId).values,d=a.C0T.computePool2DInfo(r.shape,o,i,[1,1],c),[p,f]=function(t,e,n,s,r){const o=gh(t,0,n,a.ZSL.computeStrides(e),r,"max"),i=mh(t,e,n,r,!0,s);return[o.values,i.values]}(h,r.shape,r.dtype,l,d),g=u.write(p,d.outShape,r.dtype),m=u.write(f,d.outShape,r.dtype);return[{dataId:g,shape:d.outShape,dtype:r.dtype},{dataId:m,shape:d.outShape,dtype:"int32"}]}};const Lp={kernelName:a.g5A,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:i}=s,c=a.ZSL.parseAxisParam(o,r.shape),l=a.C0T.computeOutAndReduceShapes(r.shape,c)[1],u=a.ZSL.sizeFromShape(l),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([u]));h.push(d);const p=(0,Eh.wg)({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});h.push(p);const f=Dd({inputs:{a:p,b:d},backend:n});h.push(f);const g=fd({inputs:{x:f},backend:n,attrs:{axis:o,keepDims:i}});return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}};const Op={kernelName:a.lNG,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:o,keepDims:i}=s;(0,wu.C)(r,"min");const c=a.ZSL.parseAxisParam(o,r.shape);let l=c;const u=a.C0T.getAxesPermutation(l,r.shape.length);let h=r;null!=u&&(h=(0,Ju.m)({inputs:{x:r},backend:n,attrs:{perm:u}}),l=a.C0T.getInnerMostAxes(l.length,r.shape.length)),a.C0T.assertAxesAreInnerMostDims("min",l,h.shape.length);const[d,p]=a.C0T.computeOutAndReduceShapes(h.shape,l),f=a.ZSL.sizeFromShape(p),g=a.ZSL.makeZerosTypedArray(a.ZSL.sizeFromShape(d),h.dtype),m=n.data.get(h.dataId).values;for(let a=0;a<g.length;++a){const t=a*f;let e=m[t];for(let n=0;n<f;++n){const a=m[t+n];(Number.isNaN(a)||a<e)&&(e=a)}g[a]=e}null!=u&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(d,h.dtype,g);if(i){const t=Uu({inputs:{x:b},backend:n,attrs:{shape:a.C0T.expandShapeToKeepDim(d,c)}});return n.disposeIntermediateTensorInfo(b),t}return b}};var Mp=n(2491);const zp={kernelName:a.x7F,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:o,mode:i}=s;(0,wu.C)(r,"mirrorPad");const c=o.map(((t,e)=>t[0]+r.shape[e]+t[1])),l=o.map((t=>t[0])),u=o.map(((t,e)=>t[0]+r.shape[e])),h="reflect"===i?0:1,d=n.data.get(r.dataId).values,p=r.shape.length,f=a.ZSL.computeStrides(r.shape),g=a.ZSL.sizeFromShape(c),m=c.length,b=a.ZSL.computeStrides(c),x=a.ZSL.getTypedArrayFromDType(r.dtype,g);for(let y=0;y<g;y++){let t=a.ZSL.indexToLoc(y,m,b);for(let n=0;n<m;n++)t[n]<l[n]?t[n]=2*l[n]-t[n]-h:t[n]>=u[n]&&(t[n]=2*(u[n]-1)-t[n]+h);t=t.map(((t,e)=>t-l[e]));const e=a.ZSL.locToIndex(t,p,f);x[y]=d[e]}return{dataId:n.write(x,c,r.dtype),shape:c,dtype:r.dtype}}},Pp=(0,Ru.Z)(((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})),Bp=(0,lh.j)(a.BLA,Pp),Wp={kernelName:a.BLA,backendName:"cpu",kernelFunc:Bp};function Up(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{dim:o}=s,i=r.shape.length;let c=o;if(-1===c&&(c=i-1),c!==i-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(i," and dim was ").concat(c));const l=a.ZSL.parseAxisParam([c],r.shape),u=Cp({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),h=a.C0T.expandShapeToKeepDim(u.shape,l),d=Uu({inputs:{x:u},backend:n,attrs:{shape:h}}),p=(0,Ld.jb)({inputs:{a:r,b:d},backend:n}),f=(0,Nd.oN)({inputs:{x:p},backend:n}),g=fd({inputs:{x:f},backend:n,attrs:{axis:l,keepDims:!1}}),m=Uu({inputs:{x:g},backend:n,attrs:{shape:h}}),b=Dd({inputs:{a:f,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),b}const Vp={kernelName:a.rFG,backendName:"cpu",kernelFunc:Up};const Gp={kernelName:a.WT3,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{numSamples:o,seed:i,normalized:c}=s;(0,wu.C)(r,"multinomial");const l=c?r:Up({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],h=l.shape[1],d=n.data.get(l.dataId).values,p=[u,o],f=a.ZSL.makeZerosTypedArray(a.ZSL.sizeFromShape(p),"int32");for(let a=0;a<u;++a){const t=a*h,e=new Float32Array(h-1);e[0]=d[t];for(let a=1;a<e.length;++a)e[a]=e[a-1]+d[t+a];const n=Zl.alea(i.toString()),s=a*o;for(let a=0;a<o;++a){const t=n();f[s+a]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){f[s+a]=n;break}}}return c||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",f)}};var Zp=n(20321);const Kp=a.kpo.c7;const Hp={kernelName:a.SDM,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:s,scores:r}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a;(0,wu.C)(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,{selectedIndices:h}=Kp(l,u,o,i,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},jp=a.kpo.ZS;const qp={kernelName:a.Zl4,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:s,scores:r}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a;(0,wu.C)(s,"NonMaxSuppressionPadded");const u=n.data.get(s.dataId).values,h=n.data.get(r.dataId).values,{selectedIndices:d,validOutputs:p}=jp(u,h,o,i,c,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},Yp=a.kpo.ut;const Qp={kernelName:a.e0f,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:s,scores:r}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a;(0,wu.C)(s,"NonMaxSuppressionWithScore");const u=n.data.get(s.dataId).values,h=n.data.get(r.dataId).values,d=o,p=i,f=c,g=l,{selectedIndices:m,selectedScores:b}=Yp(u,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};var Xp=n(38440);const Jp={kernelName:a.urI,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r}=e,{dtype:o,depth:i,onValue:c,offValue:l}=s;(0,wu.C)(r,"oneHot");const u=a.ZSL.sizeFromShape(r.shape),h=new Float32Array(u*i);h.fill(l);const d=n.data.get(r.dataId).values;for(let a=0;a<u;++a)d[a]>=0&&d[a]<i&&(h[a*i+d[a]]=c);return n.makeTensorInfo([...r.shape,i],o,h)}};function $p(t){const{inputs:e,backend:n}=t,{x:a}=e;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const t=(0,Ph.x)({inputs:{input:a},backend:n}),e=$p({inputs:{x:t},backend:n}),s=Mh({inputs:{input:a},backend:n}),r=$p({inputs:{x:s},backend:n}),o=(0,_h.f)({inputs:{real:e,imag:r},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),o}return Bd({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const tf={kernelName:a.xJ3,backendName:"cpu",kernelFunc:$p};const ef={kernelName:a.LWX,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:a}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const e=(0,Ph.x)({inputs:{input:s},backend:a}),n=t({inputs:{x:e},backend:a}),r=Mh({inputs:{input:s},backend:a}),o=$p({inputs:{x:r},backend:a}),i=(0,_h.f)({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(o),i}return Bd({backend:a,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function nf(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s;if(1===e.length)return Ad({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach((t=>{a.ZSL.assertShapesMatch(o,t.shape,"All tensors passed to stack must have matching shapes"),a.ZSL.assert(i===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const c=[],l=Bh({inputs:e.map((t=>{const e=Ad({inputs:{input:t},backend:n,attrs:{dim:r}});return c.push(e),e})),backend:n,attrs:{axis:r}});return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}const af={kernelName:a.mM$,backendName:"cpu",kernelFunc:nf};const sf={kernelName:a.ODT,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:o,constantValue:i}=s;(0,wu.C)(r,"pad");const c=o.map(((t,e)=>t[0]+r.shape[e]+t[1])),l=o.map((t=>t[0])),u=n.data.get(r.dataId).values,h=a.ZSL.sizeFromShape(r.shape),d=r.shape.length,p=a.ZSL.computeStrides(r.shape),f=a.ZSL.sizeFromShape(c),g=c.length,m=a.ZSL.computeStrides(c),b=a.ZSL.getTypedArrayFromDType(r.dtype,f);0!==i&&b.fill(i);for(let x=0;x<h;x++){const t=a.ZSL.indexToLoc(x,d,p).map(((t,e)=>t+l[e]));b[a.ZSL.locToIndex(t,g,m)]=u[x]}return{dataId:n.write(b,c,r.dtype),shape:c,dtype:r.dtype}}},rf=(0,Ru.Z)(((t,e)=>Math.pow(t,e))),of=(0,lh.j)(a.pyJ,rf),cf={kernelName:a.pyJ,backendName:"cpu",kernelFunc:of};var lf=n(51206),uf=n(45335);const hf={kernelName:a.oJ2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{paramsNestedSplits:s,paramsDenseValues:r,indices:o}=e,{outputRaggedRank:i}=a,c=s.map((t=>n.data.get(t.dataId).values)),l=s.map((t=>t.shape)),u=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,[d,p,f]=(0,uf.u)(c,l,u,r.shape,r.dtype,h,o.shape,i),g=d.map((t=>n.makeTensorInfo([t.length],"int32",t))),m=n.makeTensorInfo(f,r.dtype,p);return g.concat([m])}};var df=n(14417);const pf={kernelName:a.CQC,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{starts:a,limits:s,deltas:r}=e,o=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,c=n.data.get(r.dataId).values,[l,u]=(0,df._)(o,a.shape,a.dtype,i,s.shape,c,r.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};var ff=n(78545);const gf={kernelName:a.mH5,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{shape:s,values:r,defaultValue:o,rowPartitionTensors:i}=e,{rowPartitionTypes:c}=a,l=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=i.map((t=>n.data.get(t.dataId).values)),p=i.map((t=>t.shape)),[f,g]=(0,ff.K)(l,s.shape,u,r.shape,r.dtype,h,o.shape,d,p,c);return n.makeTensorInfo(f,r.dtype,g)}};var mf=n(56635);const bf={kernelName:a.Q6t,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:a,stop:s,dtype:r,step:o}=n,i=(0,mf.q)(a,s,o,r);return e.makeTensorInfo([i.length],r,i)}},xf=(0,Tu.v)(a.huO,(t=>1/t)),yf={kernelName:a.huO,backendName:"cpu",kernelFunc:xf};const vf={kernelName:a.hgw,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:c}=s;(0,wu.C)(r,"resizeBilinear");const l=a.ZSL.computeStrides(r.shape),[u,h]=c,[d,p,f,g]=r.shape,m=n.data.get(r.dataId).values,b=new Float32Array(a.ZSL.sizeFromShape([d,u,h,g])),x=[o&&u>1?p-1:p,o&&h>1?f-1:f],y=[o&&u>1?u-1:u,o&&h>1?h-1:h];let v=0;const w=x[0]/y[0],k=x[1]/y[1];for(let a=0;a<d;a++)for(let t=0;t<u;t++){let e;e=i?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),s=e-n,r=Math.min(p-1,Math.ceil(e)),o=a*l[0]+n*l[1],c=a*l[0]+r*l[1];for(let t=0;t<h;t++){let e;e=i?k*(t+.5)-.5:k*t;const n=Math.max(0,Math.floor(e)),a=e-n,r=Math.min(f-1,Math.ceil(e)),u=o+n*l[2],h=c+n*l[2],d=o+r*l[2],p=c+r*l[2];for(let t=0;t<g;t++){const e=m[u+t],n=m[h+t],r=e+(m[d+t]-e)*a,o=r+(n+(m[p+t]-n)*a-r)*s;b[v++]=o}}}return n.makeTensorInfo([d,u,h,g],"float32",b)}};const wf={kernelName:a.FCQ,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:o}=e,{alignCorners:i}=s;(0,wu.C)([o,r],"resizeBilinearGrad");const c=a.ZSL.computeStrides(r.shape),[l,u,h,d]=r.shape,[,p,f]=o.shape,g=new Float32Array(l*u*h*d),m=[i&&p>1?u-1:u,i&&f>1?h-1:h],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=m[0]/b[0],y=m[1]/b[1],v=n.data.get(o.dataId).values;let w=0;for(let a=0;a<l;a++){const t=a*c[0];for(let e=0;e<p;e++){const n=e*x,a=Math.floor(n),s=Math.min(Math.ceil(n),u-1),r=t+a*c[1],o=t+s*c[1],i=n-a,l=1-i;for(let t=0;t<f;t++){const e=t*y,n=Math.floor(e),a=Math.min(Math.ceil(e),h-1),s=e-n,u=1-s,p=r+n*c[2],f=r+a*c[2],m=o+n*c[2],b=o+a*c[2],x=l*u,k=l*s,S=i*u,T=i*s;for(let t=0;t<d;t++){const e=v[w++];g[p+t]+=e*x,g[f+t]+=e*k,g[m+t]+=e*S,g[b+t]+=e*T}}}}return n.makeTensorInfo([l,h,u,d],"float32",g)}};const kf={kernelName:a.jOE,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:c}=s;(0,wu.C)(r,"resizeNearestNeighbor");const l=a.ZSL.computeStrides(r.shape),[u,h]=c,[d,p,f,g]=r.shape,m=n.data.get(r.dataId).values,b=new Float32Array(d*u*h*g),x=[o&&u>1?p-1:p,o&&h>1?f-1:f],y=[o&&u>1?u-1:u,o&&h>1?h-1:h],v=x[0]/y[0],w=x[1]/y[1];let k=0;for(let a=0;a<d;a++){const t=a*l[0];for(let e=0;e<u;e++){const n=i?v*(e+.5):v*e;let a=Math.min(p-1,o?Math.round(n):Math.floor(n));i&&(a=Math.max(0,a));const s=t+a*l[1];for(let t=0;t<h;t++){const e=i?w*(t+.5):w*t;let n=Math.min(f-1,o?Math.round(e):Math.floor(e));i&&(n=Math.max(0,n));const a=s+n*l[2];for(let t=0;t<g;t++){const e=m[a+t];b[k++]=e}}}}return n.makeTensorInfo([d,u,h,g],r.dtype,b)}};const Sf={kernelName:a.XQy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:o}=e,{alignCorners:i}=s;(0,wu.C)([o,r],"resizeNearestNeighborGrad");const c=a.ZSL.computeStrides(r.shape),l=a.ZSL.computeStrides(o.shape),[u,h,d,p]=r.shape,[,f,g]=o.shape,m=new Float32Array(u*h*d*p),b=n.data.get(o.dataId).values,x=[i&&f>1?h-1:h,i&&g>1?d-1:d],y=[i&&f>1?f-1:f,i&&g>1?g-1:g],v=x[0]/y[0],w=x[1]/y[1],k=1/v,S=1/w,T=2*Math.ceil(k)+2,I=2*Math.ceil(S)+2;for(let a=0;a<u;a++){const t=a*c[0];for(let e=0;e<h;e++){const n=t+e*c[1],a=Math.floor(e*k),s=Math.floor(a-T/2);for(let r=0;r<d;r++){const a=n+r*c[2],o=Math.floor(r*S),u=Math.floor(o-I/2);for(let n=0;n<p;n++){let o=0;for(let a=0;a<T;a++){const c=a+s;if(c<0||c>=f)continue;const p=t+c*l[1],m=c*v;if(e===Math.min(h-1,i?Math.round(m):Math.floor(m)))for(let t=0;t<I;t++){const e=t+u;if(e<0||e>=g)continue;const a=p+e*l[2],s=e*w;r===Math.min(d-1,i?Math.round(s):Math.floor(s))&&(o+=b[a+n])}}m[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}};const Tf={kernelName:a.D7i,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dims:o}=s;(0,wu.C)(r,"reverse");const i=r.shape.length,c=a.ZSL.parseAxisParam(o,r.shape);if(0===i)return(0,Nu.D)({inputs:{x:r},backend:n});const l=new a.ylz(r.shape,r.dtype),u=n.bufferSync(r);for(let a=0;a<l.size;a++){const t=l.indexToLoc(a),e=t.slice();c.forEach((t=>e[t]=r.shape[t]-1-e[t])),l.set(u.get(...e),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},If={kernelName:a.BK4,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:s}=t;const{image:r}=e,{radians:o,fillValue:i,center:c}=n,l=s,u=a.ZSL.getTypedArrayFromDType(r.dtype,a.ZSL.sizeFromShape(r.shape)),[h,d,p,f]=r.shape,[g,m]=a.C0T.getImageCenter(c,d,p),b=Math.sin(o),x=Math.cos(o),y=l.data.get(r.dataId).values;for(let a=0;a<h;a++){const t=a*p*d*f;for(let e=0;e<d;e++){const n=e*(p*f);for(let a=0;a<p;a++){const s=a*f;for(let r=0;r<f;r++){const o=[h,e,a,r],c=o[2],l=o[1];let v=(c-g)*x-(l-m)*b,w=(c-g)*b+(l-m)*x;v=Math.round(v+g),w=Math.round(w+m);let k=i;if("number"!==typeof i&&(k=3===r?255:i[r]),v>=0&&v<p&&w>=0&&w<d){k=y[t+w*(p*f)+v*f+r]}u[t+n+s+r]=k}}}}return{dataId:l.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Cf=(0,Tu.v)(a.hVg,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1})),Nf={kernelName:a.hVg,backendName:"cpu",kernelFunc:Cf};var Af=n(3555),Ef=n(526);const Rf={kernelName:a.pJc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=a.C0T.calculateShapes(o,r,i),p=n.bufferSync(r),f=n.bufferSync(o),g=(0,Ef.b)(p,f,i,d,u,l,c,h,0,!0);return n.makeTensorInfo(i,g.dtype,g.values)}};function Ff(t,e){let n=0,a=t.length,s=0;for(;n<a;)s=Math.floor((n+a)/2),t[s]<e?n=s+1:a=s;return a}function Df(t,e){let n=0,a=t.length,s=0;for(;n<a;)s=Math.floor((n+a)/2),t[s]<=e?n=s+1:a=s;return a}const _f={kernelName:a.uWl,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{sortedSequence:r,values:o}=e,{side:i}=s,c=function(t,e,n,s,r,o){const i=a.ZSL.getArrayFromDType("int32",n*r);for(let a=0;a<n;++a){const n=t.slice(a*s,(a+1)*s),c=a*r;for(let t=0;t<r;++t)i[c+t]="left"===o?Ff(n,e[t+c]):Df(n,e[t+c])}return i}(n.data.get(r.dataId).values,n.data.get(o.dataId).values,r.shape[0],r.shape[1],o.shape[1],i);return n.makeTensorInfo(o.shape,"int32",c)}};const Lf={kernelName:a.l6P,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:s,t:r,e:o}=e;(0,wu.C)([s,r,o],"select");const i=s.shape.length,c=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values,h=(0,a.TuY)(r.dtype,o.dtype),d=a.ZSL.makeZerosTypedArray(a.ZSL.sizeFromShape(r.shape),h);let p=0;const f=0===i||i>1||1===r.shape.length?1:a.ZSL.sizeFromShape(r.shape.slice(1));for(let a=0;a<c.length;a++)for(let t=0;t<f;t++)1===c[a]?d[p++]=l[a]:d[p++]=u[a];return n.makeTensorInfo(r.shape,h,d)}},Of=a.C0T.SELU_SCALEALPHA,Mf=a.C0T.SELU_SCALE,zf=(0,Tu.v)(a.u$b,(t=>t>=0?Mf*t:Of*(Math.exp(t)-1))),Pf={kernelName:a.u$b,backendName:"cpu",kernelFunc:zf},Bf=(0,Tu.v)(a.YVe,(t=>t<0?-1:t>0?1:0)),Wf={kernelName:a.YVe,backendName:"cpu",kernelFunc:Bf},Uf=(0,Tu.v)(a.hql,(t=>Math.sin(t))),Vf={kernelName:a.hql,backendName:"cpu",kernelFunc:Uf},Gf=(0,Tu.v)(a.J3C,(t=>Math.sinh(t))),Zf={kernelName:a.J3C,backendName:"cpu",kernelFunc:Gf},Kf=Math.log(1.1920928955078125e-7)+2,Hf=(0,Tu.v)(a.Fin,(t=>{const e=t>-Kf,n=t<Kf,a=Math.exp(t);let s;return s=n?a:e?t:Math.log(1+a),s})),jf={kernelName:a.Fin,backendName:"cpu",kernelFunc:Hf};const qf={kernelName:a.A8B,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:o,paddings:i}=s;(0,wu.C)([r],"spaceToBatchND");const c=a.ZSL.sizeFromShape(o),l=[[0,0]];l.push(...i);for(let a=1+o.length;a<r.shape.length;++a)l.push([0,0]);const u=sf.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=a.C0T.getReshaped(u.shape,o,c,!1),d=a.C0T.getPermuted(h.length,o.length,!1),p=a.C0T.getReshapedPermuted(u.shape,o,c,!1),f=Uu({inputs:{x:u},backend:n,attrs:{shape:h}}),g={x:f},m={perm:d},b=(0,Ju.m)({inputs:g,backend:n,attrs:m}),x=Uu({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),x}};var Yf=n(22785);const Qf={kernelName:a.C8s,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:a,values:s,denseShape:r,defaultValue:o}=e;if(1!==r.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(r.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(a.shape));if(1!==s.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(s.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values[0],[h,d,p,f,g]=(0,Yf.y)(i,a.shape,a.dtype,c,s.dtype,l,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([g.length],a.dtype,new Int32Array(g))]}};var Xf=n(50706);const Jf={kernelName:a.BoJ,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:a,inputShape:s,newShape:r}=e;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==s.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(s.shape));if(1!==r.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(r.shape));const o=Array.from(n.data.get(s.dataId).values),i=n.data.get(a.dataId).values,c=Array.from(n.data.get(r.dataId).values),[l,u,h]=(0,Xf.l)(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}};var $f=n(53326);const tg={kernelName:a.L6G,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:a,indices:s,segmentIds:r}=e;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(s.shape));if(1!==r.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(r.shape));if(s.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,c=n.data.get(r.dataId).values,[l,u]=(0,$f.z)(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const eg={kernelName:a.DvZ,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:a,indices:s,segmentIds:r}=e;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(s.shape));if(1!==r.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(r.shape));if(s.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,c=n.data.get(r.dataId).values,[l,u]=(0,$f.z)(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const ng={kernelName:a.jgd,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:c}=s,{sliceRank:l,numUpdates:u,sliceSize:h,strides:d,outputSize:p}=a.C0T.calculateShapes(o,r,c),f=!1,g=n.bufferSync(r);let m;switch(o.dtype){case"bool":{const t=n.bufferSync(o),e=Boolean(n.data.get(i.dataId).values[0]);m=(0,Ef.b)(g,t,c,p,h,u,l,d,e,f);break}case"float32":{const t=n.bufferSync(o),e=n.data.get(i.dataId).values[0];m=(0,Ef.b)(g,t,c,p,h,u,l,d,e,f);break}case"int32":{const t=n.bufferSync(o),e=n.data.get(i.dataId).values[0];m=(0,Ef.b)(g,t,c,p,h,u,l,d,e,f);break}case"string":{const t=n.bufferSync(o),e=a.ZSL.decodeString(n.data.get(i.dataId).values[0]);m=(0,Ef.b)(g,t,c,p,h,u,l,d,e,f);break}default:throw new Error("Unsupported type ".concat(o.dtype))}return n.makeTensorInfo(c,m.dtype,m.values)}};const ag={kernelName:a.Blb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,c=a.ZSL.parseAxisParam(i,r.shape)[0],l=a.C0T.prepareSplitSize(r,o,c),u=new Array(r.shape.length).fill(0),h=r.shape.slice();return l.map((t=>{const e=[...h];e[c]=t;const a=(0,Sh.di)({inputs:{x:r},backend:n,attrs:{begin:u,size:e}});return u[c]+=t,a}))}};var sg=n(98041);const rg={kernelName:a.M6A,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n}=t;const{x:a}=e,s=n;(0,wu.C)(a,"square");const r=s.data.get(a.dataId).values,o=new Float32Array(r.length);for(let i=0;i<r.length;++i){const t=r[i];o[i]=t*t}return{dataId:s.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},og=(0,Ru.Z)(((t,e)=>{const n=t-e;return n*n})),ig=(0,lh.j)(a.Ddj,og),cg={kernelName:a.Ddj,backendName:"cpu",kernelFunc:ig};var lg=n(67844);const ug=(0,Tu.v)(a.pnw,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),hg={kernelName:a.pnw,backendName:"cpu",kernelFunc:ug};var dg=n(3445);const pg={kernelName:a.UcO,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:o,end:i,strides:c,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=s;(0,wu.C)(r,"stridedSlice");const{finalShapeSparse:f,finalShape:g,isIdentity:m,sliceDim0:b,isSimpleSlice:x,begin:y,end:v,strides:w}=a.Kro.sliceInfo(r.shape,o,i,c,l,u,h,d,p);let k;if(m)k=Uu({inputs:{x:r},backend:n,attrs:{shape:g}});else if(b||x){a.ZSL.assert(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const t=a.Kro.computeOutShape(y,v,w),e=(0,Sh.di)({inputs:{x:r},backend:n,attrs:{begin:y,size:t}});k=Uu({inputs:{x:e},backend:n,attrs:{shape:g}}),n.disposeIntermediateTensorInfo(e)}else{const t=n.bufferSync(r),e=(0,dg.e)(f,t,w,y);k=n.makeTensorInfo(g,e.dtype,e.values)}return k}};var fg=n(58793);const gg={kernelName:a.YAb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{separator:s,nGramWidths:r,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:h}=e,d=n.data.get(u.dataId).values,p=n.data.get(h.dataId).values,[f,g]=(0,fg.G)(d,p,s,r,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}};var mg=n(37185);const bg={kernelName:a.iW0,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{skipEmpty:s}=a,{input:r,delimiter:o}=e;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(1!==r.shape.length)throw new Error("Input must be a vector, got shape: ".concat(r.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values[0],[l,u,h]=(0,mg.S)(i,c,s),d=u.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};var xg=n(82536);const yg={kernelName:a.$jE,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{numBuckets:s}=a,{input:r}=e;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const o=n.data.get(r.dataId).values,i=(0,xg.f)(o,s);return n.makeTensorInfo(r.shape,"int32",i)}},vg=(0,Tu.v)(a.oFs,(t=>Math.tan(t))),wg={kernelName:a.oFs,backendName:"cpu",kernelFunc:vg},kg=(0,Tu.v)(a.iuW,(t=>Math.tanh(t))),Sg={kernelName:a.iuW,backendName:"cpu",kernelFunc:kg};const Tg={kernelName:a.X4r,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{tensor:s,indices:r,updates:o}=e,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=a.C0T.calculateShapes(o,r,s.shape),d=n.bufferSync(r),p=n.bufferSync(o),f=n.bufferSync(s),g=(0,Ef.b)(d,p,s.shape,h,l,c,i,u,f,!1);return n.makeTensorInfo(s.shape,g.dtype,g.values)}};var Ig=n(18024);const Cg={kernelName:a.FAs,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{reps:r}=a;(0,wu.C)(s,"tile");const o=(0,Ig.D)(n.bufferSync(s),r);return n.makeTensorInfo(o.shape,o.dtype,o.values)}};var Ng=n(78036);const Ag={kernelName:a.TBb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:s}=e,{k:r,sorted:o}=a;(0,wu.C)(s,"topk");const i=n.data.get(s.dataId).values,[c,l]=(0,Ng.x)(i,s.shape,s.dtype,r,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const Eg={kernelName:a.dLy,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{image:r,transforms:o}=e,{interpolation:i,fillMode:c,fillValue:l,outputShape:u}=n,[h,d,p,f]=r.shape,[g,m]=null!=u?u:[d,p],b=[h,g,m,f],x=a.ZSL.computeStrides(r.shape),y=x[0],v=x[1],w=x[2],k=a.ZSL.computeStrides(b),S=k[0],T=k[1],I=k[2],C=a.ZSL.getTypedArrayFromDType(r.dtype,a.ZSL.sizeFromShape(b));C.fill(l);const N=s.data.get(r.dataId).values,A=s.data.get(o.dataId).values;for(let a=0;a<h;++a){const t=1===o.shape[0]?A:A.subarray(8*a,8*a+8);for(let e=0;e<g;++e)for(let n=0;n<m;++n)for(let s=0;s<f;++s){let r;const o=t[6]*n+t[7]*e+1;if(0===o)continue;const u=(t[0]*n+t[1]*e+t[2])/o,h=(t[3]*n+t[4]*e+t[5])/o,f=Rg(u,p,c),g=Rg(h,d,c);switch(i){case"nearest":r=Dg(N,d,p,y,v,w,a,g,f,s,l);break;case"bilinear":r=_g(N,d,p,y,v,w,a,g,f,s,l);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(i))}C[a*S+e*T+n*I+s]=r}return s.makeTensorInfo(b,r.dtype,C)}return{dataId:s.write(C,b,r.dtype),shape:r.shape,dtype:r.dtype}}};function Rg(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return a.ZSL.clamp(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return a.ZSL.clamp(0,n,e-1)}(t,e);case"nearest":return function(t,e){return a.ZSL.clamp(0,t,e-1)}(t,e);default:return function(t){return t}(t)}}function Fg(t,e,n,a,s,r,o,i,c,l,u){return 0<=i&&i<e&&0<=c&&c<n?t[o*a+i*s+c*r+l]:u}function Dg(t,e,n,a,s,r,o,i,c,l,u){return Fg(t,e,n,a,s,r,o,Math.round(i),Math.round(c),l,u)}function _g(t,e,n,a,s,r,o,i,c,l,u){const h=Math.floor(i),d=Math.floor(c),p=h+1,f=d+1;return(p-i)*((f-c)*Fg(t,e,n,a,s,r,o,h,d,l,u)+(c-d)*Fg(t,e,n,a,s,r,o,h,f,l,u))+(i-h)*((f-c)*Fg(t,e,n,a,s,r,o,p,d,l,u)+(c-d)*Fg(t,e,n,a,s,r,o,p,f,l,u))}var Lg=n(23705);const Og={kernelName:a.EwU,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:a}=t,{axis:s}=n,{x:r}=e;(0,wu.C)(r,"unique");const o=a.data.get(r.dataId).values,{outputValues:i,outputShape:c,indices:l}=(0,Lg.w)(o,s,r.shape,r.dtype);return[a.makeTensorInfo(c,r.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const Mg={kernelName:a.dXR,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{value:s}=e;let{axis:r}=a;r<0&&(r+=s.shape.length);const o=s.shape.length,i=s.shape[r],c=new Array(o-1);let l=0;for(let p=0;p<o;p++)p!==r&&(c[l++]=s.shape[p]);const u=new Array(o).fill(0),h=s.shape.slice();h[r]=1;const d=new Array(i);for(let p=0;p<d.length;p++){u[r]=p;const t=(0,Sh.di)({inputs:{x:s},backend:n,attrs:{begin:u,size:h}});d[p]=Uu({inputs:{x:t},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(t)}return d}};const zg={kernelName:a.pPe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,segmentIds:o}=e,{numSegments:i}=s;(0,wu.C)(r,"unsortedSegmentSum");const c=[],l=[],u=r.shape.length-o.shape.length;let h=o;for(let a=0;a<u;++a){const t=Ad({inputs:{input:h},backend:n,attrs:{dim:a+1}});h=t,l.push(t)}for(let p=0;p<i;++p){const t=a.ZSL.createScalarValue(p,"int32"),e=n.makeTensorInfo([],"int32",t),s=(0,xd.LC)({inputs:{a:e,b:h},backend:n}),o=(0,Eh.wg)({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),i=(0,dd.lw)({inputs:{a:o,b:r},backend:n}),u=fd({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});c.push(u),l.push(e),l.push(s),l.push(o),l.push(i),l.push(u)}const d=nf({inputs:c,backend:n,attrs:{axis:0}});return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}},Pg=[Ku,Hu.lO,qu,Qu,Wu.UK,Xu,$u,th,eh,nh,sh,oh,ch,dh,fh,xh,yh,vh,wh,Zu,kh,Th,Ch,Nh.LY,Ah,Eh.Ml,Rh.uf,Dh,_h.v,Lh,Wh,Vh,Gh,Zh,Kh,Hh,jh,Yh,Xh,Jh,$h,td,ed,nd,sd,rd,od,id,cd,ld,ud,hd,md,Cu,bd,xd.RY,Cd,Nd.AC,Ed,Rd.Yp,Pd,Wd,Ud,Vd.Hc,Kd,Hd,jd,Yd,Xd,Jd.xp,$d.VM,Nu.F,tp,zh,np,sp,op,Eu,ip.YW,cp.Q,up,hp.Fx,pp,mp,xp,wp,kp,Sp,Np,Ap.l9,Ep,Rp,Fp,Dp,_p,Lp,Op,Mp.Nu,zp,Wp,Gp,dd.tJ,Zp.hd,Hp,qp,Qp,Xp.AL,Jp,ef,af,sf,cf,_u,lf.S3,hf,pf,gf,bf,Ph.r,_d,yf,Ou,zu,Vu,vf,wf,kf,Sf,Tf,If,Nf,Af.Lt,Rf,_f,Lf,Pf,Pu.X3,Wf,Vf,Zf,Sh.lv,Vp,jf,qf,Qf,Jf,tg,eg,ng,ag,sg.Fu,rg,cg,lg.C,hg,pg,gg,bg,yg,Ld.Zl,gd,wg,Sg,Tg,Cg,Ag,Eg,Ju.W,Og,Mg,zg,tf];for(const Wg of Pg)(0,a.tAK)(Wg);var Bg=n(59788);a.bgA,Bg.$p},77353:t=>{t.exports=n;var e=null;try{e=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(I){}function n(t,e,n){this.low=0|t,this.high=0|e,this.unsigned=!!n}function a(t){return!0===(t&&t.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var s={},r={};function o(t,e){var n,a,o;return e?(o=0<=(t>>>=0)&&t<256)&&(a=r[t])?a:(n=c(t,(0|t)<0?-1:0,!0),o&&(r[t]=n),n):(o=-128<=(t|=0)&&t<128)&&(a=s[t])?a:(n=c(t,t<0?-1:0,!1),o&&(s[t]=n),n)}function i(t,e){if(isNaN(t))return e?b:m;if(e){if(t<0)return b;if(t>=p)return k}else{if(t<=-f)return S;if(t+1>=f)return w}return t<0?i(-t,e).neg():c(t%d|0,t/d|0,e)}function c(t,e,a){return new n(t,e,a)}n.fromInt=o,n.fromNumber=i,n.fromBits=c;var l=Math.pow;function u(t,e,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return m;if("number"===typeof e?(n=e,e=!1):e=!!e,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return u(t.substring(1),e,n).neg();for(var s=i(l(n,8)),r=m,o=0;o<t.length;o+=8){var c=Math.min(8,t.length-o),h=parseInt(t.substring(o,o+c),n);if(c<8){var d=i(l(n,c));r=r.mul(d).add(i(h))}else r=(r=r.mul(s)).add(i(h))}return r.unsigned=e,r}function h(t,e){return"number"===typeof t?i(t,e):"string"===typeof t?u(t,e):c(t.low,t.high,"boolean"===typeof e?e:t.unsigned)}n.fromString=u,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,g=o(1<<24),m=o(0);n.ZERO=m;var b=o(0,!0);n.UZERO=b;var x=o(1);n.ONE=x;var y=o(1,!0);n.UONE=y;var v=o(-1);n.NEG_ONE=v;var w=c(-1,2147483647,!1);n.MAX_VALUE=w;var k=c(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=c(0,-2147483648,!1);n.MIN_VALUE=S;var T=n.prototype;T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},T.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var e=i(t),n=this.div(e),a=n.mul(e).sub(this);return n.toString(t)+a.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var s=i(l(t,6),this.unsigned),r=this,o="";;){var c=r.div(s),u=(r.sub(c.mul(s)).toInt()>>>0).toString(t);if((r=c).isZero())return u+o;for(;u.length<6;)u="0"+u;o=""+u+o}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&0==(t&1<<e);e--);return 0!=this.high?e+33:e+1},T.isZero=function(){return 0===this.high&&0===this.low},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return 1===(1&this.low)},T.isEven=function(){return 0===(1&this.low)},T.equals=function(t){return a(t)||(t=h(t)),(this.unsigned===t.unsigned||this.high>>>31!==1||t.high>>>31!==1)&&(this.high===t.high&&this.low===t.low)},T.eq=T.equals,T.notEquals=function(t){return!this.eq(t)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(t){return this.comp(t)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(t){return this.comp(t)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(t){return this.comp(t)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(t){return this.comp(t)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(t){if(a(t)||(t=h(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},T.neg=T.negate,T.add=function(t){a(t)||(t=h(t));var e=this.high>>>16,n=65535&this.high,s=this.low>>>16,r=65535&this.low,o=t.high>>>16,i=65535&t.high,l=t.low>>>16,u=0,d=0,p=0,f=0;return p+=(f+=r+(65535&t.low))>>>16,d+=(p+=s+l)>>>16,u+=(d+=n+i)>>>16,u+=e+o,c((p&=65535)<<16|(f&=65535),(u&=65535)<<16|(d&=65535),this.unsigned)},T.subtract=function(t){return a(t)||(t=h(t)),this.add(t.neg())},T.sub=T.subtract,T.multiply=function(t){if(this.isZero())return m;if(a(t)||(t=h(t)),e)return c(e.mul(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned);if(t.isZero())return m;if(this.eq(S))return t.isOdd()?S:m;if(t.eq(S))return this.isOdd()?S:m;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(g)&&t.lt(g))return i(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,r=this.low>>>16,o=65535&this.low,l=t.high>>>16,u=65535&t.high,d=t.low>>>16,p=65535&t.low,f=0,b=0,x=0,y=0;return x+=(y+=o*p)>>>16,b+=(x+=r*p)>>>16,x&=65535,b+=(x+=o*d)>>>16,f+=(b+=s*p)>>>16,b&=65535,f+=(b+=r*d)>>>16,b&=65535,f+=(b+=o*u)>>>16,f+=n*p+s*d+r*u+o*l,c((x&=65535)<<16|(y&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},T.mul=T.multiply,T.divide=function(t){if(a(t)||(t=h(t)),t.isZero())throw Error("division by zero");var n,s,r;if(e)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?c((this.unsigned?e.div_u:e.div_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:m;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return b;if(t.gt(this.shru(1)))return y;r=b}else{if(this.eq(S))return t.eq(x)||t.eq(v)?S:t.eq(S)?x:(n=this.shr(1).div(t).shl(1)).eq(m)?t.isNegative()?x:v:(s=this.sub(t.mul(n)),r=n.add(s.div(t)));if(t.eq(S))return this.unsigned?b:m;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();r=m}for(s=this;s.gte(t);){n=Math.max(1,Math.floor(s.toNumber()/t.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),u=o<=48?1:l(2,o-48),d=i(n),p=d.mul(t);p.isNegative()||p.gt(s);)p=(d=i(n-=u,this.unsigned)).mul(t);d.isZero()&&(d=x),r=r.add(d),s=s.sub(p)}return r},T.div=T.divide,T.modulo=function(t){return a(t)||(t=h(t)),e?c((this.unsigned?e.rem_u:e.rem_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return c(~this.low,~this.high,this.unsigned)},T.and=function(t){return a(t)||(t=h(t)),c(this.low&t.low,this.high&t.high,this.unsigned)},T.or=function(t){return a(t)||(t=h(t)),c(this.low|t.low,this.high|t.high,this.unsigned)},T.xor=function(t){return a(t)||(t=h(t)),c(this.low^t.low,this.high^t.high,this.unsigned)},T.shiftLeft=function(t){return a(t)&&(t=t.toInt()),0===(t&=63)?this:t<32?c(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):c(0,this.low<<t-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(t){return a(t)&&(t=t.toInt()),0===(t&=63)?this:t<32?c(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):c(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(t){if(a(t)&&(t=t.toInt()),0===(t&=63))return this;var e=this.high;return t<32?c(this.low>>>t|e<<32-t,e>>>t,this.unsigned):c(32===t?e:e>>>t-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},T.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},T.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},n.fromBytes=function(t,e,a){return a?n.fromBytesLE(t,e):n.fromBytesBE(t,e)},n.fromBytesLE=function(t,e){return new n(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},n.fromBytesBE=function(t,e){return new n(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}},34334:(t,e,n)=>{var a=n(17359),s=n(77066),r=n(29016),o=n(69538),i=n(6288),c=n(45262),l=n(22430);l.alea=a,l.xor128=s,l.xorwow=r,l.xorshift7=o,l.xor4096=i,l.tychei=c,t.exports=l},17359:function(t,e,n){var a;!function(t,s){function r(t){var e=this,n=function(){var t=4022871197,e=function(e){e=String(e);for(var n=0;n<e.length;n++){var a=.02519603282416938*(t+=e.charCodeAt(n));a-=t=a>>>0,t=(a*=t)>>>0,t+=4294967296*(a-=t)}return 2.3283064365386963e-10*(t>>>0)};return e}();e.next=function(){var t=2091639*e.s0+2.3283064365386963e-10*e.c;return e.s0=e.s1,e.s1=e.s2,e.s2=t-(e.c=0|t)},e.c=1,e.s0=n(" "),e.s1=n(" "),e.s2=n(" "),e.s0-=n(t),e.s0<0&&(e.s0+=1),e.s1-=n(t),e.s1<0&&(e.s1+=1),e.s2-=n(t),e.s2<0&&(e.s2+=1),n=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function i(t,e){var n=new r(t),a=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,a&&("object"==typeof a&&o(a,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(e,n,e,s))||(s.exports=a):this.alea=i}(0,t=n.nmd(t),n.amdD)},45262:function(t,e,n){var a;!function(t,s){function r(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,a=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-a|0,a=a<<24^a>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-a|0,e.d=a<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var a=0;a<n.length+20;a++)e.b^=0|n.charCodeAt(a),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function i(t,e){var n=new r(t),a=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&o(a,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(e,n,e,s))||(s.exports=a):this.tychei=i}(0,t=n.nmd(t),n.amdD)},77066:function(t,e,n){var a;!function(t,s){function r(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var a=0;a<n.length+64;a++)e.x^=0|n.charCodeAt(a),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function i(t,e){var n=new r(t),a=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&o(a,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(e,n,e,s))||(s.exports=a):this.xor128=i}(0,t=n.nmd(t),n.amdD)},6288:function(t,e,n){var a;!function(t,s){function r(t){var e=this;e.next=function(){var t,n,a=e.w,s=e.X,r=e.i;return e.w=a=a+1640531527|0,n=s[r+34&127],t=s[r=r+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[r]=n^t,e.i=r,n+(a^a>>>16)|0},function(t,e){var n,a,s,r,o,i=[],c=128;for(e===(0|e)?(a=e,e=null):(e+="\0",a=0,c=Math.max(c,e.length)),s=0,r=-32;r<c;++r)e&&(a^=e.charCodeAt((r+32)%e.length)),0===r&&(o=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,r>=0&&(o=o+1640531527|0,s=0==(n=i[127&r]^=a+o)?s+1:0);for(s>=128&&(i[127&(e&&e.length||0)]=-1),s=127,r=512;r>0;--r)a=i[s+34&127],n=i[s=s+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[s]=a^n;t.w=o,t.X=i,t.i=s}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function i(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,a&&(a.X&&o(a,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(e,n,e,s))||(s.exports=a):this.xor4096=i}(0,t=n.nmd(t),n.amdD)},69538:function(t,e,n){var a;!function(t,s){function r(t){var e=this;e.next=function(){var t,n,a=e.x,s=e.i;return t=a[s],n=(t^=t>>>7)^t<<24,n^=(t=a[s+1&7])^t>>>10,n^=(t=a[s+3&7])^t>>>3,n^=(t=a[s+4&7])^t<<7,t=a[s+7&7],n^=(t^=t<<13)^t<<9,a[s]=n,e.i=s+1&7,n},function(t,e){var n,a=[];if(e===(0|e))a[0]=e;else for(e=""+e,n=0;n<e.length;++n)a[7&n]=a[7&n]<<15^e.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],t.x=a,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function i(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,a&&(a.x&&o(a,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(e,n,e,s))||(s.exports=a):this.xorshift7=i}(0,t=n.nmd(t),n.amdD)},29016:function(t,e,n){var a;!function(t,s){function r(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var a=0;a<n.length+64;a++)e.x^=0|n.charCodeAt(a),a==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function i(t,e){var n=new r(t),a=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&o(a,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(e,n,e,s))||(s.exports=a):this.xorwow=i}(0,t=n.nmd(t),n.amdD)},22430:function(t,e,n){var a;!function(s,r,o){var i,c=256,l=o.pow(c,6),u=o.pow(2,52),h=2*u,d=255;function p(t,e,n){var a=[],d=b(m((e=1==e?{entropy:!0}:e||{}).entropy?[t,x(r)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(c):(t=new Uint8Array(c),(s.crypto||s.msCrypto).getRandomValues(t)),x(t)}catch(a){var e=s.navigator,n=e&&e.plugins;return[+new Date,s,n,s.screen,x(r)]}}():t,3),a),p=new f(a),y=function(){for(var t=p.g(6),e=l,n=0;t<u;)t=(t+n)*c,e*=c,n=p.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return y.int32=function(){return 0|p.g(4)},y.quick=function(){return p.g(4)/4294967296},y.double=y,b(x(p.S),r),(e.pass||n||function(t,e,n,a){return a&&(a.S&&g(a,p),t.state=function(){return g(p,{})}),n?(o.random=t,e):t})(y,d,"global"in e?e.global:this==o,e.state)}function f(t){var e,n=t.length,a=this,s=0,r=a.i=a.j=0,o=a.S=[];for(n||(t=[n++]);s<c;)o[s]=s++;for(s=0;s<c;s++)o[s]=o[r=d&r+t[s%n]+(e=o[s])],o[r]=e;(a.g=function(t){for(var e,n=0,s=a.i,r=a.j,o=a.S;t--;)e=o[s=d&s+1],n=n*c+o[d&(o[s]=o[r=d&r+e])+(o[r]=e)];return a.i=s,a.j=r,n})(c)}function g(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function m(t,e){var n,a=[],s=typeof t;if(e&&"object"==s)for(n in t)try{a.push(m(t[n],e-1))}catch(r){}return a.length?a:"string"==s?t:t+"\0"}function b(t,e){for(var n,a=t+"",s=0;s<a.length;)e[d&s]=d&(n^=19*e[d&s])+a.charCodeAt(s++);return x(e)}function x(t){return String.fromCharCode.apply(0,t)}if(b(o.random(),r),t.exports){t.exports=p;try{i=n(41234)}catch(y){}}else void 0===(a=function(){return p}.call(e,n,e,t))||(t.exports=a)}("undefined"!==typeof self?self:this,[],Math)}}]);
//# sourceMappingURL=11.32c99a59.chunk.js.map