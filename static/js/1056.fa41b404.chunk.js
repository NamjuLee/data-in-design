"use strict";(self.webpackChunkData_in_Design=self.webpackChunkData_in_Design||[]).push([[1056],{71056:(e,t,i)=>{i.r(t),i.d(t,{default:()=>bt});var r=i(8),n=i(35143),s=i(16868),a=i(30726),o=i(77717),l=i(50346),u=i(46053),p=(i(18690),i(40565)),c=i(85842),d=i(17707),m=i(25515),h=i(35238),y=i(39356),f=i(71719),g=i(3825),v=i(50076),R=i(45802),b=i(53084),w=i(76460),_=i(68134),S=i(90534),x=i(28379),I=i(55053),M=i(15359),F=i(42553),A=i(41894);const D={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var T=i(93187),P=i(74916),N=i(9272);const C={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},V={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},O=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function j(e){return O.has(e.type)}function Z(e,t){if(!e||!t)return(0,b.o8)(e||t);const i=(0,b.o8)(e);if(t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=null),J(i.rasterFunctionDefinition.arguments,t)}else"none"!==t.functionName.toLowerCase()&&(L(i.functionArguments).Raster=t);return i}function J(e,t){for(const i in e)"raster"===i.toLowerCase()&&("RasterFunctionVariable"===e[i].type?(e[i]=t.rasterFunctionDefinition,e[i].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[i].type&&J(e[i].arguments,t))}function E(e){const t=(0,b.o8)(D[e.functionName+"Function"]),i=e.functionArguments;for(const r in i)"raster"===r.toLowerCase()?(t.arguments[r]=E(i[r]),t.arguments[r].type="RasterFunctionTemplate"):"colormap"===r.toLowerCase()?(t.arguments[r].value=G(i[r]),t.arguments.ColorSchemeType.value=0):t.arguments[r].value=i[r];return t}function z(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const i=t.convertToRFT,r=new A.A;r.functionName="Stretch";const n=q[P.u.toJSON(e.stretchType)],s="u8",a={StretchType:n,Statistics:Q(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(a.Min=e.outputMin),null!=e.outputMax&&(a.Max=e.outputMax),n===q.standardDeviation?(a.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType=s):n===q.percentClip?(a.MinPercent=e.minPercent,a.MaxPercent=e.maxPercent,r.outputPixelType=s):n===q.minMax?r.outputPixelType=s:n===q.sigmoid&&(a.SigmoidStrengthLevel=e.sigmoidStrengthLevel),r.functionArguments=a,r.variableName="Raster",e.colorRamp){const n=e.colorRamp,s=new A.A;if(i)s.functionArguments={ColorRamp:(0,T.hf)(n)};else{const i=(0,T.hs)(n);if(i)s.functionArguments={colorRamp:i};else if(!t.convertColorRampToColormap||"algorithmic"!==n.type&&"multipart"!==n.type){var o;const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&(null===(o=t.colorRamps)||void 0===o?void 0:o.length)&&t.colorRamps.forEach((e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm")),s.functionArguments={colorRamp:t}}else s.functionArguments={Colormap:(0,T.R8)(n,256)}}return s.variableName="Raster",s.functionName="Colormap",s.functionArguments.Raster=r,i?new A.A({rasterFunctionDefinition:E(s)}):s}return i?new A.A({rasterFunctionDefinition:E(r)}):r}(e,t);case"class-breaks":return function(e,t){const i=[],r=[],n=[],s=[],o=1e-6,{pixelType:l,rasterAttributeTable:u}=t,p=(0,a.$I)(u)?null:u.features,c=k(u);if(p&&Array.isArray(p)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,i)=>{const r=t.symbol.color;let n;r.a&&p.forEach((a=>{n=a.attributes[e.field],(n>=t.minValue&&n<t.maxValue||i===e.classBreakInfos.length-1&&n>=t.minValue)&&s.push([a.attributes[c],r.r,r.g,r.b])}))}));const i=l?H(s,l):s,r=new A.A;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=i,r.variableName="Raster",t.convertToRFT?new A.A({rasterFunctionDefinition:E(r)}):r}e.classBreakInfos.forEach(((e,t)=>{const a=e.symbol&&e.symbol.color;a.a?(0===t?i.push(e.minValue,e.maxValue+o):i.push(e.minValue+o,e.maxValue+o),r.push(t),s.push([t,a.r,a.g,a.b])):n.push(e.minValue,e.maxValue)}));const d=l?H(s,l):s,m=new A.A;m.functionName="Remap",m.functionArguments={InputRanges:i,OutputValues:r,NoDataRanges:n},m.variableName="Raster";const h=new A.A;return h.functionName="Colormap",h.functionArguments={Colormap:d,Raster:m},t.convertToRFT?new A.A({rasterFunctionDefinition:E(h)}):h}(e,t);case"unique-value":return function(e,t){var i;const r=[],{pixelType:n,rasterAttributeTable:s}=t,o=(0,a.$I)(s)?null:s.features,l=k(s),u=null===(i=e.defaultSymbol)||void 0===i||null===(i=i.color)||void 0===i?void 0:i.toRgb(),p=e.uniqueValueInfos;if(p)if(o){const t=new Map;p.forEach((e=>{const i=e.value,r=e.symbol.color;null!=i&&r&&r.a&&t.set(String(i),r.toRgb())}));const i=e.field;o.forEach((e=>{let{attributes:n}=e;const s=String(n[i]),a=n[l];if(t.has(s)){const e=t.get(s);r.push([a,...e])}else u&&r.push([a,...u])}))}else for(let a=0;a<p.length;a++){const e=p[a],t=e.symbol.color,i=+e.value;if(null!==t&&void 0!==t&&t.a){if(isNaN(i))return null;r.push([i,t.r,t.g,t.b])}}const c=n&&r.length>0?H(r,n):r,d=new A.A;return d.functionName="Colormap",d.functionArguments={},d.functionArguments.Colormap=c,d.variableName="Raster",t.convertToRFT?new A.A({rasterFunctionDefinition:E(d)}):d}(e,t);case"raster-colormap":return function(e,t){const i=e.extractColormap();if(!i||0===i.length)return;const{pixelType:r}=t,n=r?H(i,r):i,s=new A.A;return s.functionName="Colormap",s.functionArguments={},s.functionArguments.Colormap=n,t.convertToRFT?new A.A({rasterFunctionDefinition:E(s)}):s}(e,t);case"vector-field":return function(e,t){const i=new A.A;i.functionName="VectorFieldRenderer";const{dataType:r,bandProperties:n}=t,s="vector-uv"===r;let a,o;n&&2===n.length&&(a=n.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),o=n.map((e=>e.BandName.toLowerCase())).indexOf("direction")),-1!==a&&null!==a||(a=0,o=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new N.A,c={magnitudeBandID:a,directionBandID:o,isUVComponents:s,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:V[e.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};return i.functionArguments=c,t.convertToRFT?new A.A({rasterFunctionDefinition:E(i)}):i}(e,t);case"raster-shaded-relief":return function(e,t){const i=t.convertToRFT;if("elevation"!==t.dataType&&("generic"!==t.dataType||1!==t.bandCount||"s16"!==t.pixelType&&"s32"!==t.pixelType&&"f32"!==t.pixelType&&"f64"!==t.pixelType))return new A.A;const r=new A.A;r.functionName="Hillshade";const n="traditional"===e.hillshadeType?0:1,s="none"===e.scalingType?1:3,a={HillshadeType:n,SlopeType:s,ZFactor:e.zFactor};return 0===n&&(a.Azimuth=e.azimuth,a.Altitude=e.altitude),3===s&&(a.PSPower=e.pixelSizePower,a.PSZFactor=e.pixelSizeFactor),r.functionArguments=a,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",i?a.ColorRamp=(0,T.hf)(e.colorRamp):a.Colormap=(0,T.R8)(e.colorRamp,256)),i?new A.A({rasterFunctionDefinition:E(r)}):r}(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function L(e){const t=null===e||void 0===e?void 0:e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?L(t.functionArguments):e}const q={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function H(e,t){const i=C[String(t).toLowerCase()];return i&&e.push([Math.floor(i[0]-1),0,0,0],[Math.ceil(i[1]+1),0,0,0]),e}function k(e){if((0,a.$I)(e))return;const{fields:t}=e,i=t&&t.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return i&&i.name}function Q(e){const t=[];return e.forEach((e=>{const i=e;if(Array.isArray(i))t.push(i);else{if(null==i.min||null==i.max)return;const e=[i.min,i.max,i.avg||0,i.stddev||0];t.push(e)}})),t}function G(e){const t=[],i=[];return e.forEach((e=>{t.push(e[0]),i.push((0,T.TB)([...e.slice(1),255]))})),{type:"RasterColormap",values:t,colors:i}}var U,B=i(21403),K=i(13904);const $=(0,R.O)()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),W=(0,R.O)()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let Y=U=class extends F.oY{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return function(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;default:t="esriMosaicNone"}return W.fromJSON(t)}(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const i=t.mosaicOperation,r=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),n=i||(r?$.toJSON(r):null);return $.fromJSON(n)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:"".concat(e)}clone(){return new U({ascending:this.ascending,itemRenderingRule:(0,b.o8)(this.itemRenderingRule),lockRasterIds:(0,b.o8)(this.lockRasterIds),method:this.method,multidimensionalDefinition:(0,b.o8)(this.multidimensionalDefinition),objectIds:(0,b.o8)(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:(0,b.o8)(this.viewpoint),where:this.where})}};(0,n._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],Y.prototype,"ascending",void 0),(0,n._)([(0,x.w)("ascending",["ascending","sortAscending"])],Y.prototype,"readAscending",null),(0,n._)([(0,u.MZ)({type:A.A,json:{write:!0}})],Y.prototype,"itemRenderingRule",void 0),(0,n._)([(0,u.MZ)({type:[p.jz],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],Y.prototype,"lockRasterIds",void 0),(0,n._)([(0,u.MZ)({type:String,json:{type:W.jsonValues,write:{target:"mosaicMethod",writer:W.write}}})],Y.prototype,"method",void 0),(0,n._)([(0,x.w)("method",["mosaicMethod","defaultMosaicMethod"])],Y.prototype,"readMethod",null),(0,n._)([(0,u.MZ)({type:[M.A],json:{write:!0}})],Y.prototype,"multidimensionalDefinition",void 0),(0,n._)([(0,u.MZ)({type:[p.jz],json:{name:"fids",write:!0}})],Y.prototype,"objectIds",void 0),(0,n._)([(0,u.MZ)({json:{type:$.jsonValues,read:{reader:$.read},write:{target:"mosaicOperation",writer:$.write}}})],Y.prototype,"operation",void 0),(0,n._)([(0,x.w)("operation",["mosaicOperation","mosaicOperator"])],Y.prototype,"readOperation",null),(0,n._)([(0,u.MZ)({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],Y.prototype,"sortField",void 0),(0,n._)([(0,u.MZ)({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],Y.prototype,"sortValue",void 0),(0,n._)([(0,B.w)("sortValue")],Y.prototype,"castSortValue",null),(0,n._)([(0,u.MZ)({type:K.A,json:{write:!0}})],Y.prototype,"viewpoint",void 0),(0,n._)([(0,u.MZ)({type:String,json:{write:!0}})],Y.prototype,"where",void 0),Y=U=(0,n._)([(0,c.$)("esri.layers.support.MosaicRule")],Y);const X=Y;var ee=i(58646);let te=class extends F.oY{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,t,i){this.layer.version<10.3||(t[i]=e)}get bandIds(){return this.layer.bandIds}set bandIds(e){this.layer&&(this.layer.bandIds=e)}get compressionQuality(){var e;return null===(e=this.layer)||void 0===e?void 0:e.compressionQuality}set compressionQuality(e){this.layer&&(this.layer.compressionQuality=e)}writeCompressionQuality(e,t,i){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[i]=e)}get compressionTolerance(){var e;return null===(e=this.layer)||void 0===e?void 0:e.compressionTolerance}set compressionTolerance(e){this.layer&&(this.layer.compressionTolerance=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}get format(){var e;return"vector-field"===(null===(e=this.layer.renderer)||void 0===e?void 0:e.type)?"lerc":this.layer.format}get interpolation(){var e;return null===(e=this.layer)||void 0===e?void 0:e.interpolation}set interpolation(e){this.layer&&(this.layer.interpolation=e)}get noData(){var e;return null===(e=this.layer)||void 0===e?void 0:e.noData}set noData(e){this.layer&&(this.layer.noData=e)}get noDataInterpretation(){var e;return null===(e=this.layer)||void 0===e?void 0:e.noDataInterpretation}set noDataInterpretation(e){this.layer&&(this.layer.noDataInterpretation=e)}writeLercVersion(e,t,i){"lerc"===this.format&&this.layer.version>=10.5&&(t[i]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const i=e.definitionExpression;return t?i&&i!==t.where&&(t=t.clone(),t.where=i):i&&(t=new X({where:i})),t}get renderingRule(){var e,t;const i=this.layer;let r=i.renderingRule;const n=i.pixelFilter,s=!i.format||i.format.includes("jpg")||i.format.includes("png");r=this._addResampleRasterFunction(r);const a=null===(e=i.multidimensionalSubset)||void 0===e?void 0:e.areaOfInterest;return a&&(r=this._addClipFunction(r,a)),s&&!n&&"vector-field"!==(null===(t=i.renderer)||void 0===t?void 0:t.type)&&(r=this.combineRendererWithRenderingRule(r)),r}combineRendererWithRenderingRule(e){var t,i;const r=this.layer,{rasterInfo:n,renderer:s}=r;return e=e||r.renderingRule,s&&j(s)?Z(z(s,{rasterAttributeTable:n.attributeTable,pixelType:n.pixelType,dataType:n.dataType,bandProperties:null===(t=n.keyProperties)||void 0===t?void 0:t.BandProperties,convertColorRampToColormap:r.version<10.6,convertToRFT:!(null===(i=e)||void 0===i||!i.rasterFunctionDefinition),bandCount:n.bandCount}),e):e}_addResampleRasterFunction(e){var t;if("vector-field"!==(null===(t=this.layer.renderer)||void 0===t?void 0:t.type)||"Resample"===(null===e||void 0===e?void 0:e.functionName))return e;const i="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,r=this.layer.serviceRasterInfo.pixelSize;let n=new A.A({functionName:"Resample",functionArguments:{ResamplingType:i,InputCellSize:r}});return n=null!==e&&void 0!==e&&e.rasterFunctionDefinition?new A.A({rasterFunctionDefinition:E(n)}):n,Z(n,e)}_addClipFunction(e,t){return Z(new A.A({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}}),e)}};(0,n._)([(0,u.MZ)()],te.prototype,"layer",void 0),(0,n._)([(0,u.MZ)({json:{write:!0}})],te.prototype,"adjustAspectRatio",void 0),(0,n._)([(0,d.K)("adjustAspectRatio")],te.prototype,"writeAdjustAspectRatio",null),(0,n._)([(0,u.MZ)({json:{write:!0}})],te.prototype,"bandIds",null),(0,n._)([(0,u.MZ)({json:{write:!0}})],te.prototype,"compression",void 0),(0,n._)([(0,u.MZ)({json:{write:!0}})],te.prototype,"compressionQuality",null),(0,n._)([(0,d.K)("compressionQuality")],te.prototype,"writeCompressionQuality",null),(0,n._)([(0,u.MZ)({json:{write:!0}})],te.prototype,"compressionTolerance",null),(0,n._)([(0,d.K)("compressionTolerance")],te.prototype,"writeCompressionTolerance",null),(0,n._)([(0,u.MZ)({json:{write:!0}})],te.prototype,"format",null),(0,n._)([(0,u.MZ)({type:String,json:{read:{reader:ee.S.read},write:{writer:ee.S.write}}})],te.prototype,"interpolation",null),(0,n._)([(0,u.MZ)({json:{write:!0}})],te.prototype,"noData",null),(0,n._)([(0,u.MZ)({type:String,json:{read:{reader:ee.h.read},write:{writer:ee.h.write}}})],te.prototype,"noDataInterpretation",null),(0,n._)([(0,u.MZ)({json:{write:!0}})],te.prototype,"pixelType",void 0),(0,n._)([(0,u.MZ)({json:{write:!0}})],te.prototype,"lercVersion",void 0),(0,n._)([(0,d.K)("lercVersion")],te.prototype,"writeLercVersion",null),(0,n._)([(0,u.MZ)({type:Number})],te.prototype,"version",null),(0,n._)([(0,u.MZ)({json:{write:!0}})],te.prototype,"mosaicRule",null),(0,n._)([(0,u.MZ)({json:{write:!0}})],te.prototype,"renderingRule",null),te=(0,n._)([(0,c.$)("esri.layers.mixins.ExportImageServiceParameters")],te);var ie=i(44135),re=i(1900),ne=i(13023),se=i(4081),ae=i(41882),oe=i(42915),le=i(68347),ue=i(37267),pe=i(99846),ce=i(78937),de=i(20118),me=i(1438),he=i(54994),ye=i(13312);let fe=class extends F.oY{constructor(){super(...arguments),this.north=null,this.up=null,this.spatialReference=null}};(0,n._)([(0,u.MZ)({type:Number,json:{write:!0}})],fe.prototype,"north",void 0),(0,n._)([(0,u.MZ)({type:Number,json:{write:!0}})],fe.prototype,"up",void 0),(0,n._)([(0,u.MZ)({type:ye.A,json:{write:!0}})],fe.prototype,"spatialReference",void 0),fe=(0,n._)([(0,c.$)("esri.rest.support.ImageAngleResult")],fe);const ge=fe;var ve=i(77725);let Re=class extends F.oY{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,n._)([(0,u.MZ)({json:{write:!0}})],Re.prototype,"catalogItemVisibilities",void 0),(0,n._)([(0,u.MZ)({type:ve.default,json:{write:!0}})],Re.prototype,"catalogItems",void 0),(0,n._)([(0,u.MZ)({type:K.A,json:{write:!0}})],Re.prototype,"location",void 0),(0,n._)([(0,u.MZ)({json:{write:!0}})],Re.prototype,"name",void 0),(0,n._)([(0,u.MZ)({json:{write:!0}})],Re.prototype,"objectId",void 0),(0,n._)([(0,u.MZ)({json:{write:!0}})],Re.prototype,"processedValues",void 0),(0,n._)([(0,u.MZ)({json:{write:!0}})],Re.prototype,"properties",void 0),(0,n._)([(0,u.MZ)({json:{write:!0}})],Re.prototype,"value",void 0),Re=(0,n._)([(0,c.$)("esri.rest.support.ImageIdentifyResult")],Re);const be=Re;let we=class extends F.oY{constructor(){super(...arguments),this.geometries=null}};(0,n._)([(0,u.MZ)({json:{write:!0}})],we.prototype,"geometries",void 0),we=(0,n._)([(0,c.$)("esri.rest.support.ImagePixelLocationResult")],we);const _e=we;let Se=class extends F.oY{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,n._)([(0,u.MZ)({json:{write:!0}})],Se.prototype,"attributes",void 0),(0,n._)([(0,u.MZ)({type:K.A,json:{write:!0}})],Se.prototype,"location",void 0),(0,n._)([(0,u.MZ)({json:{write:!0}})],Se.prototype,"locationId",void 0),(0,n._)([(0,u.MZ)({json:{write:!0}})],Se.prototype,"rasterId",void 0),(0,n._)([(0,u.MZ)({json:{write:!0}})],Se.prototype,"resolution",void 0),(0,n._)([(0,u.MZ)({json:{write:!0}})],Se.prototype,"pixelValue",void 0),Se=(0,n._)([(0,c.$)("esri.rest.support.ImageSample")],Se);const xe=Se;let Ie=class extends F.oY{constructor(){super(...arguments),this.samples=null}};(0,n._)([(0,u.MZ)({type:[xe],json:{write:!0}})],Ie.prototype,"samples",void 0),Ie=(0,n._)([(0,c.$)("esri.rest.support.ImageSampleResult")],Ie);const Me=Ie;function Fe(e){const t=null===e||void 0===e?void 0:e.time;if(t&&(null!=t.start||null!=t.end)){const i=[];null!=t.start&&i.push(t.start),null==t.end||i.includes(t.end)||i.push(t.end),e.time=i.join(",")}}async function Ae(e,t,i){const n=(0,he.Dl)(e),s=t.geometry?[t.geometry]:[],o=await(0,me.el)(s),l=t.toJSON();Fe(l);const u=o&&o[0];(0,a.Ru)(u)&&(l.geometry=u.toJSON());const p=(0,he.lF)((0,r.A)((0,r.A)({},n.query),{},{f:"json"},l));return(0,he.jV)(p,i)}async function De(e,t,i){const n=(0,he.Dl)(e),s=t.geometry?[t.geometry]:[];return(0,me.el)(s).then((e=>{const s=t.toJSON(),o=e&&e[0];(0,a.Ru)(o)&&(s.geometry=JSON.stringify(o.toJSON()));const l=(0,he.lF)((0,r.A)((0,r.A)({},n.query),{},{f:"json"},s)),u=(0,he.jV)(l,i);return(0,g.default)(n.path+"/identify",u)})).then((e=>be.fromJSON(e.data)))}function Te(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:i}=t;return null!=e?i?{icsid:e,icsns:i}:{icsid:e}:{ics:t}}return e.toJSON()}function Pe(e,t){const i=Te(e),{icsid:r,icsns:n,wkid:s}=i;return null!=r?null==n||null!==t&&void 0!==t&&t.toLowerCase().includes("/"+n.toLowerCase()+"/")?"0:".concat(r):JSON.stringify(i):s?s.toString():JSON.stringify(i)}i(81806),i(89551);var Ne,Ce=i(14009),Ve=(i(86560),i(55171),i(31633),i(80963),i(98618),i(76797)),Oe=(i(89189),i(66388)),je=i(65215),Ze=(i(23701),i(29234),i(97015)),Je=(i(88084),i(9708),i(37713)),Ee=i(53104),ze=(i(58289),i(58672),i(25213)),Le=i(49653);let qe=Ne=class extends F.oY{constructor(){super(...arguments),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new Ne((0,b.o8)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};(0,n._)([(0,u.MZ)({type:[String],json:{name:"angleName",write:!0}})],qe.prototype,"angleNames",void 0),(0,n._)([(0,u.MZ)({type:K.A,json:{write:!0}})],qe.prototype,"point",void 0),(0,n._)([(0,u.MZ)({type:ye.A,json:{write:!0}})],qe.prototype,"spatialReference",void 0),(0,n._)([(0,u.MZ)({type:p.jz,json:{write:!0}})],qe.prototype,"rasterId",void 0),qe=Ne=(0,n._)([(0,c.$)("esri.rest.support.ImageAngleParameters")],qe);const He=qe;var ke,Qe=i(82111),Ge=i(19902);let Ue=ke=class extends F.oY{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,Ge.$B)(e),t[i]=e.toJSON())}clone(){return new ke((0,b.o8)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};(0,n._)([(0,u.MZ)({types:h.yR,json:{read:Ge.rS}})],Ue.prototype,"geometry",void 0),(0,n._)([(0,d.K)("geometry")],Ue.prototype,"writeGeometry",null),(0,n._)([(0,u.MZ)({type:X,json:{write:!0}})],Ue.prototype,"mosaicRule",void 0),(0,n._)([(0,u.MZ)({type:A.A,json:{write:!0}})],Ue.prototype,"renderingRule",void 0),(0,n._)([(0,u.MZ)({type:K.A,json:{write:!0}})],Ue.prototype,"pixelSize",void 0),(0,n._)([(0,u.MZ)({json:{write:!0}})],Ue.prototype,"raster",void 0),(0,n._)([(0,u.MZ)({type:Qe.A,json:{read:{source:"time"},write:{target:"time"}}})],Ue.prototype,"timeExtent",void 0),Ue=ke=(0,n._)([(0,c.$)("esri.rest.support.ImageHistogramParameters")],Ue);const Be=Ue;var Ke;let $e=Ke=class extends F.oY{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,Ge.$B)(e),t[i]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=X.fromJSON((0,r.A)((0,r.A)({},t.toJSON()),{},{mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation}))),this._set("mosaicRule",t)}writeMosaicRule(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON()))}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=A.A.fromJSON((0,r.A)((0,r.A)({},t.toJSON()),{},{rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments}))),this._set("renderingRule",t)}writeRenderingRule(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[i]=JSON.stringify(e.rasterFunctionDefinition))}writeRenderingRules(e,t,i){null!=e&&(t[i]=JSON.stringify(e.map((e=>e.rasterFunctionDefinition||e.toJSON()))))}writePixelSize(e,t,i){null!=e&&(t[i]=JSON.stringify(e))}writeTimeExtent(e,t,i){if(null!=e){const r=(0,a.Ru)(e.start)?e.start.getTime():null,n=(0,a.Ru)(e.end)?e.end.getTime():null;t[i]=null!=r?null!=n?"".concat(r,",").concat(n):"".concat(r):null}}clone(){return new Ke((0,b.o8)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,n._)([(0,u.MZ)({json:{write:!0}})],$e.prototype,"geometry",void 0),(0,n._)([(0,d.K)("geometry")],$e.prototype,"writeGeometry",null),(0,n._)([(0,u.MZ)({type:X,json:{write:!0}})],$e.prototype,"mosaicRule",null),(0,n._)([(0,d.K)("mosaicRule")],$e.prototype,"writeMosaicRule",null),(0,n._)([(0,u.MZ)({type:A.A,json:{write:!0}})],$e.prototype,"renderingRule",null),(0,n._)([(0,d.K)("renderingRule")],$e.prototype,"writeRenderingRule",null),(0,n._)([(0,u.MZ)({type:[A.A],json:{write:!0}})],$e.prototype,"renderingRules",void 0),(0,n._)([(0,d.K)("renderingRules")],$e.prototype,"writeRenderingRules",null),(0,n._)([(0,u.MZ)({type:K.A,json:{write:!0}})],$e.prototype,"pixelSize",void 0),(0,n._)([(0,d.K)("pixelSize")],$e.prototype,"writePixelSize",null),(0,n._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],$e.prototype,"returnGeometry",void 0),(0,n._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],$e.prototype,"returnCatalogItems",void 0),(0,n._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],$e.prototype,"returnPixelValues",void 0),(0,n._)([(0,u.MZ)({type:Number,json:{write:!0}})],$e.prototype,"maxItemCount",void 0),(0,n._)([(0,u.MZ)({type:Qe.A,json:{write:{target:"time"}}})],$e.prototype,"timeExtent",void 0),(0,n._)([(0,d.K)("timeExtent")],$e.prototype,"writeTimeExtent",null),(0,n._)([(0,u.MZ)({json:{write:!0}})],$e.prototype,"raster",void 0),(0,n._)([(0,u.MZ)({json:{write:!0}})],$e.prototype,"viewId",void 0),(0,n._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],$e.prototype,"processAsMultidimensional",void 0),$e=Ke=(0,n._)([(0,c.$)("esri.rest.support.ImageIdentifyParameters")],$e);const We=$e;var Ye;let Xe=Ye=class extends F.oY{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(e,t,i){t.geometries={geometryType:"esriGeometryPoint",geometries:e.map((e=>e.toJSON()))}}clone(){var e,t;return new Ye({geometries:null!==(e=null===(t=this.geometries)||void 0===t?void 0:t.map((e=>e.clone())))&&void 0!==e?e:[],rasterId:this.rasterId})}};(0,n._)([(0,u.MZ)({type:[K.A],json:{write:!0}})],Xe.prototype,"geometries",void 0),(0,n._)([(0,d.K)("geometries")],Xe.prototype,"writeGeometry",null),(0,n._)([(0,u.MZ)({type:p.jz,json:{write:!0}})],Xe.prototype,"rasterId",void 0),Xe=Ye=(0,n._)([(0,c.$)("esri.rest.support.ImagePixelLocationParameters")],Xe);const et=Xe;var tt;let it=tt=class extends F.oY{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,Ge.$B)(e),t[i]=e.toJSON())}set locations(e){if(null!==e&&void 0!==e&&e.length){const t=new Oe.A({spatialReference:e[0].spatialReference});t.points=e.map((e=>[e.x,e.y])),this._set("locations",e),this.geometry=t}}clone(){return new tt((0,b.o8)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};(0,n._)([(0,u.MZ)({types:h.yR,json:{read:Ge.rS}})],it.prototype,"geometry",void 0),(0,n._)([(0,d.K)("geometry")],it.prototype,"writeGeometry",null),(0,n._)([(0,u.MZ)()],it.prototype,"locations",null),(0,n._)([(0,u.MZ)({type:String,json:{type:ee.S.jsonValues,read:ee.S.read,write:ee.S.write}})],it.prototype,"interpolation",void 0),(0,n._)([(0,u.MZ)({type:X,json:{write:!0}})],it.prototype,"mosaicRule",void 0),(0,n._)([(0,u.MZ)({type:[String],json:{write:!0}})],it.prototype,"outFields",void 0),(0,n._)([(0,u.MZ)({type:K.A,json:{write:!0}})],it.prototype,"pixelSize",void 0),(0,n._)([(0,u.MZ)({type:String,json:{write:!0}})],it.prototype,"raster",void 0),(0,n._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],it.prototype,"returnFirstValueOnly",void 0),(0,n._)([(0,u.MZ)({type:Number,json:{write:!0}})],it.prototype,"sampleDistance",void 0),(0,n._)([(0,u.MZ)({type:Number,json:{write:!0}})],it.prototype,"sampleCount",void 0),(0,n._)([(0,u.MZ)({type:Number,json:{write:!0}})],it.prototype,"sliceId",void 0),(0,n._)([(0,u.MZ)({type:Qe.A,json:{read:{source:"time"},write:{target:"time"}}})],it.prototype,"timeExtent",void 0),it=tt=(0,n._)([(0,c.$)("esri.rest.support.ImageSampleParameters")],it);const rt=it;var nt=i(46533);const st=(0,R.O)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),at=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),ot=(0,u.Qp)(p.GB,{min:0,max:255});const lt=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new te({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||(0,a.Ru)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||(0,a.Ru)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){null!=e&&"lerc"!==this.format&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?X.fromJSON(t):null}get fieldsIndex(){return this.fields?new re.A(this.fields):null}set format(e){e&&at.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=X.fromJSON((0,r.A)((0,r.A)({},t.toJSON()),{},{mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation}))),this._set("mosaicRule",t)}readMosaicRule(e,t){const i=e||t.mosaicRule;return i?X.fromJSON(i):this._isMosaicRuleSupported(t)?X.fromJSON(t):null}writeMosaicRule(e,t,i){let r=this.mosaicRule;const n=this.definitionExpression;r?n&&n!==r.where&&(r=r.clone(),r.where=n):n&&(r=new X({where:n})),this._isValidCustomizedMosaicRule(r)&&(t[i]=r.toJSON())}get multidimensionalInfo(){return(0,a.Ru)(this.serviceRasterInfo)?this.serviceRasterInfo.multidimensionalInfo:null}writeNoData(e,t,i){null!=e&&"number"==typeof e&&(t[i]=ot(e))}readObjectIdField(e,t){if(!e){const i=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=i&&i[0]&&i[0].name}return e}get parsedUrl(){return(0,S.An)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,i){var r;const n=null===t||void 0===t||null===(r=t.layerDefinition)||void 0===r||null===(r=r.drawingInfo)||void 0===r?void 0:r.renderer,s=(0,f.LF)(n,i);return null==s?null:("vector-field"===s.type&&t.symbolTileSize&&!n.symbolTileSize&&(s.symbolTileSize=t.symbolTileSize),j(s)||w.A.getLogger(this.declaredClass).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),s)}writeRenderer(e,t,i){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){var e,t;const i=this._rasterAttributeTableFieldPrefix||"Raster.",r=new ie.A({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),n=new ie.A({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),s=new ie.A({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let o=this.fields?(0,b.o8)(this.fields):[];o.push(n),null!==(e=this.capabilities)&&void 0!==e&&e.operations.supportsQuery&&this.fields&&this.fields.length>0&&o.push(r),this.version>=10.4&&(0,a.Ru)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&o.push(s),(0,a.Ru)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{o.push(new ie.A({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),this._isVectorDataSet()&&(o.push(new ie.A({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),o.push(new ie.A({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:l}=null!==(t=this.rasterInfo)&&void 0!==t?t:{};if((0,a.Ru)(l)){const e=l.fields.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=(0,b.o8)(e);return t.name=i+e.name,t}));o=o.concat(e)}return o}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=A.A.fromJSON((0,r.A)((0,r.A)({},t.toJSON()),{},{rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments}))),this._set("renderingRule",t)}readRenderingRule(e,t){const i=t.rasterFunctionInfos;return t.renderingRule||i&&i.length&&"None"!==i[0].name?this._isRFTJson(t.renderingRule)?A.A.fromJSON({rasterFunctionDefinition:t.renderingRule}):A.A.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,i){const r=e.toJSON();r.rasterFunctionDefinition?t[i]=r.rasterFunctionDefinition:t[i]=r}readSpatialReference(e,t){const i=e||t.extent.spatialReference;return i?ye.A.fromJSON(i):null}readPixelType(e){return st.fromJSON(e)||e}writePixelType(e,t,i){((0,a.$I)(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[i]=st.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let i=e;const{renderer:n,symbolizer:s,pixelFilter:a,bandIds:o}=this;if(!this._isPicture()&&n&&s&&!a){const a=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(n.toJSON()),l=this._rasterJobHandler.instance;if(l){a&&(s.bind(),await l.updateSymbolizer(s,t),this._cachedRendererJson=n.toJSON());const u=await l.symbolize((0,r.A)({bandIds:o},e),t);i={extent:e.extent,pixelBlock:u}}else i={extent:e.extent,pixelBlock:s.symbolize((0,r.A)({bandIds:o},e))}}return i}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsComputeAngles)throw new v.A("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=(0,p.PZ)(He,e).clone(),async function(e,t,i){var n;const s=t.toJSON();(0,a.Ru)(s.angleName)&&(s.angleName=s.angleName.join(",")),(0,a.Ru)(t.point)&&null!==(n=t.point.spatialReference)&&void 0!==n&&n.imageCoordinateSystem&&(s.point.spatialReference=Te(t.point.spatialReference)),(0,a.Ru)(t.spatialReference)&&t.spatialReference.imageCoordinateSystem&&(s.spatialReference=Pe(t.spatialReference));const o=(0,he.Dl)(e),l=(0,he.lF)((0,r.A)((0,r.A)({},o.query),{},{f:"json"},s)),u=(0,he.jV)(l,i),{data:p}=await(0,g.default)("".concat(o.path,"/computeAngles"),u);return p.spatialReference=p.spatialReference?null!=p.spatialReference.geodataXform?new ye.A({wkid:0,imageCoordinateSystem:p.spatialReference}):ye.A.fromJSON(p.spatialReference):null,"NaN"===p.north&&(p.north=null),"NaN"===p.up&&(p.up=null),new ge(p)}(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsComputePixelLocation)throw new v.A("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,p.PZ)(et,e).clone(),async function(e,t,i){const n=t.toJSON(),{geometries:s}=t;if(s)for(let r=0;r<s.length;r++){var a;(null===(a=s[r].spatialReference)||void 0===a?void 0:a.imageCoordinateSystem)&&(n.geometries.geometries[r].spatialReference=Te(s[r].spatialReference))}const o=(0,he.Dl)(e),l=(0,he.lF)((0,r.A)((0,r.A)({},o.query),{},{f:"json"},n)),u=(0,he.jV)(l,i),{data:p}=await(0,g.default)("".concat(o.path,"/computePixelLocation"),u);return _e.fromJSON(p)}(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsComputeHistograms)throw new v.A("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=(0,p.PZ)(Be,e).clone();const{raster:i,mosaicRule:r,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),r&&null==e.mosaicRule&&(e.mosaicRule=r),i&&null==e.raster&&(e.raster=i),async function(e,t,i){const r=await Ae(e,t,i),n=(0,he.Dl)(e),{data:s}=await(0,g.default)("".concat(n.path,"/computeHistograms"),r);return{histograms:s.histograms}}(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsComputeStatisticsHistograms)throw new v.A("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=(0,p.PZ)(Be,e).clone();const{raster:i,mosaicRule:r,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),r&&null==e.mosaicRule&&(e.mosaicRule=r),i&&null==e.raster&&(e.raster=i),async function(e,t,i){const r=await Ae(e,t,i),n=(0,he.Dl)(e),{data:s}=await(0,g.default)("".concat(n.path,"/computeStatisticsHistograms"),r),{statistics:a}=s;return null!==a&&void 0!==a&&a.length&&a.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:a,histograms:s.histograms}}(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return(0,a.Ru)(t)?t.get(e):void 0}getFieldDomain(e,t){const i=this.getField(e);return i?i.domain:null}async fetchImage(e,t,i){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(null==e||null==t||null==i)throw new v.A("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const e=await this.generateRasterInfo(this.renderingRule,{signal:r.signal});e&&(this.rasterInfo=e)}const n=this.getExportImageServiceParameters(e,t,i,r.timeExtent);if(null==n){var s,a,o,l,u;if(r.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement("canvas");return e.width=t,e.height=i,{imageOrCanvasElement:e}}const n=null!==(s=(null===(a=this.bandIds)||void 0===a?void 0:a.length)||(null===(o=this.rasterInfo)||void 0===o?void 0:o.bandCount))&&void 0!==s?s:0,p=t*i,c=null!==(l=null===(u=this.rasterInfo)||void 0===u?void 0:u.pixelType)&&void 0!==l?l:"unknown",d=[];for(let e=0;e<n;e++)d.push(se.A.createEmptyBand(c,p));return{pixelData:{pixelBlock:new se.A({width:t,height:i,pixels:d,mask:new Uint8Array(p),pixelType:c}),extent:e}}}const p={imageServiceParameters:n,imageProps:{extent:e,width:t,height:i,format:this.format},requestAsImageElement:r.requestAsImageElement&&!this.pixelFilter||!1,signal:r.signal};return this._requestArrayBuffer(p)}fetchKeyProperties(e){return(0,g.default)(i(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?null===e||void 0===e?void 0:e.renderingRule:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new v.A("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,g.default)(i(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?null===e||void 0===e?void 0:e.renderingRule:null})}).then((e=>ve.default.fromJSON(e.data)))}getCatalogItemRasterInfo(e,t){const n=(0,r.A)((0,r.A)({},t),{},{query:this._getQueryParams()});return async function(e,t,i){var n,s;const a=(0,he.Dl)(e),o=(0,he.lF)((0,r.A)((0,r.A)({},null===a||void 0===a?void 0:a.query),{},{f:"json"})),l=(0,he.jV)(o,i),u="".concat(null===a||void 0===a?void 0:a.path,"/").concat(t,"/info"),p=(0,g.default)("".concat(u),l),c=(0,g.default)("".concat(u,"/keyProperties"),l),d=await Promise.allSettled([p,c]),m="fulfilled"===d[0].status?d[0].value.data:null,h="fulfilled"===d[1].status?d[1].value.data:null;let y=null;(null===(n=m.statistics)||void 0===n?void 0:n.length)&&(y=m.statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))));const f=Ve.A.fromJSON(m.extent),v=Math.ceil(f.width/m.pixelSizeX-.1),R=Math.ceil(f.height/m.pixelSizeY-.1),b=f.spatialReference,w=new K.A({x:m.pixelSizeX,y:m.pixelSizeY,spatialReference:b}),_=null!==(s=m.histograms)&&void 0!==s&&s.length?m.histograms:null,S=new Le.A({origin:m.origin,blockWidth:m.blockWidth,blockHeight:m.blockHeight,firstPyramidLevel:m.firstPyramidLevel,maximumPyramidLevel:m.maxPyramidLevel});return new ae.A({width:v,height:R,bandCount:m.bandCount,extent:f,spatialReference:b,pixelSize:w,pixelType:m.pixelType.toLowerCase(),statistics:y,histograms:_,keyProperties:h,storageInfo:S})}(i(this.parsedUrl),e,n)}async getCatalogItemICSInfo(e,t){const{data:n}=await(0,g.default)(i(this.parsedUrl)+"/"+e+"/info/ics",(0,r.A)({query:this._getQueryParams()},t)),s=n&&n.ics;if(!s)return;let a=null;try{a=(await(0,g.default)(i(this.parsedUrl)+"/"+e+"/info",(0,r.A)({query:this._getQueryParams()},t))).data.extent}catch(V){}if(!a||!a.spatialReference)return{ics:s,icsToPixelTransform:null,icsExtent:null,northDirection:null};const o=this.version>=10.7?(0,g.default)(i(this.parsedUrl)+"/"+e+"/info/icstopixel",(0,r.A)({query:this._getQueryParams()},t)).then((e=>e.data)).catch((()=>({}))):{},l=a.spatialReference,u={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[a]}),inSR:l.wkid||JSON.stringify(l),outSR:"0:"+e},p=(0,g.default)(i(this.parsedUrl)+"/project",(0,r.A)({query:this._getQueryParams(u)},t)).then((e=>e.data)).catch((()=>({}))),c=(a.xmin+a.xmax)/2,d=(a.ymax-a.ymin)/6,m=a.ymin+d,h=[];for(let i=0;i<5;i++)h.push({x:c,y:m+d*i});const y={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:h}),inSR:l.wkid||JSON.stringify(l),outSR:"0:"+e},f=(0,g.default)(i(this.parsedUrl)+"/project",(0,r.A)({query:this._getQueryParams(y)},t)).then((e=>e.data)).catch((()=>({}))),v=await Promise.all([o,p,f]);let R=v[0].ipxf;if(null==R){var b,w,_;const e=null===(b=s.geodataXform)||void 0===b?void 0:b.xf_0;"topup"===(null===e||void 0===e||null===(w=e.name)||void 0===w?void 0:w.toLowerCase())&&6===(null===e||void 0===e||null===(_=e.coefficients)||void 0===_?void 0:_.length)&&(R={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const S=Ve.A.fromJSON(v[1]&&v[1].geometries&&v[1].geometries[0]);S&&(S.spatialReference=new ye.A({wkid:0,imageCoordinateSystem:s}));const x=v[2].geometries?v[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],I=x.length;if(I<3)return{ics:s,icsToPixelTransform:R,icsExtent:S,northDirection:null};let M=0,F=0,A=0,D=0;for(let i=0;i<I;i++)M+=x[i].x,F+=x[i].y,A+=x[i].x*x[i].x,D+=x[i].x*x[i].y;const T=(I*D-M*F)/(I*A-M*M);let P=0;const N=x[4].x>x[0].x,C=x[4].y>x[0].y;return T===1/0?P=C?90:270:0===T?P=N?0:180:T>0?P=N?180*Math.atan(T)/Math.PI:180*Math.atan(T)/Math.PI+180:T<0&&(P=C?180+180*Math.atan(T)/Math.PI:360+180*Math.atan(T)/Math.PI),{ics:s,icsToPixelTransform:R,icsExtent:S,northDirection:P}}async generateRasterInfo(e,t){var i;if(this.serviceRasterInfo&&(!e||"none"===(null===(i=e.functionName)||void 0===i?void 0:i.toLowerCase())||this._isVectorFieldResampleFunction(e)))return this.serviceRasterInfo;const r=function(e){var t;if(!e)return null;const i=null===(t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi))||void 0===t?void 0:t.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return i?i.join("/"):null}(e);if(!r)return null;if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const n=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=n;try{return await n}catch(s){return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,n,s){var o,l;const u=Pe((e=e.clone().shiftCentralMeridian()).spatialReference,i(this.parsedUrl));this.pixelType!==(null===(o=this.serviceRasterInfo)||void 0===o?void 0:o.pixelType)&&(this.exportImageServiceParameters.pixelType=this.pixelType);const p=this.exportImageServiceParameters.toJSON(),{bandIds:c,noData:d}=p;let{renderingRule:m}=p;const h=null===(l=this.renderingRule)||void 0===l?void 0:l.rasterFunctionDefinition,y=!this.renderer||"raster-stretch"===this.renderer.type;if(null!==c&&void 0!==c&&c.length&&this._hasRenderingRule(this.renderingRule)&&!h&&y){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:c}};if("Stretch"===m.rasterFunction)e.rasterFunctionArguments.Raster=m.rasterFunctionArguments.Raster,m.rasterFunctionArguments.Raster=e;else if("Colormap"===m.rasterFunction){const t=m.rasterFunctionArguments.Raster;"Stretch"===(null===t||void 0===t?void 0:t.rasterFunction)?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,m.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=m,m=e;p.bandIds=void 0}else p.bandIds=null===c||void 0===c?void 0:c.join(",");d instanceof Array&&d.length>0&&(p.noData=d.join(","));const f=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,s):null;p.mosaicRule=(0,a.Ru)(f)?JSON.stringify(f):null;const{multidimensionalSubset:g}=this;if(g&&(0,a.Ru)(f)&&f.multidimensionalDefinition&&(0,le.sx)(f.multidimensionalDefinition,g,!0))return null;p.renderingRule=this._getRenderingRuleString(A.A.fromJSON(m));const v={};if(s){const{start:e,end:t}=s.toJSON();let i;if(e&&t&&e===t?(v.time=""+e,i=[e]):null==e&&null==t||(v.time="".concat(null!==e&&void 0!==e?e:"null",",").concat(null!==t&&void 0!==t?t:"null"),i=null!=e&&null!=t?[e,t]:[null!==e&&void 0!==e?e:t]),i&&g){const e=g.dimensions.find((e=>{let{name:t}=e;return"StdTime"===t}));if(2===i.length&&e.extent.length){var R;if(i[0]=Math.max(i[0],e.extent[0]),i[1]=Math.min(i[1],null!==(R=e.extent[1])&&void 0!==R?R:e.extent[0]),i[1]<i[0])return null;v.time=i.join()}const t=new M.A({variableName:"",dimensionName:"StdTime",isSlice:1===i.length,values:i});if((0,le.sx)([t],g,!0))return null}}return(0,r.A)((0,r.A)({bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:u,imageSR:u,size:t+","+n},p),v)}async getSamples(e,t){var i;if(null===(i=await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal))||void 0===i||!i.operations.supportsGetSamples)throw new v.A("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,p.PZ)(rt,e).clone();const{raster:n}=this;return n&&null==e.raster&&(e.raster=n),async function(e,t,i){var n,s,o;const l=t.toJSON();Fe(l),(null===(n=l.outFields)||void 0===n?void 0:n.length)&&(l.outFields=l.outFields.join(","));const u=null===(s=await(0,me.el)(t.geometry))||void 0===s?void 0:s[0];(0,a.Ru)(u)&&(l.geometry=u.toJSON());const p=(0,he.Dl)(e),c=(0,he.lF)((0,r.A)((0,r.A)({},p.query),{},{f:"json"},l)),d=(0,he.jV)(c,i),{data:m}=await(0,g.default)("".concat(p.path,"/getSamples"),d),h=null===m||void 0===m||null===(o=m.samples)||void 0===o?void 0:o.map((e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map((e=>Number(e)));return(0,r.A)((0,r.A)({},e),{},{pixelValue:t})}));return Me.fromJSON({samples:h})}(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsIdentify)throw new v.A("imagery-layer:query-rasters","query operation is not supported on the input image service");e=(0,p.PZ)(We,e).clone();const{raster:i,mosaicRule:r,renderingRule:n}=this;if(n&&null==e.renderingRule&&(e.renderingRule=n),r&&null==e.mosaicRule){const t=this._combineMosaicRuleWithTimeExtent(r,e.timeExtent);e.mosaicRule=(0,a.oA)(t)}return i&&null==e.raster&&(e.raster=i),De(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new Ze.A;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,Ce.s)(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,Ee.V)(this.url,e,t)}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,Je.I)(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new v.A("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:i,returnDomainValues:n,returnTopmostRaster:s,showNoDataRecords:o}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let l=!1,u=null,p=null;const c="raster.servicepixelvalue",d=this._rasterFunctionNamesIndex;if((0,a.Ru)(e.outFields)&&(l=e.outFields.some((e=>!e.toLowerCase().includes(c))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().includes(c)&&e.length>24)).map((e=>{const t=e.slice(25);return[this._updateRenderingRulesFunctionName(t,d),t]}));u=t.map((e=>new A.A({functionName:e[0]}))),p=t.map((e=>e[1]));const{renderingRule:i}=this;0===u.length?null!==i&&void 0!==i&&i.functionName?(u.push(i),p.push(i.functionName)):u=null:(null===i||void 0===i?void 0:i.functionName)&&!u.some((e=>e.functionName===i.functionName))&&(u.push(i),p.push(i.functionName))}const m=(0,a.$I)(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),h=e.timeExtent||this.timeExtent,y=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,h),f=this._getQueryParams({geometry:e.geometry,timeExtent:h,mosaicRule:y,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:u,pixelSize:i,returnCatalogItems:l,returnGeometry:m,raster:this.raster,maxItemCount:s?1:null});delete f.f;const g=new We(f);try{var R,b,w,_;await this.generateRasterInfo(this.renderingRule);const i=await De(this.url,g,{signal:null===t||void 0===t?void 0:t.signal,query:(0,r.A)({},this.customParameters)}),s=e.outFields,u=null!=i.value&&i.value.toLowerCase().includes("nodata");if(!l||m||null===i||void 0===i||null===(R=i.catalogItems)||void 0===R||!R.features.length||!o&&u)return this._processVisibleRastersResponse(i,{returnDomainValues:n,templateRRFunctionNames:p,showNoDataRecords:o,templateFields:s});const c=this.objectIdField||"ObjectId",d=null!==(b=null===(w=i.catalogItems)||void 0===w?void 0:w.features)&&void 0!==b?b:[],h=d.map((e=>{var t;return null===(t=e.attributes)||void 0===t?void 0:t[c]})),y=new Ze.A({objectIds:h,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[c]}),f=await this.queryRasters(y);return null!==f&&void 0!==f&&null!==(_=f.features)&&void 0!==_&&_.length&&f.features.forEach((t=>{d.forEach((i=>{i.attributes[c]===t.attributes[c]&&(i.geometry=new je.A(t.geometry),(0,a.Ru)(e.outSpatialReference)&&(i.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(i,{returnDomainValues:n,templateRRFunctionNames:p,showNoDataRecords:o,templateFields:s})}catch(S){throw new v.A("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const r=(0,g.default)(i(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.statistics})),n=(0,g.default)(i(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.histograms})),s=await Promise.all([r,n]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:s[0]||null,histograms:s[1]||null}}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):(0,nt.CW)(e.meshType,e.simulationSettings,e.flowData,(0,a.Ru)(t.signal)?t.signal:(new AbortController).signal)}getMultidimensionalSubsetVariables(e){const t=null!==e&&void 0!==e?e:this.multidimensionalInfo;return(0,le.z2)(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=(0,a.Ru)(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):(0,ze.T)(i(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set("serviceRasterInfo",e),e))),n=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:e}):null,s=this._getRasterFunctionInfos();return Promise.all([r,n,s]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),w.A.getLogger(this.declaredClass).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.addHandles([(0,_.wB)((()=>this.renderingRule),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}))]);const{serviceRasterInfo:t}=this;t&&(0,a.Ru)(t.multidimensionalInfo)&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){var i;const r=this.timeInfo;if((0,a.$I)(e)||(0,a.$I)(this.multidimensionalInfo)||(0,a.$I)(t)||(0,a.$I)(null===r||void 0===r?void 0:r.startField))return e;const{startField:n}=r,s=this.multidimensionalInfo.variables.some((e=>e.dimensions.some((e=>e.name===n))))?n:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=null===(i=e.multidimensionalDefinition)||void 0===i?void 0:i.filter((e=>e.dimensionName!==s)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const o=e.multidimensionalDefinition.filter((e=>e.dimensionName===s)),l=(0,a.Ru)(t.start)?t.start.getTime():null,u=(0,a.Ru)(t.end)?t.end.getTime():null,p=null==l||null==u||l===u,c=p?[l||u]:[[l,u]],d=this.version>=10.8;if(o.length)o.forEach((e=>{e.dimensionName===s&&(d?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=p,e.values=c))}));else if(!d){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=s,e.isSlice=p,e.values=c})):e.multidimensionalDefinition.push(new M.A({variableName:"",dimensionName:s,isSlice:p,values:c}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return(0,a.$I)(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){var i;if(!(await this._fetchCapabilities(null===(i=t)||void 0===i?void 0:i.signal)).operations.supportsQuery)throw new v.A("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=(0,a.Ru)(e)?(0,p.PZ)(Ze.A,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query=(0,r.A)((0,r.A)({},t.query),{},{raster:this.raster})),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new oe.A;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>{})),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:i}=this;return"unique-value"===e.type&&this._hasRenderingRule(i)&&1===(null===t||void 0===t?void 0:t.bandCount)&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&(0,ce.fp)(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:n}=await(0,g.default)(i(this.parsedUrl),{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,n&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null===(t=r.capabilities)||void 0===t?void 0:t.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly"))>-1)throw new v.A("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:(null===(t=e.fields)||void 0===t?void 0:t.length)>0}_isMosaicRuleSupported(e){var t;if(!e)return!1;const i=this._isMosaicDataset(e),r=e.currentVersion>=10.71&&e.hasMultidimensions&&!((null===(t=e.fields)||void 0===t?void 0:t.length)>1);return i||r}_isVectorFieldResampleFunction(e){if((0,a.$I)(e))return!1;const{functionName:t,functionArguments:i}=e,r="resample"===(null===t||void 0===t?void 0:t.toLowerCase()),n=(null===i||void 0===i?void 0:i.ResampleType)||(null===i||void 0===i?void 0:i.resampleType);return r&&(7===n||10===n)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){if(!this._isPicture()&&!this.pixelFilter||this._isVectorDataSet()){var t;if(!this.bandIds&&this.rasterInfo&&this.rasterInfo.bandCount>=3){const e=(0,ce.ci)(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=(0,ce.PD)(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null===(t=this.mosaicRule)||void 0===t||null===(t=t.multidimensionalDefinition)||void 0===t?void 0:t[0].variableName}));const i=(0,ce.$P)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=i,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new de.A({rendererJSON:i,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:(0,a.Ru)(e.pixelBlock)?e.pixelBlock.clone():null}}_getQueryParams(e){e&&(0,a.Ru)(e.renderingRule)&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:i}=this;return(0,r.A)((0,r.A)({raster:t,viewId:i,f:"json"},e),this.customParameters)}_getRequestOptions(e){return(0,r.A)((0,r.A)({},e),{},{query:(0,r.A)((0,r.A)({},null===e||void 0===e?void 0:e.query),this.customParameters)})}_decodePixelBlock(e,t,i){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,ue.D)(e,t,i)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;return this.loaded?t:t&&this.version>=10.3?1===t.length&&"none"===t[0].name.toLowerCase()?t:null===(r=(await(0,g.default)(i(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)||void 0===r?void 0:r.rasterFunctionInfos:null;var r}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:n,signal:s}=e;if(n&&this._canRequestImageElement(t.format))return{imageOrCanvasElement:(await(0,g.default)(i(this.parsedUrl)+"/exportImage",{responseType:"image",query:this._getQueryParams((0,r.A)((0,r.A)({f:"image"},this.refreshParameters),e.imageServiceParameters)),signal:s})).data,params:t};const a=this._initJobHandler(),o=(0,g.default)(i(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams((0,r.A)({f:"image"},e.imageServiceParameters)),signal:s}),l=(await Promise.all([o,a]))[0].data,u=t.format||"jpgpng";let p=u;if("bsq"!==p&&"bip"!==p&&(p=(0,ue.g)(l)),!p)throw new v.A("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(l)));const c={signal:s},d="gif"===u||"bmp"===u||u.includes("png")&&("png"===p||"jpg"===p)?(0,ue.D)(l,(0,r.A)({useCanvas:!0},t),c):this._decodePixelBlock(l,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:u},c);return{pixelData:{pixelBlock:await d,extent:t.extent},params:t}}_generateRasterInfo(e,t){const n=(0,r.A)((0,r.A)({},t),{},{query:this._getQueryParams()});return(0,ze.X)(i(this.parsedUrl),e,n)}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify(null===(t=this.defaultMosaicRule)||void 0===t?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=(0,le.fy)(e,{multidimensionalSubset:this.multidimensionalSubset});if((0,a.Ru)(t)&&t.length>0){var i;this.mosaicRule=this.mosaicRule||new X;const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.renderingRule&&"none"!==(null===(i=this.renderingRule.functionName)||void 0===i?void 0:i.toLowerCase())&&t.forEach((e=>e.variableName="")),(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const i=e.value,{templateRRFunctionNames:r,showNoDataRecords:n,returnDomainValues:s,templateFields:o}=t,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,p=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,", ")))||[];const c=this.objectIdField||"ObjectId",d="string"==typeof i&&i.toLowerCase().includes("nodata"),m=[];if(i&&!u&&!d){const e={};e[c]=0,p=[i],u=[new y.A(this.fullExtent,null,e)]}if(!u)return[];let h,f,g;this._updateResponseFieldNames(u,o),d&&!n&&(u=[]);for(let y=0;y<u.length;y++){if(h=u[y],null!=i){var v;if(f=p[y],g=this.renderingRule&&l&&l.length>0&&r&&r.length>0&&r.includes(this.renderingRule.functionName)?l[r.indexOf(this.renderingRule.functionName)]:i,"nodata"===f.toLowerCase()&&!n)continue;const e="Raster.ItemPixelValue",t="Raster.ServicePixelValue";h.attributes[e]=f,h.attributes[t]=g,this._updateFeatureWithMagDirValues(h,f);const s=this.fields&&this.fields.length>0;let o=this.renderingRule&&(0,a.Ru)(null===(v=this.serviceRasterInfo)||void 0===v?void 0:v.attributeTable)?s?f:i:g;this.renderingRule||(o=s?f:i),this._updateFeatureWithRasterAttributeTableValues(h,o)}if(h.sourceLayer=h.layer=this,s&&this._updateFeatureWithDomainValues(h),r&&l&&r.length===l.length)for(let e=0;e<r.length;e++){const t="Raster.ServicePixelValue."+r[e];h.attributes[t]=l[e]}m.push(u[y])}return m}_updateFeatureWithRasterAttributeTableValues(e,t){var i;const r=this.rasterInfo&&this.rasterInfo.attributeTable||(null===(i=this.serviceRasterInfo)||void 0===i?void 0:i.attributeTable);if((0,a.$I)(r))return;const{features:n,fields:s}=r,o=s.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),l=o&&o[0];if(!l)return;const u=n.filter((e=>e.attributes[l]===(null!=t?parseInt(t,10):null)));u&&u[0]&&s.forEach((t=>{const i=this._rasterAttributeTableFieldPrefix+t.name;e.attributes[i]=u[0].attributes[t.name]}))}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const i=t.split(/,\s*/).map((e=>parseFloat(e))),r=i.map((e=>[e])),n=i.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),s=new se.A({height:1,width:1,pixelType:"f32",pixels:r,statistics:n});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:s,extent:new Ve.A(0,0,0,0,this.spatialReference)});const a="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[s.pixels[0][0],s.pixels[1][0]]:(0,pe.Lu)([s.pixels[0][0],s.pixels[1][0]]);e.attributes["Raster.Magnitude"]=a[0],e.attributes["Raster.Direction"]=a[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const i=e.attributes[t.name];if(null!=i){const r=t.domain.codedValues.find((e=>e.code===i));r&&(e.attributes[t.name]=r.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const i=this.fieldsIndex;(0,a.$I)(i)||e.forEach((e=>{if(e&&e.attributes)for(const n of t){var r;const t=null===(r=i.get(n))||void 0===r?void 0:r.name;t&&t!==n&&(e.attributes[n]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(this._hasRenderingRule(e)){var t;let i=e.toJSON();return i=null!==(t=i.rasterFunctionDefinition)&&void 0!==t?t:i,(i.thumbnail||i.thumbnailEx)&&(i.thumbnail=i.thumbnailEx=null),JSON.stringify(i)}return null}_hasRenderingRule(e){return null!=e&&null!=e.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const i=e.toLowerCase().replace(/ /gi,"_");return t.has(i)?t.get(i):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:i,advancedQueryCapabilities:r,maxRecordCount:n}=e,s=t.includes("image"),a="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:s,supportsExportImage:s,supportsIdentify:s,supportsMeasure:t.includes("mensuration")&&o,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:i>=10.2&&s,supportsProject:i>=10.3&&s,supportsComputeStatisticsHistograms:i>=10.4&&s,supportsQueryBoundary:i>=10.6&&s,supportsCalculateVolume:i>=10.7&&a,supportsComputePixelLocation:i>=10.7&&t.includes("catalog"),supportsComputeAngles:i>=10.91,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:n,maxRecordCountFactor:void 0,supportsStatistics:!(null===r||void 0===r||!r.supportsStatistics),supportsOrderBy:!(null===r||void 0===r||!r.supportsOrderBy),supportsDistinct:!(null===r||void 0===r||!r.supportsDistinct),supportsPagination:!(null===r||void 0===r||!r.supportsPagination),supportsStandardizedQueriesOnly:!(null===r||void 0===r||!r.useStandardizedQueries),supportsPercentileStatistics:!(null===r||void 0===r||!r.supportsPercentileStatistics),supportsCentroid:!(null===r||void 0===r||!r.supportsReturningGeometryCentroid),supportsDistance:!(null===r||void 0===r||!r.supportsQueryWithDistance),supportsExtent:!(null===r||void 0===r||!r.supportsReturningQueryExtent),supportsGeometryProperties:!(null===r||void 0===r||!r.supportsReturningGeometryProperties),supportsHavingClause:!(null===r||void 0===r||!r.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!(null===r||void 0===r||!r.supportsDefaultSR),supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};function i(e){var t;return null!==(t=null===e||void 0===e?void 0:e.path)&&void 0!==t?t:""}return(0,n._)([(0,u.MZ)()],t.prototype,"_functionRasterInfos",void 0),(0,n._)([(0,u.MZ)()],t.prototype,"_rasterJobHandler",void 0),(0,n._)([(0,u.MZ)()],t.prototype,"_cachedRendererJson",void 0),(0,n._)([(0,u.MZ)({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),(0,n._)([(0,x.w)("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),(0,n._)([(0,u.MZ)()],t.prototype,"_rasterAttributeTableFieldPrefix",void 0),(0,n._)([(0,u.MZ)({readOnly:!0})],t.prototype,"_rasterFunctionNamesIndex",null),(0,n._)([(0,u.MZ)()],t.prototype,"adjustAspectRatio",void 0),(0,n._)([(0,u.MZ)({type:[p.jz],json:{write:!0}})],t.prototype,"bandIds",void 0),(0,n._)([(0,x.w)("bandIds")],t.prototype,"readBandIds",null),(0,n._)([(0,u.MZ)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),(0,n._)([(0,x.w)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),(0,n._)([(0,u.MZ)({type:Number})],t.prototype,"compressionQuality",void 0),(0,n._)([(0,d.K)("compressionQuality")],t.prototype,"writeCompressionQuality",null),(0,n._)([(0,u.MZ)({type:Number})],t.prototype,"compressionTolerance",void 0),(0,n._)([(0,d.K)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),(0,n._)([(0,u.MZ)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,n._)([(0,u.MZ)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"defaultMosaicRule",void 0),(0,n._)([(0,x.w)("defaultMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultMosaicRule",null),(0,n._)([(0,u.MZ)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),(0,n._)([(0,u.MZ)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),(0,n._)([(0,u.MZ)()],t.prototype,"rasterInfo",void 0),(0,n._)([(0,u.MZ)({readOnly:!0,type:[ie.A]})],t.prototype,"fields",void 0),(0,n._)([(0,u.MZ)({readOnly:!0})],t.prototype,"fieldsIndex",null),(0,n._)([(0,u.MZ)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),(0,n._)([(0,x.w)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),(0,n._)([(0,u.MZ)({type:Ve.A})],t.prototype,"fullExtent",void 0),(0,n._)([(0,u.MZ)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),(0,n._)([(0,u.MZ)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),(0,n._)([(0,u.MZ)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),(0,n._)([(0,u.MZ)({type:String,json:{type:ee.S.jsonValues,read:ee.S.read,write:ee.S.write}})],t.prototype,"interpolation",void 0),(0,n._)([(0,u.MZ)()],t.prototype,"minScale",void 0),(0,n._)([(0,x.w)("service","minScale")],t.prototype,"readMinScale",null),(0,n._)([(0,u.MZ)()],t.prototype,"maxScale",void 0),(0,n._)([(0,x.w)("service","maxScale")],t.prototype,"readMaxScale",null),(0,n._)([(0,u.MZ)({type:X})],t.prototype,"mosaicRule",null),(0,n._)([(0,x.w)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),(0,n._)([(0,d.K)("mosaicRule")],t.prototype,"writeMosaicRule",null),(0,n._)([(0,u.MZ)()],t.prototype,"multidimensionalInfo",null),(0,n._)([(0,u.MZ)({type:ne.A,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,n._)([(0,u.MZ)({json:{type:p.jz}})],t.prototype,"noData",void 0),(0,n._)([(0,d.K)("noData")],t.prototype,"writeNoData",null),(0,n._)([(0,u.MZ)({type:String,json:{type:ee.h.jsonValues,read:ee.h.read,write:ee.h.write}})],t.prototype,"noDataInterpretation",void 0),(0,n._)([(0,u.MZ)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),(0,n._)([(0,x.w)("objectIdField")],t.prototype,"readObjectIdField",null),(0,n._)([(0,u.MZ)({})],t.prototype,"geometryType",void 0),(0,n._)([(0,u.MZ)({})],t.prototype,"typeIdField",void 0),(0,n._)([(0,u.MZ)({})],t.prototype,"types",void 0),(0,n._)([(0,u.MZ)({readOnly:!0})],t.prototype,"parsedUrl",null),(0,n._)([(0,u.MZ)({type:Function})],t.prototype,"pixelFilter",void 0),(0,n._)([(0,u.MZ)()],t.prototype,"raster",void 0),(0,n._)([(0,u.MZ)({readOnly:!0})],t.prototype,"sourceType",void 0),(0,n._)([(0,x.w)("sourceType",["serviceSourceType","fields"])],t.prototype,"readSourceType",null),(0,n._)([(0,u.MZ)()],t.prototype,"viewId",void 0),(0,n._)([(0,u.MZ)({types:f.uy,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:f.Gj,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"renderer",null),(0,n._)([(0,x.w)("renderer")],t.prototype,"readRenderer",null),(0,n._)([(0,d.K)("renderer")],t.prototype,"writeRenderer",null),(0,n._)([(0,u.MZ)()],t.prototype,"symbolizer",void 0),(0,n._)([(0,u.MZ)(I.ke)],t.prototype,"opacity",void 0),(0,n._)([(0,u.MZ)({readOnly:!0})],t.prototype,"rasterFields",null),(0,n._)([(0,u.MZ)({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),(0,n._)([(0,u.MZ)({type:A.A})],t.prototype,"renderingRule",null),(0,n._)([(0,x.w)("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),(0,n._)([(0,d.K)("renderingRule")],t.prototype,"writeRenderingRule",null),(0,n._)([(0,u.MZ)()],t.prototype,"serviceDataType",void 0),(0,n._)([(0,u.MZ)({readOnly:!0,type:ye.A})],t.prototype,"spatialReference",void 0),(0,n._)([(0,x.w)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),(0,n._)([(0,u.MZ)({json:{type:st.jsonValues}})],t.prototype,"pixelType",void 0),(0,n._)([(0,x.w)("pixelType")],t.prototype,"readPixelType",null),(0,n._)([(0,d.K)("pixelType")],t.prototype,"writePixelType",null),(0,n._)([(0,u.MZ)({constructOnly:!0,type:ae.A})],t.prototype,"serviceRasterInfo",void 0),(0,n._)([(0,u.MZ)()],t.prototype,"sourceJSON",void 0),(0,n._)([(0,u.MZ)(I.OZ)],t.prototype,"url",void 0),(0,n._)([(0,u.MZ)({readOnly:!0})],t.prototype,"version",void 0),(0,n._)([(0,x.w)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=(0,n._)([(0,c.$)("esri.layers.mixins.ArcGISImageService")],t),t};var ut=i(19502),pt=i(65624),ct=i(31362),dt=i(11270),mt=i(94729),ht=i(21617),yt=i(5682),ft=i(78817),gt=i(38278),vt=i(30973);let Rt=class extends((0,pt.d)((0,ft.e)((0,yt.j)((0,dt.q)((0,mt.A)(lt((0,ht.J)((0,ct.d)((0,ut.b)((0,o.P)(m.A))))))))))){constructor(){super(...arguments),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(e,t){return"string"==typeof e?(0,r.A)({url:e},t):e}load(e){const t=(0,a.Ru)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(l.QP).then((()=>this._fetchService(t)))),Promise.resolve(this)}writeOperationalLayerType(e,t,i){var r;const n="vector-field"===(null===(r=this.renderer)||void 0===r?void 0:r.type);t[i]=n?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const t=this.rasterFields,i=this.title,n=new Set;let s=!1,a=!1;this.capabilities&&(s=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,a="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const o=new Set;s&&o.add("raster.itempixelvalue");for(const r of t){const e=r.name.toLowerCase();o.has(e)||e.includes("raster.servicepixelvalue.")||n.add(r.name)}return a&&n.add("raster.magnitude").add("raster.direction"),(0,vt.tn)({fields:t,title:i},(0,r.A)((0,r.A)({},e),{},{visibleFieldNames:n}))}queryFeatures(e,t){return this.queryRasters(e,t).then((e=>{if(null!==e&&void 0!==e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}serviceSupportsSpatialReference(e){return(0,gt.D)(this,e)}};(0,n._)([(0,u.MZ)(I.fV)],Rt.prototype,"legendEnabled",void 0),(0,n._)([(0,u.MZ)({type:["show","hide"]})],Rt.prototype,"listMode",void 0),(0,n._)([(0,u.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Rt.prototype,"isReference",void 0),(0,n._)([(0,u.MZ)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Rt.prototype,"operationalLayerType",void 0),(0,n._)([(0,d.K)("web-map","operationalLayerType")],Rt.prototype,"writeOperationalLayerType",null),(0,n._)([(0,u.MZ)(I.M6)],Rt.prototype,"popupEnabled",void 0),(0,n._)([(0,u.MZ)({type:s.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Rt.prototype,"popupTemplate",void 0),(0,n._)([(0,u.MZ)({readOnly:!0})],Rt.prototype,"defaultPopupTemplate",null),(0,n._)([(0,u.MZ)({readOnly:!0,json:{read:!1}})],Rt.prototype,"type",void 0),Rt=(0,n._)([(0,c.$)("esri.layers.ImageryLayer")],Rt);const bt=Rt},37713:(e,t,i)=>{i.d(t,{I:()=>o});var r=i(8),n=i(54994),s=i(36643),a=i(97015);async function o(e,t,i){const o=(0,n.Dl)(e);return(0,s.executeQueryForCount)(o,a.A.from(t),(0,r.A)({},i)).then((e=>e.data.count))}},53104:(e,t,i)=>{i.d(t,{V:()=>o});var r=i(8),n=i(54994),s=i(36643),a=i(97015);async function o(e,t,i){const o=(0,n.Dl)(e);return(0,s.executeQueryForIds)(o,a.A.from(t),(0,r.A)({},i)).then((e=>e.data.objectIds))}}}]);
//# sourceMappingURL=1056.fa41b404.chunk.js.map