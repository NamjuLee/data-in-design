"use strict";(self.webpackChunkData_in_Design=self.webpackChunkData_in_Design||[]).push([[667],{667:(e,t,i)=>{i.r(t),i.d(t,{default:()=>x});var a=i(8),r=i(35143),l=i(3825),n=i(50076),o=i(30726),s=i(77717),c=i(50346),h=i(90534),d=i(46053),p=i(18690),u=(i(40565),i(28379)),v=i(85842),m=i(91605),y=i(25515),f=i(76328),_=i(19502),w=i(11270),g=i(94729),b=i(55053),A=i(54901),S=i(76460),T=i(3826);class M{constructor(e,t,i,r){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this._mainMethod=t,this._transferLists=i,this._listeners=[],this._promise=(0,T.ho)(e,(0,a.A)((0,a.A)({},l),{},{schedule:r})).then((e=>{if(void 0===this._thread){this._thread=e,this._promise=null,l.hasInitialize&&this.broadcast({},"initialize");for(const e of this._listeners)this._connectListener(e)}else e.close()})),this._promise.catch((t=>S.A.getLogger("esri.core.workers.WorkerHandle").error("Failed to initialize ".concat(e," worker: ").concat(t))))}on(e,t){const i={removed:!1,eventName:e,callback:t,threadHandle:null};return this._listeners.push(i),this._connectListener(i),(0,A.hA)((()=>{i.removed=!0,(0,p.TF)(this._listeners,i),this._thread&&(0,o.Ru)(i.threadHandle)&&i.threadHandle.remove()}))}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null}invoke(e,t){return this.invokeMethod(this._mainMethod,e,t)}invokeMethod(e,t,i){if(this._thread){const a=this._transferLists[e],r=a?a(t):[];return this._thread.invoke(e,t,{transferList:r,signal:i})}return this._promise?this._promise.then((()=>((0,c.Te)(i),this.invokeMethod(e,t,i)))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then((()=>{})):this._promise?this._promise.then((()=>this.broadcast(e,t))):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then((t=>{e.removed||(e.threadHandle=t)}))}}class D extends M{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;super("LercWorker","_decode",{_decode:e=>[e.buffer]},e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,i){return e&&0!==e.byteLength?this.invoke({buffer:e,options:t},i):Promise.resolve(null)}release(){--this.ref<=0&&(L.forEach(((e,t)=>{e===this&&L.delete(t)})),this.destroy())}}const L=new Map;let O=class extends((0,f.f)((0,_.b)((0,w.q)((0,g.A)((0,s.P)(y.A)))))){constructor(){super(...arguments),this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=L.get((0,o.oA)(e));return t||((0,o.Ru)(e)?(t=new D((t=>e.schedule(t))),L.set(e,t)):(t=new D,L.set(null,t))),++t.ref,t}()}normalizeCtorArgs(e,t){return"string"==typeof e?(0,a.A)({url:e},t):e}destroy(){this._lercDecoder=(0,o.Gz)(this._lercDecoder)}readVersion(e,t){let i=t.currentVersion;return i||(i=9.3),i}load(e){const t=(0,o.Ru)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{for(let t=0;t<e.typeKeywords.length;t++)if("elevation 3d layer"===e.typeKeywords[t].toLowerCase())return!0;throw new n.A("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).catch(c.QP).then((()=>this._fetchImageService(t)))),Promise.resolve(this)}fetchTile(e,t,i,a){const r=(0,o.Ru)((a=a||{signal:null}).signal)?a.signal:a.signal=(new AbortController).signal,n={responseType:"array-buffer",signal:r},s={noDataValue:a.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(e,t,i,a))).then((()=>(0,l.default)(this.getTileUrl(e,t,i),n))).then((e=>this._lercDecoder.decode(e.data,s,r))).then((e=>{var t;return{values:e.pixelData,width:e.width,height:e.height,maxZError:null===(t=e.fileInfo)||void 0===t?void 0:t.maxZError,noDataValue:e.noDataValue,minValue:e.minValue,maxValue:e.maxValue}}))}getTileUrl(e,t,i){const r=!this.tilemapCache&&this.supportsBlankTile,l=(0,h.x0)((0,a.A)((0,a.A)({},this.parsedUrl.query),{},{blankTile:!r&&null}));return"".concat(this.parsedUrl.path,"/tile/").concat(e,"/").concat(t,"/").concat(i).concat(l?"?"+l:"")}async queryElevation(e,t){const{ElevationQuery:a}=await i.e(3489).then(i.bind(i,53489));return(0,c.Te)(t),(new a).query(this,e,t)}async createElevationSampler(e,t){const{ElevationQuery:a}=await i.e(3489).then(i.bind(i,53489));return(0,c.Te)(t),(new a).createSampler(this,e,t)}_fetchTileAvailability(e,t,i,a){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,i,a):Promise.resolve("unknown")}async _fetchImageService(e){var t;if(this.sourceJSON)return this.sourceJSON;const i={query:(0,a.A)({f:"json"},this.parsedUrl.query),responseType:"json",signal:e},r=await(0,l.default)(this.parsedUrl.path,i);r.ssl&&(this.url=null===(t=this.url)||void 0===t?void 0:t.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};(0,r._)([(0,d.MZ)({json:{read:{source:"copyrightText"}}})],O.prototype,"copyright",void 0),(0,r._)([(0,d.MZ)({readOnly:!0,type:m.A})],O.prototype,"heightModelInfo",void 0),(0,r._)([(0,d.MZ)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],O.prototype,"path",void 0),(0,r._)([(0,d.MZ)({type:["show","hide"]})],O.prototype,"listMode",void 0),(0,r._)([(0,d.MZ)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],O.prototype,"minScale",void 0),(0,r._)([(0,d.MZ)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],O.prototype,"maxScale",void 0),(0,r._)([(0,d.MZ)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],O.prototype,"opacity",void 0),(0,r._)([(0,d.MZ)({type:["ArcGISTiledElevationServiceLayer"]})],O.prototype,"operationalLayerType",void 0),(0,r._)([(0,d.MZ)()],O.prototype,"sourceJSON",void 0),(0,r._)([(0,d.MZ)({json:{read:!1},value:"elevation",readOnly:!0})],O.prototype,"type",void 0),(0,r._)([(0,d.MZ)(b.OZ)],O.prototype,"url",void 0),(0,r._)([(0,d.MZ)()],O.prototype,"version",void 0),(0,r._)([(0,u.w)("version",["currentVersion"])],O.prototype,"readVersion",null),O=(0,r._)([(0,v.$)("esri.layers.ElevationLayer")],O),O.prototype.fetchTile.__isDefault__=!0;const x=O},76328:(e,t,i)=>{i.d(t,{f:()=>h});var a=i(35143),r=(i(35238),i(46053)),l=(i(18690),i(40565),i(28379)),n=i(85842),o=i(50977),s=i(79941),c=i(13312);const h=e=>{let t=class extends e{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,t){return t.capabilities&&t.capabilities.includes("Tilemap")?new s.d({layer:this}):null}};return(0,a._)([(0,r.MZ)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,a._)([(0,r.MZ)()],t.prototype,"minScale",void 0),(0,a._)([(0,l.w)("service","minScale")],t.prototype,"readMinScale",null),(0,a._)([(0,r.MZ)()],t.prototype,"maxScale",void 0),(0,a._)([(0,l.w)("service","maxScale")],t.prototype,"readMaxScale",null),(0,a._)([(0,r.MZ)({type:c.A})],t.prototype,"spatialReference",void 0),(0,a._)([(0,r.MZ)({readOnly:!0})],t.prototype,"supportsBlankTile",null),(0,a._)([(0,r.MZ)(o.d)],t.prototype,"tileInfo",void 0),(0,a._)([(0,r.MZ)()],t.prototype,"tilemapCache",void 0),(0,a._)([(0,l.w)("service","tilemapCache",["capabilities"])],t.prototype,"readTilemapCache",null),(0,a._)([(0,r.MZ)()],t.prototype,"version",void 0),t=(0,a._)([(0,n.$)("esri.layers.mixins.ArcGISCachedService")],t),t}},79941:(e,t,i)=>{i.d(t,{d:()=>D});var a,r=i(8),l=i(35143),n=i(3825),o=i(13398),s=i(21499),c=i(50076),h=i(25463),d=i(76460),p=i(53521),u=i(30015),v=i(50346),m=i(68134),y=i(52394),f=i(90534),_=i(46053),w=i(18690),g=i(21403),b=i(85842),A=i(11164),S=i(53084);class T{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),a=i%8,r=i>>3,l=this._tileAvailabilityBitSet;return r<0||r>l.length?"unknown":l[r]&1<<a?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let a=!0,r=!0;const l=Math.ceil(t*i/8),n=new Uint8Array(l);let o=0;for(let s=0;s<e.length;s++){const t=s%8;e[s]?(r=!1,n[o]|=1<<t):a=!1,7===t&&++o}r?this._allAvailability="unavailable":a?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=n,this.byteSize+=n.length)}static fromDefinition(e,t){const i=e.service.request||n.default,{row:a,col:l,width:o,height:s}=e,h={query:{f:"json"}};return t=t?(0,r.A)((0,r.A)({},h),t):h,i(function(e){let t;if("vector-tile"===e.service.type)t="".concat(e.service.url,"/tilemap/").concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height);else{const i=e.service.tileServers;t="".concat(i&&i.length?i[e.row%i.length]:e.service.url,"/tilemap/").concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height)}const i=e.service.query;return i&&(t="".concat(t,"?").concat(i)),t}(e),t).then((e=>e.data)).catch((e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:a,left:l,width:o,height:s},valid:!0,data:(0,w.dY)(o*s,0)};throw e})).then((e=>{if(e.location&&(e.location.top!==a||e.location.left!==l||e.location.width!==o||e.location.height!==s))throw new c.A("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:a,left:l,width:o,height:s}});return T.fromJSON(e)}))}static fromJSON(e){T._validateJSON(e);const t=new T;return t.location=Object.freeze((0,S.o8)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static _validateJSON(e){if(!e||!e.location)throw new c.A("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new c.A("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new c.A("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new c.A("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new c.A("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function M(e){return"".concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height)}let D=a=class extends((0,h.$)(o.A)){constructor(e){super(e),this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2*s.uA.MEGABYTES,this.request=n.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new p.A(this.cacheByteSize),this.addHandles([(0,m.wB)((()=>{const{layer:e}=this;return[null===e||void 0===e?void 0:e.parsedUrl,null===e||void 0===e?void 0:e.tileServers,null===e||void 0===e?void 0:e.apiKey,null===e||void 0===e?void 0:e.customParameters]}),(()=>this._initializeTilemapDefinition())),(0,m.wB)((()=>{var e;return null===(e=this.layer)||void 0===e||null===(e=e.tileInfo)||void 0===e?void 0:e.lods}),(e=>this._initializeAvailableLevels(e)),m.pc)]),this._initializeTilemapDefinition()}castLevels(e){return e<=2?(d.A.getLogger(this.declaredClass).error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,a){if(!this._availableLevels[e])return Promise.reject(new c.A("tilemap-cache:level-unavailable","Level ".concat(e," is unavailable in the service")));const l=this._tmpTilemapDefinition,n=this._tilemapFromCache(e,t,i,l);if(n)return Promise.resolve(n);const o=a&&a.signal;return a=(0,r.A)((0,r.A)({},a),{},{signal:null}),new Promise(((e,t)=>{(0,v.u7)(o,(()=>t((0,v.NK)())));const i=M(l);let r=this._pendingTilemapRequests[i];if(!r){r=T.fromDefinition(l,a).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=r,r.then(e,e)}r.then(e,t)}))}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const a=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return a?a.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,a){return this._availableLevels[e]?this.fetchTilemap(e,t,i,a).catch((e=>e)).then((a=>{if(a instanceof T){const r=a.getAvailability(t,i);if("unavailable"===r)throw new c.A("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i});return r}if((0,v.zf)(a))throw a;return"unknown"})):Promise.reject(new c.A("tilemap-cache:level-unavailable","Level ".concat(e," is unavailable in the service")))}fetchAvailabilityUpsample(e,t,i,a,r){a.level=e,a.row=t,a.col=i;const l=this.layer.tileInfo;l.updateTileInfo(a);const n=this.fetchAvailability(e,t,i,r).catch((e=>{if((0,v.zf)(e))throw e;if(l.upsampleTile(a))return this.fetchAvailabilityUpsample(a.level,a.row,a.col,a);throw e}));return this._fetchAvailabilityUpsamplePrefetch(a.id,e,t,i,r,n),n}async _fetchAvailabilityUpsamplePrefetch(e,t,i,l,n,o){if(!this._prefetchingEnabled)return;const s="prefetch-".concat(e);if(this.handles.has(s))return;const c=new AbortController;o.then((()=>c.abort()),(()=>c.abort()));let h=!1;const d={remove(){h||(h=!0,c.abort())}};if(this.handles.add(d,s),await(0,y.md)(10,c.signal).catch((()=>{})),h||(h=!0,this.handles.remove(s)),(0,v.G4)(c))return;const p=new A.U(e,t,i,l),u=(0,r.A)((0,r.A)({},n),{},{signal:c.signal}),m=this.layer.tileInfo;for(let r=0;a._prefetches.length<a._maxPrefetch&&m.upsampleTile(p);++r){const e=this.fetchAvailability(p.level,p.row,p.col,u);a._prefetches.push(e);const t=()=>{a._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){var e;if(!this.layer.parsedUrl)return;const{parsedUrl:t,apiKey:i,customParameters:a}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:t.path,query:(0,f.x0)((0,r.A)((0,r.A)((0,r.A)({},t.query),a),{},{token:null!==i&&void 0!==i?i:null===(e=t.query)||void 0===e?void 0:e.token})),tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,a){a.level=e,a.row=t-t%this.size,a.col=i-i%this.size;const r=M(a);return this._tilemapCache.get(r)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach((e=>this._availableLevels[e.level]=!0))}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,a)=>!!e._tilemapFromCache(t,i,a,e._tmpTilemapDefinition)}}};D._maxPrefetch=4,D._prefetches=new u.A({initialSize:a._maxPrefetch}),(0,l._)([(0,_.MZ)({constructOnly:!0,type:Number})],D.prototype,"levels",void 0),(0,l._)([(0,g.w)("levels")],D.prototype,"castLevels",null),(0,l._)([(0,_.MZ)({readOnly:!0,type:Number})],D.prototype,"size",null),(0,l._)([(0,_.MZ)({constructOnly:!0,type:Number})],D.prototype,"cacheByteSize",void 0),(0,l._)([(0,_.MZ)({constructOnly:!0})],D.prototype,"layer",void 0),(0,l._)([(0,_.MZ)({constructOnly:!0})],D.prototype,"request",void 0),D=a=(0,l._)([(0,b.$)("esri.layers.support.TilemapCache")],D)},50977:(e,t,i)=>{i.d(t,{d:()=>l,i:()=>n});var a=i(8),r=i(88235);const l={type:r.A,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:n}}}}};function n(e,t,i,l){if(!e)return null;const{minScale:n,maxScale:o,minLOD:s,maxLOD:c}=t;if(null!=s&&null!=c)return l&&l.ignoreMinMaxLOD?r.A.fromJSON(e):r.A.fromJSON((0,a.A)((0,a.A)({},e),{},{lods:e.lods.filter((e=>{let{level:t}=e;return null!=t&&t>=s&&t<=c}))}));if(0!==n&&0!==o){const t=e=>Math.round(1e4*e)/1e4,i=n?t(n):1/0,l=o?t(o):-1/0;return r.A.fromJSON((0,a.A)((0,a.A)({},e),{},{lods:e.lods.filter((e=>{const a=t(e.scale);return a<=i&&a>=l}))}))}return r.A.fromJSON(e)}}}]);
//# sourceMappingURL=667.f44ad931.chunk.js.map