{"version":3,"file":"static/js/3056.8c4be4a9.chunk.js","mappings":"8JAEO,MAAMA,UAAiBC,EAAAA,eAE1BC,WAAAA,CAAYC,GACRC,MAAMD,GACNE,KAAKC,OAAOC,MAAMC,WAAa,OAC/BH,KAAKI,IAAIC,UAAkC,GAAxBL,KAAKI,IAAIH,OAAOK,MAAsC,GAAzBN,KAAKI,IAAIH,OAAOM,QAChEP,KAAKI,IAAII,MAAM,EAAG,GAClBR,KAAKS,MACT,CACOA,IAAAA,GACH,MAAML,EAAMJ,KAAKI,IAKjBM,QAAQC,IAAI,qCAGZP,EAAIQ,YACJR,EAAIS,IAAI,EAAG,EAAG,EAAG,EAAG,MACpBT,EAAIU,YACJV,EAAIW,UAAY,UAChBX,EAAIY,OAIJZ,EAAIQ,YACJR,EAAIS,IAAI,GAAI,IAAK,GAAI,EAAG,MACxBT,EAAIU,YACJV,EAAIW,UAAY,UAChBX,EAAIY,OAEJZ,EAAIa,YAAc,wBAClBb,EAAIc,SAGJ,MAAMC,EAAY,SAACC,EAAWC,GAAyD,IAA9CC,EAAaC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,UAAWG,EAASH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACxEG,EAAI,KAAOA,EAAI,IAEnBtB,EAAIQ,YACJR,EAAIS,IAAIO,EAAGC,EAAGK,EAAG,EAAa,EAAVC,KAAKC,IACzBxB,EAAIU,YACJV,EAAIW,UAAYO,EAChBlB,EAAIY,MACR,EAkBA,IAAII,EAAY,GAChBA,GAAK,GACLV,QAAQC,IAAI,QADR,IAMJD,QAAQC,IAAI,OADF,IAEVQ,GAPI,IAIO,GAGK,UAAW,GAI3B,MAAMU,EAAO,GAIb,IAAK,IAAIC,EAHG,EAGMA,EAFN,IAEiBA,EACzBD,EAAKE,KAFI,EAECD,GAEdpB,QAAQC,IAAIkB,GAIZA,EAAKG,SAASF,IACVX,EAAc,GAAJW,GAAS,GAAG,IAI1B,MAAMG,EAAQ,GAIRC,EAAW,GAAoB,GACrC,IAAK,IAAIJ,EAAI,EAAGA,EAFK,GAEaA,IAC9BG,EAAMF,KAAgBD,EAAII,EALb,GAOjBxB,QAAQC,IAAIsB,GAGZA,EAAMD,SAASF,KAvDf,SAAyBV,EAAWC,GAAsD,IAA3CC,EAAaC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,UAAWG,EAASH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC9EG,EAAI,KAAOA,EAAI,IAEnBtB,EAAIQ,YACJR,EAAIS,IAAIO,EAAGC,EAAGK,EAAG,EAAa,EAAVC,KAAKC,IACzBxB,EAAIU,YACJV,EAAIW,UAAYO,EAChBlB,EAAIY,MACR,CAiDImB,CAAoB,GAAJL,GAAS,GAAI,UAAW,KAAK,IAQjD,IAAK,IAAIM,EAAI,EAAGA,EAAIP,EAAKL,SAAUY,EAAG,CAClC,MAAMf,EAAIQ,EAAKO,GACf,IAAK,IAAIN,EAAI,EAAGA,EAAIG,EAAMT,SAAUM,EAAG,CACnC,MAAMV,EAAIa,EAAMH,GAChBX,EAPK,EAOKC,EANL,EAMeC,EAAU,UAA2C,GAA/BM,KAAKU,IAAIP,EAAIM,EAAI,IAAO,IACtE,CACJ,CAEJ,E","sources":["CLASS_12_Design_Data_Visualization/LAB_Web_2D_Visualization/LAB_Web_01_Point_Circle/index.ts"],"sourcesContent":["import { RendererCanvas } from '../../../lib';\r\n\r\nexport class Solution extends RendererCanvas {\r\n\r\n    constructor(div: HTMLDivElement) {\r\n        super(div);\r\n        this.canvas.style.background = '#fff';\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        this.ctx.scale(2, 2);\r\n        this.init();\r\n    }\r\n    public init() {\r\n        const ctx = this.ctx;\r\n        // TODO\r\n        // You code goes here for one time operation\r\n        // Reference: https://codepen.io/NJStudio/pen/jObdYOr?editors=1010\r\n        \r\n        console.log('workshop-canvas 01 Point & Circle');\r\n\r\n        // Render a center point\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, 2, 0, 3.14 * 2)\r\n        ctx.closePath();\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.fill();\r\n\r\n\r\n        // Render a half circle \r\n        ctx.beginPath();\r\n        ctx.arc(0, -100, 10, 0, 3.14)\r\n        ctx.closePath();\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.fill();\r\n    \r\n        ctx.strokeStyle = 'rgba(0, 255, 0, 0.85)';\r\n        ctx.stroke();\r\n\r\n\r\n        const drawPoint = (x: number, y: number, color: string = '#121212', r: number = 5) => {\r\n            if (r < 0.1) { r = 0.1; }\r\n            // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/arc\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, r, 0, Math.PI * 2)\r\n            ctx.closePath()\r\n            ctx.fillStyle = color;\r\n            ctx.fill()\r\n        }\r\n\r\n        function drawPointSecond(x: number, y: number, color: string = '#121212', r: number = 5) {\r\n            if (r < 0.1) { r = 0.1; }\r\n            // https://www.w3schools.com/js/js_functions.asp\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, r, 0, Math.PI * 2)\r\n            ctx.closePath()\r\n            ctx.fillStyle = color;\r\n            ctx.fill()\r\n        }\r\n\r\n        // /////////////////////////////////////////////////////////////\r\n        // // ......................................your code goes here\r\n        // /////////////////////////////////////////////////////////////\r\n\r\n        // (1) .................... variable\r\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let\r\n        let x: number = 10;\r\n        x = -90;\r\n        console.log('x is', x);\r\n\r\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const\r\n        const y = -90;\r\n        const b = 20;\r\n        console.log('b is', b );\r\n        drawPoint(x, y, \"#000000\", 7)\r\n\r\n\r\n        // (2) .................... make a list\r\n        const list = [];\r\n        const min = 0;\r\n        const max = 5\r\n        const step = 2\r\n        for (let i = min; i < max; ++i) {\r\n            list.push(i * step);\r\n        }\r\n        console.log(list);\r\n\r\n\r\n        // (3) .................... draw points with the list\r\n        list.forEach((i) => {\r\n            drawPoint(i * 10, -50);\r\n        });\r\n\r\n        // (4) .................... make a range\r\n        const range = []\r\n        const minRange = - 8\r\n        const maxRange = 8\r\n        const numberOfdata = 12\r\n        const interval = (maxRange - minRange) / (numberOfdata - 1);\r\n        for (let i = 0; i < numberOfdata; i++) {\r\n            range.push(minRange + i * interval);\r\n        }\r\n        console.log(range)\r\n\r\n        // (5) .................... draw points with the range\r\n        range.forEach((i) => {\r\n            // drawPoint(i * 10, -25, '#ff0000', 2.57)\r\n            drawPointSecond(i * 10, -25, '#ff0000', 2.57)\r\n        });\r\n\r\n\r\n        // (6) .................... draw a point grid by the range and list\r\n        const xOff = 7;\r\n        const yOff = 7;\r\n\r\n        for (let j = 0; j < list.length; ++j) {\r\n            const y = list[j]\r\n            for (let i = 0; i < range.length; ++i) {\r\n                const x = range[i]\r\n                drawPoint(x * xOff, y * yOff, '#0000ff', (Math.sin(i * j * 0.1) + 0.5) * 5);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n"],"names":["Solution","RendererCanvas","constructor","div","super","this","canvas","style","background","ctx","translate","width","height","scale","init","console","log","beginPath","arc","closePath","fillStyle","fill","strokeStyle","stroke","drawPoint","x","y","color","arguments","length","undefined","r","Math","PI","list","i","push","forEach","range","interval","drawPointSecond","j","sin"],"sourceRoot":""}