{"version":3,"file":"static/js/1313.7eb74178.chunk.js","mappings":"+JAEO,MAAMA,UAAiBC,EAAAA,eAE1BC,WAAAA,CAAYC,GACRC,MAAMD,GAENE,KAAKC,MACT,CACOA,IAAAA,GACH,MAAMC,EAAMF,KAAKE,IAEjBA,EAAIC,YACJD,EAAIE,IAA4B,GAAxBJ,KAAKE,IAAIG,OAAOC,MAAsC,GAAzBN,KAAKE,IAAIG,OAAOE,OAAc,GAAI,EAAG,MAC1EL,EAAIM,YAEJN,EAAIO,UAAY,UAChBP,EAAIQ,OAOJ,MAAMC,EAAY,SAACC,EAAWC,GAAsD,IAA3CC,EAAaC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OAAQG,EAASH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAEzEb,EAAIC,YACJD,EAAIE,IAAIQ,EAAGC,EAAGK,EAAG,EAAG,MACpBhB,EAAIM,YACJN,EAAIO,UAAYK,EAChBZ,EAAIQ,MACR,EAYMS,EAAa,GAEnBnB,KAAKoB,QAAQC,iBAAiB,SAAUC,IACpCpB,EAAIqB,WAAW,KAAM,IAAK,IAAK,KAE/BC,QAAQC,IAAI,YAADC,OAAaJ,EAAEK,QAAO,SAAAD,OAAQJ,EAAEM,UAE3CT,EAAWU,KAAK,CAACP,EAAEK,QAAU,EAAGL,EAAEM,QAAU,IAlB9BE,KACd5B,EAAIC,YACJD,EAAI6B,OAAOD,EAAI,GAAG,GAAIA,EAAI,GAAG,IAC7B,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAId,SAAUgB,EAC9B9B,EAAI+B,OAAOH,EAAIE,GAAG,GAAIF,EAAIE,GAAG,IAEjC9B,EAAIgC,UAAY,EAChBhC,EAAIiC,YAAc,UAClBjC,EAAIkC,QAAQ,EAaZC,CAASlB,GAGT,IAAK,IAAIa,EAAI,EAAGA,EAAIb,EAAWH,SAAUgB,EACrCrB,EAAUQ,EAAWa,GAAG,GAAIb,EAAWa,GAAG,GAC9C,GAKR,CACOM,UAAAA,CAAW1B,EAAWC,GAE7B,E","sources":["CLASS_14_CAD_App/Canvas/index.ts"],"sourcesContent":["import { RendererCanvas } from '../../lib';\r\n\r\nexport class Solution extends RendererCanvas {\r\n\r\n    constructor(div: HTMLDivElement) {\r\n        super(div);\r\n\r\n        this.init();\r\n    }\r\n    public init() {\r\n        const ctx = this.ctx;\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5, 10, 0, 3.14 * 2)\r\n        ctx.closePath();\r\n\r\n        ctx.fillStyle = '#ff0000'\r\n        ctx.fill();\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n        // Reference: https://codepen.io/NJStudio/pen/KKdJRRv?editors=0110\r\n\r\n\r\n        const drawPoint = (x: number, y: number, color: string = '#000', r: number = 5) => {\r\n            // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/arc\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, r, 0, 3.14 * 2)\r\n            ctx.closePath()\r\n            ctx.fillStyle = color;\r\n            ctx.fill()\r\n        }\r\n        const drawLine = (pts: number[][]) => {\r\n            ctx.beginPath();\r\n            ctx.moveTo(pts[0][0], pts[0][1]);\r\n            for (let i = 1; i < pts.length; ++i) {\r\n                ctx.lineTo(pts[i][0], pts[i][1]);\r\n            }\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeStyle = '#00ff00';\r\n            ctx.stroke();\r\n        }\r\n\r\n        const listPoint2 = []\r\n\r\n        this.divHost.addEventListener('click', (e: MouseEvent) => {\r\n            ctx.clearRect(-200, -200, 400, 400);\r\n            \r\n            console.log(`mouse x: ${e.offsetX}, y: ${e.offsetY}`);\r\n            // add a position to the list\r\n            listPoint2.push([e.offsetX - 0, e.offsetY - 0]);\r\n\r\n            // draw lines by the array\r\n            drawLine(listPoint2);\r\n\r\n            // loop for draw points by the array\r\n            for (let i = 0; i < listPoint2.length; ++i) {\r\n                drawPoint(listPoint2[i][0], listPoint2[i][1]);\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n        \r\n    }\r\n}\r\n"],"names":["Solution","RendererCanvas","constructor","div","super","this","init","ctx","beginPath","arc","canvas","width","height","closePath","fillStyle","fill","drawPoint","x","y","color","arguments","length","undefined","r","listPoint2","divHost","addEventListener","e","clearRect","console","log","concat","offsetX","offsetY","push","pts","moveTo","i","lineTo","lineWidth","strokeStyle","stroke","drawLine","mouseClick"],"sourceRoot":""}