"use strict";(self.webpackChunkData_in_Design=self.webpackChunkData_in_Design||[]).push([[7973],{17973:(s,t,e)=>{e.r(t),e.d(t,{Solution:()=>n});var i=e(71350),o=e(71123);class n extends i.RendererJSAPI{constructor(s){super(s),this.locations=[],this.colors=[],this.names=[];const t="#0683d2",e="#ec2f3d",i="#ff961e",n="#049564",r="#959597";(0,o.getJSONFromURL)("/Data-in-Design-public/static/data/MBTA_stop.geojson").then((s=>{let o=0,l=0,c=0;for(let h=0;h<s.features.length;++h){const a=s.features[h].geometry.coordinates;this.locations.push(a),o+=a[0],l+=a[1],c++,this.names.push(s.features[h].properties.name);const u=s.features[h].properties.lines;if(u.includes("blue"))this.colors.push(t);else{if(u.includes("red")){this.colors.push(e);continue}if(u.includes("orange")){this.colors.push(i);continue}if(u.includes("green")){this.colors.push(n);continue}this.colors.push(r)}}this.center(o/c,l/c),this.start()}))}render(s){for(let t=0;t<this.locations.length;++t){const e=this.toScreen(this.locations[t][0],this.locations[t][1]);r(s,e[0],e[1],this.time,this.colors[t]),l(s,e[0],e[1],this.names[t],this.colors[t])}}}const r=(s,t,e,i,o)=>{s.fillStyle=o,s.strokeStyle="#fff",s.lineWidth=.75,s.beginPath(),s.arc(t,e,2*(Math.sin(.8*i)+4),0,2*Math.PI),s.closePath(),s.fill(),s.stroke()},l=(s,t,e,i,o)=>{s.strokeStyle=o,s.lineWidth=.5,s.strokeText(i,t+13,e)}}}]);
//# sourceMappingURL=7973.bbfc6d66.chunk.js.map