"use strict";(self.webpackChunkdata_in_design=self.webpackChunkdata_in_design||[]).push([[2551],{52551:(e,t,o)=>{o.r(t),o.d(t,{default:()=>F});var r=o(8),i=o(35143),l=o(86560),s=o(3825),n=(o(95444),o(30726)),a=o(77717),y=o(50346),p=o(90534),u=o(46053),d=(o(18690),o(40565),o(28379)),h=o(85842),c=o(76797),v=o(80963),S=o(25515),m=o(65624),g=o(11270),f=o(94729),_=o(21617),M=o(5682),b=o(55053),C=o(25900),A=o(7246),Z=o(27410),k=o(76940),w=o(86875);const G=["atom","xml"],P={base:C.A,key:"type",typeMap:{"simple-line":A.A},errorContext:"symbol"},R={base:C.A,key:"type",typeMap:{"picture-marker":Z.A,"simple-marker":k.A},errorContext:"symbol"},x={base:C.A,key:"type",typeMap:{"simple-fill":w.A},errorContext:"symbol"};let j=class extends((0,m.d)((0,_.J)((0,g.q)((0,f.A)((0,M.j)((0,a.P)(S.A))))))){constructor(){super(...arguments),this.description=null,this.fullExtent=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,t){return"string"==typeof e?(0,r.A)({url:e},t):e}readFeatureCollections(e,t){return t.featureCollection.layers.forEach((e=>{var t;const o=e.layerDefinition.drawingInfo.renderer.symbol;o&&"esriSFS"===o.type&&(null===(t=o.outline)||void 0===t?void 0:t.style.includes("esriSFS"))&&(o.outline.style="esriSLSSolid")})),t.featureCollection.layers}get hasPoints(){return this._hasGeometry("esriGeometryPoint")}get hasPolylines(){return this._hasGeometry("esriGeometryPolyline")}get hasPolygons(){return this._hasGeometry("esriGeometryPolygon")}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?(0,p.e7)(this.url,G)||"GeoRSS":e||""}set title(e){this._set("title",e)}load(e){const t=(0,n.Ru)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(y.QP).then((()=>this._fetchService(t))).then((e=>{this.read(e,{origin:"service"})}))),Promise.resolve(this)}async hasDataChanged(){const e=await this._fetchService();return this.read(e,{origin:"service",ignoreDefaults:!0}),!0}async _fetchService(e){var t;const o=this.spatialReference,{data:r}=await(0,s.default)(l.A.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:(0,v.oT)(o)?void 0:null!==(t=o.wkid)&&void 0!==t?t:JSON.stringify(o)},signal:e});return r}_hasGeometry(e){var t,o;return null!==(t=null===(o=this.featureCollections)||void 0===o?void 0:o.some((t=>{var o,r;return(null===(o=t.featureSet)||void 0===o?void 0:o.geometryType)===e&&(null===(r=t.featureSet.features)||void 0===r?void 0:r.length)>0})))&&void 0!==t&&t}};(0,i._)([(0,u.MZ)()],j.prototype,"description",void 0),(0,i._)([(0,u.MZ)()],j.prototype,"featureCollections",void 0),(0,i._)([(0,d.w)("service","featureCollections",["featureCollection.layers"])],j.prototype,"readFeatureCollections",null),(0,i._)([(0,u.MZ)({type:c.A,json:{name:"lookAtExtent"}})],j.prototype,"fullExtent",void 0),(0,i._)([(0,u.MZ)(b.id)],j.prototype,"id",void 0),(0,i._)([(0,u.MZ)(b.fV)],j.prototype,"legendEnabled",void 0),(0,i._)([(0,u.MZ)({types:P,json:{write:!0}})],j.prototype,"lineSymbol",void 0),(0,i._)([(0,u.MZ)({type:["show","hide"]})],j.prototype,"listMode",void 0),(0,i._)([(0,u.MZ)({types:R,json:{write:!0}})],j.prototype,"pointSymbol",void 0),(0,i._)([(0,u.MZ)({types:x,json:{write:!0}})],j.prototype,"polygonSymbol",void 0),(0,i._)([(0,u.MZ)({type:["GeoRSS"]})],j.prototype,"operationalLayerType",void 0),(0,i._)([(0,u.MZ)(b.OZ)],j.prototype,"url",void 0),(0,i._)([(0,u.MZ)({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],j.prototype,"title",null),(0,i._)([(0,u.MZ)({readOnly:!0,json:{read:!1},value:"geo-rss"})],j.prototype,"type",void 0),j=(0,i._)([(0,h.$)("esri.layers.GeoRSSLayer")],j);const F=j}}]);
//# sourceMappingURL=2551.283137ff.chunk.js.map