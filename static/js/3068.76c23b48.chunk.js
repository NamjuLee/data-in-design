"use strict";(self.webpackChunkData_in_Design=self.webpackChunkData_in_Design||[]).push([[3068],{93068:(e,t,i)=>{i.r(t),i.d(t,{default:()=>et});var n=i(8),r=i(35143),s=i(16868),a=i(71719),o=i(50076),l=i(30726),c=i(77717),u=i(50346),h=i(68134),d=i(46053),f=(i(18690),i(40565)),m=i(6409),p=i(28379),y=i(85842),g=i(25515),v=i(65624),x=i(31362),w=(i(35238),i(3825)),I=i(76460),b=i(80963),_=i(13096),R=i(55053),S=i(15359),A=i(13023),T=i(41894),M=i(42915),k=i(88235),C=i(42553),P=i(91291),F=i(49653),O=i(68347),D=i(12838),B=i(37267),z=i(52494),N=i(59844),E=i(99846),L=i(76797),J=i(13904);let H=class extends((0,P.g)(C.oY)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=(0,N.Hh)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e=(0,n.A)((0,n.A)({},e),{},{ioConfig:(0,n.A)({resolution:null,bandIds:null,sampling:"closest",tileInfo:k.A.create()},e.ioConfig)})),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=(0,N.FT)(e.spatialReference);return(0,l.Ru)(t)&&e.extent.width>=t/2}set url(e){this._set("url",(0,_.Jf)(e,I.A.getLogger(this.declaredClass)))}async open(e){throw new o.A("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const r=n.tileInfo||this.rasterInfo.storageInfo.tileInfo,s=this.getTileExtentFromTileInfo(e,t,i,r);return this.fetchPixels(s,r.size[0],r.size[1],n)}async identify(e){var t,i;let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e=(0,f.PZ)(J.A,e).clone().normalize();const{multidimensionalDefinition:s,timeExtent:a}=r,{hasMultidimensionalTranspose:o,multidimensionalInfo:c}=this.rasterInfo;let{transposedVariableName:u}=r;const h=(0,l.Ru)(c)&&o&&(null!=a||(0,O.DY)(s));var d;h&&!u&&(u=(0,l.Ru)(s)&&s.length>0?null!==(d=s[0].variableName)&&void 0!==d?d:void 0:c.variables[0].name,r=(0,n.A)((0,n.A)({},r),{},{transposedVariableName:u}));r=this._getRequestOptionsWithSliceId(r);const{spatialReference:m,extent:p}=this.rasterInfo,{datumTransformation:y}=r;let g=(0,N._I)(e,m,y);if(!p.intersects(g))return{location:g,value:null};if((0,l.Ru)(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(g);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};g=e}let v=0;const x=(0,l.Ru)(u)&&(0,l.Ru)(c)&&this.rasterInfo.hasMultidimensionalTranspose;if(!x)if(r.srcResolution)v=(0,N.t$)(r.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(v=await this.computeBestPyramidLevelForLocation(e,r),null==v)return{location:g,value:null};const w=this.identifyPixelLocation(g,v,null,x);if(null===w)return{location:g,value:null};const{row:I,col:b,rowOffset:_,colOffset:R,blockWidth:S}=w,A=null!==(t=u)&&void 0!==t?t:(0,l.oA)(r.sliceId),T=(0,D.ph)(this.url,A),M="".concat(v,"/").concat(I,"/").concat(b);let k=(0,D.gd)(T,null,M);(0,l.$I)(k)&&(k=this.fetchRawTile(v,I,b,r),(0,D.no)(T,null,M,k));const C=await k;if((0,l.$I)(C)||null===(i=C.pixels)||void 0===i||!i.length)return{location:g,value:null};const P=_*S+R;return this._processIdentifyResult(C,{srcLocation:g,position:P,pyramidLevel:v,useTransposedTile:!!x,requestSomeSlices:h,identifyOptions:r})}async fetchPixels(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(e=(0,N.V2)(e),(n=this._getRequestOptionsWithSliceId(n)).requestRawData)return this._fetchPixels(e,t,i,n);const r=(0,N.FT)(e.spatialReference),s=(0,N.OM)(e);if((0,l.$I)(r)||0===s||1===s&&this._isGlobalWrappableSource)return this._fetchPixels(e,t,i,n);if(s>=3)return{extent:e,pixelBlock:null};const a=[],{xmin:o,xmax:c}=e,u=Math.round(r/(c-o)*t),h=u-Math.round((r/2-o)/(c-o)*t);let d=0;const f=[];for(let l=0;l<=s;l++){const m=new L.A({xmin:0===l?o:-r/2,xmax:l===s?c-r*l:r/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),p=0===l?u-h:l===s?t-d:u;d+=p,f.push(p);const y=n.disableWrapAround&&l>0?null:this._fetchPixels(m,p,i,n);a.push(y)}const m=(await Promise.all(a)).map((e=>null===e||void 0===e?void 0:e.pixelBlock));let p=null;const y={width:t,height:i};return p=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:m,srcMosaicSize:y,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:f},n)).pixelBlock:(0,z.z7)(m,y,{blockWidths:f}),{extent:e,srcExtent:(0,N._l)(e,this.rasterInfo.spatialReference,n.datumTransformation),pixelBlock:p}}async fetchRawPixels(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};t={x:Math.floor(t.x),y:Math.floor(t.y)};const r=await this._fetchRawTiles(e,t,i,n),{nativeExtent:s,nativePixelSize:a,storageInfo:o}=this.rasterInfo,c=2**e,u=a.x*c,h=a.y*c,d=new L.A({xmin:s.xmin+u*t.x,xmax:s.xmin+u*(t.x+i.width-1),ymin:s.ymax-h*(t.y+i.height-1),ymax:s.ymax-h*t.y,spatialReference:s.spatialReference});if(!r)return{extent:d,srcExtent:d,pixelBlock:null};const{pixelBlocks:f,mosaicSize:m}=r;if(1===f.length&&(0,l.Ru)(f[0])&&f[0].width===i.width&&f[0].height===i.height)return{extent:d,srcExtent:d,pixelBlock:r.pixelBlocks[0]};const p=e>0?o.pyramidBlockWidth:o.blockWidth,y=e>0?o.pyramidBlockHeight:o.blockHeight,g={x:t.x%p,y:t.y%y};let v;return v=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:m,destDimension:i,clipOffset:g,clipSize:i,coefs:null,sampleSpacing:null,interpolation:n.interpolation,alignmentInfo:null,blockWidths:null},n)).pixelBlock:(0,z.z7)(f,m,{clipOffset:g,clipSize:i}),{extent:d,srcExtent:d,pixelBlock:v}}fetchRawTile(e,t,i,n){throw new o.A("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return(0,N._l)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?(0,B.D)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t){var i,r;let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const{customFetchParameters:a}=this.ioConfig,{range:o,query:l,headers:c}=t;s=null!==(i=null!==(r=s)&&void 0!==r?r:t.retryCount)&&void 0!==i?i:this.ioConfig.retryCount;const u=o?{Range:"bytes=".concat(o.from,"-").concat(o.to)}:null;try{return await(0,w.default)(e,(0,n.A)((0,n.A)({},t),{},{query:(0,n.A)((0,n.A)({},l),a),headers:(0,n.A)((0,n.A)({},c),u)}))}catch(q){if(s>0)return s--,this.request(e,t,s);throw q}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;return(0,l.$I)(t)||(0,l.$I)(e)||0===e.length?null:(0,O.NG)(e,t)}getTileExtentFromTileInfo(e,t,i,n){const r=(0,l.T7)(n.lodAt(e));return this.getTileExtent({x:r.resolution,y:r.resolution},t,i,n.origin,n.spatialReference,n.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:n}=this.rasterInfo;if(!e.tileInfo){const r=[],s=e.maximumPyramidLevel||0;let a=Math.max(n.x,n.y),o=1/.0254*96*a;for(let e=0;e<=s;e++)r.push({level:s-e,resolution:a,scale:o}),a*=2,o*=2;const l=new J.A({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new k.A({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:r}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:512,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:512,n=arguments.length>3?arguments[3]:void 0;const{width:r,height:s,nativeExtent:a,pixelSize:o,spatialReference:l}=e,c=new J.A({x:a.xmin,y:a.ymax,spatialReference:l});null==n&&(n=Math.max(0,Math.round(Math.log(Math.max(r,s))/Math.LN2-8)));const u=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],n);e.storageInfo=new F.A({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:n,blockBoundary:u})}async computeBestPyramidLevelForLocation(e){return 0}computeBlockBoundary(e,t,i,n,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:2;if(1===r.length&&s>0){r=[...r];let{x:e,y:t}=r[0];for(let i=0;i<s;i++)e*=a,t*=a,r.push({x:e,y:t})}const o=[],{x:l,y:c}=n;for(let u=0;u<r.length;u++){const{x:n,y:s}=r[u];o.push({minCol:Math.floor((e.xmin-l+.1*n)/t/n),maxCol:Math.floor((e.xmax-l-.1*n)/t/n),minRow:Math.floor((c-e.ymax+.1*s)/i/s),maxRow:Math.floor((c-e.ymin-.1*s)/i/s)})}return o}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:n}=this.rasterInfo.storageInfo;if(0===e)return t;if((0,l.Ru)(i)&&i.length)return i[e-1];const r=n**e;return{x:t.x*r,y:t.y*r}}identifyPixelLocation(e,t,i,n){const{spatialReference:r,nativeExtent:s,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:o,origin:c,transposeInfo:u}=a,h=n&&(0,l.Ru)(u)?u.tileSize[0]:a.blockWidth,d=n&&(0,l.Ru)(u)?u.tileSize[1]:a.blockHeight,f=(0,N._I)(e,r,i);if(!s.intersects(f))return null;if(t<0||t>o)return null;const m=this.getPyramidPixelSize(t),{x:p,y:y}=m,g=(c.y-f.y)/y/d,v=(f.x-c.x)/p/h,x=Math.min(d-1,Math.floor((g-Math.floor(g))*d)),w=Math.min(h-1,Math.floor((v-Math.floor(v))*h));return{pyramidLevel:t,row:Math.floor(g),col:Math.floor(v),rowOffset:x,colOffset:w,blockWidth:h,srcLocation:f}}getTileExtent(e,t,i,n,r,s){const[a,o]=s,l=n.x+i*a*e.x,c=l+a*e.x,u=n.y-t*o*e.y,h=u-o*e.y;return new L.A({xmin:l,xmax:c,ymin:h,ymax:u,spatialReference:r})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const n=this.rasterInfo.storageInfo.blockBoundary[e];return!n||n.maxRow<t||n.maxCol<i||n.minRow>t||n.minCol>i}async _fetchPixels(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=(0,N.OM)(e);if(r>=2)return{extent:e,pixelBlock:null};const s=this._getSourceDataInfo(e,t,i,n),{pyramidLevel:a,pyramidResolution:o,srcResolution:c,srcExtent:u,srcWidth:h,srcHeight:d}=s;if(0===h||0===d)return{extent:e,srcExtent:u,pixelBlock:null};const f=(0,l.oA)(this.rasterInfo.transform),m="gcs-shift"===(null===f||void 0===f?void 0:f.type),p=(0,l.Ru)((0,N.FT)(e.spatialReference));!m&&p||(r=(0,N.OM)(s.srcExtent,m));const y=this.rasterInfo.storageInfo,g={x:Math.floor((u.xmin-y.origin.x)/o.x+.1),y:Math.floor((y.origin.y-u.ymax)/o.y+.1)},v=await this._fetchRawTiles(a,g,{width:h,height:d,wrapCount:r},n);if(!v)return{extent:e,srcExtent:u,pixelBlock:null};const x=a>0?y.pyramidBlockWidth:y.blockWidth,w=a>0?y.pyramidBlockHeight:y.blockHeight,I=x===h&&w===d&&g.x%x==0&&g.y%w==0,b=new J.A({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),_=!e.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:R}=n;if(!_&&I&&1===v.pixelBlocks.length&&x===t&&w===i&&c.x===b.x&&c.y===b.y)return{extent:e,srcExtent:u,pixelBlock:v.pixelBlocks[0]};const S=p&&(0,l.Ru)((0,N.FT)(u.spatialReference)),A=n.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");A&&!this.rasterJobHandler&&await(0,N.Hh)();const T=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:v.extent,pixelSize:b.toJSON(),datumTransformation:R,rasterTransform:f,hasWrapAround:r>0||S,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:A},n):(0,N.l0)({projectedExtent:e,srcBufferExtent:v.extent,pixelSize:b,datumTransformation:R,rasterTransform:f,hasWrapAround:r>0||S,isAdaptive:!1,includeGCSGrid:A});let M;const k=!n.requestRawData,C={rows:T.spacing[0],cols:T.spacing[1]},P=(0,l.oA)(this._getRasterTileAlignmentInfo(a,v.extent.xmin)),{pixelBlocks:F,mosaicSize:O,isPartiallyFilled:D}=v;let B=null;if(this.rasterJobHandler){const e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:F,srcMosaicSize:O,destDimension:k?{width:t,height:i}:null,coefs:k?T.coefficients:null,sampleSpacing:k?C:null,projectDirections:A,gcsGrid:A?T.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:n.interpolation,alignmentInfo:P,blockWidths:null},n);({pixelBlock:M,localNorthDirections:B}=e)}else{const e=(0,z.z7)(F,O,{alignmentInfo:P});M=k?(0,z.$i)(e,{width:t,height:i},T.coefficients,C,n.interpolation):e,A&&T.gcsGrid&&(B=(0,z.QF)({width:t,height:i},T.gcsGrid),M=(0,E.Y2)(M,this.rasterInfo.dataType,B))}return n.requestRawData||A?{srcExtent:u,pixelBlock:M,transformGrid:T,localNorthDirections:B,extent:e,isPartiallyFilled:D}:{srcExtent:u,extent:e,pixelBlock:M}}async _fetchRawTiles(e,t,i,n){const{origin:r,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:o}=this.getBlockWidthHeight(e);let{x:c,y:u}=t,{width:h,height:d,wrapCount:f}=i;const m=this._getRasterTileAlignmentInfo(e,0);n.buffer&&(c-=n.buffer.cols,u-=n.buffer.rows,h+=2*n.buffer.cols,d+=2*n.buffer.rows);let p=0,y=0,g=0;f&&(0,l.Ru)(m)&&(({worldColumnCountFromOrigin:y,originColumnOffset:g,rightPadding:p}=m),y*m.blockWidth-p>=c+h&&(p=0));const v=Math.floor(c/a),x=Math.floor(u/o),w=Math.floor((c+h+p-1)/a),I=Math.floor((u+d+p-1)/o),b=s[e];if(!b)return null;const{minRow:_,minCol:R,maxCol:S,maxRow:A}=b;if(0===f&&(I<_||w<R||x>A||v>S))return null;const T=new Array;let M=!1;const k=null==this.ioConfig.allowPartialFill?n.allowPartialFill:this.ioConfig.allowPartialFill;for(let z=x;z<=I;z++)for(let t=v;t<=w;t++){let i=t;if(!n.disableWrapAround&&f&&(0,l.Ru)(m)&&y<=t&&(i=t-y-g),z>=_&&i>=R&&A>=z&&S>=i){const t=this._fetchRawTile(e,z,i,n);k?T.push(new Promise((e=>{t.then((t=>e(t))).catch((()=>{M=!0,e(null)}))}))):T.push(t)}else T.push(Promise.resolve(null))}if(0===T.length)return null;const C=await Promise.all(T),P={height:(I-x+1)*o,width:(w-v+1)*a},{spatialReference:F}=this.rasterInfo,O=this.getPyramidPixelSize(e),{x:D,y:B}=O;return{extent:new L.A({xmin:r.x+v*a*D,xmax:r.x+(w+1)*a*D,ymin:r.y-(I+1)*o*B,ymax:r.y-x*o*B,spatialReference:F}),pixelBlocks:C,mosaicSize:P,isPartiallyFilled:M}}_fetchRawTile(e,t,i,r){const s=this.rasterInfo.storageInfo.blockBoundary[e];if(!s)return Promise.resolve(null);const{minRow:a,minCol:o,maxCol:c,maxRow:h}=s;if(t<a||i<o||t>h||i>c)return Promise.resolve(null);const d=(0,D.ph)(this.url,r.sliceId),f="".concat(e,"/").concat(t,"/").concat(i);let m=(0,D.gd)(d,r.registryId,f);if((0,l.$I)(m)){const s=new AbortController;m=this.fetchRawTile(e,t,i,(0,n.A)((0,n.A)({},r),{},{signal:s.signal})),(0,D.no)(d,r.registryId,f,m,s),m.catch((()=>(0,D.zo)(d,r.registryId,f)))}return r.signal&&(0,u.u7)(r,(()=>{(0,D.jX)(d,r.registryId,f)})),m}_computeMagDirValues(e){var t;const{bandCount:i,dataType:n}=this.rasterInfo;if((2!==i||"vector-magdir"!==n)&&"vector-uv"!==n||2!==(null===e||void 0===e?void 0:e.length)||null===(t=e[0])||void 0===t||!t.length)return null;const r=e[0].length;if("vector-magdir"===n){const t=e[1].map((e=>(e+360)%360));return[e[0],t]}const[s,a]=e,o=[],l=[];for(let c=0;c<r;c++){const[e,t]=(0,E.Lu)([s[c],a[c]]);o.push(e),l.push(t)}return[o,l]}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,N.DO)(this.rasterInfo)),(0,l.$I)(this._rasterTileAlighmentInfo.pyramidsInfo)?null:(0,n.A)({startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform},this._rasterTileAlighmentInfo.pyramidsInfo[e])}_getSourceDataInfo(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const r={datumTransformation:n.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};n.srcResolution&&(r.srcResolution=n.srcResolution,this._updateSourceDataInfo(e,r));const s=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:o,pyramidLevel:l}=r,c=a/t,u=o/i,h=l<s&&c*u>=16;if(h||l===s&&(c>8||u>8)||0===a||0===o){const a=new J.A({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let o=(0,N.Wo)(a,this.rasterInfo.spatialReference,e,r.datumTransformation);const d=!o||n.srcResolution&&o.x+o.y<n.srcResolution.x+n.srcResolution.y;if(h&&n.srcResolution&&d){const e=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(s-l+3>=e){const t=2**e;o={x:n.srcResolution.x*t,y:n.srcResolution.y*t}}}o&&(r.srcResolution=o,this._updateSourceDataInfo(e,r))}return(r.srcWidth/t>8||r.srcHeight/i>8)&&(r.srcWidth=0,r.srcHeight=0),r}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:n,datumTransformation:r}=t,{pyramidLevel:s,pyramidResolution:a,excessiveReading:o}=(0,N.t$)(n,this.rasterInfo,this.ioConfig.sampling);if(o)return;let c=t.srcExtent||(0,N._l)(e,i,r);if(null==c)return;const u=(0,l.oA)(this.rasterInfo.transform);u&&(c=u.inverseTransform(c)),t.srcExtent=c;const h=Math.ceil((c.xmax-c.xmin)/a.x-.1),d=Math.ceil((c.ymax-c.ymin)/a.y-.1);t.pyramidLevel=s,t.pyramidResolution=a,t.srcWidth=h,t.srcHeight=d}_getRequestOptionsWithSliceId(e){return(0,l.Ru)(this.rasterInfo.multidimensionalInfo)&&null==e.sliceId&&(e=(0,n.A)((0,n.A)({},e),{},{sliceId:this.getSliceIndex(e.multidimensionalDefinition)})),e}_processIdentifyResult(e,t){const{srcLocation:i,position:r,pyramidLevel:s,useTransposedTile:a}=t,o=e.pixels[0].length/e.width/e.height;if(e.mask&&!e.mask[r])return{location:i,value:null};const{multidimensionalInfo:c}=this.rasterInfo;if((0,l.$I)(c)||!a){const t=e.pixels.map((e=>e[r])),n={location:i,value:t,pyramidLevel:s},a=this._computeMagDirValues(t.map((e=>[e])));return null!==a&&void 0!==a&&a.length&&(n.magdirValue=a.map((e=>e[0]))),n}let u=e.pixels.map((e=>Array.prototype.slice.call(e,r*o,r*o+o))),h=this._computeMagDirValues(u);const{requestSomeSlices:d,identifyOptions:f}=t;let m=(0,O.QW)(c,f.transposedVariableName);if(d){var p;const e=(0,O.xx)(m,(0,l.oA)(f.multidimensionalDefinition),(0,l.oA)(f.timeExtent));u=u.map((t=>e.map((e=>t[e])))),h=null===(p=h)||void 0===p?void 0:p.map((t=>e.map((e=>t[e])))),m=e.map((e=>m[e]))}return{location:i,value:null,dataSeries:m.map(((e,t)=>{var i;const r={value:u.map((e=>e[t])),multidimensionalDefinition:e.multidimensionalDefinition.map((e=>new S.A((0,n.A)((0,n.A)({},e),{},{isSlice:!0}))))};return null!==(i=h)&&void 0!==i&&i.length&&(r.magdirValue=[h[0][t],h[1][t]]),r})),pyramidLevel:s}}};(0,r._)([(0,d.MZ)()],H.prototype,"_rasterTileAlighmentInfo",void 0),(0,r._)([(0,d.MZ)({readOnly:!0})],H.prototype,"_isGlobalWrappableSource",null),(0,r._)([(0,d.MZ)(R.OZ)],H.prototype,"url",null),(0,r._)([(0,d.MZ)({type:String,json:{write:!0}})],H.prototype,"datasetName",void 0),(0,r._)([(0,d.MZ)({type:String,json:{write:!0}})],H.prototype,"datasetFormat",void 0),(0,r._)([(0,d.MZ)()],H.prototype,"rasterInfo",void 0),(0,r._)([(0,d.MZ)()],H.prototype,"ioConfig",void 0),(0,r._)([(0,d.MZ)()],H.prototype,"sourceJSON",void 0),H=(0,r._)([(0,y.$)("esri.layers.support.rasterDatasets.BaseRaster")],H);const W=H;let Z=class extends W{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._primaryRasters=null}async open(e){var t;await this.init();const{rasterFunction:i}=this,{rasters:n,rasterIds:r}=i.getPrimaryRasters(),s=n.map((t=>t.rasterInfo?void 0:t.open(e)));await Promise.all(s);const a=n.map((e=>{let{rasterInfo:t}=e;return t})),l=i.bind({rasterInfos:a,rasterIds:r});if(!l.success)throw new o.A("raster-function:open","cannot bind the function: ".concat(null!==(t=l.error)&&void 0!==t?t:""));await this.syncJobHandler(),this.set("sourceJSON",n[0].sourceJSON),this.set("rasterInfo",i.rasterInfo)}async syncJobHandler(){const{rasterFunction:e}=this;if(this._primaryRasters=e.getPrimaryRasters(),this.rasterJobHandler)return this.rasterJobHandler.updateRasterFunction(e)}async fetchPixels(e,t,i){var r,s;let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{rasters:o,rasterIds:c}=this._primaryRasters,u=o.map((n=>n.fetchPixels(e,t,i,a))),h=await Promise.all(u),d=h.map((e=>e.pixelBlock));if(d.every((e=>(0,l.$I)(e))))return h[0];const f=null!==(r=null===(s=h.find((e=>(0,l.Ru)(e.pixelBlock))))||void 0===s?void 0:s.extent)&&void 0!==r?r:e,m=this.rasterJobHandler?await this.rasterJobHandler.process({extent:f,primaryPixelBlocks:d,primaryRasterIds:c}):this.rasterFunction.process({extent:f,primaryPixelBlocks:d,primaryRasterIds:c});return(0,n.A)((0,n.A)({},h[0]),{},{pixelBlock:m})}};(0,r._)([(0,d.MZ)({type:String,json:{write:!0}})],Z.prototype,"datasetFormat",void 0),(0,r._)([(0,d.MZ)()],Z.prototype,"tileType",void 0),(0,r._)([(0,d.MZ)()],Z.prototype,"rasterFunction",void 0),Z=(0,r._)([(0,y.$)("esri.layers.support.rasterDatasets.FunctionRaster")],Z);const q=Z;var G=i(20591),j=i(78937),U=i(20118),$=i(46533),V=i(13312);const Y=I.A.getLogger("esri.layers.mixins.ImageryTileMixin"),X=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.multidimensionalSubset=null,this.raster=null,this.rasterFunction=null,this.sourceJSON=null,this.symbolizer=null}get fullExtent(){var e;return null===(e=this.rasterInfo)||void 0===e?void 0:e.extent}get rasterInfo(){var e;return null===(e=this.raster)||void 0===e?void 0:e.rasterInfo}get spatialReference(){var e,t;return null!==(e=null===(t=this.rasterInfo)||void 0===t?void 0:t.spatialReference)&&void 0!==e?e:V.A.WGS84}get tileInfo(){var e;return null===(e=this.rasterInfo)||void 0===e?void 0:e.storageInfo.tileInfo}set url(e){this._set("url",(0,_.Jf)(e,Y))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async convertVectorFieldData(e,t){if((0,l.$I)(e)||!this.rasterInfo)return null;const i=this._rasterJobHandler.instance,n=this.rasterInfo.dataType;return i?i.convertVectorFieldData({pixelBlock:e,dataType:n},t):(0,E.FI)(e,n)}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):(0,$.CW)(e.meshType,e.simulationSettings,e.flowData,(0,l.Ru)(t.signal)?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){var t;const{multidimensionalInfo:i}=null!==(t=this.rasterInfo)&&void 0!==t?t:{};if((0,l.$I)(i))return e;let r=e.multidimensionalDefinition||this.multidimensionalDefinition;!(0,l.$I)(r)&&r.length||(r=(0,O.fy)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const s=e.timeExtent||this.timeExtent;if((0,l.Ru)(r)&&(0,l.Ru)(s)&&((0,l.Ru)(s.start)||(0,l.Ru)(s.end))){var a;r=r.map((e=>e.clone()));const t=null===(a=i.variables.find((e=>{let{name:t}=e;return t===r[0].variableName})))||void 0===a||null===(a=a.dimensions)||void 0===a?void 0:a.find((e=>{let{name:t}=e;return"StdTime"===t})),o=r.find((e=>{let{dimensionName:t}=e;return"StdTime"===t}));if(!t||!o)return(0,n.A)((0,n.A)({},e),{},{multidimensionalDefinition:null});const{start:c,end:u}=s,h=(0,l.$I)(c)?null:c.getTime(),d=(0,l.$I)(u)?null:u.getTime(),f=null!==h&&void 0!==h?h:d,m=null!==d&&void 0!==d?d:h;if((0,l.Ru)(t.values)){const e=t.values.filter((e=>{if(Array.isArray(e)){if(f===m)return e[0]<=f&&e[1]>=f;const t=e[0]<=f&&e[1]>f||e[0]<m&&e[1]>=m,i=e[0]>=f&&e[1]<=m||e[0]<f&&e[1]>m;return t||i}return f===m?e===f:e>=f&&e<=m}));if(e.length){const t=e.sort(((e,t)=>{var i,n,r,s;return f===m?(null!==(i=e[0])&&void 0!==i?i:e)-(null!==(n=t[0])&&void 0!==n?n:t):Math.abs((null!==(r=e[1])&&void 0!==r?r:e)-m)-Math.abs((null!==(s=t[1])&&void 0!==s?s:t)-m)}))[0];o.values=[t]}else r=null}else if(t.hasRegularIntervals&&t.extent){const[e,i]=t.extent;f>i||m<e?r=null:o.values=f===m?[f]:[Math.max(e,f),Math.min(i,m)]}}return(0,l.Ru)(r)&&(0,O.sx)(r,this.multidimensionalSubset)?(0,n.A)((0,n.A)({},e),{},{multidimensionalDefinition:null}):(0,n.A)((0,n.A)({},e),{},{multidimensionalDefinition:r})}async updateRenderer(){const{loaded:e,symbolizer:t}=this;if(!e||!t)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const i=this._rasterJobHandler.instance;i&&(t.rendererJSON=(0,j.$P)(this.renderer.toJSON()),t.bind(),await i.updateSymbolizer(t),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){var i;const r=e&&e.pixelBlock;if(!((0,l.Ru)(r)&&r.pixels&&r.pixels.length>0))return null;let s;await this.updateRenderer();const a=this._rasterJobHandler.instance,o=null!==(i=this.bandIds)&&void 0!==i?i:[];return s=a?await a.symbolize((0,n.A)((0,n.A)({},e),{},{simpleStretchParams:t,bandIds:o})):this.symbolizer.symbolize((0,n.A)((0,n.A)({},e),{},{simpleStretchParams:t,bandIds:o})),s}getTileUrl(e,t,i){var n;return"RasterTileServer"===(null===(n=this.raster)||void 0===n?void 0:n.datasetFormat)?"".concat(this.url,"/tile/").concat(e,"/").concat(t,"/").concat(i):""}getCompatibleTileInfo(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!this.loaded||(0,l.$I)(t))return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const n=(0,b.Vp)(e);return k.A.create({size:256,spatialReference:e,origin:n?{x:n.origin[0],y:n.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,r){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(i(this),s.requestAsImageElement){const i=this.getTileUrl(e,t,r);return(0,w.default)(i,{responseType:"image",query:(0,n.A)((0,n.A)({},this.refreshParameters),this.raster.ioConfig.customFetchParameters),signal:s.signal}).then((e=>e.data))}if((0,l.Ru)(this.rasterInfo.multidimensionalInfo)&&(s=this.normalizeRasterFetchOptions(s),(0,l.$I)(s.multidimensionalDefinition))){const i=s.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,r,i),pixelBlock:null}}return await this._initJobHandler(),await this._updateRasterFunction(),"raster-shaded-relief"===this.renderer.type&&(s=(0,n.A)((0,n.A)({},s),{},{buffer:{cols:1,rows:1}})),this.raster.fetchTile(e,t,r,s)}async fetchPixels(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return(0,l.Ru)(this.rasterInfo.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),(0,l.$I)(n.multidimensionalDefinition))?{extent:e,pixelBlock:null}:(await this._initJobHandler(),await this._updateRasterFunction(),this.raster.fetchPixels(e,t,i,n))}async identify(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return i(this),!(0,l.Ru)(this.rasterInfo.multidimensionalInfo)||this.rasterInfo.hasMultidimensionalTranspose&&((0,O.DY)(t.multidimensionalDefinition)||t.transposedVariableName||t.timeExtent)||(t=this.normalizeRasterFetchOptions(t),!(0,l.$I)(t.multidimensionalDefinition))?this.raster.identify(e,t):{location:e,value:null}}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var e,t,i;const n=null===(e=this.rasterInfo)||void 0===e?void 0:e.multidimensionalInfo;if((0,l.$I)(n)||"standard-time"!==(null===(t=this.rasterInfo)||void 0===t?void 0:t.dataType))return!1;const r=this.multidimensionalDefinition,s=null===r||void 0===r||null===(i=r[0])||void 0===i?void 0:i.variableName;return n.variables.some((e=>e.name===s&&(!(null!==r&&void 0!==r&&r[0].dimensionName)||e.dimensions.some((e=>"StdTime"===e.name)))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(e){const t=null!==e&&void 0!==e?e:this.rasterInfo.multidimensionalInfo;return(0,O.z2)(this.multidimensionalSubset,t)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=(0,O.fy)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new M.A;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{i(this),this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer(),"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler()})).catch((()=>{})),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){var e;i(this);const t=(0,j.w6)(this.rasterInfo,this.raster.tileType,null===(e=this.sourceJSON)||void 0===e?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultRenderer(){i(this);const e=this.raster.rasterInfo;if(this.bandIds||(this.bandIds=(0,j.ci)(e)),!this.renderer){var t,n,r,s,a;const i=(0,j.PD)(e,{bandIds:this.bandIds,variableName:(0,l.Ru)(this.multidimensionalDefinition)?null===(t=this.multidimensionalDefinition[0])||void 0===t?void 0:t.variableName:null});"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===i.type&&((null!==(n=null===(r=e.statistics)||void 0===r?void 0:r[0].max)&&void 0!==n?n:0)>1e24||(null!==(s=null===(a=e.statistics)||void 0===a?void 0:a[0].min)&&void 0!==s?s:0)<-1e24)&&(i.dynamicRangeAdjustment=!0,i.statistics=null,"none"===i.stretchType&&(i.stretchType="min-max")),this.renderer=i}this.symbolizer?(this.symbolizer.rendererJSON=(0,j.$P)(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new U.A({rendererJSON:this.renderer.toJSON(),rasterInfo:e});const o=this.symbolizer.bind();o.success||Y.warn("imagery-tile-mixin",o.error||"The given renderer is not supported by the layer.")}async _updateRasterFunction(){var e;if("imagery-tile"!==this.type||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;let t=this.raster;if("Function"===(null===(e=t)||void 0===e?void 0:e.datasetFormat)){const e=t.rasterFunction.getPrimaryRasters();t=e.rasters[0]}const{rasterFunction:i}=this;if(i){var n;const e=(0,G.vt)(i.toJSON(),{raster:t}),r=new q({rasterFunction:e});r.rasterJobHandler=this._rasterJobHandler.instance,await r.open(),this._cachedRasterFunctionJson=null===(n=this.rasterFunction)||void 0===n?void 0:n.toJSON(),this.raster=r}else this.raster=t}};function i(e){if(!e.raster||!e.rasterInfo)throw new o.A("imagery-tile","no raster")}return(0,r._)([(0,d.MZ)()],t.prototype,"_cachedRendererJson",void 0),(0,r._)([(0,d.MZ)()],t.prototype,"_cachedRasterFunctionJson",void 0),(0,r._)([(0,d.MZ)()],t.prototype,"_compatibleFullExtent",void 0),(0,r._)([(0,d.MZ)()],t.prototype,"_rasterJobHandler",void 0),(0,r._)([(0,d.MZ)()],t.prototype,"bandIds",void 0),(0,r._)([(0,d.MZ)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],t.prototype,"copyright",void 0),(0,r._)([(0,d.MZ)({json:{read:!1}})],t.prototype,"fullExtent",null),(0,r._)([(0,d.MZ)()],t.prototype,"interpolation",void 0),(0,r._)([(0,d.MZ)()],t.prototype,"ioConfig",void 0),(0,r._)([(0,d.MZ)({type:[S.A]})],t.prototype,"multidimensionalDefinition",void 0),(0,r._)([(0,d.MZ)({type:A.A,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,r._)([(0,d.MZ)()],t.prototype,"raster",void 0),(0,r._)([(0,d.MZ)({type:T.A})],t.prototype,"rasterFunction",void 0),(0,r._)([(0,d.MZ)()],t.prototype,"rasterInfo",null),(0,r._)([(0,d.MZ)()],t.prototype,"sourceJSON",void 0),(0,r._)([(0,d.MZ)({json:{read:!1}})],t.prototype,"spatialReference",null),(0,r._)([(0,d.MZ)({json:{read:!1}})],t.prototype,"tileInfo",null),(0,r._)([(0,d.MZ)(R.OZ)],t.prototype,"url",null),(0,r._)([(0,d.MZ)({types:a.uy})],t.prototype,"renderer",null),(0,r._)([(0,d.MZ)()],t.prototype,"symbolizer",void 0),t=(0,r._)([(0,y.$)("esri.layers.ImageryTileMixin")],t),t};var K=i(11270),Q=i(94729),ee=i(21617),te=i(5682),ie=i(78817),ne=i(44135),re=i(58646),se=i(41882),ae=i(50611);function oe(e){const t=e.fields,i=e.records,n=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",r=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=r.map((e=>e.name)),a=[];let o=0,l=0;return i.forEach((e=>{const t={};for(t[n]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:r,features:a}}class le{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const n=t.getUint32(4,!0),r=t.getUint16(8,!0),s=t.getUint16(10,!0),a={version:i,recordCount:n,headerByteCount:r,recordByteCount:s};let o=32;const l=[],c=[];let u;if(3===i){for(;13!==t.getUint8(o);)u=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,ae.w)(new Uint8Array(e,o,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<n&&e.byteLength-o>s;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)i.push((0,ae.w)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const n=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(n.substring(0,4),10),parseInt(n.substring(4,6),10)-1,parseInt(n.substring(6,8),10)))}o+=t.length})),c.push(i)):o+=s}}return{header:a,fields:l,records:c,recordSet:oe({fields:l,records:c})}}}var ce=i(31650),ue=i(77725);const he=new Map;he.set("int16","esriFieldTypeSmallInteger"),he.set("int32","esriFieldTypeInteger"),he.set("int64","esriFieldTypeInteger"),he.set("float32","esriFieldTypeSingle"),he.set("float64","esriFieldTypeDouble"),he.set("text","esriFieldTypeString");let de=class extends W{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null===e||void 0===e?void 0:e.signal});if(!this._validateHeader(t))throw new o.A("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:n}=this._parseHeader(t);if("thematic"===n.dataType){const e=await this._fetchAuxiliaryInformation();n.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",n),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{transposeInfo:r}=this.rasterInfo.storageInfo,{transposedVariableName:s}=n,a=!(!r||!s),o=a?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(o<0)return null;const l=this._buildCacheFilePath(o,t,i,n.multidimensionalDefinition,s),c=this._getIndexRecordFromBundle(t,i,a),u=await this.request(l,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:n.signal});if(!u)return null;const h=new Uint8Array(u.data),d=this._getTileEndAndContentType(h,c);if(0===d.recordSize)return null;const f=await this.request(l,{range:{from:d.position,to:d.position+d.recordSize},responseType:"array-buffer",signal:n.signal});if(!f)return null;const[m,p]=this._getTileSize(a);return this.decodePixelBlock(f.data,{width:m,height:p,planes:null,pixelType:null,returnInterleaved:a})}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){var t,i;const n=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:r,histograms:s,colormap:a,blockWidth:o,blockHeight:l,firstPyramidLevel:c,maximumPyramidLevel:u}=e,h=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),d=e.extent.spatialReference,f=null===(t=e.geodataXform)||void 0===t?void 0:t.spatialReference,m=new V.A(null!==d&&void 0!==d&&d.wkid||null!==d&&void 0!==d&&d.wkt?d:f);let p=new L.A({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:m});const y=new J.A({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:m}),g=Math.round((p.xmax-p.xmin)/y.x),v=Math.round((p.ymax-p.ymin)/y.y),x=this._parseTransform(e.geodataXform),w=x?p:null;x&&(p=x.forwardTransform(p),y.x=(p.xmax-p.xmin)/g,y.y=(p.ymax-p.ymin)/v);const I=null!==(i=e.properties)&&void 0!==i?i:{},b=e.format.toLowerCase().replace("cache/",""),_=new J.A(e.origin.x,e.origin.y,m);let R,S,A,T;if(a&&a.colors)for(R=[],S=0;S<a.colors.length;S++)A=a.colors[S],T=a.values?a.values[S]:S,R.push([T,255&A,A<<16>>>24,A<<8>>>24,A>>>24]);const M=e.LODInfos,C=[];for(S=0;S<M.levels.length;S++)C.push({level:M.levels[S],resolution:M.resolutions[S],scale:96/.0254*M.resolutions[S]});const P=new k.A({dpi:96,lods:C,format:b,origin:_,size:[o,l],spatialReference:m}),O={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},D=[{maxCol:Math.ceil(g/o)-1,maxRow:Math.ceil(v/l)-1,minCol:0,minRow:0}];let B=2;if(u>0)for(S=0;S<u;S++)D.push({maxCol:Math.ceil(g/B/o)-1,maxRow:Math.ceil(v/B/l)-1,minCol:0,minRow:0}),B*=2;const z=e.mdInfo;let N=null;if(z&&I._yxs){const e=I._yxs;N={packetSize:e.PacketSize,tileSize:[e.TileXSize,e.TileYSize]}}return{storageInfo:O,rasterInfo:new se.A({width:g,height:v,pixelType:n,bandCount:r,extent:p,nativeExtent:w,transform:x,spatialReference:m,pixelSize:y,keyProperties:I,statistics:h,histograms:s,multidimensionalInfo:z,colormap:R,storageInfo:new F.A({blockWidth:o,blockHeight:l,pyramidBlockWidth:o,pyramidBlockHeight:l,origin:_,tileInfo:P,transposeInfo:N,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:D})})}}_parseTransform(e){var t,i;if(!(0,ce.J)(e))throw new o.A("cloudraster:open","the data contains unsupported geodata transform types");const n=(0,ce.l)(e);if("identity"===n.type)return null;if("polynomial"!==n.type||null===(t=n.forwardCoefficients)||void 0===t||!t.length||null===(i=n.inverseCoefficients)||void 0===i||!i.length)throw new o.A("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return n}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),n=await Promise.all([t,i]);let r;if(n[0]){let e=n[0].fields;const t=n[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":he.get(e.type),name:e.name,alias:e.alias||e.name})));const i=t.map((e=>({attributes:e})));e&&t&&(r={fields:e,features:i})}}return!r&&n[1]&&(r=le.parse(n[1]).recordSet),ue.default.fromJSON(r)}_buildCacheFilePath(e,t,i,n,r){const s=this._getPackageSize(!!r),a=Math.floor(t/s)*s,o=Math.floor(i/s)*s,c="R"+this._toHexString4(a)+"C"+this._toHexString4(o);let u="L";u+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:h}=this.rasterInfo,d=null===n||void 0===n?void 0:n[0];if((0,l.$I)(h)||!d)return"".concat(this.url,"/_alllayers/").concat(u,"/").concat(c,".bundle");let f="_yxs";if(!r){f=h.variables.find((e=>e.name===d.variableName)).dimensions[0].values.indexOf(d.values[0]).toString(16);const e=4-f.length;for(let t=0;t<e;t++)f="0"+f;f="S"+f}const m=this._getVariableFolderName(r||d.variableName);return"".concat(this.url,"/_alllayers/").concat(m,"/").concat(f,"/").concat(u,"/").concat(c,".bundle")}_getPackageSize(){var e;let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const{transposeInfo:i}=this.rasterInfo.storageInfo;return t&&(0,l.Ru)(i)?null!==(e=i.packetSize)&&void 0!==e?e:0:this.storageInfo.packetSize}_getTileSize(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const{storageInfo:t}=this.rasterInfo,{transposeInfo:i}=t;return e&&(0,l.Ru)(i)?i.tileSize:t.tileInfo.size}_getVariableFolderName(e){return""===(e=e.trim())?"_v":e.replace(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=this._getPackageSize(i),r=n*(e%n)+t%n;if(r<0)throw"Invalid level / row / col";return 20+r*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let n,r=0;for(n=0;n<5;n++)r|=(255&i[n])<<8*n;const s=0xffffffffff&r;for(r=0,n=5;n<8;n++)r|=(255&i[n])<<8*(n-5);return{position:s,recordSize:0xffffffffff&r}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};(0,r._)([(0,d.MZ)({readOnly:!0})],de.prototype,"storageInfo",void 0),(0,r._)([(0,d.MZ)({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),de=(0,r._)([(0,y.$)("esri.layers.support.rasterDatasets.CloudRaster")],de);const fe=de;var me=i(81806),pe=i(86866);let ye=class extends W{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}async open(e){var t,i;await this.init();const n=this.data,{pixelBlock:r,statistics:s,histograms:a,name:o,keyProperties:l,nativeExtent:c,transform:u}=this.data,{width:h,height:d,pixelType:f}=r,m=null!==(t=n.extent)&&void 0!==t?t:new L.A({xmin:-.5,ymin:.5,xmax:h-.5,ymax:d-.5,spatialReference:new V.A({wkid:3857})}),p=null!==(i=n.isPseudoSpatialReference)&&void 0!==i?i:!n.extent,y={x:m.width/h,y:m.height/d},g=new se.A({width:h,height:d,pixelType:f,extent:m,nativeExtent:c,transform:u,pixelSize:y,spatialReference:m.spatialReference,bandCount:3,keyProperties:l||{},statistics:s,isPseudoSpatialReference:p,histograms:a});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(r,{width:512,height:512},e),this.datasetName=o,this.url="/InMemory/"+o}fetchRawTile(e,t,i){const n=this._pixelBlockTiles.get("".concat(e,"/").concat(t,"/").concat(i));return Promise.resolve(n)}async _buildInMemoryRaster(e,t,i){var n,r;const s=this.rasterInfo.storageInfo.maximumPyramidLevel,a=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:s},i):Promise.resolve((0,z.lD)(e,t,s)),c=(0,l.Ru)(this.rasterInfo.statistics),h=(0,l.Ru)(this.rasterInfo.histograms),d=c?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve((0,pe.f4)(e)),f=await(0,u.Lx)([a,d]);if(!f[0].value&&f[1].value)throw new o.A("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=f[0].value,c||(this.rasterInfo.statistics=null===(n=f[1].value)||void 0===n?void 0:n.statistics),h||(this.rasterInfo.histograms=null===(r=f[1].value)||void 0===r?void 0:r.histograms)}};(0,r._)([(0,d.MZ)({type:String,json:{write:!0}})],ye.prototype,"datasetFormat",void 0),(0,r._)([(0,d.MZ)()],ye.prototype,"data",void 0),ye=(0,r._)([(0,y.$)("esri.layers.support.rasterDatasets.InMemoryRaster")],ye);const ge=ye;function ve(e,t){if(!e||!t)return[];let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=[];if(t){const r=ve(e,i);for(let e=0;e<r.length;e++)ve(r[e],t).forEach((e=>n.push(e)));return n}const r=e.getElementsByTagNameNS("*",i);if(!r||0===r.length)return[];for(let s=0;s<r.length;s++)n.push(r[s]||r.item[s]);return n}function xe(e,t){if(!e||!t)return null;let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=ve(e,i);return n.length>0?t?xe(n[0],t):n[0]:null}function we(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const i=t?xe(e,t):e;let n;return i?(n=i.textContent||i.nodeValue,n?n.trim():null):null}function Ie(e,t){return function(e,t){const i=ve(e,t),n=[];let r;for(let s=0;s<i.length;s++)r=i[s].textContent||i[s].nodeValue,r&&(r=r.trim(),""!==r&&n.push(r));return n}(e,t).map((e=>Number(e)))}function be(e,t){const i=we(e,t);return Number(i)}function _e(e,t){var i;const n=null===e||void 0===e||null===(i=e.nodeName)||void 0===i?void 0:i.toLowerCase(),r=t.toLowerCase();return n.slice(n.lastIndexOf(":")+1)===r}var Re=i(29754);function Se(e,t){if(!e||!t)return null;const i=[];for(let n=0;n<e.length;n++)i.push(e[n]),i.push(t[n]);return i}function Ae(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new V.A({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.indexOf("VERTCS"),n=e.indexOf("PROJCS"),r=n>-1?n:e.indexOf("GEOGCS");if(-1===r)return null;const s=e.slice(r,e.lastIndexOf("]",i)+1).trim(),a=e.slice(i,e.lastIndexOf("]")).trim();t=Te(s);const o=new V.A(t?{wkid:t}:{wkt:s}),l=Te(a);return l&&(o.vcsWkid=l),o}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=Te(e),new V.A(0!==t?{wkid:t}:{wkt:e})):null}function Te(e){var t;const i=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),n=i[i.length-1].split(","),r=null===(t=n[0])||void 0===t?void 0:t.toLowerCase();if(("epsg"===r||"esri"===r)&&e.endsWith('"]]')){const e=Number(n[1]);if(!isNaN(e)&&0!==e)return e}return 0}function Me(e){var t;if("pamdataset"!==(null===e||void 0===e||null===(t=e.documentElement.tagName)||void 0===t?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(_e(e,"SRS")){if(!i.spatialReference){const t=we(e);i.spatialReference=Ae(t)}}else if(_e(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:n}=function(e){var t;const i=xe(e,"GeodataXform"),n=Ae(be(i,"SpatialReference/WKID")||we(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:n,transform:null};const r=null!==(t=be(i,"PolynomialOrder"))&&void 0!==t?t:1,s=Ie(i,"CoeffX/Double"),a=Ie(i,"CoeffY/Double"),o=Ie(i,"InverseCoeffX/Double"),l=Ie(i,"InverseCoeffY/Double"),c=Se(s,a),u=Se(o,l);return{spatialReference:n,transform:c&&u&&c.length&&u.length?new Re.A({spatialReference:n,polynomialOrder:r,forwardCoefficients:c,inverseCoefficients:u}):null}}(e);i.transform=n,i.spatialReference||(i.spatialReference=t)}else ve(e,"MDI").forEach((e=>i.metadata[e.getAttribute("key")]=we(e)));else if(_e(e,"PAMRasterBand")){const t=function(e){var t;const i=be(e,"NoDataValue"),n=xe(e,"Histograms/HistItem"),r=be(n,"HistMin"),s=be(n,"HistMax"),a=be(n,"BucketCount"),o=null===(t=we(n,"HistCounts"))||void 0===t?void 0:t.split("|").map((e=>Number(e)));let l,c,u,h;ve(e,"Metadata/MDI").forEach((e=>{var t;const i=Number(null!==(t=e.textContent)&&void 0!==t?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":c=i;break;case"STATISTICS_MEAN":u=i;break;case"STATISTICS_STDDEV":h=i}}));const d=be(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!==o&&void 0!==o&&o.length&&null!=r&&null!=s?{min:r,max:s,size:a||o.length,counts:o}:null,sourceBandIndex:d,statistics:null!=l&&null!=c?{min:l,max:c,avg:u,stddev:h}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}}));const n=i.rasterBands;if(n.length){const e=!!n[0].statistics;i.statistics=e?n.map((e=>e.statistics)).filter(l.Ru):null;const t=!!n[0].histogram;i.histograms=t?n.map((e=>e.histogram)).filter(l.Ru):null}return i}let ke=class extends W{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:n,histograms:r,transform:s}=await this._fetchAuxiliaryData(e);const a=!i;a&&(i=new V.A({wkid:3857})),(null===r||void 0===r?void 0:r.length)&&null==n&&(n=(0,pe.Pg)(r));const{width:o,height:l}=t;let c=new L.A({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const u=s?s.forwardTransform(c):c;let h=!0;if(s){const e=s.forwardCoefficients;h=e&&0===e[1]&&0===e[2],h&&(s=null,c=u)}const d=new ge({data:{extent:u,nativeExtent:c,transform:s,pixelBlock:t,statistics:n,histograms:r,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await d.open(),d.data=null,this._set("rasterInfo",d.rasterInfo),this._inMemoryRaster=d}fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this._inMemoryRaster.fetchRawTile(e,t,i,n)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null===e||void 0===e?void 0:e.signal}),i=(0,B.g)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new o.A("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);const n=i.toLowerCase(),r="gif"===n||"bmp"===n||!(0,me.A)("ios");return await this.decodePixelBlock(t,{format:n,useCanvas:r,hasNoZlibMask:!0})}async _fetchAuxiliaryData(e){var t,i;const n=(0,l.oA)(null===e||void 0===e?void 0:e.signal),r=null!==(t=this.ioConfig.skipExtensions)&&void 0!==t?t:[],s=r.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:n}),a=this.datasetFormat,o="JPG"===a?"jgw":"PNG"===a?"pgw":"BMP"===a?"bpw":null,c=o&&r.includes(o)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+o,{responseType:"text",signal:n}),h=await(0,u.Lx)([s,c]);if(null!==n&&void 0!==n&&n.aborted)throw(0,u.NK)();const d=Me(null===(i=h[0].value)||void 0===i?void 0:i.data);if(!d.transform){const e=h[1].value?h[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;d.transform=6===(null===e||void 0===e?void 0:e.length)?new Re.A({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return d}};(0,r._)([(0,d.MZ)({type:String,json:{write:!0}})],ke.prototype,"datasetFormat",void 0),ke=(0,r._)([(0,y.$)("esri.layers.support.rasterDatasets.ImageAuxRaster")],ke);const Ce=ke;var Pe=i(90534),Fe=i(50977),Oe=i(79941),De=i(26855),Be=i(25213);let ze=class extends W{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(e){var t,i,n,r;await this.init();const s=e&&e.signal,a=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:s});a.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const c=a.data;if(this.sourceJSON=c,!c)throw new o.A("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!c.tileInfo)throw new o.A("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=c.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].includes(c.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===c.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=null!==(t=null===(i=c.name)||void 0===i?void 0:i.slice(c.name.indexOf("/")+1))&&void 0!==t?t:"";const u=await this._fetchRasterInfo({signal:s});if((0,l.$I)(u))throw new o.A("image-server-raster:open","cannot initialize image service");const h="Map"===this.tileType?(0,Fe.i)(c.tileInfo,c):k.A.fromJSON(c.tileInfo);(0,l.Lw)(h);const[d,f]=this._computeMinMaxLOD(u,h),{extent:m,pixelSize:p}=u,y=.5/u.width*p.x,g=Math.max(p.x,p.y),{lods:v}=h;("Map"!==this.tileType&&0!==c.maxScale||Math.abs(p.x-p.y)>y||!v.some((e=>Math.abs(e.resolution-g)<y)))&&(p.x=p.y=d.resolution,u.width=Math.ceil((m.xmax-m.xmin)/p.x-.1),u.height=Math.ceil((m.ymax-m.ymin)/p.y-.1));const x=d.level-f.level,[w,I]=h.size,b=[];v.forEach((e=>{e.level>=f.level&&e.level<=d.level&&b.push({x:e.resolution,y:e.resolution})})),b.sort(((e,t)=>e.x-t.x));const _=this.computeBlockBoundary(m,w,I,h.origin,b,x),R=b.length>1?b.slice(1):null;let S;if(c.transposeInfo&&(S={tileSize:[c.transposeInfo.rows,c.transposeInfo.cols],packetSize:null!==(n=null===(r=u.keyProperties)||void 0===r?void 0:r._yxs.PacketSize)&&void 0!==n?n:0}),u.storageInfo=new F.A({blockWidth:h.size[0],blockHeight:h.size[1],pyramidBlockWidth:h.size[0],pyramidBlockHeight:h.size[1],pyramidResolutions:R,compression:h.format,origin:h.origin,firstPyramidLevel:1,maximumPyramidLevel:x,tileInfo:h,transposeInfo:S,blockBoundary:_}),this._fixGCSShift(u),this._set("rasterInfo",u),c.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:u.storageInfo.tileInfo,parsedUrl:(0,Pe.An)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Oe.d({layer:e})}}async fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{storageInfo:r,extent:s}=this.rasterInfo,{transposeInfo:a}=r,o=(0,l.Ru)(a)&&!!n.transposedVariableName;if(this._slices&&!o&&null==n.sliceId)return null;const c=o?0:r.maximumPyramidLevel-e+this._levelOffset,u="".concat(this.url,"/tile/").concat(c,"/").concat(t,"/").concat(i),h=this._slices?o?{variable:n.transposedVariableName}:{sliceId:n.sliceId||0}:null,{data:d}=await this.request(u,{query:h,responseType:"array-buffer",signal:n.signal});if(!d)return null;const f=o?a.tileSize:r.tileInfo.size,m=await this.decodePixelBlock(d,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:o}),p=r.blockBoundary[e];if("jpg"!==r.compression||i>p.minCol&&i<p.maxCol&&t>p.minRow&&t<p.maxRow)return m;const{origin:y,blockWidth:g,blockHeight:v}=r,{x:x,y:w}=this.getPyramidPixelSize(e),I=Math.round((s.xmin-y.x)/x)%g,b=Math.round((s.xmax-y.x)/x)%g||g,_=Math.round((y.y-s.ymax)/w)%v,R=Math.round((y.y-s.ymin)/w)%v||v,S=i===p.minCol?I:0,A=t===p.minRow?_:0,T=i===p.maxCol?b:g,M=t===p.maxRow?R:v;return(0,z.z$)(m,{x:S,y:A},{width:T-S,height:M-A}),m}getSliceIndex(e){if(!this._slices||(0,l.$I)(e)||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));return!i||(Array.isArray(e.values[0])?"".concat(e.values[0][0],"-").concat(e.values[0][1]):e.values[0])!==(Array.isArray(i.values[0])?"".concat(i.values[0][0],"-").concat(i.values[0][1]):i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.statistics})),n=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.histograms})),r=await Promise.all([i,n]);return r[0]&&r[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,(0,l.oA)(t.datumTransformation));if(null===i)return null;let n=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let s=r-n+this._levelOffset;const a=i.srcLocation;for(;s>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(s,i.row,i.col,t))break}catch(o){}if(s--,n++,i=this.identifyPixelLocation(a,n,(0,l.oA)(t.datumTransformation)),null===i)return null}return-1===s||null==i?null:n}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),n=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),r=V.A.fromJSON(t.spatialReference||e.spatialReference),s=new J.A({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r});return new se.A({width:i,height:n,bandCount:3,extent:L.A.fromJSON(e),spatialReference:r,pixelSize:s,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,n=(0,Be.T)(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),r=t.hasMultidimensions?this.request("".concat(this.url,"/slices"),{query:{f:"json"},signal:i}).then((e=>e.data&&e.data.slices)).catch((()=>null)):null,s=await Promise.all([n,r]);return this._slices=s[1],s[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&(null===i||void 0===i?void 0:i.wkid)&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new De.A,e.extent=e.transform.forwardTransform(t))}_computeMinMaxLOD(e,t){var i,n;const{pixelSize:r}=e,s=.5/e.width*r.x,{lods:a}=t,o=t.lodAt(Math.max.apply(null,a.map((e=>e.level)))),l=t.lodAt(Math.min.apply(null,a.map((e=>e.level)))),{tileType:c}=this;if("Map"===c)return this._levelOffset=a[0].level,[o,l];var u;if("Raster"===c)return[null!==(u=a.find((e=>e.resolution===r.x)))&&void 0!==u?u:o,l];const{minScale:h,maxScale:d}=this.sourceJSON;let f=o;d>0&&(f=a.find((e=>Math.abs(e.scale-d)<s)),f||(f=null!==(i=a.filter((e=>e.scale>d)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])&&void 0!==i?i:o));let m=l;return h>0&&(m=null!==(n=a.find((e=>Math.abs(e.scale-h)<s)))&&void 0!==n?n:l,this._levelOffset=m.level-l.level),[f,m]}};(0,r._)([(0,d.MZ)({type:String,json:{write:!0}})],ze.prototype,"datasetFormat",void 0),(0,r._)([(0,d.MZ)()],ze.prototype,"tileType",void 0),ze=(0,r._)([(0,y.$)("esri.layers.support.rasterDatasets.ImageServerRaster")],ze);const Ne=ze;var Ee=i(4081),Le=i(10798);const Je=new Map;Je.set("Int8","s8"),Je.set("UInt8","u8"),Je.set("Int16","s16"),Je.set("UInt16","u16"),Je.set("Int32","s32"),Je.set("UInt32","u32"),Je.set("Float32","f32"),Je.set("Float64","f32"),Je.set("Double64","f32");const He=new Map;He.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),He.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),He.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),He.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let We=class extends W{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?(0,l.oA)(e.signal):null,n=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:r,files:s}=this._parseHeader(n.data);if(-1===(null===(t=this.ioConfig.skipExtensions)||void 0===t?void 0:t.indexOf("aux.xml"))){var a;const t=await this._fetchAuxiliaryData(e);null!=t&&(r.statistics=null!==(a=t.statistics)&&void 0!==a?a:r.statistics,r.histograms=t.histograms,t.histograms&&(0,l.$I)(r.statistics)&&(r.statistics=(0,pe.Pg)(t.histograms)))}this._set("rasterInfo",r),this._files=s;const o=await this.request(s.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(o.data);const{blockWidth:c,blockHeight:u}=this.rasterInfo.storageInfo,h=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:d,height:f}=this.rasterInfo,m=[],p=this._getBandSegmentCount();let y=0,g=-1;for(;y<this._storageIndex.length;){g++;const e=Math.ceil(d/c/h**g)-1,t=Math.ceil(f/u/h**g)-1;y+=(e+1)*(t+1)*p*4,m.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=m,g>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=g),this.updateTileInfo()}async fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{blockWidth:r,blockHeight:s,blockBoundary:a}=this.rasterInfo.storageInfo,o=a[e];if(!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i)return null;const{bandCount:c,pixelType:u}=this.rasterInfo,{ranges:h,actualTileWidth:d,actualTileHeight:f}=this._getTileLocation(e,t,i);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){const e=new Uint8Array(r*s);return new Ee.A({width:r,height:s,pixels:null,mask:e,validPixelCount:0})}const{bandIds:m}=this.ioConfig,p=this._getBandSegmentCount(),y=[];let g=0;for(g=0;g<p;g++)(!m||m.indexOf[g]>-1)&&y.push(this.request(this._files.data,{range:{from:h[g].from,to:h[g].to},responseType:"array-buffer",signal:n.signal}));const v=await Promise.all(y),x=v.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),w=new Uint8Array(x);let I=0;for(g=0;g<p;g++)w.set(new Uint8Array(v[g].data),I),I+=v[g].data.byteLength;const b=He.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=await this.decodePixelBlock(w.buffer,{width:r,height:s,format:b,planes:(null===m||void 0===m?void 0:m.length)||c,pixelType:u});if((0,l.Ru)(this.rasterInfo.noDataValue)&&"lerc"!==b&&!_.mask){const e=this.rasterInfo.noDataValue[0];if(null!=e){const t=_.width*_.height,i=new Uint8Array(t);if(Math.abs(e)>1e24)for(g=0;g<t;g++)Math.abs((_.pixels[0][g]-e)/e)>1e-6&&(i[g]=1);else for(g=0;g<t;g++)_.pixels[0][g]!==e&&(i[g]=1);_.mask=i}}let R=0,S=0;if(d!==r||f!==s){let e=_.mask;if(e)for(g=0;g<s;g++)if(S=g*r,g<f)for(R=d;R<r;R++)e[S+R]=0;else for(R=0;R<r;R++)e[S+R]=0;else for(e=new Uint8Array(r*s),_.mask=e,g=0;g<f;g++)for(S=g*r,R=0;R<d;R++)e[S+R]=1}return _}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,n,r,s,a;if(Le.Z){for(i=new Uint8Array(e),r=new ArrayBuffer(e.byteLength),n=new Uint8Array(r),s=0;s<e.byteLength/4;s++)for(a=0;a<4;a++)n[4*s+a]=i[4*s+3-a];t=new Uint32Array(r)}else t=new Uint32Array(e);return t}_getBandSegmentCount(){return He.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:n,blockHeight:r,pyramidScalingFactor:s}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,h,d=0,f=0;for(h=0;h<e;h++)f=s**h,c=Math.ceil(a/n/f),u=Math.ceil(o/r/f),d+=c*u;f=s**e,c=Math.ceil(a/n/f),u=Math.ceil(o/r/f),d+=t*c+i,d*=4*l;const m=this._storageIndex.subarray(d,d+4*l);let p=0,y=0;const g=[];for(let v=0;v<l;v++)p=m[4*v+0]*2**32+m[4*v+1],y=p+m[4*v+2]*2**32+m[4*v+3],g.push({from:p,to:y});return{ranges:g,actualTileWidth:i<c-1?n:Math.ceil(a/f)-n*(c-1),actualTileHeight:t<u-1?r:Math.ceil(o/f)-r*(u-1)}}_parseHeader(e){const t=xe(e,"MRF_META/Raster");if(!t)throw new o.A("mrf:open","not a valid MRF format");const i=xe(t,"Size"),n=parseInt(i.getAttribute("x"),10),r=parseInt(i.getAttribute("y"),10),s=parseInt(i.getAttribute("c"),10),a=(we(t,"Compression")||"none").toLowerCase();if(!He.has(a))throw new o.A("mrf:open","currently does not support compression "+a);const l=we(t,"DataType")||"UInt8",c=Je.get(l);if(null==c)throw new o.A("mrf:open","currently does not support pixel type "+l);const u=xe(t,"PageSize"),h=parseInt(u.getAttribute("x"),10),d=parseInt(u.getAttribute("y"),10),f=xe(t,"DataValues");let m,p;if(f&&(p=f.getAttribute("NoData"),null!=p&&(m=p.trim().split(" ").map((e=>parseFloat(e))))),xe(e,"MRF_META/CachedSource"))throw new o.A("mrf:open","currently does not support MRF referencing other data files");const y=xe(e,"MRF_META/GeoTags"),g=xe(y,"BoundingBox");let v,x=!1;if(null!=g){var w;const e=parseFloat(g.getAttribute("minx")),t=parseFloat(g.getAttribute("miny")),i=parseFloat(g.getAttribute("maxx")),n=parseFloat(g.getAttribute("maxy")),r=we(y,"Projection")||"";let s=V.A.WGS84;if("LOCAL_CS[]"!==r)if(r.toLowerCase().startsWith("epsg:")){const e=Number(r.slice(5));isNaN(e)||0===e||(s=new V.A({wkid:e}))}else s=null!==(w=Ae(r))&&void 0!==w?w:V.A.WGS84;else x=!0,s=new V.A({wkid:3857});v=new L.A(e,t,i,n),v.spatialReference=s}else x=!0,v=new L.A({xmin:-.5,ymin:.5-r,xmax:n-.5,ymax:.5,spatialReference:new V.A({wkid:3857})});const I=xe(e,"MRF_META/Rsets"),b=parseInt(I&&I.getAttribute("scale")||"2",10),_=v.spatialReference,R=new F.A({origin:new J.A({x:v.xmin,y:v.ymax,spatialReference:_}),blockWidth:h,blockHeight:d,pyramidBlockWidth:h,pyramidBlockHeight:d,compression:a,pyramidScalingFactor:b}),S=new J.A({x:v.width/n,y:v.height/r,spatialReference:_}),A=new se.A({width:n,height:r,extent:v,isPseudoSpatialReference:x,spatialReference:_,bandCount:s,pixelType:c,pixelSize:S,noDataValue:m,storageInfo:R}),T=we(e,"datafile"),M=we(e,"IndexFile");return{rasterInfo:A,files:{mrf:this.url,index:M||this.url.replace(".mrf",".idx"),data:T||this.url.replace(".mrf",He.get(a).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null===e||void 0===e?void 0:e.signal});return Me(t)}catch(t){return null}}};(0,r._)([(0,d.MZ)()],We.prototype,"_files",void 0),(0,r._)([(0,d.MZ)()],We.prototype,"_storageIndex",void 0),(0,r._)([(0,d.MZ)({type:String,json:{write:!0}})],We.prototype,"datasetFormat",void 0),We=(0,r._)([(0,y.$)("esri.layers.support.rasterIO.MRFRaster")],We);const Ze=We;var qe=i(87018),Ge=i(48613);const je=(e,t)=>{var i;return null===(i=e.get(t))||void 0===i?void 0:i.values},Ue=(e,t)=>{var i;return null===(i=e.get(t))||void 0===i||null===(i=i.values)||void 0===i?void 0:i[0]};let $e=class extends W{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){await this.init();const t=e?(0,l.oA)(e.signal):null,{data:i}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:t});if(!i)throw new o.A("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:r,firstIFDPos:s,isBigTiff:a}=(0,qe.uT)(i),c=[];await this._readIFDs(c,i,r,s,0,a?8:4,t);const{imageInfo:u,rasterInfo:h}=this._parseIFDs(c);if(this._headerInfo=(0,n.A)({littleEndian:r,isBigTiff:a,ifds:c},u),this._set("rasterInfo",h),!u.isSupported)throw new o.A("tiffraster:open","this tiff is not supported: "+u.message);if(!u.tileWidth)throw new o.A("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const{skipExtensions:d=[]}=this.ioConfig;if(!d.includes("aux.xml")){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&this._processPAMInfo(t,h)}d.includes("vat.dbf")||1!==h.bandCount||"u8"!==h.pixelType||(h.attributeTable=await this._fetchAuxiliaryTable(e),(0,l.Ru)(h.attributeTable)&&(h.keyProperties.DataType="thematic")),this.updateTileInfo()}async fetchRawTile(e,t,i){var n;let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(null===(n=this._headerInfo)||void 0===n||!n.isSupported||this.isBlockOutside(e,t,i))return null;const s=this._getTileLocation(e,t,i);if(!s)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:c}=s,u=a.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:r.signal}))),h=await Promise.all(u),d=h.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),f=1===h.length?h[0].data:new ArrayBuffer(d),m=[0],p=[0];if(h.length>1){const e=new Uint8Array(f);for(let t=0,i=0;t<h.length;t++){const n=h[t].data;e.set(new Uint8Array(n),i),m[t]=i,i+=n.byteLength,p[t]=n.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),v=await this.decodePixelBlock(f,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:m,sizes:p},width:y,height:g,planes:null,pixelType:null});let x,w,I;if(o!==y||l!==g){let e=v.mask;if(e)for(x=0;x<g;x++)if(I=x*y,x<l)for(w=o;w<y;w++)e[I+w]=0;else for(w=0;w<y;w++)e[I+w]=0;else for(e=new Uint8Array(y*g),v.mask=e,x=0;x<l;x++)for(I=x*y,w=0;w<o;w++)e[I+w]=1}return v}_parseIFDs(e){var t,i;const r=(0,qe.uc)(e),{width:s,height:a,tileWidth:o,tileHeight:l,planes:c,pixelType:u,compression:h,firstPyramidLevel:d,maximumPyramidLevel:f,pyramidBlockWidth:m,pyramidBlockHeight:p,tileBoundary:y,affine:g,metadata:v}=r;let x=Ae((null===(t=r.extent.spatialReference)||void 0===t?void 0:t.wkt)||(null===(i=r.extent.spatialReference)||void 0===i?void 0:i.wkid)),w=!1;null==x&&(w=!0,x=new V.A({wkid:3857}));const I=new L.A((0,n.A)((0,n.A)({},r.extent),{},{spatialReference:x})),b=new J.A(I?{x:I.xmin,y:I.ymax,spatialReference:x}:{x:0,y:0}),_=new F.A({blockWidth:o,blockHeight:l,pyramidBlockWidth:m,pyramidBlockHeight:p,compression:h,origin:b,firstPyramidLevel:d,maximumPyramidLevel:f,blockBoundary:y}),R=new J.A({x:(I.xmax-I.xmin)/s,y:(I.ymax-I.ymin)/a,spatialReference:x}),S=v?{BandProperties:v.bandProperties,DataType:v.dataType}:{};let A=null;const T=Ue(e[0],"PHOTOMETRICINTERPRETATION"),M=je(e[0],"COLORMAP");if(3===T&&(null===M||void 0===M?void 0:M.length)>3&&M.length%3==0){A=[];const e=M.length/3;for(let t=0;t<e;t++)A.push([t,M[t]>>>8,M[t+e]>>>8,M[t+2*e]>>>8])}const k=new se.A({width:s,height:a,bandCount:c,pixelType:u,pixelSize:R,storageInfo:_,spatialReference:x,isPseudoSpatialReference:w,keyProperties:S,extent:I,colormap:A,statistics:v?v.statistics:null});return null!==g&&void 0!==g&&g.length&&(k.nativeExtent=new L.A({xmin:-.5,ymin:.5-a,xmax:s-.5,ymax:.5,spatialReference:x}),k.transform=new Re.A({polynomialOrder:1,forwardCoefficients:[g[2]+g[0]/2,g[5]-g[3]/2,g[0],g[3],-g[1],-g[4]]}),k.extent=k.transform.forwardTransform(k.nativeExtent),k.pixelSize=new J.A({x:(I.xmax-I.xmin)/s,y:(I.ymax-I.ymin)/a,spatialReference:x}),_.origin.x=-.5,_.origin.y=.5),{imageInfo:r,rasterInfo:k}}_processPAMInfo(e,t){var i;if(t.statistics=null!==(i=e.statistics)&&void 0!==i?i:t.statistics,t.histograms=e.histograms,e.histograms&&(0,l.$I)(t.statistics)&&(t.statistics=(0,pe.Pg)(e.histograms)),e.transform&&(0,l.$I)(t.transform)){t.transform=e.transform,t.nativeExtent=t.extent;const i=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new J.A({x:(i.xmax-i.xmin)/t.width,y:(i.ymax-i.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=i}t.spatialReference||(t.spatialReference=e.spatialReference)}async _readIFDs(e,t,i,n,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:4,a=arguments.length>6?arguments[6]:void 0;if(!n)return null;(n>=t.byteLength||n<0)&&(t=(await this.request(this.url,{range:{from:n+r,to:n+r+this._bufferSize},responseType:"array-buffer",signal:a})).data,r=n+r,n=0);const o=await this._readIFD(t,i,n,r,Ge.A.TIFF_TAGS,s,a);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,i,o.nextIFD-r,r,s,a)}async _readIFD(e,t,i,n){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ge.A.TIFF_TAGS,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:4,a=arguments.length>6?arguments[6]:void 0;if(!e)return null;const o=(0,qe.JM)(e,t,i,n,r,s);if(o.success){var c,u;const i=[];if(null!==(c=o.ifd)&&void 0!==c&&c.forEach((e=>{e.values||i.push(e)})),i.length>0){const r=i.map((e=>e.offlineOffsetSize)).filter(l.Ru),s=Math.min.apply(null,r.map((e=>e[0])));if(Math.min.apply(null,r.map((e=>e[0]+e[1])))-s<=this._bufferSize){const{data:r}=await this.request(this.url,{range:{from:s,to:s+this._bufferSize},responseType:"array-buffer",signal:a});e=r,n=s,i.forEach((i=>(0,qe.Cr)(e,t,i,n)))}}if(null!==(u=o.ifd)&&void 0!==u&&u.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),r=null===i||void 0===i?void 0:i.values;if(r&&r.length>4){const s=r[0]+"."+r[1]+"."+r[2],o=await this._readIFD(e,t,i.valueOffset+6-n,n,Ge.A.GEO_KEYS,2,a);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[s]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:n,to:n+o.requiredBufferSize+4},responseType:"array-buffer",signal:a});return(e=i.data).byteLength<o.requiredBufferSize?null:this._readIFD(e,t,0,n,Ge.A.TIFF_TAGS,4,a)}}_getTileLocation(e,t,i){var n;const{firstPyramidLevel:r,blockBoundary:s}=this.rasterInfo.storageInfo,a=0===e?0:e-(r-1),o=null===(n=this._headerInfo)||void 0===n?void 0:n.ifds[a];if(!o)return null;const l=(0,qe.XO)(o,this._headerInfo),c=je(o,"TILEOFFSETS");if(void 0===c)return null;const u=je(o,"TILEBYTECOUNTS"),{minRow:h,minCol:d,maxRow:f,maxCol:m}=s[a];if(t>f||i>m||t<h||i<d)return null;const p=Ue(o,"IMAGEWIDTH"),y=Ue(o,"IMAGELENGTH"),g=Ue(o,"TILEWIDTH"),v=Ue(o,"TILELENGTH"),x=l?this.rasterInfo.bandCount:1,w=x*t*(m+1)+i,I=[{from:c[w],to:c[w+x-1]+u[w+x-1]-1}];if(l){let e=!0;for(let t=0;t<x;t++)if(c[w+t]+u[w+t]!==c[w+t+1]){e=!1;break}if(!e)for(let t=0;t<x;t++)I[t]={from:c[w+t],to:c[w+t]+u[w+t]-1}}const b=c[w],_=u[w];return null==b||null==_?null:{ranges:I,ifd:o,actualTileWidth:i===m&&p%g||g,actualTileHeight:t===f&&y%v||v}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null===e||void 0===e?void 0:e.signal});return Me(t)}catch(t){return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:null===e||void 0===e?void 0:e.signal}),i=le.parse(t);return null!==i&&void 0!==i&&i.recordSet?ue.default.fromJSON(i.recordSet):null}catch(t){return null}}};(0,r._)([(0,d.MZ)()],$e.prototype,"_files",void 0),(0,r._)([(0,d.MZ)()],$e.prototype,"_headerInfo",void 0),(0,r._)([(0,d.MZ)()],$e.prototype,"_bufferSize",void 0),(0,r._)([(0,d.MZ)({type:String,json:{write:!0}})],$e.prototype,"datasetFormat",void 0),$e=(0,r._)([(0,y.$)("esri.layers.support.rasterDatasets.TIFFRaster")],$e);const Ve=$e,Ye=new Map;Ye.set("CRF",{desc:"Cloud Raster Format",constructor:fe}),Ye.set("MRF",{desc:"Meta Raster Format",constructor:Ze}),Ye.set("TIFF",{desc:"GeoTIFF",constructor:Ve}),Ye.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Ne}),Ye.set("JPG",{desc:"JPG Raster Format",constructor:Ce}),Ye.set("PNG",{desc:"PNG Raster Format",constructor:Ce}),Ye.set("GIF",{desc:"GIF Raster Format",constructor:Ce}),Ye.set("BMP",{desc:"BMP Raster Format",constructor:Ce});class Xe{static get supportedFormats(){const e=new Set;return Ye.forEach(((t,i)=>e.add(i))),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:n}=e;let r=e.datasetFormat;null==r&&t.lastIndexOf(".")&&(r=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===r||"TIF"===r?r="TIFF":"JPG"!==r&&"JPEG"!==r&&"JFIF"!==r||(r="JPG"),t.toLowerCase().includes("/imageserver")&&!t.toLowerCase().includes("/wcsserver")&&(r="RasterTileServer");const s={url:t,sourceJSON:n,datasetFormat:r,ioConfig:null!==i&&void 0!==i?i:{bandIds:null,sampling:null}};let a,l;if(r&&this.supportedFormats.has(r)){if("CRF"===r&&(null===i||void 0===i||!i.enableCRF))throw new o.A("rasterfactory:open","cannot open raster: ".concat(t));return a=Ye.get(r).constructor,l=new a(s),await l.open({signal:e.signal}),l}if(r)throw new o.A("rasterfactory:open","not a supported format "+r);const c=Array.from(Ye.keys());let u=0;const h=()=>(r=c[u++],r&&("CRF"!==r||null!==i&&void 0!==i&&i.enableCRF)?(a=Ye.get(r).constructor,l=new a(s),l.open({signal:e.signal}).then((()=>l)).catch((()=>h()))):null);return h()}static register(e,t,i){Ye.has(e.toUpperCase())||Ye.set(e.toUpperCase(),{desc:t,constructor:i})}}var Ke=i(30973);let Qe=class extends((0,v.d)((0,te.j)((0,K.q)((0,Q.A)((0,x.d)(X((0,ie.e)((0,ee.J)((0,c.P)(g.A)))))))))){constructor(){super(...arguments),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return"string"==typeof e?(0,n.A)({url:e},t):e}load(e){const t=(0,l.Ru)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(u.QP).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){let e=[new ne.A({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const{rasterInfo:t}=this,{attributeTable:i}=t,n=(0,l.Ru)(i)?i.fields:null;if(n){const t=n.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));e=e.concat(t)}const{dataType:r,multidimensionalInfo:s}=t;if(("vector-magdir"===r||"vector-uv"===r)&&(0,l.Ru)(s)){var a;const t=null===(a=s.variables[0].unit)||void 0===a?void 0:a.trim(),i="Magnitude"+(t?" (".concat(t,")"):"");e.push(new ne.A({name:"Raster.Magnitude",alias:i,domain:null,editable:!1,type:"double"})),e.push(new ne.A({name:"Raster.Direction",alias:"Direction (\xb0)",domain:null,editable:!1,type:"double"}))}return e}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const n=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,r=(0,a.LF)(n,i)||void 0;if(null!=r)return r}createPopupTemplate(e){return(0,Ke.tn)({fields:this.rasterFields,title:this.title},e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e="".concat(t.origin,"/").concat(t.layerContainerType||"operational-layers");t.messages.push(new o.A("layer:unsupported","Layers (".concat(this.title,", ").concat(this.id,") of type '").concat(this.declaredClass,"' are not supported in the context of '").concat(e,"'"),{layer:this}))}return null}async _openRaster(e){if(this.raster)this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url;else{const t=await Xe.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:(0,n.A)((0,n.A)({sampling:"closest"},this.ioConfig),{},{customFetchParameters:this.customParameters}),signal:e});if(this.rasterFunction){const e=(0,G.vt)(this.rasterFunction.toJSON(),{raster:t}),i=new q({rasterFunction:e});await i.open(),this.raster=i}else this.raster=t}const{rasterInfo:t}=this.raster;if(!t)throw new o.A("imagery-tile-layer:load","cannot load resources on "+this.url);if(this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:(0,n.A)((0,n.A)({},this.sourceJSON),{},{minScale:0,maxScale:0});this.read(e,{origin:"service"})}null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles((0,h.wB)((()=>this.customParameters),(e=>{this.raster.ioConfig.customFetchParameters=e})))}};(0,r._)([(0,d.MZ)({type:[f.jz],json:{write:{overridePolicy(){var e;return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==(null===(e=this.bandIds)||void 0===e?void 0:e.join(","))}}}}})],Qe.prototype,"bandIds",void 0),(0,r._)([(0,d.MZ)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,m.e)(re.S)],Qe.prototype,"interpolation",void 0),(0,r._)([(0,d.MZ)({json:{write:!0}})],Qe.prototype,"multidimensionalDefinition",void 0),(0,r._)([(0,d.MZ)(R.fV)],Qe.prototype,"legendEnabled",void 0),(0,r._)([(0,d.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Qe.prototype,"isReference",void 0),(0,r._)([(0,d.MZ)({type:["show","hide"]})],Qe.prototype,"listMode",void 0),(0,r._)([(0,d.MZ)({json:{read:!0,write:!0}})],Qe.prototype,"blendMode",void 0),(0,r._)([(0,d.MZ)()],Qe.prototype,"sourceJSON",void 0),(0,r._)([(0,d.MZ)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],Qe.prototype,"version",void 0),(0,r._)([(0,d.MZ)()],Qe.prototype,"title",void 0),(0,r._)([(0,d.MZ)({readOnly:!0,json:{read:!1}})],Qe.prototype,"type",void 0),(0,r._)([(0,d.MZ)({type:["ArcGISTiledImageServiceLayer"]})],Qe.prototype,"operationalLayerType",void 0),(0,r._)([(0,d.MZ)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],Qe.prototype,"popupEnabled",void 0),(0,r._)([(0,d.MZ)({type:s.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],Qe.prototype,"popupTemplate",void 0),(0,r._)([(0,d.MZ)({readOnly:!0})],Qe.prototype,"defaultPopupTemplate",null),(0,r._)([(0,d.MZ)({readOnly:!0,type:[ne.A]})],Qe.prototype,"fields",void 0),(0,r._)([(0,d.MZ)({readOnly:!0,type:[ne.A]})],Qe.prototype,"rasterFields",null),(0,r._)([(0,d.MZ)({types:a.uy,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var e;const t="raster-stretch"===(null===(e=this.renderer)||void 0===e?void 0:e.type)&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!t}}},origins:{"web-scene":{types:a.Gj,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],Qe.prototype,"renderer",null),(0,r._)([(0,p.w)("renderer")],Qe.prototype,"readRenderer",null),Qe=(0,r._)([(0,y.$)("esri.layers.ImageryTileLayer")],Qe);const et=Qe},79941:(e,t,i)=>{i.d(t,{d:()=>A});var n,r=i(8),s=i(35143),a=i(3825),o=i(13398),l=i(21499),c=i(50076),u=i(25463),h=i(76460),d=i(53521),f=i(30015),m=i(50346),p=i(68134),y=i(52394),g=i(90534),v=i(46053),x=i(18690),w=i(21403),I=i(85842),b=i(11164),_=i(53084);class R{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),n=i%8,r=i>>3,s=this._tileAvailabilityBitSet;return r<0||r>s.length?"unknown":s[r]&1<<n?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let n=!0,r=!0;const s=Math.ceil(t*i/8),a=new Uint8Array(s);let o=0;for(let l=0;l<e.length;l++){const t=l%8;e[l]?(r=!1,a[o]|=1<<t):n=!1,7===t&&++o}r?this._allAvailability="unavailable":n?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=a,this.byteSize+=a.length)}static fromDefinition(e,t){const i=e.service.request||a.default,{row:n,col:s,width:o,height:l}=e,u={query:{f:"json"}};return t=t?(0,r.A)((0,r.A)({},u),t):u,i(function(e){let t;if("vector-tile"===e.service.type)t="".concat(e.service.url,"/tilemap/").concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height);else{const i=e.service.tileServers;t="".concat(i&&i.length?i[e.row%i.length]:e.service.url,"/tilemap/").concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height)}const i=e.service.query;return i&&(t="".concat(t,"?").concat(i)),t}(e),t).then((e=>e.data)).catch((e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:n,left:s,width:o,height:l},valid:!0,data:(0,x.dY)(o*l,0)};throw e})).then((e=>{if(e.location&&(e.location.top!==n||e.location.left!==s||e.location.width!==o||e.location.height!==l))throw new c.A("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:n,left:s,width:o,height:l}});return R.fromJSON(e)}))}static fromJSON(e){R._validateJSON(e);const t=new R;return t.location=Object.freeze((0,_.o8)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static _validateJSON(e){if(!e||!e.location)throw new c.A("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new c.A("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new c.A("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new c.A("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new c.A("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function S(e){return"".concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height)}let A=n=class extends((0,u.$)(o.A)){constructor(e){super(e),this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2*l.uA.MEGABYTES,this.request=a.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new d.A(this.cacheByteSize),this.addHandles([(0,p.wB)((()=>{const{layer:e}=this;return[null===e||void 0===e?void 0:e.parsedUrl,null===e||void 0===e?void 0:e.tileServers,null===e||void 0===e?void 0:e.apiKey,null===e||void 0===e?void 0:e.customParameters]}),(()=>this._initializeTilemapDefinition())),(0,p.wB)((()=>{var e;return null===(e=this.layer)||void 0===e||null===(e=e.tileInfo)||void 0===e?void 0:e.lods}),(e=>this._initializeAvailableLevels(e)),p.pc)]),this._initializeTilemapDefinition()}castLevels(e){return e<=2?(h.A.getLogger(this.declaredClass).error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,n){if(!this._availableLevels[e])return Promise.reject(new c.A("tilemap-cache:level-unavailable","Level ".concat(e," is unavailable in the service")));const s=this._tmpTilemapDefinition,a=this._tilemapFromCache(e,t,i,s);if(a)return Promise.resolve(a);const o=n&&n.signal;return n=(0,r.A)((0,r.A)({},n),{},{signal:null}),new Promise(((e,t)=>{(0,m.u7)(o,(()=>t((0,m.NK)())));const i=S(s);let r=this._pendingTilemapRequests[i];if(!r){r=R.fromDefinition(s,n).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=r,r.then(e,e)}r.then(e,t)}))}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const n=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return n?n.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,n){return this._availableLevels[e]?this.fetchTilemap(e,t,i,n).catch((e=>e)).then((n=>{if(n instanceof R){const r=n.getAvailability(t,i);if("unavailable"===r)throw new c.A("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i});return r}if((0,m.zf)(n))throw n;return"unknown"})):Promise.reject(new c.A("tilemap-cache:level-unavailable","Level ".concat(e," is unavailable in the service")))}fetchAvailabilityUpsample(e,t,i,n,r){n.level=e,n.row=t,n.col=i;const s=this.layer.tileInfo;s.updateTileInfo(n);const a=this.fetchAvailability(e,t,i,r).catch((e=>{if((0,m.zf)(e))throw e;if(s.upsampleTile(n))return this.fetchAvailabilityUpsample(n.level,n.row,n.col,n);throw e}));return this._fetchAvailabilityUpsamplePrefetch(n.id,e,t,i,r,a),a}async _fetchAvailabilityUpsamplePrefetch(e,t,i,s,a,o){if(!this._prefetchingEnabled)return;const l="prefetch-".concat(e);if(this.handles.has(l))return;const c=new AbortController;o.then((()=>c.abort()),(()=>c.abort()));let u=!1;const h={remove(){u||(u=!0,c.abort())}};if(this.handles.add(h,l),await(0,y.md)(10,c.signal).catch((()=>{})),u||(u=!0,this.handles.remove(l)),(0,m.G4)(c))return;const d=new b.U(e,t,i,s),f=(0,r.A)((0,r.A)({},a),{},{signal:c.signal}),p=this.layer.tileInfo;for(let r=0;n._prefetches.length<n._maxPrefetch&&p.upsampleTile(d);++r){const e=this.fetchAvailability(d.level,d.row,d.col,f);n._prefetches.push(e);const t=()=>{n._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){var e;if(!this.layer.parsedUrl)return;const{parsedUrl:t,apiKey:i,customParameters:n}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:t.path,query:(0,g.x0)((0,r.A)((0,r.A)((0,r.A)({},t.query),n),{},{token:null!==i&&void 0!==i?i:null===(e=t.query)||void 0===e?void 0:e.token})),tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,n){n.level=e,n.row=t-t%this.size,n.col=i-i%this.size;const r=S(n);return this._tilemapCache.get(r)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach((e=>this._availableLevels[e.level]=!0))}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,n)=>!!e._tilemapFromCache(t,i,n,e._tmpTilemapDefinition)}}};A._maxPrefetch=4,A._prefetches=new f.A({initialSize:n._maxPrefetch}),(0,s._)([(0,v.MZ)({constructOnly:!0,type:Number})],A.prototype,"levels",void 0),(0,s._)([(0,w.w)("levels")],A.prototype,"castLevels",null),(0,s._)([(0,v.MZ)({readOnly:!0,type:Number})],A.prototype,"size",null),(0,s._)([(0,v.MZ)({constructOnly:!0,type:Number})],A.prototype,"cacheByteSize",void 0),(0,s._)([(0,v.MZ)({constructOnly:!0})],A.prototype,"layer",void 0),(0,s._)([(0,v.MZ)({constructOnly:!0})],A.prototype,"request",void 0),A=n=(0,s._)([(0,I.$)("esri.layers.support.TilemapCache")],A)},12838:(e,t,i)=>{i.d(t,{jX:()=>h,zo:()=>m,gd:()=>d,ph:()=>l,no:()=>f,kz:()=>c,ht:()=>u,yo:()=>y});i(35238);var n=i(30726);var r=i(59844),s=i(13904);const a=new Map,o=new class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:15e3,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.refCount--,e.refCount<=0&&(n.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.ts=Date.now(),e.refCount++,n.delete(i),n.set(i,e),e.block}return null}putBlock(e,t,i,n){const r=this._cachedBlocks,s=e+"/"+t;if(r.has(s)){const e=r.get(s);e.ts=Date.now(),e.refCount++}else r.set(s,{block:i,ts:Date.now(),refCount:1,controller:n});this._trim(),this._updateTimer()}deleteBlock(e,t){const i=this._cachedBlocks,n=e+"/"+t;i.has(n)&&i.delete(n)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval((()=>{const t=Array.from(e),i=Date.now();for(let n=0;n<t.length&&t[n][1].ts<=i-this._duration;n++)e.delete(t[n][0]);0===e.size&&this._clearTimer()}),this._interval)}_trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function l(e,t){return null==t?e:"".concat(e,"?sliceId=").concat(t)}function c(e,t){const i={extent:null,rasterInfo:t,cache:new Map},n=a.get(e);return n?(n.push(i),n.length-1):(a.set(e,[i]),0)}function u(e,t){const i=a.get(e);i&&(i[t]=null,i.some((e=>null!=e))||a.delete(e))}function h(e,t,i){var n;const r=a.get(e);if(!r)return null==t?o.decreaseRefCount(e,i):0;if(null==t||null==r[t])return o.decreaseRefCount(e,i);const s=null===(n=r[t])||void 0===n?void 0:n.cache,l=null===s||void 0===s?void 0:s.get(i);if(s&&l){if(l.refCount--,0===l.refCount){s.delete(i);for(let e=0;e<r.length;e++){var c;null===(c=r[e])||void 0===c||c.cache.delete(i)}l.controller&&l.controller.abort()}return l.refCount}return 0}function d(e,t,i){var n;const r=a.get(e);if(!r)return null==t?o.getBlock(e,i):null;if(null==t||null==r[t]){for(let e=0;e<r.length;e++){var s;const t=null===(s=r[e])||void 0===s?void 0:s.cache.get(i);if(t)return t.refCount++,t.block}return o.getBlock(e,i)}const l=null===(n=r[t])||void 0===n?void 0:n.cache.get(i);if(l)return l.refCount++,l.block;for(let a=0;a<r.length;a++){var c;if(a===t||!r[a])continue;const e=null===(c=r[a])||void 0===c?void 0:c.cache,n=null===e||void 0===e?void 0:e.get(i);if(e&&n)return n.refCount++,e.set(i,n),n.block}return null}function f(e,t,i,n){var r;let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const l=a.get(e);if(!l)return void(null==t&&o.putBlock(e,i,n,s));if(null==t||null==l[t])return void o.putBlock(e,i,n,s);const c={refCount:1,block:n,isResolved:!1,isRejected:!1,controller:s};n.then((()=>c.isResolved=!0)).catch((()=>c.isRejected=!0)),null===(r=l[t])||void 0===r||r.cache.set(i,c)}function m(e,t,i){var n;const r=a.get(e);r?null!=t&&null!=r[t]?null===(n=r[t])||void 0===n||n.cache.delete(i):o.deleteBlock(e,i):null==t&&o.deleteBlock(e,i)}function p(e,t){var i;const n=a.get(e);return n&&null!==(i=n[t])&&void 0!==i?i:null}function y(e,t,i,a,o,l){var c;let u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const h=p(e,t);if(!h)return;const d=h.extent,{cache:f,rasterInfo:m}=h;if(d&&d.xmin===i.xmin&&d.xmax===i.xmax&&d.ymin===i.ymin&&d.ymax===i.ymax)return;a=null!==(c=a)&&void 0!==c?c:0;const y=i.clone().normalize(),{spatialReference:g,transform:v}=m,x=new Set;for(let p=0;p<y.length;p++){const e=y[p];if(e.xmax-e.xmin<=a||e.ymax-e.ymin<=a)continue;let t=(0,r._l)(e,g,u);(0,n.Ru)(v)&&(t=v.inverseTransform(t));const i=new s.A({x:a,y:a,spatialReference:e.spatialReference});if(null==o&&!(o=(0,r.Wo)(i,g,e,u)))return;const{pyramidLevel:c,pyramidResolution:h,excessiveReading:d}=(0,r.t$)(o,m,l||"closest");if(d)return;const{storageInfo:f}=m,{origin:w}=f,I={x:Math.max(0,Math.floor((t.xmin-w.x)/h.x)),y:Math.max(0,Math.floor((w.y-t.ymax)/h.y))},b=Math.ceil((t.xmax-t.xmin)/h.x-.1),_=Math.ceil((t.ymax-t.ymin)/h.y-.1),R=c>0?f.pyramidBlockWidth:f.blockWidth,S=c>0?f.pyramidBlockHeight:f.blockHeight,A=1,T=Math.max(0,Math.floor(I.x/R)-A),M=Math.max(0,Math.floor(I.y/S)-A),k=Math.floor((I.x+b-1)/R)+A,C=Math.floor((I.y+_-1)/S)+A;for(let n=M;n<=C;n++)for(let e=T;e<=k;e++)x.add("".concat(c,"/").concat(n,"/").concat(e))}f.forEach(((e,t)=>{if(!x.has(t)){const e=f.get(t);(null==e||e.isResolved||e.isRejected)&&f.delete(t)}})),h.extent={xmin:i.xmin,ymin:i.ymin,xmax:i.xmax,ymax:i.ymax}}},50977:(e,t,i)=>{i.d(t,{d:()=>s,i:()=>a});var n=i(8),r=i(88235);const s={type:r.A,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:a}}}}};function a(e,t,i,s){if(!e)return null;const{minScale:a,maxScale:o,minLOD:l,maxLOD:c}=t;if(null!=l&&null!=c)return s&&s.ignoreMinMaxLOD?r.A.fromJSON(e):r.A.fromJSON((0,n.A)((0,n.A)({},e),{},{lods:e.lods.filter((e=>{let{level:t}=e;return null!=t&&t>=l&&t<=c}))}));if(0!==a&&0!==o){const t=e=>Math.round(1e4*e)/1e4,i=a?t(a):1/0,s=o?t(o):-1/0;return r.A.fromJSON((0,n.A)((0,n.A)({},e),{},{lods:e.lods.filter((e=>{const n=t(e.scale);return n<=i&&n>=s}))}))}return r.A.fromJSON(e)}}}]);
//# sourceMappingURL=3068.76c23b48.chunk.js.map