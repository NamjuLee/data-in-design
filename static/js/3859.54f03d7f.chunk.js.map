{"version":3,"file":"static/js/3859.54f03d7f.chunk.js","mappings":"yLAGO,MAAMA,EAGTC,WAAAA,CAAYC,GAAa,KAFlBC,aAAO,OACPC,cAAQ,EAEXC,KAAKF,QAAUG,SAASC,eAAeL,GAEvC,MAAMM,EAAMF,SAASG,cAAc,OACnCD,EAAIE,MAAMC,UAAY,OACtBH,EAAIE,MAAME,WAAa,OACvBJ,EAAIE,MAAMG,YAAc,OACxBL,EAAIE,MAAMI,gBAAkB,OAC5BN,EAAIE,MAAMK,MAAQ,QAClBP,EAAIE,MAAMM,OAAS,QACnBX,KAAKF,QAAQc,YAAYT,GAKzBH,KAAKD,SAAW,IAAIc,EAASV,GAC7BH,KAAKD,SAASe,OAAOT,MAAMU,SAAW,OAI1C,CACOC,OAAAA,GACHhB,KAAKD,SAASkB,YACdjB,KAAKD,SAASiB,UACd,IACI,UAAwBE,IAAjBlB,KAAKF,cAA2DoB,IAAlClB,KAAKF,QAAQqB,kBAC9CnB,KAAKF,QAAQsB,YAAYpB,KAAKF,QAAQqB,iBAE9C,CAAE,MAAOE,GACT,CACJ,EAGG,MAAMR,UAAiBS,EAAAA,eAK1B1B,WAAAA,CAAYE,GACRyB,MAAMzB,GAAS,KALnB0B,aAAO,OACPC,QAAoB,GAAE,KACtBC,SAAqB,GAAE,KACvBC,aAAO,EAGH3B,KAAKc,OAAOT,MAAMU,SAAW,QAI7Bf,KAAKwB,QAAU,IAAII,EAEnB5B,KAAK2B,QAAU1B,SAASG,cAAc,OACtCJ,KAAKF,QAAQc,YAAYZ,KAAK2B,SAC9B3B,KAAK2B,QAAQE,YAAc,QAG3B7B,KAAK8B,OACT,CACOC,MAAAA,CAAOC,GAIVhC,KAAKyB,QAAU,GACfzB,KAAK0B,SAAW,GAGL1B,KAAKc,OAAOJ,MADvB,IAIIuB,EAAOC,OAAOC,UAEdnC,KAAKwB,QAAQY,KAAKC,OAAS,IAC3BrC,KAAK2B,QAAQE,YAAW,QAAAS,OAAYC,WAAWvC,KAAKwB,QAAQY,KAAKpC,KAAKwB,QAAQY,KAAKC,OAAQ,GAAGG,KAAKC,QAAQ,GAAE,YAAAH,OAAWC,WAAWvC,KAAKwB,QAAQY,KAAKpC,KAAKwB,QAAQY,KAAKC,OAAQ,GAAGK,MAAMD,QAAQ,KAGpM,IAAI,IAAIE,EAAI,EAAIA,EAAI3C,KAAKwB,QAAQY,KAAKC,SAAUM,EAAG,CAG/C,IAAIH,EAAMxC,KAAKwB,QAAQY,KAAKO,GAAGH,IAC3BE,EAAO1C,KAAKwB,QAAQY,KAAKO,GAAGD,KAK5BT,EAAOO,IAAKP,EAAOO,GACnBP,EAAOS,IAAMT,EAAOS,GAIxB1C,KAAKyB,QAAQmB,KAAKJ,GAClBxC,KAAK0B,SAASkB,KAAKF,EACvB,CAEA,GAAI1C,KAAKyB,QAAQY,OAAS,EAAG,CAEzB,IAAK,IAAIM,EAAI,EAAGA,EAAI3C,KAAKyB,QAAQY,SAAUM,EAAG,CAC1C,IAAIH,EAAMxC,KAAKyB,QAAQkB,GAEnBE,GAAkBC,EAAAA,EAAAA,OAAMH,EAAG,EAAG3C,KAAKyB,QAAQY,OAAS,EAAGrC,KAAKc,OAAOJ,OACnEqC,GAAkBD,EAAAA,EAAAA,OAAMN,EAAKP,EA/B9B,EA+B2C,EAAGjC,KAAKc,OAAOH,QAEnD,IAANgC,GACAX,EAAIgB,YACJhB,EAAIiB,OAAOJ,EAAiBE,IAE5Bf,EAAIkB,OAAOL,EAAiBE,EAGpC,CACAf,EAAImB,YAAc,OAClBnB,EAAIoB,QAER,CAEA,GAAIpD,KAAK0B,SAASW,OAAS,EAAG,CAC1B,IAAK,IAAIM,EAAI,EAAGA,EAAI3C,KAAK0B,SAASW,SAAUM,EAAG,CAC3C,IAAID,EAAO1C,KAAK0B,SAASiB,GAGrBU,GAAmBP,EAAAA,EAAAA,OAAMH,EAAG,EAAG3C,KAAK0B,SAASW,OAAS,EAAGrC,KAAKc,OAAOJ,OACrE4C,GAAmBR,EAAAA,EAAAA,OAAMJ,EApD1B,EAoDsCT,EAAOjC,KAAKc,OAAOH,OAAQ,GAE1D,IAANgC,IAKAX,EAAIgB,YACJhB,EAAIuB,IAAIF,EAAkBC,EAAkB,EAAG,EAAG,MAClDtB,EAAIwB,YACJxB,EAAImB,YAAc,OAClBnB,EAAIoB,SAGZ,CACApB,EAAImB,YAAc,OAClBnB,EAAIoB,QAER,CAIJ,CACOnC,SAAAA,GACHjB,KAAKwB,QAAQiC,YAAa,CAC9B,EAIJ,MAAM7B,EAOFhC,WAAAA,GAAe,KANf8D,WAAK,OACLC,kBAAY,OACZC,kBAAY,OACZxB,KAAa,GAAG,KAChBqB,YAAa,EAAM,KACnBI,UAAY,EAAE,KAkENC,UAAYC,UACX/D,KAAKyD,aAENzD,KAAK6D,YAST7D,KAAKgE,QAAQC,MAAMC,IAEfC,QAAQC,IAAK,CAAC,KAAQF,EAAOG,QAAQ3B,KAAK,GAAI,IAAOwB,EAAOG,QAAQ7B,IAAI,KAExExC,KAAKoC,KAAKQ,KAAKsB,EAAOG,SAEtBC,YAAW,IAAMtE,KAAK8D,aAAa,EAAE,IACvC,EACL,KACME,MAAQD,eACE/D,KAAK0D,MAAMa,IAAIvE,KAAK2D,aAAc3D,KAAK4D,aAAc,CAC9DY,UAAW,IACXC,OAAQ,EACRC,SAAS,EACTC,eAAgB,CAAC3E,KAAK2D,aAAc3D,KAAK4D,gBA1F7C,MAAMgB,EAAIC,IACVC,EAAAA,IAAAA,QAAgBF,GAEhB,MAAMG,EAAS,GACf,IAAK,IAAIpC,EAAI,EAAGA,EAAIiC,EAAEvC,SAAUM,EAAG,CAC/B,IAAIqC,EAAM,GACV,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAEjC,GAAGN,OAAS,IAAK4C,EACnCD,EAAIpC,KAAKgC,EAAEjC,GAAGsC,IAElBF,EAAOnC,KAAKoC,EAChB,CAEA,MAAME,EAAS,GACf,IAAK,IAAIvC,EAAI,EAAGA,EAAIiC,EAAEvC,SAAUM,EACE,IAA1BiC,EAAEjC,GAAGiC,EAAEjC,GAAGN,OAAS,GACnB6C,EAAOtC,KAAK,CAAC,EAAG,EAAG,IACc,IAA1BgC,EAAEjC,GAAGiC,EAAEjC,GAAGN,OAAS,GAC1B6C,EAAOtC,KAAK,CAAC,EAAG,EAAG,IACc,IAA1BgC,EAAEjC,GAAGiC,EAAEjC,GAAGN,OAAS,IAC1B6C,EAAOtC,KAAK,CAAC,EAAG,EAAG,IAS3B5C,KAAK2D,aAAemB,EAAAA,IAAYC,GAChC/E,KAAK4D,aAAekB,EAAAA,IAAYI,GAGhClF,KAAK2D,aAAawB,QAClBnF,KAAK4D,aAAauB,QAElBnF,KAAK0D,MAAQoB,EAAAA,MAIb,MAAMM,EAASN,EAAAA,IAAAA,MAAgB,CAC3BO,WAAY,CAACrF,KAAK2D,aAAa2B,MAAM,IACrCC,MAAO,GACPC,WAAY,YAEVC,EAASX,EAAAA,IAAAA,MAAgB,CAE3BS,MAAO,EACPC,WAAY,YAEhBxF,KAAK0D,MAAMgC,IAAIN,GACfpF,KAAK0D,MAAMgC,IAAID,GACfzF,KAAK0D,MAAMiC,QAAQ,CACfC,UAAWd,EAAAA,IAASe,OAGpBnD,KAAMoC,EAAAA,IAAUgB,oBAChBC,QAAS,CAAC,cAEd/F,KAAK0D,MAAMsC,UAGXhG,KAAKyD,YAAa,EAClBzD,KAAK8D,WACT,EAiCJ,MAAMe,EAAcA,IACT,CACH,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,EAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,EAAK,IAAK,GAAK,GAAI,CAAC,IAAK,EAAK,IAAK,GAAK,GAAI,CAAC,IAAK,EAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,EAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,EAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,EAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,EAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,EAAK,EAAK,IAAK,EAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,EAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,EAAK,IAAK,GACvE,CAAC,EAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,EAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,EAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,G","sources":["CLASS_10_AI_Model_Implementation/PART_06_Problem_Data_Model_Train_Validation/LAB_Web_06_NetworkIrisPrediction/index.ts"],"sourcesContent":["import * as tf from '@tensorflow/tfjs'\r\nimport { RendererCanvas, remap } from '../../../lib';\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(id: string) {\r\n        this.divHost = document.getElementById(id);\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginTop = '80px';\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#555';\r\n        div.style.width = '600px';\r\n        div.style.height = '350px';\r\n        this.divHost.appendChild(div);\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.renderer = new Renderer(div);\r\n        this.renderer.canvas.style.position = 'unset';\r\n\r\n        // !! you should execute it for rendering\r\n        // this.start();\r\n    }\r\n    public destroy() {\r\n        this.renderer.stopTrain();\r\n        this.renderer.destroy();\r\n        try {\r\n            while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\r\n                this.divHost.removeChild(this.divHost.lastElementChild);\r\n            }\r\n        } catch (error) {        \r\n        }\r\n    }\r\n}\r\n\r\nexport class Renderer extends RendererCanvas {\r\n    tfModel: TFModel;\r\n    accList: number[] = []\r\n    lossList: number[] = []\r\n    divText: HTMLDivElement;\r\n    constructor(divHost: HTMLDivElement) {\r\n        super(divHost);\r\n        this.canvas.style.position = 'unset';\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.tfModel = new TFModel();\r\n\r\n        this.divText = document.createElement('div');\r\n        this.divHost.appendChild(this.divText);\r\n        this.divText.textContent = 'title';\r\n\r\n        // !! you should execute it for rendering\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n        this.accList = [];\r\n        this.lossList = [];\r\n\r\n        let minX = 0\r\n        let maxX = this.canvas.width;\r\n        \r\n        let minY = 0;\r\n        let maxY = Number.MIN_VALUE;\r\n\r\n        if (this.tfModel.hist.length > 0){\r\n            this.divText.textContent = `acc: ${ parseFloat(this.tfModel.hist[this.tfModel.hist.length -1].acc).toFixed(3)}, loss: ${parseFloat(this.tfModel.hist[this.tfModel.hist.length -1].loss).toFixed(3)}`;\r\n        }\r\n\r\n        for(let i = 0 ; i < this.tfModel.hist.length; ++i) {\r\n\r\n            // console.log(this.tfModel.hist)\r\n            let acc = this.tfModel.hist[i].acc;\r\n            let loss = this.tfModel.hist[i].loss;\r\n\r\n            // if (minY > acc) minY = acc;\r\n            // if (minY > loss) minY = loss;\r\n            \r\n            if (maxY < acc) maxY = acc;\r\n            if (maxY < loss) maxY = loss;\r\n\r\n            // console.log('acc', acc)\r\n\r\n            this.accList.push(acc);\r\n            this.lossList.push(loss);\r\n        }\r\n\r\n        if (this.accList.length > 1) {\r\n\r\n            for (let i = 0; i < this.accList.length; ++i) {\r\n                let acc = this.accList[i];\r\n\r\n                let projected_X_Acc = remap(i, 0, this.accList.length,  0, this.canvas.width);\r\n                let projected_Y_Acc = remap(acc, maxY, minY,  0, this.canvas.height);\r\n\r\n                if (i === 0) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(projected_X_Acc, projected_Y_Acc);\r\n                } else {\r\n                    ctx.lineTo(projected_X_Acc, projected_Y_Acc);\r\n                }\r\n\r\n            }\r\n            ctx.strokeStyle = '#0f0'\r\n            ctx.stroke();\r\n\r\n        }\r\n\r\n        if (this.lossList.length > 1) {\r\n            for (let i = 0; i < this.lossList.length; ++i) {\r\n                let loss = this.lossList[i];\r\n                // console.log(loss)\r\n\r\n                let projected_X_loss = remap(i, 0, this.lossList.length,  0, this.canvas.width);\r\n                let projected_Y_loss = remap(loss, minY, maxY,  this.canvas.height, 0);\r\n\r\n                if (i === 0) {\r\n                    // ctx.beginPath();\r\n                    // ctx.moveTo(projected_X_loss, projected_Y_loss);\r\n                } else {\r\n                    // ctx.lineTo(projected_X_loss, projected_Y_loss);\r\n                    ctx.beginPath();\r\n                    ctx.arc(projected_X_loss, projected_Y_loss, 1, 0 ,3.14 *2);\r\n                    ctx.closePath();\r\n                    ctx.strokeStyle = '#f00'\r\n                    ctx.stroke();\r\n                }\r\n\r\n            }\r\n            ctx.strokeStyle = '#f00'\r\n            ctx.stroke();\r\n\r\n        }\r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n    public stopTrain(){\r\n        this.tfModel.isTraining = false;\r\n    }\r\n}\r\n\r\n\r\nclass TFModel {\r\n    model: tf.Sequential;\r\n    inputsTensor: tf.Tensor<tf.Rank.R2>;\r\n    labelsTensor: tf.Tensor<tf.Rank.R2>;\r\n    hist: any[]= [];\r\n    isTraining = false;\r\n    iteration = 0;\r\n    constructor() {\r\n        const d = getIrisData();\r\n        tf.util.shuffle(d);\r\n\r\n        const inputs = [];\r\n        for (let i = 0; i < d.length; ++i) {\r\n            let row = [];\r\n            for (let j = 0; j < d[i].length - 1; ++j) {\r\n                row.push(d[i][j]);\r\n            }\r\n            inputs.push(row);\r\n        }\r\n\r\n        const labels = []; //  d.map((d: number[]) => [d[d.length - 1]]);\r\n        for (let i = 0; i < d.length; ++i) {\r\n            if (d[i][d[i].length - 1] === 0) {\r\n                labels.push([1, 0, 0]);\r\n            } else if (d[i][d[i].length - 1] === 1) {\r\n                labels.push([0, 1, 0]);\r\n            } else if (d[i][d[i].length - 1] === 2) {\r\n                labels.push([0, 0, 1]);\r\n            }\r\n\r\n        }\r\n\r\n        // console.log(inputs);\r\n        // console.log(labels);\r\n\r\n        // console.log('tensor......................');\r\n        this.inputsTensor = tf.tensor2d(inputs);\r\n        this.labelsTensor = tf.tensor2d(labels);\r\n        // console.log(this.inputsTensor);\r\n        // console.log(this.labelsTensor);\r\n        this.inputsTensor.print();\r\n        this.labelsTensor.print();\r\n\r\n        this.model = tf.sequential();\r\n\r\n        // console.log(this.inputsTensor.shape[1]);\r\n\r\n        const hidden = tf.layers.dense({\r\n            inputShape: [this.inputsTensor.shape[1]],\r\n            units: 10,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            // inputShape: [10],\r\n            units: 3,\r\n            activation: 'softmax',\r\n        });\r\n        this.model.add(hidden);\r\n        this.model.add(output);\r\n        this.model.compile({\r\n            optimizer: tf.train.adam(),\r\n            // loss: tf.losses.meanSquaredError,\r\n            // metrics: ['mse'],\r\n            loss: tf.losses.softmaxCrossEntropy,  // 'categoricalCrossentropy',\r\n            metrics: ['accuracy'],\r\n        });\r\n        this.model.summary();\r\n        // tfvis.show.modelSummary({ name: 'Model Summary' }, this.model);\r\n\r\n        this.isTraining = true;\r\n        this.trainLoop();\r\n    }\r\n    public  trainLoop = async () => {\r\n        if (!this.isTraining) return;\r\n\r\n        if (this.iteration++ % 100 === 0) {\r\n        // for saving the model\r\n        // await this.model.save('downloads://my-model');\r\n        // const saveResults = await this.model.save('localstorage://ml/my-model-1');\r\n        // console.log(saveResults);\r\n        }\r\n\r\n\r\n\r\n        this.train().then((result: any) => {\r\n\r\n            console.log( {'loss': result.history.loss[0], 'acc': result.history.acc[0]});\r\n\r\n            this.hist.push(result.history);\r\n            // console.log(result.history)\r\n            setTimeout(() => this.trainLoop(), 1);\r\n        });\r\n    }\r\n    public train = async() => {\r\n        return await this.model.fit(this.inputsTensor, this.labelsTensor, {\r\n            batchSize: 100,\r\n            epochs: 1,\r\n            shuffle: true,\r\n            validationData: [this.inputsTensor, this.labelsTensor],\r\n        });\r\n    }\r\n}\r\n\r\n\r\nconst getIrisData = () => {\r\n    return [\r\n        [5.1, 3.5, 1.4, 0.2, 0], [4.9, 3.0, 1.4, 0.2, 0], [4.7, 3.2, 1.3, 0.2, 0],\r\n        [4.6, 3.1, 1.5, 0.2, 0], [5.0, 3.6, 1.4, 0.2, 0], [5.4, 3.9, 1.7, 0.4, 0],\r\n        [4.6, 3.4, 1.4, 0.3, 0], [5.0, 3.4, 1.5, 0.2, 0], [4.4, 2.9, 1.4, 0.2, 0],\r\n        [4.9, 3.1, 1.5, 0.1, 0], [5.4, 3.7, 1.5, 0.2, 0], [4.8, 3.4, 1.6, 0.2, 0],\r\n        [4.8, 3.0, 1.4, 0.1, 0], [4.3, 3.0, 1.1, 0.1, 0], [5.8, 4.0, 1.2, 0.2, 0],\r\n        [5.7, 4.4, 1.5, 0.4, 0], [5.4, 3.9, 1.3, 0.4, 0], [5.1, 3.5, 1.4, 0.3, 0],\r\n        [5.7, 3.8, 1.7, 0.3, 0], [5.1, 3.8, 1.5, 0.3, 0], [5.4, 3.4, 1.7, 0.2, 0],\r\n        [5.1, 3.7, 1.5, 0.4, 0], [4.6, 3.6, 1.0, 0.2, 0], [5.1, 3.3, 1.7, 0.5, 0],\r\n        [4.8, 3.4, 1.9, 0.2, 0], [5.0, 3.0, 1.6, 0.2, 0], [5.0, 3.4, 1.6, 0.4, 0],\r\n        [5.2, 3.5, 1.5, 0.2, 0], [5.2, 3.4, 1.4, 0.2, 0], [4.7, 3.2, 1.6, 0.2, 0],\r\n        [4.8, 3.1, 1.6, 0.2, 0], [5.4, 3.4, 1.5, 0.4, 0], [5.2, 4.1, 1.5, 0.1, 0],\r\n        [5.5, 4.2, 1.4, 0.2, 0], [4.9, 3.1, 1.5, 0.1, 0], [5.0, 3.2, 1.2, 0.2, 0],\r\n        [5.5, 3.5, 1.3, 0.2, 0], [4.9, 3.1, 1.5, 0.1, 0], [4.4, 3.0, 1.3, 0.2, 0],\r\n        [5.1, 3.4, 1.5, 0.2, 0], [5.0, 3.5, 1.3, 0.3, 0], [4.5, 2.3, 1.3, 0.3, 0],\r\n        [4.4, 3.2, 1.3, 0.2, 0], [5.0, 3.5, 1.6, 0.6, 0], [5.1, 3.8, 1.9, 0.4, 0],\r\n        [4.8, 3.0, 1.4, 0.3, 0], [5.1, 3.8, 1.6, 0.2, 0], [4.6, 3.2, 1.4, 0.2, 0],\r\n        [5.3, 3.7, 1.5, 0.2, 0], [5.0, 3.3, 1.4, 0.2, 0], [7.0, 3.2, 4.7, 1.4, 1],\r\n        [6.4, 3.2, 4.5, 1.5, 1], [6.9, 3.1, 4.9, 1.5, 1], [5.5, 2.3, 4.0, 1.3, 1],\r\n        [6.5, 2.8, 4.6, 1.5, 1], [5.7, 2.8, 4.5, 1.3, 1], [6.3, 3.3, 4.7, 1.6, 1],\r\n        [4.9, 2.4, 3.3, 1.0, 1], [6.6, 2.9, 4.6, 1.3, 1], [5.2, 2.7, 3.9, 1.4, 1],\r\n        [5.0, 2.0, 3.5, 1.0, 1], [5.9, 3.0, 4.2, 1.5, 1], [6.0, 2.2, 4.0, 1.0, 1],\r\n        [6.1, 2.9, 4.7, 1.4, 1], [5.6, 2.9, 3.6, 1.3, 1], [6.7, 3.1, 4.4, 1.4, 1],\r\n        [5.6, 3.0, 4.5, 1.5, 1], [5.8, 2.7, 4.1, 1.0, 1], [6.2, 2.2, 4.5, 1.5, 1],\r\n        [5.6, 2.5, 3.9, 1.1, 1], [5.9, 3.2, 4.8, 1.8, 1], [6.1, 2.8, 4.0, 1.3, 1],\r\n        [6.3, 2.5, 4.9, 1.5, 1], [6.1, 2.8, 4.7, 1.2, 1], [6.4, 2.9, 4.3, 1.3, 1],\r\n        [6.6, 3.0, 4.4, 1.4, 1], [6.8, 2.8, 4.8, 1.4, 1], [6.7, 3.0, 5.0, 1.7, 1],\r\n        [6.0, 2.9, 4.5, 1.5, 1], [5.7, 2.6, 3.5, 1.0, 1], [5.5, 2.4, 3.8, 1.1, 1],\r\n        [5.5, 2.4, 3.7, 1.0, 1], [5.8, 2.7, 3.9, 1.2, 1], [6.0, 2.7, 5.1, 1.6, 1],\r\n        [5.4, 3.0, 4.5, 1.5, 1], [6.0, 3.4, 4.5, 1.6, 1], [6.7, 3.1, 4.7, 1.5, 1],\r\n        [6.3, 2.3, 4.4, 1.3, 1], [5.6, 3.0, 4.1, 1.3, 1], [5.5, 2.5, 4.0, 1.3, 1],\r\n        [5.5, 2.6, 4.4, 1.2, 1], [6.1, 3.0, 4.6, 1.4, 1], [5.8, 2.6, 4.0, 1.2, 1],\r\n        [5.0, 2.3, 3.3, 1.0, 1], [5.6, 2.7, 4.2, 1.3, 1], [5.7, 3.0, 4.2, 1.2, 1],\r\n        [5.7, 2.9, 4.2, 1.3, 1], [6.2, 2.9, 4.3, 1.3, 1], [5.1, 2.5, 3.0, 1.1, 1],\r\n        [5.7, 2.8, 4.1, 1.3, 1], [6.3, 3.3, 6.0, 2.5, 2], [5.8, 2.7, 5.1, 1.9, 2],\r\n        [7.1, 3.0, 5.9, 2.1, 2], [6.3, 2.9, 5.6, 1.8, 2], [6.5, 3.0, 5.8, 2.2, 2],\r\n        [7.6, 3.0, 6.6, 2.1, 2], [4.9, 2.5, 4.5, 1.7, 2], [7.3, 2.9, 6.3, 1.8, 2],\r\n        [6.7, 2.5, 5.8, 1.8, 2], [7.2, 3.6, 6.1, 2.5, 2], [6.5, 3.2, 5.1, 2.0, 2],\r\n        [6.4, 2.7, 5.3, 1.9, 2], [6.8, 3.0, 5.5, 2.1, 2], [5.7, 2.5, 5.0, 2.0, 2],\r\n        [5.8, 2.8, 5.1, 2.4, 2], [6.4, 3.2, 5.3, 2.3, 2], [6.5, 3.0, 5.5, 1.8, 2],\r\n        [7.7, 3.8, 6.7, 2.2, 2], [7.7, 2.6, 6.9, 2.3, 2], [6.0, 2.2, 5.0, 1.5, 2],\r\n        [6.9, 3.2, 5.7, 2.3, 2], [5.6, 2.8, 4.9, 2.0, 2], [7.7, 2.8, 6.7, 2.0, 2],\r\n        [6.3, 2.7, 4.9, 1.8, 2], [6.7, 3.3, 5.7, 2.1, 2], [7.2, 3.2, 6.0, 1.8, 2],\r\n        [6.2, 2.8, 4.8, 1.8, 2], [6.1, 3.0, 4.9, 1.8, 2], [6.4, 2.8, 5.6, 2.1, 2],\r\n        [7.2, 3.0, 5.8, 1.6, 2], [7.4, 2.8, 6.1, 1.9, 2], [7.9, 3.8, 6.4, 2.0, 2],\r\n        [6.4, 2.8, 5.6, 2.2, 2], [6.3, 2.8, 5.1, 1.5, 2], [6.1, 2.6, 5.6, 1.4, 2],\r\n        [7.7, 3.0, 6.1, 2.3, 2], [6.3, 3.4, 5.6, 2.4, 2], [6.4, 3.1, 5.5, 1.8, 2],\r\n        [6.0, 3.0, 4.8, 1.8, 2], [6.9, 3.1, 5.4, 2.1, 2], [6.7, 3.1, 5.6, 2.4, 2],\r\n        [6.9, 3.1, 5.1, 2.3, 2], [5.8, 2.7, 5.1, 1.9, 2], [6.8, 3.2, 5.9, 2.3, 2],\r\n        [6.7, 3.3, 5.7, 2.5, 2], [6.7, 3.0, 5.2, 2.3, 2], [6.3, 2.5, 5.0, 1.9, 2],\r\n        [6.5, 3.0, 5.2, 2.0, 2], [6.2, 3.4, 5.4, 2.3, 2], [5.9, 3.0, 5.1, 1.8, 2],\r\n    ];\r\n};"],"names":["Solution","constructor","id","divHost","renderer","this","document","getElementById","div","createElement","style","marginTop","marginLeft","marginRight","backgroundColor","width","height","appendChild","Renderer","canvas","position","destroy","stopTrain","undefined","lastElementChild","removeChild","error","RendererCanvas","super","tfModel","accList","lossList","divText","TFModel","textContent","start","render","ctx","maxY","Number","MIN_VALUE","hist","length","concat","parseFloat","acc","toFixed","loss","i","push","projected_X_Acc","remap","projected_Y_Acc","beginPath","moveTo","lineTo","strokeStyle","stroke","projected_X_loss","projected_Y_loss","arc","closePath","isTraining","model","inputsTensor","labelsTensor","iteration","trainLoop","async","train","then","result","console","log","history","setTimeout","fit","batchSize","epochs","shuffle","validationData","d","getIrisData","tf","inputs","row","j","labels","print","hidden","inputShape","shape","units","activation","output","add","compile","optimizer","adam","softmaxCrossEntropy","metrics","summary"],"sourceRoot":""}