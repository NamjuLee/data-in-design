"use strict";(self.webpackChunkData_in_Design=self.webpackChunkData_in_Design||[]).push([[5921],{65921:(e,t,r)=>{r.r(t),r.d(t,{getGeometryServiceURL:()=>v,projectGeometry:()=>w});var o=r(86560),n=r(50076),i=r(44568),a=r(8),s=r(3825),l=r(40565),u=r(19902),c=r(54994),f=r(71838),g=r(35143),p=r(42553),m=r(46053),d=(r(18690),r(85842));let h=class extends p.oY{constructor(e){super(e),this.geometries=null,this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const e=this.geometries.map((e=>e.toJSON())),t=this.geometries[0],r={};return r.outSR=this.outSpatialReference.wkid||JSON.stringify(this.outSpatialReference.toJSON()),r.inSR=t.spatialReference.wkid||JSON.stringify(t.spatialReference.toJSON()),r.geometries=JSON.stringify({geometryType:(0,u.$B)(t),geometries:e}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),null!=this.transformForward&&(r.transformForward=this.transformForward),r}};(0,g._)([(0,m.MZ)()],h.prototype,"geometries",void 0),(0,g._)([(0,m.MZ)({json:{read:{source:"outSR"}}})],h.prototype,"outSpatialReference",void 0),(0,g._)([(0,m.MZ)()],h.prototype,"transformation",void 0),(0,g._)([(0,m.MZ)()],h.prototype,"transformForward",void 0),h=(0,g._)([(0,d.$)("esri.rest.support.ProjectParameters")],h);const y=h,S=(0,l.dp)(y);async function v(){var e;let t,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=arguments.length>1?arguments[1]:void 0;if(o.A.geometryServiceUrl)return o.A.geometryServiceUrl;if(!r)throw new n.A("internal:geometry-service-url-not-configured");t="portal"in r?r.portal||i.A.getDefault():r,await t.load({signal:a});const s=null===(e=t.helperServices)||void 0===e||null===(e=e.geometry)||void 0===e?void 0:e.url;if(!s)throw new n.A("internal:geometry-service-url-not-configured");return s}async function w(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3?arguments[3]:void 0;const i=await v(r,o),l=new y;l.geometries=[e],l.outSpatialReference=t;const g=await async function(e,t,r){t=S(t);const o=(0,c.Dl)(e),n=(0,a.A)((0,a.A)({},o.query),{},{f:"json"},t.toJSON()),i=t.outSpatialReference,l=(0,u.$B)(t.geometries[0]),g=(0,c.jV)(n,r);return(0,s.default)(o.path+"/project",g).then((e=>{let{data:{geometries:t}}=e;return(0,f.V)(t,l,i)}))}(i,l,{signal:o});if(g&&Array.isArray(g)&&1===g.length)return g[0];throw new n.A("internal:geometry-service-projection-failed")}}}]);
//# sourceMappingURL=5921.dfbbc9b9.chunk.js.map