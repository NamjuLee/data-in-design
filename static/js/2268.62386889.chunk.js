"use strict";(self.webpackChunkdata_in_design=self.webpackChunkdata_in_design||[]).push([[2268],{22268:(t,s,n)=>{n.r(s),n.d(s,{Solution:()=>i});class i{constructor(t){let s=new o;s.run(),s.print();let n=new a;n.run(),n.print(),(new o).print();let i=new a;i.run(),i.run(),i.run(),i.print(),console.log(c);let e=c[0];for(let r=1;r<c.length;++r)e.distance>c[r].distance&&(e=c[r]);console.log("the best runner is  :"),e.print()}destroy(){}}let e=0,c=[];class r{constructor(){this.id=0,this.name=void 0,this.distance=0,c.push(this),this.id=e++}print(){}run(){this.distance++}}class o extends r{constructor(){super(),this.name="dog"}print(){console.log("this is ".concat(this.name,", id: ").concat(this.id,", distance: ").concat(this.distance))}run(){this.distance+=2}}class a extends r{constructor(){super(),this.name="cat"}print(){console.log("this is "+this.name+", id: "+this.id+", distance: "+this.distance)}}}}]);
//# sourceMappingURL=2268.62386889.chunk.js.map