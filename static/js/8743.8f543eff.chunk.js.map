{"version":3,"file":"static/js/8743.8f543eff.chunk.js","mappings":"0KAGO,MAAMA,UAAiBC,EAAAA,cAU1BC,WAAAA,CAAYC,GACRC,MAAMD,GAAM,KAThBE,KAAY,GAEZ,KACAC,QAAUC,mCAA+C,KAGzDC,aAA2B,GAIvBC,QAAQC,IAAI,eAAeH,oCAI3BI,KAAKC,KAAK,GACVD,KAAKE,OAAO,WAAY,SAKxB,IAAK,IAAIC,GAHG,GAGMA,EAFN,KAEiBA,EACzBH,KAAKH,aAAaO,MAAKC,EAAAA,EAAAA,mBAAkBF,IAI7C,MACMG,EAAK,oDAAAC,OADM,QACyD,WAAAA,OAAUP,KAAKL,QAAO,kBAEhGa,EAAAA,EAAAA,gBAAeF,GAAOG,MAAMC,IACxBZ,QAAQC,IAAIW,GACZV,KAAKN,KAAKU,KAAKM,EAAE,IAIrBV,KAAKW,OACT,CACOC,MAAAA,CAAOC,GAIV,IAAK,IAAIV,EAAI,EAAIA,EAAIH,KAAKN,KAAKoB,SAAUX,EAAI,CACzC,MAAMY,EAAQf,KAAKN,KAAKS,GAElBa,EAAYhB,KAAKiB,SAASF,EAAa,MAAO,IAAGA,EAAa,MAAO,KAErEG,EAAOH,EAAY,KAAQ,KAC3BI,GAAYd,EAAAA,EAAAA,mBAAkBa,GAC9BE,EAAe,OAAAb,OAAUY,EAAU,GAAE,MAAAZ,OAAKY,EAAU,GAAE,MAAAZ,OAAKY,EAAU,GAAE,KAE7EE,EAAYR,EAAKG,EAAU,GAAIA,EAAU,GAAIhB,KAAKsB,KAAMF,GACxDG,EAAWV,EAAKG,EAAU,GAAK,GAAIA,EAAU,GAAGE,EAAM,OAC1D,CAEAM,EAAkBX,EAAKb,KAAKH,aAIhC,CACO4B,UAAAA,CAAWC,EAAWC,GACzB,MAAMC,EAAS5B,KAAK6B,MAAMH,EAAGC,GAGvBrB,EAAK,uDAAAC,OAA0DqB,EAAO,GAAE,SAAArB,OAAQqB,EAAO,GAAE,WAAArB,OAAUP,KAAKL,QAAO,kBACrHa,EAAAA,EAAAA,gBAAeF,GAAOG,MAAMC,IACxBZ,QAAQC,IAAIW,GACZV,KAAKN,KAAKU,KAAKM,EAAE,GAEzB,EAGJ,MAAMW,EAAcA,CAACR,EAA+Ba,EAAWC,EAAWG,EAAWC,KACjFlB,EAAImB,UAAYD,EAChBlB,EAAIoB,YACJpB,EAAIqB,IAAIR,EAAGC,EAA6B,GAAzBQ,KAAKC,IAAQ,GAAJN,GAAW,GAAQ,EAAa,EAAVK,KAAKE,IACnDxB,EAAIyB,YACJzB,EAAI0B,MAAM,EAERhB,EAAaA,CAACV,EAA+Ba,EAAWC,EAAWa,EAAcT,KACnFlB,EAAI4B,YAAcV,EAClBlB,EAAI6B,KAAO,aACX7B,EAAI8B,WAAWH,EAAMd,EAAGC,EAAE,EAExBH,EAAoBA,CAACX,EAA+B+B,KAEtD,MACMC,EAAOhC,EAAIiC,OAAOC,OAAS,IAGjC,IAAK,IAAI5C,EAAI,EAAIA,EAAIyC,EAAW9B,SAAUX,EACtCU,EAAIoB,YACJpB,EAAImC,KAJE,EAIG7C,EANA,IAMc0C,EAJjB,EACA,IAINhC,EAAIyB,YACJzB,EAAImB,UAAS,QAAAzB,OAAWqC,EAAWzC,GAAG,GAAE,MAAAI,OAAKqC,EAAWzC,GAAG,GAAE,MAAAI,OAAKqC,EAAWzC,GAAG,GAAE,QAClFU,EAAI0B,MACR,C","sources":["PART_10_Web_Visualization_Digital_Mapping_Analysis/05_REST_API/index.ts"],"sourcesContent":["import { RendererJSAPI } from '../../lib'\r\nimport { getJSONFromURL, getColorByCelsius } from 'njscore';\r\n\r\nexport class Solution extends RendererJSAPI {\r\n\r\n    data: any = [];\r\n    \r\n    // https://openweathermap.org/api\r\n    API_KEY = process.env.REACT_APP_OPEN_WATHER_MAP_API_KEY; // <== you need to overwrite your API KEY !!!\r\n\r\n    \r\n    colorsLegend: number[][] = [];\r\n    \r\n    constructor(view: any) {\r\n        super(view);\r\n        console.log('your key is ',process.env.REACT_APP_OPEN_WATHER_MAP_API_KEY);\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.zoom(2);\r\n        this.center(127.024612, 37.532600)\r\n\r\n        const min = -45\r\n        const max = 45\r\n    \r\n        for (let i = min; i < max; ++i ) {\r\n            this.colorsLegend.push(getColorByCelsius(i))\r\n        }\r\n\r\n        // https://openweathermap.org/api\r\n        const CityName = \"Seoul\";\r\n        const query = `http://api.openweathermap.org/data/2.5/weather?q=${CityName}&appid=${this.API_KEY}&units=metric`;\r\n\r\n        getJSONFromURL(query).then((d) => {\r\n            console.log(d)\r\n            this.data.push(d)\r\n        });\r\n\r\n        // !! you should execute it for rendering\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n        for (let i = 0 ; i < this.data.length; ++i ) {\r\n            const place = this.data[i];\r\n\r\n            const screenPos = this.toScreen(place['coord']['lon'], place['coord']['lat']);\r\n\r\n            const temp = place['main']['temp'];\r\n            const tempColor = getColorByCelsius(temp);\r\n            const tempColorString = `rgb(${tempColor[0]}, ${tempColor[1]}, ${tempColor[2]})`;\r\n\r\n            renderPoint(ctx, screenPos[0], screenPos[1], this.time, tempColorString);\r\n            renderText(ctx, screenPos[0] + 15, screenPos[1],temp, '#fff');\r\n        }\r\n\r\n        renderColorLegend(ctx, this.colorsLegend);\r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n        const mapPos = this.toMap(x, y);\r\n\r\n        // https://openweathermap.org/current\r\n        const query = `https://api.openweathermap.org/data/2.5/weather?lat=${mapPos[1]}&lon=${mapPos[0]}&appid=${this.API_KEY}&units=metric`\r\n        getJSONFromURL(query).then((d) => {\r\n            console.log(d)\r\n            this.data.push(d)\r\n        });\r\n    }\r\n}\r\n\r\nconst renderPoint = (ctx: CanvasRenderingContext2D, x: number, y: number, t: number, color: string) => {\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, (Math.sin(t * 0.8) + 4) * 3, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n};\r\nconst renderText = (ctx: CanvasRenderingContext2D, x: number, y: number, name: string, color: string) => {\r\n    ctx.strokeStyle = color;\r\n    ctx.font = '15px Arial';\r\n    ctx.strokeText(name, x, y);\r\n};\r\nconst renderColorLegend = (ctx: CanvasRenderingContext2D, colorArray: number[][]) => {\r\n    // https://www.esri.com/arcgis-blog/products/arcgis-pro/mapping/a-meaningful-temperature-palette/\r\n    const xOff = 100;\r\n    const yOff = ctx.canvas.height - 100;\r\n    const w = 5;\r\n    const h = 20;\r\n    for (let i = 0 ; i < colorArray.length; ++i) {\r\n        ctx.beginPath();\r\n        ctx.rect(i * w + xOff, yOff, w, h)\r\n        ctx.closePath();\r\n        ctx.fillStyle = `rgba(${colorArray[i][0]}, ${colorArray[i][1]}, ${colorArray[i][2]}, 1)`;\r\n        ctx.fill();\r\n    }\r\n\r\n};"],"names":["Solution","RendererJSAPI","constructor","view","super","data","API_KEY","process","colorsLegend","console","log","this","zoom","center","i","push","getColorByCelsius","query","concat","getJSONFromURL","then","d","start","render","ctx","length","place","screenPos","toScreen","temp","tempColor","tempColorString","renderPoint","time","renderText","renderColorLegend","mouseClick","x","y","mapPos","toMap","t","color","fillStyle","beginPath","arc","Math","sin","PI","closePath","fill","name","strokeStyle","font","strokeText","colorArray","yOff","canvas","height","rect"],"sourceRoot":""}